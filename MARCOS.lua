 URL     = require("./libs/url")
JSON    = require("./libs/dkjson")
serpent = require("libs/serpent")
json = require('libs/json')
Redis = require('libs/redis').connect('127.0.0.1', 6379)
http  = require("socket.http")
https   = require("ssl.https")
SshId = io.popen("echo $SSH_CLIENT ︙ awk '{ print $1}'"):read('*a')
Fx = require './td'
local MARCOStt =  require('tdlua') 
local client = MARCOStt()
local tdf = Fx.xnxx()
local FileInformation = io.open("./Information.lua","r") 
if not FileInformation then
if not Redis:get(SshId.."Info:Redis:Token") then
io.write('\27[1;31mارسل لي توكن البوت الان \nSend Me a Bot Token Now ↡\n\27[0;39;49m')
local TokenBot = io.read()
if TokenBot and TokenBot:match('(%d+):(.*)') then
local url , res = https.request('https://api.telegram.org/bot'..TokenBot..'/getMe')
local Json_Info = JSON.decode(url)
if res ~= 200 then
print('\27[1;34mعذرا توكن البوت خطأ تحقق منه وارسله مره اخره \nBot Token is Wrong\n')
else
io.write('\27[1;34mتم حفظ التوكن بنجاح \nThe token been saved successfully \n\27[0;39;49m')
TheTokenBot = TokenBot:match("(%d+)")
os.execute('sudo rm -fr .CallBack-Bot/'..TheTokenBot)
Redis:set(SshId.."Info:Redis:Token",TokenBot)
Redis:set(SshId.."Info:Redis:Token:User",Json_Info.result.username)
end 
else
print('\27[1;34mلم يتم حفظ التوكن جرب مره اخره \nToken not saved, try again')
end 
os.execute('lua5.2 MARCOS.lua')
end
if not Redis:get(SshId.."Info:Redis:User") then
io.write('\27[1;31mارسل معرف المطور الاساسي الان \nDeveloper UserName saved ↡\n\27[0;39;49m')
local UserSudo = io.read():gsub('@','')
if UserSudo ~= '' then
io.write('\n\27[1;34mتم حفظ معرف المطور \nDeveloper UserName saved \n\n\27[0;39;49m')
Redis:set(SshId.."Info:Redis:User",UserSudo)
else
print('\n\27[1;34mلم يتم حفظ معرف المطور الاساسي \nDeveloper UserName not saved\n')
end 
os.execute('lua5.2 MARCOS.lua')
end
if not Redis:get(SshId.."Info:Redis:User:ID") then
io.write('\27[1;31mارسل ايدي المطور الاساسي الان \nDeveloper ID saved ↡\n\27[0;39;49m')
local UserId = io.read()
if UserId and UserId:match('(%d+)') then
io.write('\n\27[1;34mتم حفظ ايدي المطور \nDeveloper ID saved \n\n\27[0;39;49m')
Redis:set(SshId.."Info:Redis:User:ID",UserId)
else
print('\n\27[1;34mلم يتم حفظ ايدي المطور الاساسي \nDeveloper ID not saved\n')
end 
os.execute('lua5.2 MARCOS.lua')
end
local Informationlua = io.open("Information.lua", 'w')
Informationlua:write([[
return {
Token = "]]..Redis:get(SshId.."Info:Redis:Token")..[[",
UserBot = "]]..Redis:get(SshId.."Info:Redis:Token:User")..[[",
UserSudo = "]]..Redis:get(SshId.."Info:Redis:User")..[[",
SudoId = ]]..Redis:get(SshId.."Info:Redis:User:ID")..[[
}
]])
Informationlua:close()
local MARCOS = io.open("MARCOS", 'w')
MARCOS:write([[
cd $(cd $(dirname $0); pwd)
while(true) do
sudo lua5.2 MARCOS.lua
done
]])
MARCOS:close()
Redis:del(SshId.."Info:Redis:User:ID");Redis:del(SshId.."Info:Redis:User");Redis:del(SshId.."Info:Redis:Token:User");Redis:del(SshId.."Info:Redis:Token")
os.execute('rm -rf bot.zip ;chmod +x *;./Run')
end
Information = dofile('./Information.lua')
Sudo_Id = Information.SudoId
UserSudo = Information.UserSudo
Token = Information.Token
UserBot = Information.UserBot
MARCOS = Token:match("(%d+)")
os.execute('sudo rm -fr .CallBack-Bot/'..MARCOS)
bot = Fx.MARCOSbots.set_config{api_id=2692371,api_hash='fe85fff033dfe0f328aeb02b4f784930',session_name=MARCOS,token=Token}
function coin(coin)
local Coins = tostring(coin)
local Coins = Coins:gsub('٠','0')
local Coins = Coins:gsub('١','1')
local Coins = Coins:gsub('٢','2')
local Coins = Coins:gsub('٣','3')
local Coins = Coins:gsub('٤','4')
local Coins = Coins:gsub('٥','5')
local Coins = Coins:gsub('٦','6')
local Coins = Coins:gsub('٧','7')
local Coins = Coins:gsub('٨','8')
local Coins = Coins:gsub('٩','9')
local Coins = Coins:gsub('-','')
local conis = tonumber(Coins)
return conis
end
function var(value)  
print(serpent.block(value, {comment=false}))   
end 
clock = os.clock
function sleep(n)
local t0 = clock()
while clock() - t0 <= n do end
end
function time_to_sec(time)
    local sec = 0
    local time_table = {}
    for i in string.gmatch(time, "%d+") do
        table.insert(time_table, i)
    end
    local hour = tonumber(time_table[1])
    local min = tonumber(time_table[2])
    local sec = tonumber(time_table[3])
    return hour*3600 + min*60 + sec
end
function ctime(seconds)
local seconds = tonumber(seconds)
if seconds <= 0 then
return "00:00"
else
hours = string.format("%02.f", math.floor(seconds/3600));
mins = string.format("%02.f", math.floor(seconds/60 - (hours*60)));
secs = string.format("%02.f", math.floor(seconds - hours*3600 - mins *60));
return mins..":"..secs
end
end

function s_api(web) 
local info, res = https.request(web) 
local req = json:decode(info) 
if res ~= 200 then 
return false 
end 
if not req.ok then 
return false end 
return req 
end 
function send_inlin_key(chat_id,text,inline,reply_id) 
local keyboard = {} 
keyboard.inline_keyboard = inline 
local send_api = "https://api.telegram.org/bot"..Token.."/sendMessage?chat_id="..chat_id.."&text="..URL.escape(text).."&parse_mode=Markdown&disable_web_page_preview=true&reply_markup="..URL.escape(JSON.encode(keyboard)) 
if reply_id then 
local msg_id = reply_id/2097152/0.5
send_api = send_api.."&reply_to_message_id="..msg_id 
end 
return s_api(send_api) 
end
function edit(chat,rep,text,parse, dis, disn, reply_markup)
shh = text
if Redis:get(MARCOS..'rmzsource') then
shh = shh:gsub(" ✧ ",Redis:get(MARCOS..'rmzsource'))
end
local listm = Redis:smembers(MARCOS.."Words:r")
for k,v in pairs(listm) do
i ,j  = string.find(shh, v)
if j and i then
local x = string.sub(shh, i,j)
local neww = Redis:get(MARCOS.."Word:Replace"..x)  
shh = shh:gsub(x,neww)
else
shh = shh
end
end
return bot.editMessageText(chat,rep,shh, parse, dis, disn, reply_markup)
end
function send(chat,rep,text,parse,dis,clear,disn,back,markup)
sh = tostring(text)
if Redis:get(MARCOS..'rmzsource') then
sh = sh:gsub(" ✧ ",Redis:get(MARCOS..'rmzsource'))
end
local listm = Redis:smembers(MARCOS.."Words:r")
for k,v in pairs(listm) do
i ,j  = string.find(sh, v)
if j and i then
local x = string.sub(sh, i,j)
local neww = Redis:get(MARCOS.."Word:Replace"..x)  
sh = sh:gsub(x,neww)
else
sh = sh
end
end
return bot.sendText(chat,rep,sh,parse,dis, clear, disn, back, markup)
end
function calc(math) 
math = math:gsub(" ","")
if math:match("%d+") then
local res = io.popen("echo 'scale=1; "..math.."' | bc"):read('*a')
return res
else
return " ✧ لم استطيع اجراء العمليه الحسابيه"
end
end
function getbio(User)
kk = "لا يوجد"
local url = https.request("https://api.telegram.org/bot"..Token.."/getchat?chat_id="..User);
data = json:decode(url)
if data.result then
if data.result.bio then
kk = data.result.bio
end
end
return kk
end
function chat_type(ChatId)
if ChatId then
local id = tostring(ChatId)
if id:match("-100(%d+)") then
Chat_Type = 'GroupBot' 
elseif id:match("^(%d+)") then
Chat_Type = 'UserBot' 
else
Chat_Type = 'GroupBot' 
end
end
return Chat_Type
end
function The_ControllerAll(UserId)
ControllerAll = false
local list = Redis:smembers("dev:all:source")
if list and #list > 0 then
ListSudos = {}
for i = 1,#list do
table.insert(ListSudos,list[i])
end
local sudos = {Sudo_Id,689087834}
for i = 1,#sudos do
table.insert(ListSudos,sudos[i])
end
else
ListSudos = {Sudo_Id,689087834}
end

for k, v in pairs(ListSudos) do
if tonumber(UserId) == tonumber(v) then
ControllerAll = true
end
if Redis:sismember(MARCOS.."ControlAll:Groups",UserId) then
ControllerAll = true
end
end
return ControllerAll
end
function mderall(msg)
mderall = false
local statuse = Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id)
if statuse then
mderall = true
end
return mderall
end
function Controllerbanall(ChatId,UserId)
Status = 0
local Controll2 = Redis:sismember(MARCOS.."ControlAll:Groups",UserId)
Devss = Redis:sismember(MARCOS.."Devss:Groups",UserId) 
dev_source = Redis:sismember("dev:all:source",UserId)

if UserId == 689087834 then
Status = true
elseif UserId == Sudo_Id then  
Status = true
elseif UserId == MARCOS then
Status = true
elseif Controll2 then
Status = true
elseif Devss then
Status = true
elseif dev_source then
Status = true
else
Status = false
end
return Status
end
function Controller(ChatId,UserId)
Status = 0
local Controll2 = Redis:sismember(MARCOS.."ControlAll:Groups",UserId)
Dev = Redis:sismember(MARCOS.."Dev:Groups",UserId) 
Devss = Redis:sismember(MARCOS.."Devss:Groups",UserId) 
dev_source = Redis:sismember("dev:all:source",UserId)
Ownerss = Redis:sismember(MARCOS.."Ownerss:Group"..ChatId,UserId) 
SuperCreator = Redis:sismember(MARCOS.."SuperCreator:Group"..ChatId,UserId) 
Creator = Redis:sismember(MARCOS.."Creator:Group"..ChatId,UserId)
Manger = Redis:sismember(MARCOS.."Manger:Group"..ChatId,UserId)
Admin = Redis:sismember(MARCOS.."Admin:Group"..ChatId,UserId)
Special = Redis:sismember(MARCOS.."Special:Group"..ChatId,UserId)
StatusMember = bot.getChatMember(ChatId,UserId).status.MARCOSbots
if UserId == 689087834 then
Status = 'المطور رعد'
elseif UserId == Sudo_Id then  
Status = 'المطـور الاساسي '
elseif dev_source then
Status = 'مطور السورس '
elseif Controll2 then
Status = 'المطـور الاساسي '
elseif UserId == MARCOS then
Status = 'البوت'
elseif Devss then
Status = 'المطـور الثانوي '
elseif Dev then
Status = Redis:get(MARCOS..'SetRt'..ChatId..':'..UserId) or Redis:get(MARCOS.."Developer:Bot:Reply"..ChatId) or 'المطور القميل'
elseif Ownerss then
Status = Redis:get(MARCOS..'SetRt'..ChatId..':'..UserId) or Redis:get(MARCOS.."PresidentQ:Group:Reply"..ChatId) or  'صاحب الخرابه يواد'
elseif SuperCreator then
Status = Redis:get(MARCOS..'SetRt'..ChatId..':'..UserId) or Redis:get(MARCOS.."President:Group:Reply"..ChatId) or 'المنشئ الاساسي عم الناس'
elseif Creator then
Status = Redis:get(MARCOS..'SetRt'..ChatId..':'..UserId) or Redis:get(MARCOS.."Constructor:Group:Reply"..ChatId) or 'المنشئ روح قلبي'
elseif Manger then
Status = Redis:get(MARCOS..'SetRt'..ChatId..':'..UserId) or Redis:get(MARCOS.."Manager:Group:Reply"..ChatId) or 'المدير العثل'
elseif Admin then
Status = Redis:get(MARCOS..'SetRt'..ChatId..':'..UserId) or Redis:get(MARCOS.."Admin:Group:Reply"..ChatId) or 'الادمن القميل'
elseif StatusMember == "chatMemberStatusCreator" then
Status = Redis:get(MARCOS..'SetRt'..ChatId..':'..UserId) or 'مالك المجموعه'
elseif StatusMember == "chatMemberStatusAdministrator" then
Status = Redis:get(MARCOS..'SetRt'..ChatId..':'..UserId) or 'مشرف المجموعه'
elseif Special then
Status = Redis:get(MARCOS..'SetRt'..ChatId..':'..UserId) or Redis:get(MARCOS.."Vip:Group:Reply"..ChatId) or 'المميز حبيبي الكل'
else
Status = Redis:get(MARCOS..'SetRt'..ChatId..':'..UserId) or Redis:get(MARCOS.."Mempar:Group:Reply"..ChatId) or 'العضو المسكين'
end  
return Status
end 
function Controller_Num(Num)
Status = 0
if tonumber(Num) == 1 then  
Status = 'المطور الاساسي'
elseif tonumber(Num) == 2 then  
Status = 'المطور الثانوي'
elseif tonumber(Num) == 3 then  
Status = 'المطور'
elseif tonumber(Num) == 4 then  
Status = 'المنشئ الاساسي'
elseif tonumber(Num) == 5 then  
Status = 'المنشئ'
elseif tonumber(Num) == 6 then  
Status = 'المدير'
elseif tonumber(Num) == 7 then  
Status = 'الادمن'
elseif tonumber(Num) == 8 then  
Status = 'المالك'
else
Status = 'المميز'
end  
return Status
end 
function FlterBio(Bio)
local Bio = tostring(Bio):lower()
Bio = Bio:gsub("https://[%a%d_]+",'') 
Bio = Bio:gsub("http://[%a%d_]+",'') 
Bio = Bio:gsub("telegram.dog/[%a%d_]+",'') 
Bio = Bio:gsub("telegram.me/[%a%d_]+",'') 
Bio = Bio:gsub("t.me/[%a%d_]+",'') 
Bio = Bio:gsub("[%a%d_]+.pe[%a%d_]+",'') 
Bio = Bio:gsub("@[%a%d_]+",'')
Bio = Bio:gsub("]","")
Bio = Bio:gsub("[[]","")
Bio = Bio:gsub("#[%a%d_]+",'')
return Bio
end
if Redis:get(MARCOS..'chsource') then
chsource = Redis:get(MARCOS..'chsource')
else
chsource = "ZAXY00"
end
if Redis:get(MARCOS..'chdevolper') then
chdevolper = Redis:get(MARCOS..'chdevolper')
else 
chdevolper = "L_M_Z"
end
function GetAdminsSlahe(ChatId,UserId,user2,MsgId,t1,t2,t3,t4,t5,t6)
local GetMemberStatus = bot.getChatMember(ChatId,user2).status
if GetMemberStatus.can_change_info then
change_info = '〘 ✅ 〙' else change_info = '〘 ❌ 〙'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '〘 ✅ 〙' else delete_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_invite_users then
invite_users = '〘 ✅ 〙' else invite_users = '〘 ❌ 〙'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '〘 ✅ 〙' else pin_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '〘 ✅ 〙' else restrict_members = '〘 ❌ 〙'
end
if GetMemberStatus.can_promote_members then
promote = '〘 ✅ 〙' else promote = '〘 ❌ 〙'
end
local reply_markupp = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '✧ تغيير معلومات المجموعه -> '..(t1 or change_info), data = UserId..'/groupNum1//'..user2}, 
},
{
{text = '✧ تثبيت الرسائل -> '..(t2 or pin_messages), data = UserId..'/groupNum2//'..user2}, 
},
{
{text = '✧ حظر المستخدمين -> '..(t3 or restrict_members), data = UserId..'/groupNum3//'..user2}, 
},
{
{text = '✧ دعوة المستخدمين -> '..(t4 or invite_users), data = UserId..'/groupNum4//'..user2}, 
},
{
{text = '✧ مسح الرسائل -> '..(t5 or delete_messages), data = UserId..'/groupNum5//'..user2}, 
},
{
{text = '✧ اضافة مشرفين -> '..(t6 or promote), data = UserId..'/groupNum6//'..user2}, 
},
{
{text = 'اخفاء الامر 🔰 ', data ='/delAmr'}
},
}
}
edit(ChatId,MsgId,"* ✧ صلاحيات الادمن*", 'md', false, false, reply_markupp)
end
function editrtp(chat,user,msgid,useri)
if Redis:sismember(MARCOS.."SuperCreator:Group"..chat,useri)  then
TheBasicsz = "✅"
else
TheBasicsz = "❌"
end
if Redis:sismember(MARCOS.."Creator:Group"..chat,useri) then
Originatorsz = "✅"
else
Originatorsz = "❌"
end
if Redis:sismember(MARCOS.."Manger:Group"..chat,useri) then
Managersz = "✅"
else
Managersz = "❌"
end
if Redis:sismember(MARCOS.."Admin:Group"..chat,useri) then
Addictivez = "✅"
else
Addictivez = "❌"
end
if Redis:sismember(MARCOS.."Special:Group"..chat,useri) then
Distinguishedz = "✅"
else
Distinguishedz = "❌"
end
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text = ' منشئ اساسي -› '..TheBasicsz, data =user..'/statusTheBasicsz/'..useri},{text = ' منشئ -› '..Originatorsz, data =user..'/statusOriginatorsz/'..useri},},
{{text = ' مدير -› '..Managersz, data =user..'/statusManagersz/'..useri},{text = ' ادمن -› '..Addictivez, data =user..'/statusAddictivez/'..useri},},
{{text = ' مميز -› '..Distinguishedz, data =user..'/statusDistinguishedz/'..useri},},
{{text = '• تنزيل جميع الرتب •', data =user..'/statusmem/'..useri},},
{{text = '• اخفاء الامر •', data ='/delAmr1'}}}}
return bot.editMessageText(chat,msgid,'*\nعلامة صح تعني انا الشخص يمتلك الرتبه\nعلامة غلط تعني انا الشخص لا يمتلك الرتبه\nيمكنك الرفع والتنزيل بالضغط على الازرار*', 'md', true, false, reply_markup)
end
function muteUser(chat,user,msgid,useri)
if Redis:sismember(MARCOS.."chatMemberStatusRestricted"..chat,useri) then
Restricted = "✅"
else
Restricted = "❌"
end
if Redis:sismember(MARCOS.."BanGroup"..chat,useri) then
BanGroup = "✅"
else
BanGroup = "❌"
end
if Redis:sismember(MARCOS.."SilentGroup:Group"..chat,useri) then
SilentGroup = "✅"
else
SilentGroup = "❌"
end
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text ='تقييد العضو -› '..Restricted, data =user..'/kid/'..useri},},
{{text ='كتم العضو -› '..SilentGroup, data =user..'/mute/'..useri},},
{{text ='حظر العضو -› '..BanGroup, data =user..'/ban/'..useri},},
{{text = '• اخفاء الامر •', data ='/delAmr1'}}}}
return bot.editMessageText(chat,msgid,'*\nعلامة صح تعني انا الشخص مقيد\nعلامة غلط تعني انا الشخص غير مقيد\nيمكنك تقيد أو الفك بالضغط على الازرار*', 'md', true, false, reply_markup)
end
function GetAdminsNum(ChatId,UserId)
local GetMemberStatus = bot.getChatMember(ChatId,UserId).status
if GetMemberStatus.can_change_info then
change_info = 1 else change_info = 0
end
if GetMemberStatus.can_delete_messages then
delete_messages = 1 else delete_messages = 0
end
if GetMemberStatus.can_invite_users then
invite_users = 1 else invite_users = 0
end
if GetMemberStatus.can_pin_messages then
pin_messages = 1 else pin_messages = 0
end
if GetMemberStatus.can_restrict_members then
restrict_members = 1 else restrict_members = 0
end
if GetMemberStatus.can_promote_members then
promote = 1 else promote = 0
end
return{
promote = promote,
restrict_members = restrict_members,
invite_users = invite_users,
pin_messages = pin_messages,
delete_messages = delete_messages,
change_info = change_info
}
end
function GetSetieng(ChatId)
if Redis:get(MARCOS.."Lock:phshar"..ChatId) then    
alphsar = "✅"
else 
alphsar = "❌"    
end
if Redis:get(MARCOS.."Lock:alkfr"..ChatId) then    
alkfr = "✅"
else 
alkfr = "❌"    
end
if Redis:get(MARCOS.."Lock:tphlesh"..ChatId) then    
tphlesh = "✅"
else 
tphlesh = "❌"    
end
if Redis:get(MARCOS.."Lock:farsia"..ChatId) then    
farsia = "✅"
else 
farsia = "❌"    
end

if Redis:get(MARCOS.."lockpin"..ChatId) then    
lock_pin = "✅"
else 
lock_pin = "❌"    
end
if Redis:get(MARCOS.."Lock:tagservr"..ChatId) then    
lock_tagservr = "✅"
else 
lock_tagservr = "❌"
end
if Redis:get(MARCOS.."Lock:text"..ChatId) then    
lock_text = "✅"
else 
lock_text = "❌ "    
end
if Redis:get(MARCOS.."Lock:AddMempar"..ChatId) == "kick" then
lock_add = "✅"
else 
lock_add = "❌ "    
end    
if Redis:get(MARCOS.."Lock:Join"..ChatId) == "kick" then
lock_join = "✅"
else 
lock_join = "❌ "    
end    
if Redis:get(MARCOS.."Lock:edit"..ChatId) then    
lock_edit = "✅"
else 
lock_edit = "❌ "    
end
if Redis:get(MARCOS.."Chek:Welcome"..ChatId) then
welcome = "✅"
else 
welcome = "❌ "    
end
if Redis:hget(MARCOS.."Spam:Group:User"..ChatId, "Spam:User") == "kick" then     
flood = "بالطرد "     
elseif Redis:hget(MARCOS.."Spam:Group:User"..ChatId,"Spam:User") == "keed" then     
flood = "بالتقييد "     
elseif Redis:hget(MARCOS.."Spam:Group:User"..ChatId,"Spam:User") == "mute" then     
flood = "بالكتم "           
elseif Redis:hget(MARCOS.."Spam:Group:User"..ChatId,"Spam:User") == "del" then     
flood = "✅"
else     
flood = "❌ "     
end
if Redis:get(MARCOS.."Lock:Photo"..ChatId) == "del" then
lock_photo = "✅" 
elseif Redis:get(MARCOS.."Lock:Photo"..ChatId) == "ked" then 
lock_photo = "بالتقييد "   
elseif Redis:get(MARCOS.."Lock:Photo"..ChatId) == "ktm" then 
lock_photo = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:Photo"..ChatId) == "kick" then 
lock_photo = "بالطرد "   
else
lock_photo = "❌ "   
end    
if Redis:get(MARCOS.."Lock:Contact"..ChatId) == "del" then
lock_phon = "✅" 
elseif Redis:get(MARCOS.."Lock:Contact"..ChatId) == "ked" then 
lock_phon = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:Contact"..ChatId) == "ktm" then 
lock_phon = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:Contact"..ChatId) == "kick" then 
lock_phon = "بالطرد "    
else
lock_phon = "❌ "    
end    
if Redis:get(MARCOS.."Lock:Link"..ChatId) == "del" then
lock_links = "✅"
elseif Redis:get(MARCOS.."Lock:Link"..ChatId) == "ked" then
lock_links = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:Link"..ChatId) == "ktm" then
lock_links = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:Link"..ChatId) == "kick" then
lock_links = "بالطرد "    
else
lock_links = "❌ "    
end
if Redis:get(MARCOS.."Lock:Cmd"..ChatId) == "del" then
lock_cmds = "✅"
elseif Redis:get(MARCOS.."Lock:Cmd"..ChatId) == "ked" then
lock_cmds = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:Cmd"..ChatId) == "ktm" then
lock_cmds = "بالكتم "   
elseif Redis:get(MARCOS.."Lock:Cmd"..ChatId) == "kick" then
lock_cmds = "بالطرد "    
else
lock_cmds = "❌ "    
end
if Redis:get(MARCOS.."Lock:User:Name"..ChatId) == "del" then
lock_user = "✅"
elseif Redis:get(MARCOS.."Lock:User:Name"..ChatId) == "ked" then
lock_user = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:User:Name"..ChatId) == "ktm" then
lock_user = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:User:Name"..ChatId) == "kick" then
lock_user = "بالطرد "    
else
lock_user = "❌ "    
end
if Redis:get(MARCOS.."Lock:hashtak"..ChatId) == "del" then
lock_hash = "✅"
elseif Redis:get(MARCOS.."Lock:hashtak"..ChatId) == "ked" then 
lock_hash = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:hashtak"..ChatId) == "ktm" then 
lock_hash = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:hashtak"..ChatId) == "kick" then 
lock_hash = "بالطرد "    
else
lock_hash = "❌ "    
end
if Redis:get(MARCOS.."Lock:vico"..ChatId) == "del" then
lock_muse = "✅"
elseif Redis:get(MARCOS.."Lock:vico"..ChatId) == "ked" then 
lock_muse = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:vico"..ChatId) == "ktm" then 
lock_muse = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:vico"..ChatId) == "kick" then 
lock_muse = "بالطرد "    
else
lock_muse = "❌ "    
end 
if Redis:get(MARCOS.."Lock:Video"..ChatId) == "del" then
lock_ved = "✅"
elseif Redis:get(MARCOS.."Lock:Video"..ChatId) == "ked" then 
lock_ved = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:Video"..ChatId) == "ktm" then 
lock_ved = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:Video"..ChatId) == "kick" then 
lock_ved = "بالطرد "    
else
lock_ved = "❌ "    
end
if Redis:get(MARCOS.."Lock:Animation"..ChatId) == "del" then
lock_gif = "✅"
elseif Redis:get(MARCOS.."Lock:Animation"..ChatId) == "ked" then 
lock_gif = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:Animation"..ChatId) == "ktm" then 
lock_gif = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:Animation"..ChatId) == "kick" then 
lock_gif = "بالطرد "    
else
lock_gif = "❌ "    
end
if Redis:get(MARCOS.."Lock:Sticker"..ChatId) == "del" then
lock_ste = "✅"
elseif Redis:get(MARCOS.."Lock:Sticker"..ChatId) == "ked" then 
lock_ste = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:Sticker"..ChatId) == "ktm" then 
lock_ste = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:Sticker"..ChatId) == "kick" then 
lock_ste = "بالطرد "    
else
lock_ste = "❌ "    
end
if Redis:get(MARCOS.."Lock:geam"..ChatId) == "del" then
lock_geam = "✅"
elseif Redis:get(MARCOS.."Lock:geam"..ChatId) == "ked" then 
lock_geam = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:geam"..ChatId) == "ktm" then 
lock_geam = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:geam"..ChatId) == "kick" then 
lock_geam = "بالطرد "    
else
lock_geam = "❌ "    
end    
if Redis:get(MARCOS.."Lock:vico"..ChatId) == "del" then
lock_vico = "✅"
elseif Redis:get(MARCOS.."Lock:vico"..ChatId) == "ked" then 
lock_vico = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:vico"..ChatId) == "ktm" then 
lock_vico = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:vico"..ChatId) == "kick" then 
lock_vico = "بالطرد "    
else
lock_vico = "❌ "    
end    
if Redis:get(MARCOS.."Lock:Keyboard"..ChatId) == "del" then
lock_inlin = "✅"
elseif Redis:get(MARCOS.."Lock:Keyboard"..ChatId) == "ked" then 
lock_inlin = "بالتقييد "
elseif Redis:get(MARCOS.."Lock:Keyboard"..ChatId) == "ktm" then 
lock_inlin = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:Keyboard"..ChatId) == "kick" then 
lock_inlin = "بالطرد "
else
lock_inlin = "❌ "
end
if Redis:get(MARCOS.."Lock:forward"..ChatId) == "del" then
lock_fwd = "✅"
elseif Redis:get(MARCOS.."Lock:forward"..ChatId) == "ked" then 
lock_fwd = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:forward"..ChatId) == "ktm" then 
lock_fwd = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:forward"..ChatId) == "kick" then 
lock_fwd = "بالطرد "    
else
lock_fwd = "❌ "    
end    
if Redis:get(MARCOS.."Lock:Document"..ChatId) == "del" then
lock_file = "✅"
elseif Redis:get(MARCOS.."Lock:Document"..ChatId) == "ked" then 
lock_file = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:Document"..ChatId) == "ktm" then 
lock_file = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:Document"..ChatId) == "kick" then 
lock_file = "بالطرد "    
else
lock_file = "❌ "    
end    
if Redis:get(MARCOS.."Lock:Unsupported"..ChatId) == "del" then
lock_self = "✅"
elseif Redis:get(MARCOS.."Lock:Unsupported"..ChatId) == "ked" then 
lock_self = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:Unsupported"..ChatId) == "ktm" then 
lock_self = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:Unsupported"..ChatId) == "kick" then 
lock_self = "بالطرد "    
else
lock_self = "❌ "    
end
if Redis:get(MARCOS.."Lock:Bot:kick"..ChatId) == "del" then
lock_bots = "✅"
elseif Redis:get(MARCOS.."Lock:Bot:kick"..ChatId) == "ked" then
lock_bots = "بالتقييد "   
elseif Redis:get(MARCOS.."Lock:Bot:kick"..ChatId) == "kick" then
lock_bots = "بالطرد "    
else
lock_bots = "❌ "    
end
if Redis:get(MARCOS.."Lock:Markdaun"..ChatId) == "del" then
lock_mark = "✅"
elseif Redis:get(MARCOS.."Lock:Markdaun"..ChatId) == "ked" then 
lock_mark = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:Markdaun"..ChatId) == "ktm" then 
lock_mark = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:Markdaun"..ChatId) == "kick" then 
lock_mark = "بالطرد "    
else
lock_mark = "❌ "    
end
if Redis:get(MARCOS.."Lock:Spam"..ChatId) == "del" then    
lock_spam = "✅"
elseif Redis:get(MARCOS.."Lock:Spam"..ChatId) == "ked" then 
lock_spam = "بالتقييد "    
elseif Redis:get(MARCOS.."Lock:Spam"..ChatId) == "ktm" then 
lock_spam = "بالكتم "    
elseif Redis:get(MARCOS.."Lock:Spam"..ChatId) == "kick" then 
lock_spam = "بالطرد "    
else
lock_spam = "❌ "    
end        
return{
lock_pin = lock_pin,
lock_tagservr = lock_tagservr,
lock_text = lock_text,
lock_add = lock_add,
lock_join = lock_join,
lock_edit = lock_edit,
flood = flood,
lock_photo = lock_photo,
lock_phon = lock_phon,
lock_links = lock_links,
lock_cmds = lock_cmds,
lock_mark = lock_mark,
lock_user = lock_user,
lock_hash = lock_hash,
lock_muse = lock_muse,
lock_ved = lock_ved,
lock_gif = lock_gif,
lock_ste = lock_ste,
lock_geam = lock_geam,
lock_vico = lock_vico,
lock_inlin = lock_inlin,
lock_fwd = lock_fwd,
lock_file = lock_file,
lock_self = lock_self,
lock_bots = lock_bots,
lock_spam = lock_spam,
farsia = farsia,
tphlesh = tphlesh,
alkfr = alkfr,
alphsar = alphsar
}
end
function Total_message(Message)  
local MsgText = ''  
if tonumber(Message) < 100 then 
MsgText = 'غير متفاعل 😡' 
elseif tonumber(Message) < 200 then 
MsgText = 'بده يتحسن 😒'
elseif tonumber(Message) < 400 then 
MsgText = 'شبه متفاعل 😊' 
elseif tonumber(Message) < 700 then 
MsgText = 'متفاعل 😍' 
elseif tonumber(Message) < 1200 then 
MsgText = 'متفاعل قوي 🥰' 
elseif tonumber(Message) < 2000 then 
MsgText = 'متفاعل جدا ❤️' 
elseif tonumber(Message) < 3500 then 
MsgText = 'اقوى تفاعل 💋'  
elseif tonumber(Message) < 4000 then 
MsgText = 'متفاعل نار 🥳' 
elseif tonumber(Message) < 4500 then 
MsgText = 'قمة التفاعل ❤️‍🔥' 
elseif tonumber(Message) < 5500 then 
MsgText = 'اقوى متفاعل 🤩' 
elseif tonumber(Message) < 7000 then 
MsgText = 'ملك التفاعل 😎' 
elseif tonumber(Message) < 9500 then 
MsgText = 'زعيم التفاعل 😻' 
elseif tonumber(Message) < 10000000000 then 
MsgText = 'امبروطور التفاعل 👍'  
end 
return MsgText 
end
function Total_groups(Message)  
local MsgText = ''  
print(Message)
if tonumber(Message) < 200 then 
MsgText = 'غير متفاعل 😡' 
elseif tonumber(Message) < 200 then 
MsgText = 'بده يتحسن 😒'
elseif tonumber(Message) < 400 then 
MsgText = 'شبه متفاعل 😊' 
elseif tonumber(Message) < 700 then 
MsgText = 'متفاعل 😍' 
elseif tonumber(Message) < 1200 then 
MsgText = 'متفاعل قوي 🥰' 
elseif tonumber(Message) < 2000 then 
MsgText = 'متفاعل جدا ❤️' 
elseif tonumber(Message) < 3500 then 
MsgText = 'اقوى تفاعل 💋'  
elseif tonumber(Message) < 4000 then 
MsgText = 'متفاعل نار 🥳' 
elseif tonumber(Message) < 4500 then 
MsgText = 'قمة التفاعل ❤️‍🔥' 
elseif tonumber(Message) < 5500 then 
MsgText = 'اقوى متفاعل 🤩' 
elseif tonumber(Message) < 7000 then 
MsgText = 'ملك التفاعل 😎' 
elseif tonumber(Message) < 9500 then 
MsgText = 'زعيم التفاعل 😻' 
elseif tonumber(Message) < 10000000000 then 
MsgText = 'امبروطور التفاعل 👍'  
end 
return MsgText 
end

function Getpermissions(ChatId)
local Get_Chat = bot.getChat(ChatId)
if Get_Chat.permissions.can_add_web_page_previews then
web = true else web = false
end
if Get_Chat.permissions.can_change_info then
info = true else info = false
end
if Get_Chat.permissions.can_invite_users then
invite = true else invite = false
end
if Get_Chat.permissions.can_pin_messages then
pin = true else pin = false
end
if Get_Chat.permissions.can_send_media_messages then
media = true else media = false
end
if Get_Chat.permissions.can_send_messages then
messges = true else messges = false
end
if Get_Chat.permissions.can_send_other_messages then
other = true else other = false
end
if Get_Chat.permissions.can_send_polls then
polls = true else polls = false
end

return{
web = web,
info = info,
invite = invite,
pin = pin,
media = media,
messges = messges,
other = other,
polls = polls
}
end
function Get_permissions(ChatId,UserId,MsgId)
local Get_Chat = bot.getChat(ChatId)
if Get_Chat.permissions.can_add_web_page_previews then
web = '〘 ✅ 〙' else web = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_change_info then
info = '〘 ✅ 〙' else info = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_invite_users then
invite = '〘 ✅ 〙' else invite = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_pin_messages then
pin = '〘 ✅ 〙' else pin = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_media_messages then
media = '〘 ✅ 〙' else media = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_messages then
messges = '〘 ✅ 〙' else messges = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_other_messages then
other = '〘 ✅ 〙' else other = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_polls then
polls = '〘 ✅ 〙' else polls = '〘 ❌ 〙'
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '✧ ارسال الويب -> '..web, data = UserId..'/web'}, 
},
{
{text = '✧ تغيير معلومات المجموعه -> '..info, data = UserId.. '/info'}, 
},
{
{text = '✧ اضافه مستخدمين -> '..invite, data = UserId.. '/invite'}, 
},
{
{text = '✧ تثبيت الرسائل -> '..pin, data = UserId.. '/pin'}, 
},
{
{text = '✧ ارسال الميديا -> '..media, data = UserId.. '/media'}, 
},
{
{text = '✧ ارسال الرسائل -> .'..messges, data = UserId.. '/messges'}, 
},
{
{text = '✧ اضافه البوتات -> '..other, data = UserId.. '/other'}, 
},
{
{text = '✧ ارسال استفتاء -> '..polls, data = UserId.. '/polls'}, 
},
{
{text = 'اخفاء الامر 🔰 ', data ='/delAmr'}
},
}
}
edit(ChatId,MsgId,"* ✧ صلاحيات المجموعه*", 'md', false, false, reply_markup)
end
function Statusrestricted(ChatId,UserId)
return{
KtmAll = Redis:sismember(MARCOS.."KtmAll:Groups",UserId) ,
BanAll = Redis:sismember(MARCOS.."BanAll:Groups",UserId) ,
BanGroup = Redis:sismember(MARCOS.."BanGroup:Group"..ChatId,UserId) ,
SilentGroup = Redis:sismember(MARCOS.."SilentGroup:Group"..ChatId,UserId)
}
end
function Reply_Status(UserId,TextMsg)
local UserInfo = bot.getUser(UserId)
Name_User = FlterBio(UserInfo.first_name)
Name_User =  FlterBio(Name_User)
UserInfousername = '['..Name_User..'](tg://user?id='..UserId..')'
return {
Lock     = '\n*⇜ من *'..UserInfousername..'\n*'..TextMsg,
unLock   = '\n*⇜ من *'..UserInfousername..'\n'..TextMsg,
Jeka   = '\n* ✧ مبروك يا -> *'..UserInfousername..' \n'..TextMsg,
lockKtm  = '\n*⇜ من *'..UserInfousername..'\n*'..TextMsg,
lockKid  = '\n*⇜ من *'..UserInfousername..'\n*'..TextMsg,
lockKick = '\n* ⇜ من *'..UserInfousername..'\n*'..TextMsg,
ahkamz = '*✧ source valorant -> لعبـة احكـام 🎮*\n*• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n✧ اللاعـب -> *'..UserInfousername..'\n*'..TextMsg..'\n\n*✧ ⇜ اللي يبي يلعب يرسل كلمة ( انا )*',
zahkamz = '*✧ source valorant -> لعبـة احكـام 🎮**\n*• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n✧ اللاعـب -> *'..UserInfousername..'\n*'..TextMsg..'\n\n*✧ ⇜ اللي عليك انت صاحب اللعبة ترسل ( تم ) اذا اكتمل العدد*',
Reply    = '\n* ✧ المستخدم -> *'..UserInfousername..'\n*'..TextMsg..'*'
}
end
function StatusCanOrNotCan(ChatId,UserId)
Status = nil
local Controll2 = Redis:sismember(MARCOS.."ControlAll:Groups",UserId)
Devss = Redis:sismember(MARCOS.."Devss:Groups",UserId) 
Dev = Redis:sismember(MARCOS.."Dev:Groups",UserId) 
dev_source = Redis:sismember("dev:all:source",UserId)
Ownerss = Redis:sismember(MARCOS.."Ownerss:Group"..ChatId,UserId) 
SuperCreator = Redis:sismember(MARCOS.."SuperCreator:Group"..ChatId,UserId) 
Creator = Redis:sismember(MARCOS.."Creator:Group"..ChatId,UserId)
Manger = Redis:sismember(MARCOS.."Manger:Group"..ChatId,UserId)
Admin = Redis:sismember(MARCOS.."Admin:Group"..ChatId,UserId)
Special = Redis:sismember(MARCOS.."Special:Group"..ChatId,UserId)
StatusMember = bot.getChatMember(ChatId,UserId).status.MARCOSbots
if UserId == 689087834 then
Status = true
elseif UserId == Sudo_Id then  
Status = true
elseif dev_source then
Status = true
elseif Controll2 then
Status = true
elseif UserId == MARCOS then
Status = true
elseif Devss then
Status = true
elseif Dev then
Status = true
elseif Ownerss then
Status = true
elseif SuperCreator then
Status = true
elseif Creator then
Status = true
elseif Manger then
Status = true
elseif Admin then
Status = true
elseif Special then
Status = true
else
Status = false
end  
return Status
end 
function StatusSilent(ChatId,UserId)
Status = nil
local Controll2 = Redis:sismember(MARCOS.."ControlAll:Groups",UserId)
Devss = Redis:sismember(MARCOS.."Devss:Groups",UserId) 
Dev = Redis:sismember(MARCOS.."Dev:Groups",UserId) 
dev_source = Redis:sismember("dev:all:source",UserId)
Ownerss = Redis:sismember(MARCOS.."Ownerss:Group"..ChatId,UserId) 
SuperCreator = Redis:sismember(MARCOS.."SuperCreator:Group"..ChatId,UserId) 
Creator = Redis:sismember(MARCOS.."Creator:Group"..ChatId,UserId)
Manger = Redis:sismember(MARCOS.."Manger:Group"..ChatId,UserId)
Admin = Redis:sismember(MARCOS.."Admin:Group"..ChatId,UserId)
Special = Redis:sismember(MARCOS.."Special:Group"..ChatId,UserId)
StatusMember = bot.getChatMember(ChatId,UserId).status.MARCOSbots
if UserId == 689087834 then
Status = true
elseif UserId == Sudo_Id then  
Status = true
elseif dev_source then
Status = true
elseif Controll2 then
Status = true
elseif UserId == MARCOS then
Status = true
elseif Devss then
Status = true
elseif Dev then
Status = true
elseif Ownerss then
Status = true
elseif SuperCreator then
Status = true
elseif Creator then
Status = true
elseif Manger then
Status = true
elseif Admin then
Status = true
elseif StatusMember == "chatMemberStatusCreator" then
Status = true
else
Status = false
end  
return Status
end 
function GetInfoBot(msg)
local GetMemberStatus = bot.getChatMember(msg.chat_id,MARCOS).status.rights
if GetMemberStatus.can_change_info then
change_info = true else change_info = false
end
if GetMemberStatus.can_delete_messages then
delete_messages = true else delete_messages = false
end
if GetMemberStatus.can_invite_users then
invite_users = true else invite_users = false
end
if GetMemberStatus.can_pin_messages then
pin_messages = true else pin_messages = false
end
if GetMemberStatus.can_restrict_members then
restrict_members = true else restrict_members = false
end
if GetMemberStatus.can_promote_members then
promote = true else promote = false
end
return{
SetAdmin = promote,
BanUser = restrict_members,
Invite = invite_users,
PinMsg = pin_messages,
DelMsg = delete_messages,
Info = change_info
}
end
function download(url,name)
if not name then
name = url:match('([^/]+)$')
end
if string.find(url,'https') then
data,res = https.request(url)
elseif string.find(url,'http') then
data,res = http.request(url)
else
return 'The link format is incorrect.'
end
if res ~= 200 then
return 'check url , error code -> '..res
else
file = io.open(name,'wb')
file:write(data)
file:close()
print('Downloaded :> '..name)
return './'..name
end
end
local function Info_Video(x)
local f=io.popen(x)
if f then
local s=f:read"*a"
f:close()
if s == 'a' then
end
return s
end
end
function ChannelJoinch(msg)
JoinChannel = true
local Channel = Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)
if Channel then
local url , res = https.request('https://api.telegram.org/bot'..Token..'/getchatmember?chat_id=@'..Channel..'&user_id='..msg.sender_id.user_id)
local ChannelJoin = JSON.decode(url)
if ChannelJoin.result.status == "left" then
JoinChannel = false
end
end
return JoinChannel
end
function ChannelSource(msg)
Sourceannel = true
local Channel = Redis:get(MARCOS..'chsource')
if Channel then
local url , res = https.request('https://api.telegram.org/bot'..Token..'/getchatmember?chat_id=@'..Channel..'&user_id='..msg.sender_id.user_id)
local Channelbot = JSON.decode(url)
if Channelbot.result.status == "left" then
Sourceannel = false
end
end
return Sourceannel
end
function ChannelJoin(msg)
JoinChannel = true
if not Redis:sismember(MARCOS.."BotFree:Group:",msg.chat_id) then
local Channel = Redis:get(MARCOS..'Channel:Join')
if Channel then
local url , res = https.request('https://api.telegram.org/bot'..Token..'/getchatmember?chat_id=@'..Channel..'&user_id='..msg.sender_id.user_id)
local ChannelJoin = JSON.decode(url)
if ChannelJoin.result.status == "left" then
JoinChannel = false
end
end
end
return JoinChannel
end
function File_Bot_Run(msg,data)  
local msg_chat_id = msg.chat_id
local msg_reply_id = msg.reply_to_message_id
local msg_user_send_id = msg.sender_id.user_id
local senderr = msg.sender_id.user_id
local msg_id = msg.id
local text = nil
if msg.date and msg.date < tonumber(os.time() - 15) then
print("->> Old Message End <<-")
return false
end
if msg.content.voice_note and Redis:get(MARCOS..msg_chat_id.."sound:cmd") then 
local mr = msg.content.voice_note.voice.remote.id
local url = http.request("http://159.223.13.231/oda/voiceRecognise?token="..Token.."&file_id="..mr)
local json = JSON.decode(url)
if json and json.msg then
text = json.msg
print(text)
end
elseif data.content.text then
text = data.content.text.text
end

if tonumber(msg.sender_id.user_id) == tonumber(MARCOS) then
return false
end
if msg.sender_id.MARCOSbots == "messageSenderChat" then
if Redis:get(MARCOS.."Lock:SenderChat"..msg_chat_id) then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
end
return false
end
if text and Redis:sismember("banserver",msg.sender_id.user_id) then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
end
if tonumber(msg.sender_id.user_id) == 689087834 then
msg.Name_Controller = 'المطور رعد '
msg.The_Controller = 1
elseif Redis:sismember("dev:all:source",msg.sender_id.user_id) == true then
msg.The_Controller = 1
msg.Name_Controller = 'مطور السورس '
elseif The_ControllerAll(msg.sender_id.user_id) == true then  
msg.The_Controller = 1
msg.Name_Controller = 'المطـور الاساسي  '
elseif Redis:sismember(MARCOS.."Devss:Groups",msg.sender_id.user_id) == true then
msg.The_Controller = 2
msg.Name_Controller = 'المطـور الثانوي '

elseif Redis:sismember(MARCOS.."Dev:Groups",msg.sender_id.user_id) == true then
msg.The_Controller = 3
msg.Name_Controller = Redis:get(MARCOS..'SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(MARCOS.."Developer:Bot:Reply"..msg.chat_id) or 'المطور القميل'
elseif Redis:sismember(MARCOS.."Ownerss:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 44
msg.Name_Controller = Redis:get(MARCOS..'SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(MARCOS.."PresidentQ:Group:Reply"..msg.chat_id) or  'صاحب الخرابه يواد'
elseif Redis:sismember(MARCOS.."SuperCreator:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 4
msg.Name_Controller = Redis:get(MARCOS..'SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(MARCOS.."President:Group:Reply"..msg.chat_id) or 'المنشئ الاساسي عم الناس'
elseif Redis:sismember(MARCOS.."Creator:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 5
msg.Name_Controller = Redis:get(MARCOS..'SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(MARCOS.."Constructor:Group:Reply"..msg.chat_id) or 'المنشئ روح قلبي'
elseif Redis:sismember(MARCOS.."Manger:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 6
msg.Name_Controller = Redis:get(MARCOS..'SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(MARCOS.."Manager:Group:Reply"..msg.chat_id) or 'المدير القميل'
elseif Redis:sismember(MARCOS.."Admin:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 7
msg.Name_Controller = Redis:get(MARCOS..'SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(MARCOS.."Admin:Group:Reply"..msg.chat_id) or 'الادمن القميل'
elseif Redis:sismember(MARCOS.."Special:Group"..msg.chat_id,msg.sender_id.user_id) == true then
msg.The_Controller = 8
msg.Name_Controller = Redis:get(MARCOS..'SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(MARCOS.."Vip:Group:Reply"..msg.chat_id) or 'المميز حبيبي الكل'
elseif tonumber(msg.sender_id.user_id) == tonumber(MARCOS) then
msg.The_Controller = 9
else
msg.The_Controller = 10
msg.Name_Controller = Redis:get(MARCOS..'SetRt'..msg.chat_id..':'..msg.sender_id.user_id) or Redis:get(MARCOS.."Mempar:Group:Reply"..msg.chat_id) or 'العضو المسكين'
end  
if msg.The_Controller == 1 then  
msg.Asasy = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 then
msg.Devss = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 then
msg.Dev = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 44 or msg.The_Controller == 9 then
msg.Ownerss = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 44 or msg.The_Controller == 4 or msg.The_Controller == 9 then
msg.SuperCreator = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 44 or msg.The_Controller == 4 or msg.The_Controller == 5 or msg.The_Controller == 9 then
msg.Creator = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 44 or msg.The_Controller == 4 or msg.The_Controller == 5 or msg.The_Controller == 6 or msg.The_Controller == 9 then
msg.Manger = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 44 or msg.The_Controller == 4 or msg.The_Controller == 5 or msg.The_Controller == 6 or msg.The_Controller == 7 or msg.The_Controller == 9 then
msg.Admin = true
end
if msg.The_Controller == 1 or msg.The_Controller == 2 or msg.The_Controller == 3 or msg.The_Controller == 44 or msg.The_Controller == 4 or msg.The_Controller == 5 or msg.The_Controller == 6 or msg.The_Controller == 7 or msg.The_Controller == 8 or msg.The_Controller == 9 then
msg.Special = true
end

if msg.sender_id.MARCOSbots ~= "messageSenderChat" then
if Statusrestricted(msg.chat_id,msg.sender_id.user_id).KtmAll == true then
return bot.deleteMessages(msg.chat_id,{[1]= msg.id})
elseif Statusrestricted(msg.chat_id,msg.sender_id.user_id).BanAll == true then
return bot.deleteMessages(msg.chat_id,{[1]= msg.id}),bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
elseif Statusrestricted(msg.chat_id,msg.sender_id.user_id).BanGroup == true then
return bot.deleteMessages(msg.chat_id,{[1]= msg.id}),bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
elseif Statusrestricted(msg.chat_id,msg.sender_id.user_id).SilentGroup == true then
return bot.deleteMessages(msg.chat_id,{[1]= msg.id})
end
end
if (Redis:get(MARCOS..'All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'DelFilterq') then   
if text or msg.content.photo or msg.content.animation or msg.content.sticker then
print('&')
if msg.content.MARCOSbots == "messagePhoto" then
Filters = 'الصوره'
Redis:srem(MARCOS.."All:List:Filter",'photo:'..msg.content.photo.sizes[1].photo.id)  
Redis:del(MARCOS.."All:Filter:Group:"..msg.content.photo.sizes[1].photo.id)  
elseif msg.content.MARCOSbots == "messageAnimation" then
Filters = 'المتحركه'
Redis:srem(MARCOS.."All:List:Filter",'animation:'..msg.content.animation.animation.id)  
Redis:del(MARCOS.."All:Filter:Group:"..msg.content.animation.animation.id)  
elseif msg.content.MARCOSbots == "messageSticker" then
Filters = 'الملصق'
Redis:srem(MARCOS.."All:List:Filter",'sticker:'..msg.content.sticker.sticker.id)  
Redis:del(MARCOS.."All:Filter:Group:"..msg.content.sticker.sticker.id)  
elseif text then
Redis:srem(MARCOS.."All:List:Filter",'text:'..text)  
Redis:del(MARCOS.."All:Filter:Group:"..text)  
Filters = 'النص'
end
Redis:del(MARCOS..'All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ تم الغاء منع عام ("..Filters..")","md",true)  
end
end

if Redis:get(MARCOS.."Lock:text"..msg_chat_id) and not msg.Special then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
return false
end 
if msg.content.MARCOSbots == "messageChatJoinByLink" and not msg.Special then
if Redis:get(MARCOS.."Lock:Join"..msg.chat_id) == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
return false
end
end
if msg.content.MARCOSbots == "messageChatAddMembers" then -- اضافه اشخاص
local Lock_Bots = Redis:get(MARCOS.."Lock:Bot:kick"..msg_chat_id)
for k,v in pairs(msg.content.member_user_ids) do
if tonumber(v) ~= tonumber(MARCOS) then
local Info_User = bot.getUser(v) 
if Info_User.type.MARCOSbots == "userTypeBot" then
if Lock_Bots == "del" and not msg.Manger then
bot.setChatMemberStatus(msg.chat_id,v,'banned',0)
elseif Lock_Bots == "kick" and not msg.Manger then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.setChatMemberStatus(msg.chat_id,v,'banned',0)
end
end
end
Redis:set(MARCOS.."Who:Added:Me"..msg_chat_id..":"..v,msg.sender_id.user_id)
end
end

if msg.content.MARCOSbots == "messageChatAddMembers" then
Redis:incr(MARCOS.."Num:Add:Memp"..msg_chat_id..":"..msg.sender_id.user_id) 
end


if msg.content.MARCOSbots == "messageChatJoinByLink" or msg.content.MARCOSbots == "messageChatAddMembers" then
if Redis:get(MARCOS.."Status:Welcome"..msg_chat_id) then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Get_Chat = bot.getChat(msg_chat_id)
local Info_Chats = bot.getSupergroupFullInfo(msg_chat_id)
local Welcome = Redis:get(MARCOS.."Welcome:Group"..msg_chat_id)
if Welcome then 
if UserInfo.username then
UserInfousername = '@'..UserInfo.username
else
UserInfousername = 'لا يوجد '
end
Welcome = Welcome:gsub('{الاسم}',(FlterBio(FlterBio(UserInfo.first_name)) or '---')) 
Welcome = Welcome:gsub('{المعرف}',("@"..UserInfo.username or '---')) 
Welcome = Welcome:gsub('{المجموعه}',(Get_Chat.title or '---')) 
Welcome = Welcome:gsub('{الاعضاء}',Info_Chats.member_count) 
Welcome = Welcome:gsub('{الادمنيه}',Info_Chats.administrator_count) 
Welcome = Welcome:gsub('{الوقت}',os.date("%H:%M:%S")) 
Welcome = Welcome:gsub('{التاريخ}',os.date("%Y/%m/%d")) 
return send(msg_chat_id,msg_id,Welcome,"md")  
else 
local GroupsWelcome = Redis:get(MARCOS.."Welcome:Groups")
if GroupsWelcome then
GroupsWelcome = GroupsWelcome:gsub('{الاسم}',( FlterBio(FlterBio(UserInfo.first_name)) or '---')) 
GroupsWelcome = GroupsWelcome:gsub('{المعرف}',("@"..UserInfo.username or '---')) 
GroupsWelcome = GroupsWelcome:gsub('{المجموعه}',(Get_Chat.title or '---')) 
GroupsWelcome = GroupsWelcome:gsub('{الاعضاء}',Info_Chats.member_count) 
GroupsWelcome = GroupsWelcome:gsub('{الادمنيه}',Info_Chats.administrator_count) 
GroupsWelcome = GroupsWelcome:gsub('{الوقت}',os.date("%H:%M:%S")) 
GroupsWelcome = GroupsWelcome:gsub('{التاريخ}',os.date("%Y/%m/%d")) 
local TextWelcome = (GroupsWelcome or '* ✧ نورت المجموعة يا قمر 💕.\n ْ'..(UserInfo.first_name or '---')..'\n ْ'..(Get_Chat.title or '---')..' \n ✧ يجب احترام الادمنية\n ✧ الالتزام بالقوانين في الوصف\n ✧ الاعضاء '..Info_Chats.member_count..' -> الادمنيه '..Info_Chats.administrator_count..' \n ✧ وقت الانضمام ->『 '..os.date("%H:%M:%S")..')\n ✧ تاريخ الانضمام ->『 '..os.date("%Y/%m/%d")..')*\n')
return send(msg_chat_id,msg_id,TextWelcome,"md")  
else
local TextWelcome = ('* ✧ نورت المجموعة يا قمر 💕.\n ْ'..(UserInfo.first_name or '---')..'\n ْ'..(Get_Chat.title or '---')..' \n ✧ يجب احترام الادمنية\n ✧ الالتزام بالقوانين في الوصف\n ✧ الاعضاء '..Info_Chats.member_count..' -> الادمنيه '..Info_Chats.administrator_count..' \n ✧ وقت الانضمام ->『 '..os.date("%H:%M:%S")..')\n ✧ تاريخ الانضمام ->『 '..os.date("%Y/%m/%d")..')*\n')
return send(msg_chat_id,msg_id,TextWelcome,"md")  
end
end
end
end 
if text and text:match("^0+0 (.*)$") or text:match("^0+0 (.*)$") then 
local ttag = text:match("^0+0 (.*)$") or text:match("^0+0 (.*)$") 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
local Info_Members = bot.searchChatMembers(msg_chat_id, "*", 2000)
x = 0 
tags = 0 
local list = Info_Members.members
for k, v in pairs(list) do 
local data = bot.getUser(v.member_id.user_id)
if x == 20 or x == tags or k == 0 then 
tags = x + 8 
if ttag then
t = "#all "..ttag.."" 
else
t = "#all "
end
end 
x = x + 1 
tagname = data.first_name
tagname = tagname:gsub("]","") 
tagname = tagname:gsub("[[]","") 
t = t.." ▹ ["..tagname.."](tg://user?id="..v.member_id.user_id..")" 
if x == 20 or x == tags or k == 0 then 
if ttag then
Text = t:gsub('#all '..ttag..',','#all '..ttag..'\n') 
else 
Text = t:gsub('#all,','#all\n')
end
sendText(msg_chat_id,Text,0,'md') 
end 
end 
end 

if not msg.Special and msg.content.MARCOSbots ~= "messageChatAddMembers" and Redis:hget(MARCOS.."Spam:Group:User"..msg_chat_id,"Spam:User") then 
if tonumber(msg.sender_id.user_id) == tonumber(MARCOS) then
return false
end
local floods = Redis:hget(MARCOS.."Spam:Group:User"..msg_chat_id,"Spam:User") or "nil"
local Num_Msg_Max = Redis:hget(MARCOS.."Spam:Group:User"..msg_chat_id,"Num:Spam") or 5
local post_count = tonumber(Redis:get(MARCOS.."Spam:Cont"..msg.sender_id.user_id..":"..msg_chat_id) or 0)
if post_count >= tonumber(Redis:hget(MARCOS.."Spam:Group:User"..msg_chat_id,"Num:Spam") or 5) then 
local type = Redis:hget(MARCOS.."Spam:Group:User"..msg_chat_id,"Spam:User") 
if type == "kick" then 
return bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0), send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ قام بالتكرار في المجموعه وتم طرده").Reply,"md",true)
end
if type == "del" then 
return bot.deleteMessages(msg.chat_id,{[1]= msg.id})
end
if type == "keed" then
return bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0}), send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ قام بالتكرار في المجموعه وتم تقييده").Reply,"md",true)  
end
if type == "mute" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ قام بالتكرار في المجموعه وتم كتمه").Reply,"md",true)  
end
end
Redis:setex(MARCOS.."Spam:Cont"..msg.sender_id.user_id..":"..msg_chat_id, tonumber(5), post_count+1) 
local edit_id = data.text_ or "nil"  
Num_Msg_Max = 5
if Redis:hget(MARCOS.."Spam:Group:User"..msg_chat_id,"Num:Spam") then
Num_Msg_Max = Redis:hget(MARCOS.."Spam:Group:User"..msg_chat_id,"Num:Spam") 
end
end 
if text and not msg.Special then
local _nl, ctrl_ = string.gsub(text, "%c", "")  
local _nl, real_ = string.gsub(text, "%d", "")   
sens = 400  
if Redis:get(MARCOS.."Lock:Spam"..msg.chat_id) == "del" and string.len(text) > (sens) or ctrl_ > (sens) or real_ > (sens) then 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الكلايش \n ꪤ',"md")
end
elseif Redis:get(MARCOS.."Lock:Spam"..msg.chat_id) == "ked" and string.len(text) > (sens) or ctrl_ > (sens) or real_ > (sens) then 
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الكلايش \n ꪤ',"md")
end
elseif Redis:get(MARCOS.."Lock:Spam"..msg.chat_id) == "kick" and string.len(text) > (sens) or ctrl_ > (sens) or real_ > (sens) then 
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الكلايش \n ꪤ',"md")
end
elseif Redis:get(MARCOS.."Lock:Spam"..msg.chat_id) == "ktm" and string.len(text) > (sens) or ctrl_ > (sens) or real_ > (sens) then 
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الكلايش \n ꪤ',"md")
end
end
end
if msg.forward_info and not msg.Admin then -- التوجيه
local Fwd_Group = Redis:get(MARCOS.."Lock:forward"..msg_chat_id)
if Fwd_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال التوجيه \n ꪤ',"md")
end
elseif Fwd_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال التوجيه \n ꪤ',"md")
end
elseif Fwd_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال التوجيه \n ꪤ',"md")
end
elseif Fwd_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال التوجيه \n ꪤ',"md")
end
end
print('This is forward')
return false
end 
if msg.content.MARCOSbots == "messagePhoto" or msg.content.MARCOSbots == "messageAnimation" or msg.content.MARCOSbots == "messageSticker" or msg.content.MARCOSbots == "messageVoiceNote" or msg.content.MARCOSbots == "messageVideo" or msg.content.MARCOSbots == "messageAudio" or msg.content.MARCOSbots == "messageVideoNote" then
if not msg.Admin then
if Redis:get(MARCOS.."Lock:AlUasat"..msg_chat_id) then 
return bot.deleteMessages(msg.chat_id,{[1]= msg.id})
end
end
end

if msg.reply_markup and msg.reply_markup.MARCOSbots == "replyMarkupInlineKeyboard" then
if not msg.Special then  -- الكيبورد
local Keyboard_Group = Redis:get(MARCOS.."Lock:Keyboard"..msg_chat_id)
if Keyboard_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الكيبورد \n ꪤ',"md")
end
elseif Keyboard_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الكيبورد \n ꪤ',"md")
end
elseif Keyboard_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الكيبورد \n ꪤ',"md")
end
elseif Keyboard_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الكيبورد \n ꪤ',"md")
end
end
end
print('This is reply_markup')
end 

if msg.content.location and not msg.Special then  -- الموقع
if location then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال المواقع \n ꪤ',"md")
end
end
print('This is location')
end 

if msg.content.entities and msg..content.entities[0] and msg.content.entities[0].type.MARCOSbots == "textEntityTypeUrl" and not msg.Special then  -- الماركداون
local Markduan_Gtoup = Redis:get(MARCOS.."Lock:Markdaun"..msg_chat_id)
if Markduan_Gtoup == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الماركداون \n ꪤ',"md")
end
elseif Markduan_Gtoup == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الماركداون \n ꪤ',"md")
end
elseif Markduan_Gtoup == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الماركداون \n ꪤ',"md")
end
elseif Markduan_Gtoup == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الماركداون \n ꪤ',"md")
end
end
print('This is textEntityTypeUrl')
end 

if msg.content.game and not msg.Special then  -- الالعاب
local Games_Group = Redis:get(MARCOS.."Lock:geam"..msg_chat_id)
if Games_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الالعاب \n ꪤ',"md")
end
elseif Games_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الالعاب \n ꪤ',"md")
end
elseif Games_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الالعاب \n ꪤ',"md")
end
elseif Games_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الالعاب \n ꪤ',"md")
end
end
print('This is games')
end 
if msg.content.MARCOSbots == "messagePinMessage" then -- رساله التثبيت
local Pin_Msg = Redis:get(MARCOS.."lockpin"..msg_chat_id)
if Pin_Msg and not msg.Manger then
if Pin_Msg:match("(%d+)") then 
local PinMsg = bot.pinChatMessage(msg_chat_id,Pin_Msg,true)
if PinMsg.MARCOSbots~= "ok" then
return send(msg_chat_id,msg_id,"\n ✧ لا استطيع تثبيت الرسائل ليست لديه صلاحيه","md",true)
end
end
local UnPin = bot.unpinChatMessage(msg_chat_id) 
if UnPin.MARCOSbots ~= "ok" then
return send(msg_chat_id,msg_id,"\n ✧ لا استطيع الغاء تثبيت الرسائل ليست لديه صلاحيه","md",true)
end
return send(msg_chat_id,msg_id,"\n ✧ التثبيت معطل من قبل المدراء ","md",true)
end
print('This is message Pin')
end 

if msg.content.MARCOSbots == "messageChatJoinByLink" then
if Redis:get(MARCOS.."Lock:Join"..msg.chat_id) == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
return false
end
end

if msg.content.MARCOSbots == "messageChatDeleteMember" and not Redis:get(MARCOS.."spammkick"..msg.chat_id) then 
if msg.sender_id.user_id ~= MARCOS then
Num_Msg_Max = 4
local UserInfo = bot.getUser(msg.sender_id.user_id)
local names = FlterBio(UserInfo.first_name)
local monsha = Redis:smembers(MARCOS.."Ownerss:Group"..msg_chat_id) 
if Redis:ttl(MARCOS.."mkal:setex:" .. msg.chat_id .. ":" .. msg.sender_id.user_id) < 0 then
Redis:del(MARCOS.."delmembars"..msg.chat_id..msg.sender_id.user_id)
end
local ttsaa = (Redis:get(MARCOS.."delmembars"..msg.chat_id..msg.sender_id.user_id) or 0)
if tonumber(ttsaa) >= tonumber(3) then 
local type = Redis:hget(MARCOS.."Storm:Spam:Group:User"..msg.chat_id,"Spam:User") 
local removeMembars = https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..msg.sender_id.user_id.."&can_change_info=false&can_manage_chat=false&can_manage_voice_chats=false&can_delete_messages=false&can_invite_users=false&can_restrict_members=false&can_pin_messages=false&can_promote_members=false")
local Json_Info = JSON.decode(removeMembars)
Redis:srem(MARCOS.."SuperCreator:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(MARCOS.."Creator:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(MARCOS.."Manger:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(MARCOS.."Admin:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(MARCOS.."Special:Group"..msg.chat_id,msg.sender_id.user_id)
if Json_Info.ok == false and Json_Info.error_code == 400 and Json_Info.description == "Bad Request: CHAT_ADMIN_REQUIRED" then
if #monsha ~= 0 then 
local ListMembers = '\n* ✧ تاك للمالكين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(monsha) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local v = monsha[1]
local tecxt = ListMembers.."\n ✧ نداء للمالك {[ > Click < ](tg://user?id="..v..")}"..
"\n ✧ المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n ✧ قام بالتكرار في ازاله الاعضاء \n ✧ لا يمكنني تنزيله من المشرفين"
send(msg_chat_id,msg_id,tecxt,"md")
end
end
if Json_Info.ok == false and Json_Info.error_code == 400 and Json_Info.description == "Bad Request: can't remove chat owner" then
if #monsha ~= 0 then 
local ListMembers = '\n* ✧ تاك للمالكين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(monsha) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local tecxt = ListMembers.."\n ✧ نداء للمالك {[ > Click < ](tg://user?id="..v..")}"..
"\n ✧ المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n ✧ هناك عمليه تخريب وطرد الاعضاء , ليست لدي صلاحيه اضافه مشرفين لتنزيله"
send(msg_chat_id,msg_id,tecxt,"md")
end
end
if Json_Info.ok == true and Json_Info.result == true then
if #monsha ~= 0 then 
local ListMembers = '\n* ✧ تاك للمالكين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(monsha) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local v = monsha[1]
local tecxt = ListMembers.."\n ✧ نداء للمالك {[ > Click < ](tg://user?id="..v..")}"..
"\n ✧ المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n ✧ قام بتكرار طرد الاعضاء وطرد اكثر من 3 وتم تنزيله من المشرفين "
send(msg_chat_id,msg_id,tecxt,"md")
end
end
Redis:del(MARCOS.."delmembars"..msg.chat_id..msg.sender_id.user_id)
end
Redis:setex(MARCOS.."mkal:setex:" .. msg.chat_id .. ":" .. msg.sender_id.user_id, 3600, true) 
Redis:incrby(MARCOS.."delmembars"..msg.chat_id..msg.sender_id.user_id, 1)  
end
end 

if text and text:match('طرد @(.*)') or text and text:match('حظر @(.*)') or text and text:match('طرد (%d+)') or text and text:match('حظر (%d+)') then 
if not Redis:get(MARCOS.."spammkick"..msg.chat_id) then 
if msg.sender_id.user_id ~= MARCOS then
Num_Msg_Max = 4
local UserInfo = bot.getUser(msg.sender_id.user_id)
local names = FlterBio(UserInfo.first_name) 
local monsha = Redis:smembers(MARCOS.."Ownerss:Group"..msg_chat_id) 
if Redis:ttl(MARCOS.."qmkal:setex:" .. msg.chat_id .. ":" .. msg.sender_id.user_id) < 0 then
Redis:del(MARCOS.."qdelmembars"..msg.chat_id..msg.sender_id.user_id)
end
local ttsaa = (Redis:get(MARCOS.."qdelmembars"..msg.chat_id..msg.sender_id.user_id) or 0)
if tonumber(ttsaa) >= tonumber(5) then 
print('spammmmm')
local removeMembars = https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..msg.sender_id.user_id.."&can_change_info=false&can_manage_chat=false&can_manage_voice_chats=false&can_delete_messages=false&can_invite_users=false&can_restrict_members=false&can_pin_messages=false&can_promote_members=false")
local Json_Info = JSON.decode(removeMembars)
Redis:srem(MARCOS.."SuperCreator:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(MARCOS.."Creator:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(MARCOS.."Manger:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(MARCOS.."Admin:Group"..msg.chat_id,msg.sender_id.user_id)
Redis:srem(MARCOS.."Special:Group"..msg.chat_id,msg.sender_id.user_id)
if Json_Info.ok == false and Json_Info.error_code == 400 and Json_Info.description == "Bad Request: CHAT_ADMIN_REQUIRED" then
if #monsha ~= 0 then 
local ListMembers = '\n* ✧ تاك للمالكين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(monsha) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local tecxt = ListMembers.."\n ✧ المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n ✧ قام بالتكرار في ازاله الاعضاء \n ✧ لا يمكنني تنزيله من المشرفين"
send(msg_chat_id,msg_id,tecxt,"md")
end
end
if Json_Info.ok == false and Json_Info.error_code == 400 and Json_Info.description == "Bad Request: can't remove chat owner" then
if #monsha ~= 0 then 
local ListMembers = '\n* ✧ تاك للمالكين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(monsha) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local tecxt = ListMembers.."\n ✧ المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n ✧ هناك عمليه تخريب وطرد الاعضاء , ليست لدي صلاحيه اضافه مشرفين لتنزيله"
send(msg_chat_id,msg_id,tecxt,"md")
end
end
if Json_Info.ok == true and Json_Info.result == true then
if #monsha ~= 0 then 
local ListMembers = '\n* ✧ تاك للمالكين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(monsha) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local tecxt = ListMembers.."\n ✧ المشرف {["..names.." ](tg://user?id="..msg.sender_id.user_id..")}"..
"\n ✧ هناك عمليه تخريب وطرد الاعضاء , ليست لدي صلاحيه اضافه مشرفين لتنزيله"
send(msg_chat_id,msg_id,tecxt,"md")
end
end
Redis:del(MARCOS.."qdelmembars"..msg.chat_id..msg.sender_id.user_id)
end
Redis:setex(MARCOS.."qmkal:setex:" .. msg.chat_id .. ":" .. msg.sender_id.user_id, 3600, true) 
Redis:incrby(MARCOS.."qdelmembars"..msg.chat_id..msg.sender_id.user_id, 1)  
end
end 
end

if msg.content.MARCOSbots == "messagePhoto" and Redis:get(MARCOS..'welcom_ph:witting'..msg.sender_id.user_id) then  -- الصور
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(MARCOS..':WELCOME_BOT',idPhoto)
Redis:del(MARCOS..'welcom_ph:witting'..msg.sender_id.user_id) 
return send(msg_chat_id,msg_id, ' ✧ تم تغيير صوره الترحيب للبوت\nꪤ')
end



if msg.content.MARCOSbots == "messageChatAddMembers" then -- اضافه اشخاص
print('This is Add Membeers ')
Redis:incr(MARCOS.."Num:Add:Memp"..msg_chat_id..":"..msg.sender_id.user_id) 
local AddMembrs = Redis:get(MARCOS.."Lock:AddMempar"..msg_chat_id) 
local Lock_Bots = Redis:get(MARCOS.."Lock:Bot:kick"..msg_chat_id)
for k,v in pairs(msg.content.member_user_ids) do
if tonumber(v) == tonumber(MARCOS) then
local idephoto = Redis:get(MARCOS..':WELCOME_BOT')
if idephoto then
local Bot_Name = (Redis:get(MARCOS.."Name:Bot") or "ماركوس")
return bot.sendPhoto(msg.chat_id, msg.id, idephoto,
'\n* ╗ مـرحـبــا انا بــوت '..Bot_Name..''..
'\n╣ اخـتصـاصـي  ادارة الجـروبــات'..
'\n╣ مـن السـب والشـتيمـه والابــاحـه'..
'\n╣ لتفعيل البــوت اتبــاع الخـطـوات'..
'\n╣❶ ارفع البــوت مـشـرف في مـجـمـوعه'..
'\n╣ وارسـل تفعيل في مـجـمـوعه'..
'\n╣❷ لو ارت تفعيل ردود السـورس'..
'\n╣ اكتب تفعيل ردود السـورس'..
'\n╝ مـطـور الـبــوت -> @'..UserSudo..
'*', "md")
end
end
local Info_User = bot.getUser(v) 
if Info_User.type.MARCOSbots == "userTypeRegular" then
Redis:incr(MARCOS.."Num:Add:Memp"..msg.chat_id..":"..msg.sender_id.user_id) 
if AddMembrs == "kick" and not msg.Special then
bot.setChatMemberStatus(msg.chat_id,v,'banned',0)
end
end
end
end 


if msg.content.MARCOSbots == "messageContact" and not msg.Special then  -- الجهات
local Contact_Group = Redis:get(MARCOS.."Lock:Contact"..msg_chat_id)
if Contact_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الجهات \n ꪤ',"md")
end
elseif Contact_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الجهات \n ꪤ',"md")
end
elseif Contact_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الجهات \n ꪤ',"md")
end
elseif Contact_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الجهات \n ꪤ',"md")
end
end
print('This is Contact')
end 

if msg.content.MARCOSbots == "messageVideoNote" and not msg.Special then  -- بصمه الفيديو
local Videonote_Group = Redis:get(MARCOS.."Lock:Unsupported"..msg_chat_id)
if Videonote_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال بصمات الفيديو \n ꪤ',"md")
end
elseif Videonote_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال بصمات الفيديو  \n ꪤ',"md")
end
elseif Videonote_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال بصمات الفيديو  \n ꪤ',"md")
end
elseif Videonote_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال بصمات الفيديو  \n ꪤ',"md")
end
end
print('This is video Note')
end 

if msg.content.MARCOSbots == "messageDocument" and not msg.Special then  -- الملفات
local Document_Group = Redis:get(MARCOS.."Lock:Document"..msg_chat_id)
if Document_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الملفات \n ꪤ',"md")
end
elseif Document_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الملفات \n ꪤ',"md")
end
elseif Document_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الملفات \n ꪤ',"md")
end
elseif Document_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الملفات \n ꪤ',"md")
end
end
print('This is Document')
end 

if msg.content.MARCOSbots == "messageAudio" and not msg.Special then  -- الملفات الصوتيه
local Audio_Group = Redis:get(MARCOS.."Lock:Audio"..msg_chat_id)
if Audio_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الصوتيات \n ꪤ',"md")
end
elseif Audio_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الصوتيات \n ꪤ',"md")
end
elseif Audio_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الصوتيات \n ꪤ',"md")
end
elseif Audio_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الصوتيات \n ꪤ',"md")
end
end
print('This is Audio')
end 

if msg.content.MARCOSbots == "messageVideo" then  -- الفيديو
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Special then
testmod = true
else
testmod = false
end
if testmod == false then
local Video_Grouo = Redis:get(MARCOS.."Lock:Video"..msg_chat_id)
if Video_Grouo == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الفيديو \n ꪤ',"md")
end
elseif Video_Grouo == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الفيديو \n ꪤ',"md")
end
elseif Video_Grouo == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الفيديو \n ꪤ',"md")
end
elseif Video_Grouo == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الفيديو \n ꪤ',"md")
end
end
end
print('This is Video')
end 
if text and text:match("[A-Z]") or text and text:match("[a-z]") then
if not msg.Special and Redis:get(MARCOS.."Lock:english"..msg_chat_id) then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال كلمات انكليزيه \n ꪤ',"md")
end
end
end
if msg.content.MARCOSbots == "messageVoiceNote" and not msg.Special then  -- البصمات
local Voice_Group = Redis:get(MARCOS.."Lock:vico"..msg_chat_id)
if Voice_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال البصمات \n ꪤ',"md")
end
elseif Voice_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال البصمات \n ꪤ',"md")
end
elseif Voice_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال البصمات \n ꪤ',"md")
end
elseif Voice_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال البصمات \n ꪤ',"md")
end
end
print('This is Voice')
end 

if msg.content.MARCOSbots == "messageSticker" then  -- الملصقات
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Special then
testmod = true
else
testmod = false
end
print(testmod)
if testmod == false then
local Sticker_Group = Redis:get(MARCOS.."Lock:Sticker"..msg_chat_id)
if Sticker_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الملصقات \n ꪤ',"md")
end
elseif Sticker_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الملصقات \n ꪤ',"md")
end
elseif Sticker_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الملصقات \n ꪤ',"md")
end
elseif Sticker_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الملصقات \n ꪤ',"md")
end
end
end
print('This is Sticker')
end 

if msg.via_bot_user_id ~= 0 and not msg.Admin then  -- انلاين
local Inlen_Group = Redis:get(MARCOS.."Lock:Inlen"..msg_chat_id)
if Inlen_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الاونلاين \n ꪤ',"md")
end
elseif Inlen_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الاونلاين \n ꪤ',"md")
end
elseif Inlen_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الاونلاين \n ꪤ',"md")
end
elseif Inlen_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الاونلاين \n ꪤ',"md")
end
end
print('This is viabot')
end

if msg.content.MARCOSbots == "messageAnimation"  then  -- المتحركات
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Special then
testmod = true
else
testmod = false
end
if testmod == false then
local Gif_group = Redis:get(MARCOS.."Lock:Animation"..msg_chat_id)
if Gif_group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال المتحركات \n ꪤ',"md")
end
elseif Gif_group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال المتحركات \n ꪤ',"md")
end
elseif Gif_group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال المتحركات \n ꪤ',"md")
end
elseif Gif_group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال المتحركات \n ꪤ',"md")
end
end
end
print('This is Animation')
end 
if text and (text:match("ه‍") or text:match("ی") or text:match("ک")) and not msg.Special then 
local phshar_Group = Redis:get(MARCOS.."Lock:farsia"..msg_chat_id)
if phshar_Group then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الفارسيه \n ꪤ',"md")
end
end
end
if text and (text:match("كسمك") or text:match("منيوج") or text:match("عير") or text:match("منيوك") or text:match("طويز") or text:match("العيوره") or text:match("مناويج") or text:match("عيوره") or text:match("كسج") or text:match("sex") or text:match("نيج")  or text:match("كحاب")  or text:match("طيازه")or text:match("طيز")or text:match("كس") or text:match("زب") or text:match("نيك") or text:match("فرخ") or text:match("كحبه") or text:match("انيكك") or text:match("منيوك")) and not msg.Special then 
local phshar_Group = Redis:get(MARCOS.."Lock:phshar"..msg_chat_id)
if phshar_Group then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال السب \n ꪤ',"md")
end
end
end
if text and (text:match("خره بالله") or text:match("خبربك") or text:match("كسدينربك") or text:match("خرب بالله") or text:match("خرب الله") or text:match("خره بربك") or text:match("الله الكواد") or text:match("خره بمحمد") or text:match("كسم الله") or text:match("كسم ربك") or text:match("كسربك") or text:match("كسختالله") or text:match("كسخت الله") or text:match("خره بدينك") or text:match("خرهبدينك") or text:match("كسالله") or text:match("خربالله")) and not msg.Special then 
local phsharr_Group = Redis:get(MARCOS.."Lock:alkfr"..msg_chat_id)
if phsharr_Group then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الشتايم \n ꪤ',"md")
end
end
end
if msg.content.MARCOSbots == "messagePhoto" then  -- الصور
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Special then
testmod = true
else
testmod = false
end
if testmod == false then
local Photo_Group = Redis:get(MARCOS.."Lock:Photo"..msg_chat_id)
if Photo_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الصور \n ꪤ',"md")
end
elseif Photo_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الصور \n ꪤ',"md")
end
elseif Photo_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الصور \n ꪤ',"md")
end
elseif Photo_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الصور \n ꪤ',"md")
end
end
end
print('This is Photo delete')
end
if msg.content.photo and Redis:get(MARCOS.."Chat:Photo"..msg_chat_id..":"..msg.sender_id.user_id) then
local ChatPhoto = bot.setChatPhoto(msg_chat_id,msg.content.photo.sizes[2].photo.remote.id)
if (ChatPhoto.MARCOSbots == "error") then
Redis:del(MARCOS.."Chat:Photo"..msg_chat_id..":"..msg.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ لا استطيع تغيير صوره المجموعه لاني لست ادمن او ليست لديه الصلاحيه ","md",true)    
end
Redis:del(MARCOS.."Chat:Photo"..msg_chat_id..":"..msg.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ تم تغيير صوره المجموعه بنـجاح ","md",true)    
end
if  (text and text:match("[Tt][Ee][Ll][Ee][Gg][Rr][Aa][Mm].[Mm][Ee]/") 
or text and text:match("[Tt][Ee][Ll][Ee][Gg][Rr][Aa][Mm].[Dd][Oo][Gg]/") 
or text and text:match("[Tt].[Mm][Ee]/") 
or text and text:match("[Tt][Ll][Gg][Rr][Mm].[Mm][Ee]/") 
or text and text:match(".[Pp][Ee]")  
or text and text:match("[Hh][Tt][Tt][Pp][Ss]://") 
or text and text:match("[Hh][Tt][Tt][Pp]://") 
or text and text:match("[Ww][Ww][Ww].") 
or text and text:match(".[Cc][Oo][Mm]")) or text and text:match("[Hh][Tt][Tt][Pp][Ss]://") or text and text:match("[Hh][Tt][Tt][Pp]://") or text and text:match("[Ww][Ww][Ww].") or text and text:match(".[Cc][Oo][Mm]") or text and text:match(".[Tt][Kk]") or text and text:match(".[Mm][Ll]") or text and text:match(".[Oo][Rr][Gg]")
or msg.content.MARCOSbots == "messageContact" 
or msg.content.MARCOSbots == "messageSticker"
or msg.content.MARCOSbots == "messageVideoNote" 
or msg.content.MARCOSbots == "messageDocument" 
or msg.content.MARCOSbots == "messageAudio" 
or msg.content.MARCOSbots == "messageVideo" 
or msg.content.MARCOSbots == "messageVoiceNote" 
or msg.content.MARCOSbots == "messageAnimation" 
or msg.content.MARCOSbots == "messagePhoto" then
local tphlesh_Group = Redis:get(MARCOS.."Lock:tphlesh"..msg_chat_id)
if not msg.Special and tphlesh_Group then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ عذرا التفليش مقفل تم المسح \n ꪤ',"md")
end
end
end

if (text and text:match("[Tt][Ee][Ll][Ee][Gg][Rr][Aa][Mm].[Mm][Ee]/") 
or text and text:match("[Tt][Ee][Ll][Ee][Gg][Rr][Aa][Mm].[Dd][Oo][Gg]/") 
or text and text:match("[Tt].[Mm][Ee]/") 
or text and text:match("[Tt][Ll][Gg][Rr][Mm].[Mm][Ee]/") 
or text and text:match(".[Pp][Ee]") 
or text and text:match("[Hh][Tt][Tt][Pp][Ss]://") 
or text and text:match("[Hh][Tt][Tt][Pp]://") 
or text and text:match("[Ww][Ww][Ww].") 
or text and text:match(".[Cc][Oo][Mm]")) or text and text:match("[Hh][Tt][Tt][Pp][Ss]://") or text and text:match("[Hh][Tt][Tt][Pp]://") or text and text:match("[Ww][Ww][Ww].") or text and text:match(".[Cc][Oo][Mm]") or text and text:match(".[Tt][Kk]") or text and text:match(".[Mm][Ll]") or text and text:match(".[Oo][Rr][Gg]") then 
local link_Group = Redis:get(MARCOS.."Lock:Link"..msg_chat_id)  
if not msg.Admin then
if link_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الروابط \n ꪤ',"md")
end
elseif link_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الروابط \n ꪤ',"md")
end
elseif link_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الروابط \n ꪤ',"md")
end
elseif link_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الروابط \n ꪤ',"md")
end
end
print('This is link ')
return false
end
end
if text and text:match("@[%a%d_]+") then 
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Special then
testmod = true
else
testmod = false
end
if testmod == false then
local UserName_Group = Redis:get(MARCOS.."Lock:User:Name"..msg_chat_id)
if UserName_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال المعرفات \n ꪤ',"md")
end
elseif UserName_Group == "ked" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال المعرفات \n ꪤ',"md")
end
elseif UserName_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال المعرفات \n ꪤ',"md")
end
elseif UserName_Group == "kick" then
bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال المعرفات \n ꪤ',"md")
end
end
print('This is username ')
end
end
if text and text:match("#[%a%d_]+") and not msg.Special then 
local Hashtak_Group = Redis:get(MARCOS.."Lock:hashtak"..msg_chat_id)
if Hashtak_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الهاشتاك \n ꪤ',"md")
end
elseif Hashtak_Group == "ked" then
 bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
 bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الهاشتاك \n ꪤ',"md")
end
elseif Hashtak_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الهاشتاك \n ꪤ',"md")
end
elseif Hashtak_Group == "kick" then
 bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
 bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الهاشتاك \n ꪤ',"md")
end
end
print('This is hashtak ')
end
if text and text:match("/[%a%d_]+") and not msg.Special then 
local comd_Group = Redis:get(MARCOS.."Lock:Cmd"..msg_chat_id)
if comd_Group == "del" then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الشارحه \n ꪤ',"md")
end
elseif comd_Group == "ked" then
 bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
 bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الشارحه \n ꪤ',"md")
end
elseif comd_Group == "ktm" then
Redis:sadd(MARCOS.."SilentGroup:Group"..msg.chat_id,msg.sender_id.user_id) 
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الشارحه \n ꪤ',"md")
end
elseif comd_Group == "kick" then
 bot.setChatMemberStatus(msg.chat_id,msg.sender_id.user_id,'banned',0)
 bot.deleteMessages(msg.chat_id,{[1]= msg.id})
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Teext = '* ✧ عذرآ عزيزي ->* ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..msg.sender_id.user_id..')\n'
return send(msg_chat_id,msg_id,Teext..' ✧ ممنوع ارسال الشارحه \n ꪤ',"md")
end
end
end
if (Redis:get(MARCOS..'FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'true') then
if text or msg.content.photo or msg.content.animation or msg.content.sticker then
if msg.content.photo then
Filters = 'صوره'
Redis:sadd(MARCOS.."List:Filter"..msg_chat_id,'photo:'..msg.content.photo.sizes[1].photo.id)  
Redis:set(MARCOS.."Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.photo.sizes[1].photo.id)  
elseif msg.content.animation then
Filters = 'متحركه'
Redis:sadd(MARCOS.."List:Filter"..msg_chat_id,'animation:'..msg.content.animation.animation.id)  
Redis:set(MARCOS.."Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.animation.animation.id)  
elseif msg.content.sticker then
Filters = 'ملصق'
Redis:sadd(MARCOS.."List:Filter"..msg_chat_id,'sticker:'..msg.content.sticker.sticker.id)  
Redis:set(MARCOS.."Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.sticker.sticker.id)  
elseif text then
Redis:set(MARCOS.."Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, text)  
Redis:sadd(MARCOS.."List:Filter"..msg_chat_id,'text:'..text)  
Filters = 'نص'
end
Redis:set(MARCOS..'FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'true1')
return send(msg_chat_id,msg_id,"\n ✧ ارسل تحذير ( "..Filters.." ) عند ارساله","md",true)  
end
end
if text and (Redis:get(MARCOS..'FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'true1') then
local Text_Filter = Redis:get(MARCOS.."Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id)  
if Text_Filter then   
Redis:set(MARCOS.."Filter:Group:"..Text_Filter..msg_chat_id,text)  
end  
Redis:del(MARCOS.."Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id)  
Redis:del(MARCOS..'FilterText'..msg_chat_id..':'..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,"\n ✧ تم اضافه رد التحذير","md",true)  
end
if (Redis:get(MARCOS..'FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'DelFilter') then   
if text or msg.content.photo or msg.content.animation or msg.content.sticker then
if msg.content.photo then
Filters = 'الصوره'
Redis:srem(MARCOS.."List:Filter"..msg_chat_id,'photo:'..msg.content.photo.sizes[1].photo.id)  
Redis:del(MARCOS.."Filter:Group:"..msg.content.photo.sizes[1].photo.id..msg_chat_id)  
elseif msg.content.animation then
Filters = 'المتحركه'
Redis:srem(MARCOS.."List:Filter"..msg_chat_id,'animation:'..msg.content.animation.animation.id)  
Redis:del(MARCOS.."Filter:Group:"..msg.content.animation.animation.id..msg_chat_id)  
elseif msg.content.sticker then
Filters = 'الملصق'
Redis:srem(MARCOS.."List:Filter"..msg_chat_id,'sticker:'..msg.content.sticker.sticker.id)  
Redis:del(MARCOS.."Filter:Group:"..msg.content.sticker.sticker.id..msg_chat_id)  
elseif text then
Redis:srem(MARCOS.."List:Filter"..msg_chat_id,'text:'..text)  
Redis:del(MARCOS.."Filter:Group:"..text..msg_chat_id)  
Filters = 'النص'
end
Redis:del(MARCOS..'FilterText'..msg_chat_id..':'..msg.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ تم الغاء منع ("..Filters..")","md",true)  
end
end
if text or msg.content.photo or msg.content.animation or msg.content.sticker then
if msg.content.photo then
DelFilters = msg.content.photo.sizes[1].photo.id
statusfilter = 'الصوره'
elseif msg.content.animation then
DelFilters = msg.content.animation.animation.id
statusfilter = 'المتحركه'
elseif msg.content.sticker then
DelFilters = msg.content.sticker.sticker.id
statusfilter = 'الملصق'
elseif text then
DelFilters = text
statusfilter = 'الرساله'
end
local ReplyFilters = Redis:get(MARCOS.."Filter:Group:"..DelFilters..msg_chat_id)
if ReplyFilters and not msg.Special then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
return send(msg_chat_id,msg_id,"* ✧ لقد تم منع هذه ( "..statusfilter.." ) هنا*\n ✧ "..ReplyFilters,"md",true)   
end
end
if text and Redis:get(MARCOS..msg.chat_id..msg.sender_id.user_id.."replace") == "true1" then
Redis:del(MARCOS..msg.chat_id..msg.sender_id.user_id.."replace")
local word = Redis:get(MARCOS..msg.sender_id.user_id.."word")
Redis:set(MARCOS.."Word:Replace"..word,text)
Redis:sadd(MARCOS..'Words:r',word)  
bot.sendText(msg_chat_id,msg_id," ✧ تم حفظ الكلمه","md",true)  
return false 
end
if text and Redis:get(MARCOS..msg.chat_id..msg.sender_id.user_id.."replace") == "true" then
Redis:set(MARCOS..msg.sender_id.user_id.."word",text)
Redis:set(MARCOS..msg.chat_id..msg.sender_id.user_id.."replace","true1")
bot.sendText(msg_chat_id,msg_id,'\n ✧ ارسل كلمه جديده ليتم استبدالها مكان *'..text..'*',"md",true)  
return false 
end
if text and Redis:get(MARCOS.."Command:Reids:Group:Del"..msg_chat_id..":"..msg.sender_id.user_id) == "true" then
local NewCmmd = Redis:get(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..text)
if NewCmmd then
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..text)
Redis:del(MARCOS.."Command:Reids:Group:New"..msg_chat_id)
Redis:srem(MARCOS.."Command:List:Group"..msg_chat_id,text)
send(msg_chat_id,msg_id," ✧ تم ازالة هذا الامر  { "..text.." }","md",true)
else
send(msg_chat_id,msg_id," ✧ لا يوجد امر بهذا الاسم","md",true)
end
Redis:del(MARCOS.."Command:Reids:Group:Del"..msg_chat_id..":"..msg.sender_id.user_id)
return false
end
if text and Redis:get(MARCOS.."Command:Reids:Group"..msg_chat_id..":"..msg.sender_id.user_id) == "true" then
Redis:set(MARCOS.."Command:Reids:Group:New"..msg_chat_id,text)
Redis:del(MARCOS.."Command:Reids:Group"..msg_chat_id..":"..msg.sender_id.user_id)
Redis:set(MARCOS.."Command:Reids:Group:End"..msg_chat_id..":"..msg.sender_id.user_id,"true1") 
return send(msg_chat_id,msg_id," ✧ ارسل الامر الجديد ليتم وضعه مكان القديم","md",true)  
end
if text and Redis:get(MARCOS.."Command:Reids:Group:End"..msg_chat_id..":"..msg.sender_id.user_id) == "true1" then
local NewCmd = Redis:get(MARCOS.."Command:Reids:Group:New"..msg_chat_id)
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..text,NewCmd)
Redis:sadd(MARCOS.."Command:List:Group"..msg_chat_id,text)
Redis:del(MARCOS.."Command:Reids:Group:End"..msg_chat_id..":"..msg.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ تم حفظ الامر باسم  { "..text..' }',"md",true)
end
if text and Redis:get(MARCOS.."Command:not:Group:Del"..msg_chat_id..":"..msg.sender_id.user_id) == "true" then
local NewCmmd = Redis:get(MARCOS.."Get:Reides:Jabwa:Group"..msg_chat_id..":"..text)
if NewCmmd then
Redis:del(MARCOS.."Get:Reides:Jabwa:Group"..msg_chat_id..":"..text)
Redis:del(MARCOS.."Command:not:Group:New"..msg_chat_id)
Redis:srem(MARCOS.."Command:List:Group"..msg_chat_id,text)
bot.sendText(msg_chat_id,msg_id," ✧ تم ازالة هذا -> { "..text.." }","md",true)
else
bot.sendText(msg_chat_id,msg_id," ✧ لا يوجد امر بهذا الاسم","md",true)
end
Redis:del(MARCOS.."Command:not:Group:Del"..msg_chat_id..":"..msg.sender_id.user_id)
return false
end
if text and Redis:get(MARCOS.."Command:not:Group"..msg_chat_id..":"..msg.sender_id.user_id) == "true" then
Redis:set(MARCOS.."Command:not:Group:New"..msg_chat_id,text)
Redis:del(MARCOS.."Command:not:Group"..msg_chat_id..":"..msg.sender_id.user_id)
Redis:set(MARCOS.."Command:not:Group:End"..msg_chat_id..":"..msg.sender_id.user_id,"true1") 
return bot.sendText(msg_chat_id,msg_id,"* ✧ ارسل الامر الجديد ليتم وضعه مكان القديم*","md",true)  
end
if text and Redis:get(MARCOS.."Command:not:Group:End"..msg_chat_id..":"..msg.sender_id.user_id) == "true1" then
local NewCmd = Redis:get(MARCOS.."Command:not:Group:New"..msg_chat_id)
Redis:set(MARCOS.."Get:Reides:Jabwa:Group"..msg_chat_id..":"..text,NewCmd)
Redis:sadd(MARCOS.."Command:List:Group"..msg_chat_id,text)
Redis:del(MARCOS.."Command:not:Group:End"..msg_chat_id..":"..msg.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id,"* ✧ تم حفظ الامر باسم ->* { "..text..' }',"md",true)
end
if text and Redis:get(MARCOS.."All:Command:not:Group:Del"..msg_chat_id..":"..msg.sender_id.user_id) == "true" then
local NewCmmd = Redis:get(MARCOS.."All:Get:Reides:Jabwa:Group"..text)
if NewCmmd then
Redis:del(MARCOS.."All:Get:Reides:Jabwa:Group"..text)
Redis:del(MARCOS.."All:Command:not:Group:New"..msg_chat_id)
Redis:srem(MARCOS.."All:Command:List:Group",text)
bot.sendText(msg_chat_id,msg_id," ✧ تم ازالة هذا -> { "..text.." }","md",true)
else
bot.sendText(msg_chat_id,msg_id,"* ✧ لا يوجد امر بهذا الاسم*","md",true)
end
Redis:del(MARCOS.."All:Command:not:Group:Del"..msg_chat_id..":"..msg.sender_id.user_id)
return false
end
if text and Redis:get(MARCOS.."All:Command:not:Group"..msg_chat_id..":"..msg.sender_id.user_id) == "true" then
Redis:set(MARCOS.."All:Command:not:Group:New"..msg_chat_id,text)
Redis:del(MARCOS.."All:Command:not:Group"..msg_chat_id..":"..msg.sender_id.user_id)
Redis:set(MARCOS.."All:Command:not:Group:End"..msg_chat_id..":"..msg.sender_id.user_id,"true1") 
return bot.sendText(msg_chat_id,msg_id,"* ✧ ارسل الامر الجديد ليتم وضعه مكان القديم*","md",true)  
end
if text and Redis:get(MARCOS.."All:Command:not:Group:End"..msg_chat_id..":"..msg.sender_id.user_id) == "true1" then
local NewCmd = Redis:get(MARCOS.."All:Command:not:Group:New"..msg_chat_id)
Redis:set(MARCOS.."All:Get:Reides:Jabwa:Group"..text,NewCmd)
Redis:sadd(MARCOS.."All:Command:List:Group",text)
Redis:del(MARCOS.."All:Command:not:Group:End"..msg_chat_id..":"..msg.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id,"* ✧ تم حفظ الامر باسم ->* { "..text..' }',"md",true)
end
if Redis:get(MARCOS.."Set:Link"..msg_chat_id..""..msg.sender_id.user_id) then
if text == "الغاء" then
Redis:del(MARCOS.."Set:Link"..msg_chat_id..""..msg.sender_id.user_id) 
return send(msg_chat_id,msg_id," ✧ تم الغاء حفظ الرابط","md",true)         
end
if text and text:match("(https://telegram.me/joinchat/%S+)") or text and text:match("(https://t.me/joinchat/%S+)") then     
local LinkGroup = text:match("(https://telegram.me/joinchat/%S+)") or text:match("(https://t.me/joinchat/%S+)")   
Redis:set(MARCOS.."Group:Link"..msg_chat_id,LinkGroup)
Redis:del(MARCOS.."Set:Link"..msg_chat_id..""..msg.sender_id.user_id) 
return send(msg_chat_id,msg_id," ✧ تم حفظ الرابط بنجاح","md",true)         
end
end 
if Redis:get(MARCOS.."Tshake:Welcome:Group" .. msg_chat_id .. "" .. msg.sender_id.user_id) then 
if text == "الغاء" then 
Redis:del(MARCOS.."Tshake:Welcome:Group" .. msg_chat_id .. "" .. msg.sender_id.user_id)  
return send(msg_chat_id,msg_id," ✧ تم الغاء حفظ الترحيب","md",true)   
end 
Redis:del(MARCOS.."Tshake:Welcome:Group" .. msg_chat_id .. "" .. msg.sender_id.user_id)  
Redis:set(MARCOS.."Welcome:Group"..msg_chat_id,text) 
return send(msg_chat_id,msg_id," ✧ تم حفظ ترحيب المجموعه","md",true)     
end
if Redis:get(MARCOS.."Set:Rules:" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" then 
Redis:del(MARCOS.."Set:Rules:" .. msg_chat_id .. ":" .. msg.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ تم الغاء حفظ القوانين","md",true)   
end 
Redis:set(MARCOS.."Group:Rules" .. msg_chat_id,text) 
Redis:del(MARCOS.."Set:Rules:" .. msg_chat_id .. ":" .. msg.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ تم حفظ قوانين المجموعه","md",true)  
end  
if Redis:get(MARCOS.."Set:Description:" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" then 
Redis:del(MARCOS.."Set:Description:" .. msg_chat_id .. ":" .. msg.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ تم الغاء حفظ وصف المجموعه","md",true)   
end 
bot.setChatDescription(msg_chat_id,text) 
Redis:del(MARCOS.."Set:Description:" .. msg_chat_id .. ":" .. msg.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ تم حفظ وصف المجموعه","md",true)  
end  

if text or msg.content.video_note or msg.content.document or msg.content.audio or msg.content.video or msg.content.voice_note or msg.content.sticker or msg.content.animation or msg.content.photo then
local test = Redis:get(MARCOS.."Text:Manager"..msg.sender_id.user_id..":"..msg_chat_id.."")
if Redis:get(MARCOS.."Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id) == "true1" then
Redis:del(MARCOS.."Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id)
if msg.content.sticker then   
Redis:set(MARCOS.."Add:Rd:Manager:Stekrs"..test..msg_chat_id, msg.content.sticker.sticker.remote.id)  
end   
if msg.content.voice_note then  
Redis:set(MARCOS.."Add:Rd:Manager:Vico"..test..msg_chat_id, msg.content.voice_note.voice.remote.id)  
end   
if text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(MARCOS.."Add:Rd:Manager:Text"..test..msg_chat_id, text)  
end  
if msg.content.audio then
if msg.content.caption.text then
Redis:set(MARCOS.."Add:Rd:caption:audio"..msg.content.audio.audio.remote.id..msg_chat_id, msg.content.caption.text)  
end
Redis:set(MARCOS.."Add:Rd:Manager:Audio"..test..msg_chat_id, msg.content.audio.audio.remote.id)  
end
if msg.content.document then
if msg.content.caption.text then
Redis:set(MARCOS.."Add:Rd:caption:document"..msg.content.document.document.remote.id..msg_chat_id, msg.content.caption.text)  
end
Redis:set(MARCOS.."Add:Rd:Manager:File"..test..msg_chat_id, msg.content.document.document.remote.id)  
end
if msg.content.animation then
Redis:set(MARCOS.."Add:Rd:Manager:Gif"..test..msg_chat_id, msg.content.animation.animation.remote.id)  
end
if msg.content.video_note then
Redis:set(MARCOS.."Add:Rd:Manager:video_note"..test..msg_chat_id, msg.content.video_note.video.remote.id)  
end
if msg.content.video then
if msg.content.caption.text then
Redis:set(MARCOS.."Add:Rd:caption:video"..msg.content.video.video.remote.id..msg_chat_id, msg.content.caption.text)  
end
Redis:set(MARCOS.."Add:Rd:Manager:Video"..test..msg_chat_id, msg.content.video.video.remote.id)  
end
if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
if msg.content.caption.text then
Redis:set(MARCOS.."Add:Rd:caption:Photo"..idPhoto..msg_chat_id, msg.content.caption.text)  
end
Redis:set(MARCOS.."Add:Rd:Manager:Photo"..test..msg_chat_id, idPhoto)  
end
return send(msg_chat_id,msg_id,"*✧ تم اضافة الرد بنجاح \n✧ ارسل『 "..test.." 』لرؤيه الرد*","md",true)  
end  
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
Redis:set(MARCOS.."Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id,"true1")
Redis:set(MARCOS.."Text:Manager"..msg.sender_id.user_id..":"..msg_chat_id, text)
Redis:del(MARCOS.."Add:Rd:Manager:Gif"..text..msg_chat_id)   
Redis:del(MARCOS.."Add:Rd:Manager:Vico"..text..msg_chat_id)   
Redis:del(MARCOS.."Add:Rd:Manager:Stekrs"..text..msg_chat_id)     
Redis:del(MARCOS.."Add:Rd:Manager:Text"..text..msg_chat_id)   
Redis:del(MARCOS.."Add:Rd:Manager:Photo"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Video"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:File"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:video_note"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Audio"..text..msg_chat_id)
Redis:sadd(MARCOS.."List:Manager"..msg_chat_id.."", text)
send(msg_chat_id,msg_id,[[
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, يمكنك الان ارسل لي الرد للضافه ،
, ملصق ، متحركه ، صوره ،
, فيديو ، بصمه الفيديو ،
, بصمه ، صوت ، رساله ،
, يمكنك اضافة الى النص ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*
`#username` *-> معرف المستخدم*
 `#msgs` *-> عدد الرسائل*
 `#name` *-> اسم المستخدم*
 `#id` *-> ايدي المستخدم*
 `#stast`* -> رتبة المستخدم*
 `#edit` *-> عدد التعديلات*
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*
]],"md",true)  
return false
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id.."") == "true2" then
Redis:del(MARCOS.."Add:Rd:Manager:Gif"..text..msg_chat_id)   
Redis:del(MARCOS.."Add:Rd:Manager:Vico"..text..msg_chat_id)   
Redis:del(MARCOS.."Add:Rd:Manager:Stekrs"..text..msg_chat_id)     
Redis:del(MARCOS.."Add:Rd:Manager:Text"..text..msg_chat_id)   
Redis:del(MARCOS.."Add:Rd:Manager:Photo"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Video"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:File"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Audio"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:video_note"..text..msg_chat_id)
Redis:del(MARCOS.."Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:srem(MARCOS.."List:Manager"..msg_chat_id.."", text)
send(msg_chat_id,msg_id,"* ✧ تم مسح الرد من الردود المضافه*","md",true)  
return false
end
end
if text and Redis:get(MARCOS.."Status:ReplySudo"..msg_chat_id) then
local anemi = Redis:get(MARCOS.."Add:Rd:Sudo:Gif"..text)   
local veico = Redis:get(MARCOS.."Add:Rd:Sudo:vico"..text)   
local stekr = Redis:get(MARCOS.."Add:Rd:Sudo:stekr"..text)     
local Text = Redis:get(MARCOS.."Add:Rd:Sudo:Text"..text)   
local photo = Redis:get(MARCOS.."Add:Rd:Sudo:Photo"..text)
local video = Redis:get(MARCOS.."Add:Rd:Sudo:Video"..text)
local document = Redis:get(MARCOS.."Add:Rd:Sudo:File"..text)
local audio = Redis:get(MARCOS.."Add:Rd:Sudo:Audio"..text)
local video_note = Redis:get(MARCOS.."Add:Rd:Sudo:video_note"..text)
if Text then 
local UserInfo = bot.getUser(msg.sender_id.user_id)
local NumMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalMsg = Total_message(NumMsg)
local Status_Gps = msg.Name_Controller
local NumMessageEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local Text = Text:gsub('#username',(UserInfo.username or 'لا يوجد')) 
local Text = Text:gsub('#name',FlterBio(UserInfo.first_name))
local Text = Text:gsub('#id',msg.sender_id.user_id)
local Text = Text:gsub('#edit',NumMessageEdit)
local Text = Text:gsub('#msgs',NumMsg)
local Text = Text:gsub('#stast',Status_Gps)
send(msg_chat_id,msg_id,"["..Text.."]","md",true)  
end
if video_note then
bot.sendVideoNote(msg_chat_id, msg.id, video_note)
end
if photo then
bot.sendPhoto(msg.chat_id, msg.id, photo,'')
end  
if stekr then 
bot.sendSticker(msg_chat_id, msg.id, stekr)
end
if veico then 
bot.sendVoiceNote(msg_chat_id, msg.id, veico, '', 'md')
end
if video then 
bot.sendVideo(msg_chat_id, msg.id, video, '', "md")
end
if anemi then 
bot.sendAnimation(msg_chat_id,msg.id, anemi, '', 'md')
end
if document then
bot.sendDocument(msg_chat_id, msg.id, document, '', 'md')
end  
if audio then
bot.sendAudio(msg_chat_id, msg.id, audio, '', "md") 
end
end
if text and Redis:get(MARCOS.."Status:Reply"..msg_chat_id) then
local anemi = Redis:get(MARCOS.."Add:Rd:Manager:Gif"..text..msg_chat_id)   
local veico = Redis:get(MARCOS.."Add:Rd:Manager:Vico"..text..msg_chat_id)   
local stekr = Redis:get(MARCOS.."Add:Rd:Manager:Stekrs"..text..msg_chat_id)     
local Texingt = Redis:get(MARCOS.."Add:Rd:Manager:Text"..text..msg_chat_id)   
local photo = Redis:get(MARCOS.."Add:Rd:Manager:Photo"..text..msg_chat_id)
local video = Redis:get(MARCOS.."Add:Rd:Manager:Video"..text..msg_chat_id)
local document = Redis:get(MARCOS.."Add:Rd:Manager:File"..text..msg_chat_id)
local audio = Redis:get(MARCOS.."Add:Rd:Manager:Audio"..text..msg_chat_id)
local video_note = Redis:get(MARCOS.."Add:Rd:Manager:video_note"..text..msg_chat_id)
if Texingt then 
local UserInfo = bot.getUser(msg.sender_id.user_id)
local NumMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalMsg = Total_message(NumMsg) 
local Status_Gps = msg.Name_Controller
local NumMessageEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local Texingt = Texingt:gsub('#username',(UserInfo.username or 'لا يوجد')) 
local Texingt = Texingt:gsub('#name',FlterBio(UserInfo.first_name))
local Texingt = Texingt:gsub('#id',msg.sender_id.user_id)
local Texingt = Texingt:gsub('#edit',NumMessageEdit)
local Texingt = Texingt:gsub('#msgs',NumMsg)
local Texingt = Texingt:gsub('#stast',Status_Gps)
send(msg_chat_id,msg_id,"["..Texingt.."]","md",true)  
end
if video_note then
bot.sendVideoNote(msg_chat_id, msg.id, video_note)
end
if photo then
local captionsend = Redis:get(MARCOS.."Add:Rd:caption:Photo"..photo..msg_chat_id) or ''
bot.sendPhoto(msg.chat_id, msg.id, photo,'['..captionsend..']',"md")
end  
if stekr then 
bot.sendSticker(msg_chat_id, msg.id, stekr)
end
if veico then 
bot.sendVoiceNote(msg_chat_id, msg.id, veico, '', 'md')
end
if video then 
local captionsend = Redis:get(MARCOS.."Add:Rd:caption:video"..video..msg_chat_id) or ''
bot.sendVideo(msg_chat_id, msg.id, video, '['..captionsend..']', "md")
end
if anemi then 
bot.sendAnimation(msg_chat_id,msg.id, anemi, '', 'md')
end
if document then
local captionsend = Redis:get(MARCOS.."Add:Rd:caption:document"..document..msg_chat_id) or ''
bot.sendDocument(msg_chat_id, msg.id, document, '['..captionsend..']', 'md')
end  
if audio then
local captionsend = Redis:get(MARCOS.."Add:Rd:caption:audio"..audio..msg_chat_id) or ''
bot.sendAudio(msg_chat_id, msg.id, audio, '['..captionsend..']',"md")
end
end
if text or msg.content.video_note or msg.content.document or msg.content.audio or msg.content.video or msg.content.voice_note or msg.content.sticker or msg.content.animation or msg.content.photo then
local test = Redis:get(MARCOS.."Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg_chat_id)
if Redis:get(MARCOS.."Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id) == "true1" then
Redis:del(MARCOS.."Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id)
if msg.content.sticker then   
Redis:set(MARCOS.."Add:Rd:Sudo:stekr"..test, msg.content.sticker.sticker.remote.id)  
end   
if msg.content.voice_note then  
Redis:set(MARCOS.."Add:Rd:Sudo:vico"..test, msg.content.voice_note.voice.remote.id)  
end   
if msg.content.animation then   
Redis:set(MARCOS.."Add:Rd:Sudo:Gif"..test, msg.content.animation.animation.remote.id)  
end  
if text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(MARCOS.."Add:Rd:Sudo:Text"..test, text)  
end  
if msg.content.audio then
Redis:set(MARCOS.."Add:Rd:Sudo:Audio"..test, msg.content.audio.audio.remote.id)  
end
if msg.content.document then
Redis:set(MARCOS.."Add:Rd:Sudo:File"..test, msg.content.document.document.remote.id)  
end
if msg.content.video then
Redis:set(MARCOS.."Add:Rd:Sudo:Video"..test, msg.content.video.video.remote.id)  
end
if msg.content.video_note then
Redis:set(MARCOS.."Add:Rd:Sudo:video_note"..test..msg_chat_id, msg.content.video_note.video.remote.id)  
end
if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(MARCOS.."Add:Rd:Sudo:Photo"..test, idPhoto)  
end
send(msg_chat_id,msg_id,"*✧ تم اضافة الرد بنجاح \n✧ ارسل『 "..test.." 』لرؤيه الرد*","md",true)  
return false
end  
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
Redis:set(MARCOS.."Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id, "true1")
Redis:set(MARCOS.."Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg_chat_id, text)
Redis:sadd(MARCOS.."List:Rd:Sudo", text)
send(msg_chat_id,msg_id,[[
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, يمكنك الان ارسل لي الرد للضافه ،
, ملصق ، متحركه ، صوره ،
, فيديو ، بصمه الفيديو ،
, بصمه ، صوت ، رساله ،
, يمكنك اضافة الى النص ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*
`#username` *-> معرف المستخدم*
 `#msgs` *-> عدد الرسائل*
 `#name` *-> اسم المستخدم*
 `#id` *-> ايدي المستخدم*
 `#stast`* -> رتبة المستخدم*
 `#edit` *-> عدد التعديلات*
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*
]],"md",true)  
return false
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."Set:On"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
list = {"Add:Rd:Sudo:video_note","Add:Rd:Sudo:Audio","Add:Rd:Sudo:File","Add:Rd:Sudo:Video","Add:Rd:Sudo:Photo","Add:Rd:Sudo:Text","Add:Rd:Sudo:stekr","Add:Rd:Sudo:vico","Add:Rd:Sudo:Gif"}
for k,v in pairs(list) do
Redis:del(MARCOS..''..v..text)
end
Redis:del(MARCOS.."Set:On"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:srem(MARCOS.."List:Rd:Sudo", text)
return send(msg_chat_id,msg_id,"* ✧ تم مسح الرد من الردود العامه*","md",true)  
end
end
------------------------------------------------------------------------------------------------------------
if text and Redis:get(MARCOS.."Reply:Source"..msg_chat_id) then
local anemi = Redis:get(MARCOS.."Add:reply:Source:Gif"..text)   
local veico = Redis:get(MARCOS.."Add:reply:Source:vico"..text)   
local stekr = Redis:get(MARCOS.."Add:reply:Source:stekr"..text)     
local Text = Redis:get(MARCOS.."Add:reply:Source:Text"..text)   
local photo = Redis:get(MARCOS.."Add:reply:Source:Photo"..text)
local video = Redis:get(MARCOS.."Add:reply:Source:Video"..text)
local document = Redis:get(MARCOS.."Add:reply:Source:File"..text)
local audio = Redis:get(MARCOS.."Add:reply:Source:Audio"..text)
local video_note = Redis:get(MARCOS.."Add:reply:Source:video_note"..text)
if Text then 
local UserInfo = bot.getUser(msg.sender_id.user_id)
local NumMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalMsg = Total_message(NumMsg)
local Status_Gps = msg.Name_Controller
local NumMessageEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local Text = Text:gsub('#username',(UserInfo.username or 'لا يوجد')) 
local Text = Text:gsub('#name',FlterBio(UserInfo.first_name))
local Text = Text:gsub('#id',msg.sender_id.user_id)
local Text = Text:gsub('#edit',NumMessageEdit)
local Text = Text:gsub('#msgs',NumMsg)
local Text = Text:gsub('#stast',Status_Gps)
send(msg_chat_id,msg_id,"["..Text.."]","md",true)  
end
if video_note then
bot.sendVideoNote(msg_chat_id, msg.id, video_note)
end
if photo then
bot.sendPhoto(msg.chat_id, msg.id, photo,'')
end  
if stekr then 
bot.sendSticker(msg_chat_id, msg.id, stekr)
end
if veico then 
bot.sendVoiceNote(msg_chat_id, msg.id, veico, '', 'md')
end
if video then 
bot.sendVideo(msg_chat_id, msg.id, video, '', "md")
end
if anemi then 
bot.sendAnimation(msg_chat_id,msg.id, anemi, '', 'md')
end
if document then
bot.sendDocument(msg_chat_id, msg.id, document, '', 'md')
end  
if audio then
bot.sendAudio(msg_chat_id, msg.id, audio, '', "md") 
end
end
if text and Redis:get(MARCOS.."Status:Reply"..msg_chat_id) then
local anemi = Redis:get(MARCOS.."Add:reply:Manager:Gif"..text..msg_chat_id)   
local veico = Redis:get(MARCOS.."Add:reply:Manager:Vico"..text..msg_chat_id)   
local stekr = Redis:get(MARCOS.."Add:reply:Manager:Stekrs"..text..msg_chat_id)     
local Texingt = Redis:get(MARCOS.."Add:reply:Manager:Text"..text..msg_chat_id)   
local photo = Redis:get(MARCOS.."Add:reply:Manager:Photo"..text..msg_chat_id)
local video = Redis:get(MARCOS.."Add:reply:Manager:Video"..text..msg_chat_id)
local document = Redis:get(MARCOS.."Add:reply:Manager:File"..text..msg_chat_id)
local audio = Redis:get(MARCOS.."Add:reply:Manager:Audio"..text..msg_chat_id)
local video_note = Redis:get(MARCOS.."Add:reply:Manager:video_note"..text..msg_chat_id)
if Texingt then 
local UserInfo = bot.getUser(msg.sender_id.user_id)
local NumMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalMsg = Total_message(NumMsg) 
local Status_Gps = msg.Name_Controller
local NumMessageEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local Texingt = Texingt:gsub('#username',(UserInfo.username or 'لا يوجد')) 
local Texingt = Texingt:gsub('#name',FlterBio(UserInfo.first_name))
local Texingt = Texingt:gsub('#id',msg.sender_id.user_id)
local Texingt = Texingt:gsub('#edit',NumMessageEdit)
local Texingt = Texingt:gsub('#msgs',NumMsg)
local Texingt = Texingt:gsub('#stast',Status_Gps)
send(msg_chat_id,msg_id,"["..Texingt.."]","md",true)  
end
if video_note then
bot.sendVideoNote(msg_chat_id, msg.id, video_note)
end
if photo then
local captionsend = Redis:get(MARCOS.."Add:reply:caption:Photo"..photo..msg_chat_id) or ''
bot.sendPhoto(msg.chat_id, msg.id, photo,'['..captionsend..']',"md")
end  
if stekr then 
bot.sendSticker(msg_chat_id, msg.id, stekr)
end
if veico then 
bot.sendVoiceNote(msg_chat_id, msg.id, veico, '', 'md')
end
if video then 
local captionsend = Redis:get(MARCOS.."Add:reply:caption:video"..video..msg_chat_id) or ''
bot.sendVideo(msg_chat_id, msg.id, video, '['..captionsend..']', "md")
end
if anemi then 
bot.sendAnimation(msg_chat_id,msg.id, anemi, '', 'md')
end
if document then
local captionsend = Redis:get(MARCOS.."Add:reply:caption:document"..document..msg_chat_id) or ''
bot.sendDocument(msg_chat_id, msg.id, document, '['..captionsend..']', 'md')
end  
if audio then
local captionsend = Redis:get(MARCOS.."Add:reply:caption:audio"..audio..msg_chat_id) or ''
bot.sendAudio(msg_chat_id, msg.id, audio, '['..captionsend..']',"md")
end
end
if text or msg.content.video_note or msg.content.document or msg.content.audio or msg.content.video or msg.content.voice_note or msg.content.sticker or msg.content.animation or msg.content.photo then
local test = Redis:get(MARCOS.."Text:Source:Bot"..msg.sender_id.user_id..":"..msg_chat_id)
if Redis:get(MARCOS.."reply:on"..msg.sender_id.user_id..":"..msg_chat_id) == "true1" then
Redis:del(MARCOS.."reply:on"..msg.sender_id.user_id..":"..msg_chat_id)
if msg.content.sticker then   
Redis:set(MARCOS.."Add:reply:Source:stekr"..test, msg.content.sticker.sticker.remote.id)  
end   
if msg.content.voice_note then  
Redis:set(MARCOS.."Add:reply:Source:vico"..test, msg.content.voice_note.voice.remote.id)  
end   
if msg.content.animation then   
Redis:set(MARCOS.."Add:reply:Source:Gif"..test, msg.content.animation.animation.remote.id)  
end  
if text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(MARCOS.."Add:reply:Source:Text"..test, text)  
end  
if msg.content.audio then
Redis:set(MARCOS.."Add:reply:Source:Audio"..test, msg.content.audio.audio.remote.id)  
end
if msg.content.document then
Redis:set(MARCOS.."Add:reply:Source:File"..test, msg.content.document.document.remote.id)  
end
if msg.content.video then
Redis:set(MARCOS.."Add:reply:Source:Video"..test, msg.content.video.video.remote.id)  
end
if msg.content.video_note then
Redis:set(MARCOS.."Add:reply:Source:video_note"..test..msg_chat_id, msg.content.video_note.video.remote.id)  
end
if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(MARCOS.."Add:reply:Source:Photo"..test, idPhoto)  
end
send(msg_chat_id,msg_id,"*تم حفظ ->『 "..test.." 』رد سورس*","md",true)  
return false
end  
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."reply:on"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
Redis:set(MARCOS.."reply:on"..msg.sender_id.user_id..":"..msg_chat_id, "true1")
Redis:set(MARCOS.."Text:Source:Bot"..msg.sender_id.user_id..":"..msg_chat_id, text)
Redis:sadd(MARCOS.."app:reply:Source", text)
send(msg_chat_id,msg_id,[[
* ✧ ارسل الان رد الكلمه ...*
]],"md",true)  
return false
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."reply:of"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
app = {"Add:reply:Source:video_note","Add:reply:Source:Audio","Add:reply:Source:File","Add:reply:Source:Video","Add:reply:Source:Photo","Add:reply:Source:Text","Add:reply:Source:stekr","Add:reply:Source:vico","Add:reply:Source:Gif"}
for k,v in pairs(app) do
Redis:del(MARCOS..''..v..text)
end
Redis:del(MARCOS.."reply:of"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:srem(MARCOS.."app:reply:Source", text)
return send(msg_chat_id,msg_id,"* ✧ تم مسح رد السوس *","md",true)  
end
end
------------------------------------------------------------------------------------------------------------
if Redis:get(MARCOS.."Broadcasting:Groups:Pin" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر' then   
Redis:del(MARCOS.."Broadcasting:Groups:Pin" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return send(msg_chat_id,msg_id, "\n*✧ تم الغاء الاذاعه بالتثبيت*","md",true)  
end 
local list = Redis:smembers(MARCOS.."ChekBotAdd") 
if msg.content.video_note then
for k,v in pairs(list) do 
bot.sendVideoNote(v, 0, msg.content.video_note.video.remote.id)
Redis:set(MARCOS.."PinMsegees:"..v,msg.content.video_note.video.remote.id)
end
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
for k,v in pairs(list) do 
bot.sendPhoto(v, 0, idPhoto,'')
Redis:set(MARCOS.."PinMsegees:"..v,idPhoto)
end
elseif msg.content.sticker then 
for k,v in pairs(list) do 
bot.sendSticker(v, 0, msg.content.sticker.sticker.remote.id)
Redis:set(MARCOS.."PinMsegees:"..v,msg.content.sticker.sticker.remote.id)
end
elseif msg.content.voice_note then 
for k,v in pairs(list) do 
bot.sendVoiceNote(v, 0, msg.content.voice_note.voice.remote.id, '', 'md')
Redis:set(MARCOS.."PinMsegees:"..v,msg.content.voice_note.voice.remote.id)
end
elseif msg.content.video then 
for k,v in pairs(list) do 
bot.sendVideo(v, 0, msg.content.video.video.remote.id, '', "md")
Redis:set(MARCOS.."PinMsegees:"..v,msg.content.video.video.remote.id)
end
elseif msg.content.animation then 
for k,v in pairs(list) do 
bot.sendAnimation(v,0, msg.content.animation.animation.remote.id, '', 'md')
Redis:set(MARCOS.."PinMsegees:"..v,msg.content.animation.animation.remote.id)
end
elseif msg.content.document then
for k,v in pairs(list) do 
bot.sendDocument(v, 0, msg.content.document.document.remote.id, '', 'md')
Redis:set(MARCOS.."PinMsegees:"..v,msg.content.document.document.remote.id)
end
elseif msg.content.audio then
for k,v in pairs(list) do 
bot.sendAudio(v, 0, msg.content.audio.audio.remote.id, '', "md") 
Redis:set(MARCOS.."PinMsegees:"..v,msg.content.audio.audio.remote.id)
end
elseif text then
for k,v in pairs(list) do 
send(v,0,text,"html",true)
Redis:set(MARCOS.."PinMsegees:"..v,text)
end
end
send(msg_chat_id,msg_id,"*✧ تم الاذاعه بالتثبيت الى『 "..#list.." 』جروب*","md",true)      
Redis:del(MARCOS.."Broadcasting:Groups:Pin" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return false
end
------------------------------------------------------------------------------------------------------------
if Redis:get(MARCOS.."Broadcasting:Users" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر' then   
Redis:del(MARCOS.."Broadcasting:Users" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return send(msg_chat_id,msg_id, "\n*✧ تم الغاء الاذاعه خاص*","md",true)  
end 
local list = Redis:smembers(MARCOS..'Num:User:Pv')  
if msg.content.video_note then
for k,v in pairs(list) do 
bot.sendVideoNote(v, 0, msg.content.video_note.video.remote.id)
end
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
for k,v in pairs(list) do 
bot.sendPhoto(v, 0, idPhoto,'')
end
elseif msg.content.sticker then 
for k,v in pairs(list) do 
bot.sendSticker(v, 0, msg.content.sticker.sticker.remote.id)
end
elseif msg.content.voice_note then 
for k,v in pairs(list) do 
bot.sendVoiceNote(v, 0, msg.content.voice_note.voice.remote.id, '', 'md')
end
elseif msg.content.video then 
for k,v in pairs(list) do 
bot.sendVideo(v, 0, msg.content.video.video.remote.id, '', "md")
end
elseif msg.content.animation then 
for k,v in pairs(list) do 
bot.sendAnimation(v,0, msg.content.animation.animation.remote.id, '', 'md')
end
elseif msg.content.document then
for k,v in pairs(list) do 
bot.sendDocument(v, 0, msg.content.document.document.remote.id, '', 'md')
end
elseif msg.content.audio then
for k,v in pairs(list) do 
bot.sendAudio(v, 0, msg.content.audio.audio.remote.id, '', "md") 
end
elseif text then
for k,v in pairs(list) do 
send(v,0,text,"html",true)
end
end
send(msg_chat_id,msg_id,"*✧ تم الاذاعه خاص الى『 "..#list.." 』مشتركين*","md",true)      
Redis:del(MARCOS.."Broadcasting:Users" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return false
end
if text and not Redis:get(MARCOS..'lock_chengname'..msg.chat_id) then   
local UserInfo = bot.getUser(msg.sender_id.user_id)
if Redis:get(MARCOS.."chencher"..msg.sender_id.user_id) then 
if Redis:get(MARCOS.."chencher"..msg.sender_id.user_id) ~= FlterBio(UserInfo.first_name) then 
mahmoudn = '['..(Redis:get(MARCOS.."chencher"..msg.sender_id.user_id) or '')..']'
mahmoudm = '['..FlterBio(UserInfo.first_name)..']'
local mahmoud ={ 
'\n غير اسمك ليه يقميل 🌝',
'\n 😹 اعع غير اسمك '..mahmoudm.. ' \n🙄 رجع على القديم\n '..mahmoudn..'',
'\n ليش غير اسمك يعثل 🌹'..mahmoudn..' ',
}
send(msg.chat_id,msg.id,mahmoud[math.random(#mahmoud)])
end  
end
Redis:set(MARCOS.."chencher"..msg.sender_id.user_id, FlterBio(UserInfo.first_name)) 
end
------------------------------------------------------------------------------------------------------------
if Redis:get(MARCOS.."Broadcasting:Groups" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر' then   
Redis:del(MARCOS.."Broadcasting:Groups" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return send(msg_chat_id,msg_id, "\n*✧ تم الغاء الاذاعه للمجموعات*","md",true)  
end 
local list = Redis:smembers(MARCOS.."ChekBotAdd") 
if msg.content.video_note then
for k,v in pairs(list) do 
bot.sendVideoNote(v, 0, msg.content.video_note.video.remote.id)
end
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
for k,v in pairs(list) do 
bot.sendPhoto(v, 0, idPhoto,'')
end
elseif msg.content.sticker then 
for k,v in pairs(list) do 
bot.sendSticker(v, 0, msg.content.sticker.sticker.remote.id)
end
elseif msg.content.voice_note then 
for k,v in pairs(list) do 
bot.sendVoiceNote(v, 0, msg.content.voice_note.voice.remote.id, '', 'md')
end
elseif msg.content.video then 
for k,v in pairs(list) do 
bot.sendVideo(v, 0, msg.content.video.video.remote.id, '', "md")
end
elseif msg.content.animation then 
for k,v in pairs(list) do 
bot.sendAnimation(v,0, msg.content.animation.animation.remote.id, '', 'md')
end
elseif msg.content.document then
for k,v in pairs(list) do 
bot.sendDocument(v, 0, msg.content.document.document.remote.id, '', 'md')
end
elseif msg.content.audio then
for k,v in pairs(list) do 
bot.sendAudio(v, 0, msg.content.audio.audio.remote.id, '', "md") 
end
elseif text then
for k,v in pairs(list) do 
send(v,0,text,"html",true)
end
end
send(msg_chat_id,msg_id,"*✧ تم الاذاعه الى『 "..#list.." 』جروب*","md",true)      
Redis:del(MARCOS.."Broadcasting:Groups" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return false
end
------------------------------------------------------------------------------------------------------------
if Redis:get(MARCOS.."Broadcasting:Groups:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر' then   
Redis:del(MARCOS.."Broadcasting:Groups:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return send(msg_chat_id,msg_id, "\n*✧ تم الغاء الاذاعه بالتوجيه*","md",true)    
end 
if msg.forward_info then 
local list = Redis:smembers(MARCOS.."ChekBotAdd")   
send(msg_chat_id,msg_id,"*✧ تم الاذاعه بالتوجيه الى『 "..#list.." 』جروب*","md",true)      
for k,v in pairs(list) do  
bot.forwardMessages(v, msg_chat_id, msg_id,0,0,true,false,false)
end   
Redis:del(MARCOS.."Broadcasting:Groups:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
end 
return false
end
------------------------------------------------------------------------------------------------------------
if Redis:get(MARCOS.."Broadcasting:Users:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر' then   
Redis:del(MARCOS.."Broadcasting:Users:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
return send(msg_chat_id,msg_id, "\n*✧ تم الغاء الاذاعه بالتوجيه خاص*","md",true)    
end 
if msg.forward_info then 
local list = Redis:smembers(MARCOS.."Num:User:Pv")   
send(msg_chat_id,msg_id,"*✧ تم التوجيه خاص الى『 "..#list.." 』مشتركين*","md",true) 
for k,v in pairs(list) do  
bot.forwardMessages(v, msg_chat_id, msg_id,0,1,msg.media_album_id,false,true)
end   
Redis:del(MARCOS.."Broadcasting:Users:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id) 
end 
return false
end
if text and Redis:get(MARCOS..'GetTexting:DevMARCOS'..msg_chat_id..':'..msg.sender_id.user_id) then
if text == 'الغاء' or text == 'الغاء الامر' then 
Redis:del(MARCOS..'GetTexting:DevMARCOS'..msg_chat_id..':'..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,' ✧ تم الغاء حفظ كليشة المطور')
end
Redis:set(MARCOS..'Texting:DevMARCOS',text)
Redis:del(MARCOS..'GetTexting:DevMARCOS'..msg_chat_id..':'..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,' ✧ تم حفظ كليشة المطور')
end
if Redis:get(MARCOS.."Redis:Id:Group"..msg.chat_id..""..msg.sender_id.user_id) then 
if text == 'الغاء' then 
send(msg_chat_id,msg_id, "\n ✧ تم الغاء امر تعيين الايدي","md",true)  
Redis:del(MARCOS.."Redis:Id:Group"..msg.chat_id..""..msg.sender_id.user_id) 
return false  
end 
Redis:del(MARCOS.."Redis:Id:Group"..msg.chat_id..""..msg.sender_id.user_id) 
Redis:set(MARCOS.."Set:Id:Group"..msg.chat_id,text:match("(.*)"))
send(msg_chat_id,msg_id,' ✧ تم تعيين الايدي الجديد',"md",true)  
end
if Redis:get(MARCOS.."Redis:Id:Groups"..msg.chat_id..""..msg.sender_id.user_id) then 
if text == 'الغاء' then 
send(msg_chat_id,msg_id, "\n ✧ تم الغاء امر تعيين الايدي","md",true)  
Redis:del(MARCOS.."Redis:Id:Groups"..msg.chat_id..""..msg.sender_id.user_id) 
return false  
end 
Redis:del(MARCOS.."Redis:Id:Groups"..msg.chat_id..""..msg.sender_id.user_id) 
Redis:set(MARCOS.."Set:Id:Groups",text:match("(.*)"))
send(msg_chat_id,msg_id,' ✧ تم تعيين الايدي الجديد عام',"md",true)  
end
if Redis:get(MARCOS.."Change:Name:Bot"..msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر' then   
Redis:del(MARCOS.."Change:Name:Bot"..msg.sender_id.user_id) 
return send(msg_chat_id,msg_id, "\n ✧ تم الغاء امر تغير اسم البوت","md",true)  
end 
Redis:del(MARCOS.."Change:Name:Bot"..msg.sender_id.user_id) 
Redis:set(MARCOS.."Name:Bot",text) 
return send(msg_chat_id,msg_id, "*✧ تم تغير اسم البوت الى -> "..text.." 💖*","md",true)    
end 
if Redis:get(MARCOS.."Change:Start:Bot"..msg.sender_id.user_id) then 
if text == "الغاء" or text == 'الغاء الامر' then   
Redis:del(MARCOS.."Change:Start:Bot"..msg.sender_id.user_id) 
return send(msg_chat_id,msg_id, "\n ✧ تم الغاء امر تغير كليشه start","md",true)  
end 
Redis:del(MARCOS.."Change:Start:Bot"..msg.sender_id.user_id) 
Redis:set(MARCOS.."Start:Bot",text) 
return send(msg_chat_id,msg_id, " ✧ تم تغيير كليشه start - "..text,"md",true)    
end 
if Redis:get(MARCOS.."Game:Smile"..msg.chat_id) then
if text == Redis:get(MARCOS.."Game:Smile"..msg.chat_id) then
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(MARCOS.."Game:Smile"..msg.chat_id)
return send(msg_chat_id,msg_id,"\n ✧ لقد فزت في اللعبه \n ✧ اللعب مره اخره وارسل - سمايل او سمايلات","md",true)  
end
end 
if Redis:get(MARCOS.."Game:Monotonous"..msg.chat_id) then
if text == Redis:get(MARCOS.."Game:Monotonous"..msg.chat_id) then
Redis:del(MARCOS.."Game:Monotonous"..msg.chat_id)
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
return send(msg_chat_id,msg_id,"\n ✧ لقد فزت في اللعبه \n ✧ اللعب مره اخره وارسل - الاسرع او ترتيب","md",true)  
end
end 
if Redis:get(MARCOS.."Game:Riddles"..msg.chat_id) then
if text == Redis:get(MARCOS.."Game:Riddles"..msg.chat_id) then
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(MARCOS.."Game:Riddles"..msg.chat_id)
return send(msg_chat_id,msg_id,"\n ✧ لقد فزت في اللعبه \n ✧ اللعب مره اخره وارسل - حزوره","md",true)  
end
end
if Redis:get(MARCOS.."Game:aoismm"..msg.chat_id) then
if text == Redis:get(MARCOS.."Game:aoismm"..msg.chat_id) then
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(MARCOS.."Game:aoismm"..msg.chat_id)
return send(msg_chat_id,msg_id,"\n ✧ لقد فزت في اللعبه \n ✧ اللعب مره اخره وارسل - العواصم","md",true)  
end
end
if Redis:get(MARCOS.."Game:arkkamm"..msg.chat_id) then
if text == Redis:get(MARCOS.."Game:arkkamm"..msg.chat_id) then
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(MARCOS.."Game:arkkamm"..msg.chat_id)
return send(msg_chat_id,msg_id,"\n ✧ لقد فزت في اللعبه \n ✧ اللعب مره اخره وارسل - ارقام","md",true)  
end
end
if Redis:get(MARCOS.."Game:Meaningof"..msg.chat_id) then
if text == Redis:get(MARCOS.."Game:Meaningof"..msg.chat_id) then
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(MARCOS.."Game:Meaningof"..msg.chat_id)
return send(msg_chat_id,msg_id,"\n ✧ لقد فزت في اللعبه \n ✧ اللعب مره اخره وارسل - معاني","md",true)  
end
end
if Redis:get(MARCOS..msg.chat_id.."answers:photo") then
if text == Redis:get(MARCOS..msg.chat_id.."answers:photo") then
local Num = Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
local ban = bot.getUser(msg.sender_id.user_id)
local Name = '['..ban.first_name..'](tg://user?id='..ban.id..')' or 'لا يوجد اسم'
local Jabwa = '* ✧ مبروك -> *'..Name
Redis:del(MARCOS..msg.chat_id.."answers:photo")
return send(msg.chat_id,msg.id,"\n "..Jabwa.." \n*✧ لقد فزت في اللعبه\n✧ تم إضافة "..Num.." في نقاطك\n✧ استمر باللعب مره آخرى*","md",true)  
end
end 
if Redis:get(MARCOS.."Game:Countrygof"..msg.chat_id) then
if text == Redis:get(MARCOS.."Game:Countrygof"..msg.chat_id) then
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(MARCOS.."Game:Countrygof"..msg.chat_id)
return send(msg_chat_id,msg_id,"\n ✧  لقد فزت في اللعبه \n ✧  العب مره اخره وارسل - اعلام","md",true)  
end
end
if Redis:get(MARCOS.."Game:Reflection"..msg.chat_id) then
if text == Redis:get(MARCOS.."Game:Reflection"..msg.chat_id) then
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(MARCOS.."Game:Reflection"..msg.chat_id)
return send(msg_chat_id,msg_id,"\n ✧ لقد فزت في اللعبه \n ✧ اللعب مره اخره وارسل - العكس","md",true)  
end
end
if Redis:get(MARCOS.."Game:Estimate"..msg.chat_id..msg.sender_id.user_id) then  
if text and text:match("^(%d+)$") then
local NUM = text:match("^(%d+)$")
if tonumber(NUM) > 20 then
return send(msg_chat_id,msg_id," ✧ عذرآ لا يمكنك تخمين عدد اكبر من ال { 20 } خمن رقم ما بين ال{ 1 و 20 }\n","md",true)  
end 
local GETNUM = Redis:get(MARCOS.."Game:Estimate"..msg.chat_id..msg.sender_id.user_id)
if tonumber(NUM) == tonumber(GETNUM) then
Redis:del(MARCOS.."SADD:NUM"..msg.chat_id..msg.sender_id.user_id)
Redis:del(MARCOS.."Game:Estimate"..msg.chat_id..msg.sender_id.user_id)
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id,5)  
return send(msg_chat_id,msg_id," ✧ مبروك فزت ويانه وخمنت الرقم الصحيح\n🚸︙تم اضافة { 5 } من النقاط \n","md",true)  
elseif tonumber(NUM) ~= tonumber(GETNUM) then
Redis:incrby(MARCOS.."SADD:NUM"..msg.chat_id..msg.sender_id.user_id,1)
if tonumber(Redis:get(MARCOS.."SADD:NUM"..msg.chat_id..msg.sender_id.user_id)) >= 3 then
Redis:del(MARCOS.."SADD:NUM"..msg.chat_id..msg.sender_id.user_id)
Redis:del(MARCOS.."Game:Estimate"..msg.chat_id..msg.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ اوبس لقد خسرت في اللعبه \n ✧ حظآ اوفر في المره القادمه \n ✧ كان الرقم الذي تم تخمينه { "..GETNUM.." }","md",true)  
else
return send(msg_chat_id,msg_id," ✧ اوبس تخمينك غلط \n ✧ ارسل رقم تخمنه مره اخرى ","md",true)  
end
end
end
end
if Redis:get(MARCOS.."Game:Difference"..msg.chat_id) then
if text == Redis:get(MARCOS.."Game:Difference"..msg.chat_id) then 
Redis:del(MARCOS.."Game:Difference"..msg.chat_id)
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
return send(msg_chat_id,msg_id,"\n ✧ لقد فزت في اللعبه \n ✧ اللعب مره اخره وارسل - المختلف","md",true)  
end
end
if Redis:get(MARCOS.."Game:Example"..msg.chat_id) then
if text == Redis:get(MARCOS.."Game:Example"..msg.chat_id) then 
Redis:del(MARCOS.."Game:Example"..msg.chat_id)
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
return send(msg_chat_id,msg_id,"\n ✧ لقد فزت في اللعبه \n ✧ اللعب مره اخره وارسل - امثله","md",true)  
end
end
if Redis:get(MARCOS.."Set_fkk"..msg.chat_id) then
if text == Redis:get(MARCOS.."Set_fkk"..msg.chat_id) then
Redis:del(MARCOS.."Set_fkk"..msg.chat_id)
Redis:incrby(MARCOS..":"..msg.chat_id..":"..msg.sender_id.user_id..":game", 1)  
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
gampoin = ballancee + 1
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , gampoin)
local Num = Redis:get(MARCOS..":"..msg.chat_id..":"..msg.sender_id.user_id..":game") or 0
return bot.sendText(msg.chat_id,msg.id,"\n*✧ مبروك كسبت بلعبة \n✧ تم اضافة لك نقطة\n✧ نقاطك الان ->* "..Num.." \n✦","md",true)
end
end 
if Redis:get(MARCOS.."Set_trkib"..msg.chat_id) then
if text == Redis:get(MARCOS.."Set_trkib"..msg.chat_id) then
Redis:del(MARCOS.."Set_trkib"..msg.chat_id)
Redis:incrby(MARCOS..":"..msg.chat_id..":"..msg.sender_id.user_id..":game", 1)  
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
gampoin = ballancee + 1
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , gampoin)
local Num = Redis:get(MARCOS..":"..msg.chat_id..":"..msg.sender_id.user_id..":game") or 0
return bot.sendText(msg.chat_id,msg.id,"\n*✧ مبروك كسبت بلعبة \n✧ تم اضافة لك نقطة\n✧ نقاطك الان ->* "..Num.."\n ✦","md",true)
end
end
if Redis:get(MARCOS.."Start_Ahkamm"..msg.chat_id) then
if text == "انا" then
if Redis:sismember(MARCOS..'List_Ahkamm'..msg.chat_id,msg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id,'*⇜ اسمك موجود بالقائمة*',"md",true)
end
Redis:sadd(MARCOS..'List_Ahkamm'..msg.chat_id,msg.sender_id.user_id)
Redis:setex(MARCOS.."Witting_StartGamehh"..msg.chat_id,1400,true)
return bot.sendText(msg.chat_id,msg.id,'*✧ تم ضفتك للعبة \n✧ للانتهاء يرسل نعم اللي بدء اللعبة *',"md",true)
end
end
------------------------------------------------------------------------------------------------------------
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."gamebot:Set:Manager:rd"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
Redis:set(MARCOS.."gamebot:Set:Manager:rd"..msg.sender_id.user_id..":"..msg.chat_id,"true1uu")
Redis:sadd(MARCOS.."gamebot:List:Manager", text)
return send(msg.chat_id,msg.id,'\nتم حفظ السؤال بنجاح')
end
end

if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."gamebot:Set:Manager:rdd"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
Redis:set(MARCOS.."gamebot:Set:Manager:rdd"..msg.sender_id.user_id..":"..msg.chat_id,"true1uu")
Redis:srem(MARCOS.."gamebot:List:Manager", text)
return send(msg.chat_id,msg.id,'\nتم مسح السؤال بنجاح')
end
end
if msg.content.audio then  
if Redis:get(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'start' then
Redis:set(MARCOS.."audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,msg.content.audio.audio.remote.id)  
Redis:sadd(MARCOS.."audio:Games:Bot",msg.content.audio.audio.remote.id)  
Redis:set(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'started')
return send(msg.chat_id, msg.id,' ✧ ارسل اسم الموسيقى الان ...')
end   
end

if Redis:get(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'started' then
Redis:del(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
local Id_audio = Redis:get(MARCOS.."audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
Redis:set(MARCOS..'Text:Games:audio'..Id_audio,text)
Redis:del(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
return send(msg.chat_id, msg.id,' ✧ تم حفظ الصوت ')
end

if Redis:get(MARCOS..'Games:Set:Answer'..msg.chat_id) then
if text == ""..(Redis:get(MARCOS..'Games:Set:Answer'..msg.chat_id) or '66765$47').."" then 
Redis:del(MARCOS.."Games:Set:Answer"..msg.chat_id)
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id,5)  
Redis:del(MARCOS.."Games:Set:Answer"..msg.chat_id)
return send(msg.chat_id,msg.id,'* ✧ الف مبروك اجابتك صحيحه تم اضافه لك 5 نقاط*')
end
end
if Redis:get(MARCOS.."All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'startdel' then
if not Redis:sismember(MARCOS.."All:text:Games:Bot",text) then
send(msg_chat_id,msg_id,' ✧ لا يوجد صوتيه بهذا الاسم في العامه')
Redis:del(MARCOS.."All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
return false
end
Redis:del(MARCOS.."All:audio:Games"..text)
Redis:srem(MARCOS.."All:text:Games:Bot",text)  
Redis:del(MARCOS.."All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
send(msg_chat_id,msg_id,' ✧ تم مسح الصوتيه بنجاح')
return false
end

if Redis:get(MARCOS.."All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'start' then
Redis:set(MARCOS..'All:Text:Games:audio'..msg.chat_id,text)
Redis:sadd(MARCOS.."All:text:Games:Bot",text)  
Redis:set(MARCOS.."All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'started')
send(msg_chat_id,msg_id,' ✧ الان ارسل الصوتيه ليتم حفظها باسم  -> '..text)
return false
end
if Redis:get(MARCOS.."All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'started' then
if msg.content.audio then  
local nameaudio = Redis:get(MARCOS..'All:Text:Games:audio'..msg.chat_id)
Redis:set(MARCOS.."All:audio:Games"..nameaudio,msg.content.audio.audio.remote.id)  
Redis:del(MARCOS.."All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
send(msg_chat_id,msg_id,' ✧ تم حفظ الصوتيه باسم -> '..nameaudio)
return false
end   
end
if text and not Redis:get(MARCOS..'lock_geamsAudio'..msg.chat_id) then
local nameaudio = Redis:get(MARCOS.."All:audio:Games"..text)
if nameaudio then
bot.sendAudio(msg_chat_id, msg.id,nameaudio , '', "md") 
end
end

if Redis:get(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'startdel' then
if not Redis:sismember(MARCOS.."text:Games:Bot"..msg.chat_id,text) then
send(msg_chat_id,msg_id,' ✧ لا يوجد صوتيه بهذا الاسم في المجموعه')
Redis:del(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
return false
end
Redis:del(MARCOS.."audio:Games"..msg.chat_id..text)
Redis:srem(MARCOS.."text:Games:Bot"..msg.chat_id,text)  
Redis:del(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
send(msg_chat_id,msg_id,' ✧ تم مسح الصوتيه بنجاح')
return false
end


if Redis:get(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id) == 'started' then
if msg.content.audio then  
local nameaudio = Redis:get(MARCOS..'Text:Games:audio'..msg.chat_id)
Redis:set(MARCOS.."audio:Games"..msg.chat_id..nameaudio,msg.content.audio.audio.remote.id)  
Redis:del(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id)
send(msg_chat_id,msg_id,' ✧ تم حفظ الصوتيه باسم -> '..nameaudio)
return false
end   
end
if text and not Redis:get(MARCOS..'lock_geamsAudio1'..msg.chat_id) then
local nameaudio = Redis:get(MARCOS.."audio:Games"..msg.chat_id..text)
if nameaudio then
bot.sendAudio(msg_chat_id, msg.id,nameaudio , '', "md") 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "truedel" then
Redis:set(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"truefguigf1")
Redis:del(MARCOS.."gamebot:newqus"..msg.chat_id,text)
Redis:srem(MARCOS.."gamebot:new1", text)
return send(msg_chat_id,msg_id, '\nتم مسح السؤال بنجاح') 
end
end

if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
Redis:set(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true1")
Redis:set(MARCOS.."gamebot:newqus"..msg.chat_id,text)
Redis:sadd(MARCOS.."gamebot:new1", text)
return send(msg_chat_id,msg_id, '\nتم حفظ السؤال بنجاح \n ارسل الجواب الاول') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true1" then
local quschen = Redis:get(MARCOS.."gamebot:newqus"..msg.chat_id)
Redis:set(MARCOS.."gamebot:newqus:as1"..quschen,text)
Redis:set(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true2")
return send(msg_chat_id,msg_id, ' \n ارسل الجواب الثاني') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true2" then
local quschen = Redis:get(MARCOS.."gamebot:newqus"..msg.chat_id)
Redis:set(MARCOS.."gamebot:newqus:as2"..quschen,text)
Redis:set(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true3")
return send(msg_chat_id,msg_id, '\n ارسل الجواب الثالث') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true3" then
local quschen = Redis:get(MARCOS.."gamebot:newqus"..msg.chat_id)
Redis:set(MARCOS.."gamebot:newqus:as3"..quschen,text)
Redis:set(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true4")
return send(msg_chat_id,msg_id, '\n ارسل الجواب الرابع') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true4" then
local quschen = Redis:get(MARCOS.."gamebot:newqus"..msg.chat_id)
Redis:set(MARCOS.."gamebot:newqus:as0"..quschen,text)
Redis:set(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true44")
return send(msg_chat_id,msg_id, '\nتم حفظ الاجوبه \n ارسل الجواب الصحيح') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true44" then
local quschen = Redis:get(MARCOS.."gamebot:newqus"..msg.chat_id)
Redis:set(MARCOS.."gamebot:newqus:as4"..quschen,text)
Redis:set(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true186")
return send(msg_chat_id,msg_id, '\nتم حفظ الجواب الصحيح') 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "truedel" then
send(msg_chat_id,msg_id, '\nتم مسح الغز بنجاح')
Redis:set(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"truefguigf1")
Redis:del(MARCOS.."lkz:gamebot:newqus"..msg.chat_id,text)
Redis:srem(MARCOS.."lkz:gamebot:new1", text)
return false 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
send(msg_chat_id,msg_id, '\nتم حفظ اللغز بنجاح \n ارسل الجواب الاول')
Redis:set(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true1")
Redis:set(MARCOS.."lkz:gamebot:newqus"..msg.chat_id,text)
Redis:sadd(MARCOS.."lkz:gamebot:new1", text)
return false 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true1" then
send(msg_chat_id,msg_id, ' \n ارسل الجواب الثاني')
local quschen = Redis:get(MARCOS.."lkz:gamebot:newqus"..msg.chat_id)
Redis:set(MARCOS.."lkz:gamebot:newqus:as1"..quschen,text)
Redis:set(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true2")
return false 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true2" then
send(msg_chat_id,msg_id, '\n ارسل الجواب الثالث')
local quschen = Redis:get(MARCOS.."lkz:gamebot:newqus"..msg.chat_id)
Redis:set(MARCOS.."lkz:gamebot:newqus:as2"..quschen,text)
Redis:set(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true3")
return false 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true3" then
send(msg_chat_id,msg_id, ' \n ارسل الجواب الصحيح')
local quschen = Redis:get(MARCOS.."lkz:gamebot:newqus"..msg.chat_id)
Redis:set(MARCOS.."lkz:gamebot:newqus:as3"..quschen,text)
Redis:set(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true44")
return false 
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id) == "true44" then
send(msg_chat_id,msg_id, '\nتم حفظ الجواب الصحيح')
local quschen = Redis:get(MARCOS.."lkz:gamebot:newqus"..msg.chat_id)
Redis:set(MARCOS.."lkz:gamebot:newqus:as4"..quschen,text)
Redis:set(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,"true186")
return false 
end
end
if Redis:get(MARCOS..":"..msg.sender_id.user_id..":lov_Bots"..msg.chat_id) == "sendlove" then
num = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","😁 98","😀 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnum = num[math.random(#num)]
local tttttt = '✧ اليك النتائج الخـاصة ↑↓\n\n✧ نسبة الحب بيـن > '..text..' '..sendnum..'%'
send(msg_chat_id,msg_id,tttttt) 
Redis:del(MARCOS..":"..msg.sender_id.user_id..":lov_Bots"..msg.chat_id)
end
if Redis:get(MARCOS..":"..msg.sender_id.user_id..":lov_Bottts"..msg.chat_id) == "sendlove" then
num = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","😁 98","😀 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnum = num[math.random(#num)]
local tttttt = '✧ اليك النتائج الخـاصة ↑↓\n\n✧ نسبة الغباء > '..text..' '..sendnum..'%'
send(msg_chat_id,msg_id,tttttt) 
Redis:del(MARCOS..":"..msg.sender_id.user_id..":lov_Bottts"..msg.chat_id)
end
if Redis:get(MARCOS..":"..msg.sender_id.user_id..":lov_Botttuus"..msg.chat_id) == "sendlove" then
num = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","😁 98","😀 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnum = num[math.random(#num)]
local tttttt = '✧ اليك النتائج الخـاصة ↑↓\n\n✧ نسبة الذكاء > '..text..' '..sendnum..'%'
send(msg_chat_id,msg_id,tttttt) 
Redis:del(MARCOS..":"..msg.sender_id.user_id..":lov_Botttuus"..msg.chat_id)
end
if text and Redis:get(MARCOS..":"..msg.sender_id.user_id..":krh_Bots"..msg.chat_id) == "sendkrhe" then
num = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","😁 98","😀 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnum = num[math.random(#num)]
local tttttt = '✧ اليك النتائج الخـاصة ↑↓\n\n✧ نسبة الكرة > '..text..' '..sendnum..'%'
send(msg_chat_id,msg_id,tttttt) 
Redis:del(MARCOS..":"..msg.sender_id.user_id..":krh_Bots"..msg.chat_id)
end
if text and text ~="نسبه الرجوله" and Redis:get(MARCOS..":"..msg.sender_id.user_id..":rjo_Bots"..msg.chat_id) == "sendrjoe" then
numj = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","😁 98","🥰 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnuj = numj[math.random(#numj)]
local tttttt = '✧ اليك النتائج الخـاصة ↑↓\n\n✧ نسبة الرجوله لـ > '..text..' '..sendnum..'%'
send(msg_chat_id,msg_id,tttttt) 
Redis:del(MARCOS..":"..msg.sender_id.user_id..":rjo_Bots"..msg.chat_id)
end
if text and text ~="نسبه الانوثه" and Redis:get(MARCOS..":"..msg.sender_id.user_id..":ano_Bots"..msg.chat_id) == "sendanoe" then
numj = {"😂 10","🤤 20","😢 30","😔 35","😒 75","🤩 34","😗 66","🤐 82","😪 23","😫 19","😛 55","😜 80","😲 63","😓 32","🙂 27","😎 89","😋 99","?? 98","😀 79","🤣 100","😣 8","🙄 3","😕 6","🤯 0",};
sendnuj = numj[math.random(#numj)]
local tttttt = '✧ اليك النتائج الخـاصة ↑↓\n\n✧  نسبه الانوثة لـ > '..text..' '..sendnum..'%'
send(msg_chat_id,msg_id,tttttt) 
Redis:del(MARCOS..":"..msg.sender_id.user_id..":ano_Bots"..msg.chat_id)
end

if text  == "نسبه المثليه"  then
local texting = {"7%","100%"," 80%","70%","0%","50%","10%","99%","10000%"}
return send(msg.chat_id, msg.id, ''..texting[math.random(#texting)]..'')
end

if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
send(msg_chat_id,msg_id, '\n ✧ ارسل الجواب الاول للرد الان ')
Redis:set(MARCOS.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id, "true1")
Redis:set(MARCOS.."botss:merox:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id, text)
Redis:sadd(MARCOS.."botss:merox:List:Rd:Sudo"..msg.chat_id, text)
return false end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."botss:merox:Set:On"..msg.sender_id.user_id..":"..msg.chat_id) == "true" then
send(msg_chat_id,msg_id,"\n ✧ تم مسح الرد من الردود المتعدده")
Redis:del(MARCOS..'botss:merox:Add:Rd:Sudo:Text'..text..msg.chat_id)
Redis:del(MARCOS..'botss:merox:Add:Rd:Sudo:Text1'..text..msg.chat_id)
Redis:del(MARCOS..'botss:merox:Add:Rd:Sudo:Text2'..text..msg.chat_id)
Redis:del(MARCOS.."botss:merox:Set:On"..msg.sender_id.user_id..":"..msg.chat_id)
Redis:srem(MARCOS.."botss:merox:List:Rd:Sudo"..msg.chat_id, text)
return false
end
end

if text or msg.content.video or msg.content.animation or msg.content.photo then
local test = Redis:get(MARCOS.."botss:merox:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(MARCOS.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "true1" then
Redis:set(MARCOS.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd1')

if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:photo"..test..msg.chat_id, idPhoto)  
elseif msg.content.animation then
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:gif"..test..msg.chat_id, msg.content.animation.animation.remote.id)  
elseif msg.content.video then 
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:video"..test..msg.chat_id, msg.content.video.video.remote.id)  
elseif text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:Text"..test..msg.chat_id, text)  
end  
send(msg_chat_id,msg_id,"\n ✧ تم الحفظ ارسل الجواب الثاني")
return false  
end  
end
if text or msg.content.video or msg.content.animation or msg.content.photo then
local test = Redis:get(MARCOS.."botss:merox:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(MARCOS.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "rd1" then
Redis:set(MARCOS.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd2')
if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:photo1"..test..msg.chat_id, idPhoto)  
elseif msg.content.animation then
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:gif1"..test..msg.chat_id, msg.content.animation.animation.remote.id)  
elseif msg.content.video then 
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:video1"..test..msg.chat_id, msg.content.video.video.remote.id)  
elseif text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:Text1"..test..msg.chat_id, text)  
end  
send(msg_chat_id,msg_id,"\n ✧ تم الحفظ ارسل الجواب الثالث")
return false  
end  
end
if text or msg.content.video or msg.content.animation or msg.content.photo then
local test = Redis:get(MARCOS.."botss:merox:Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg.chat_id)
if Redis:get(MARCOS.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id) == "rd2" then
Redis:set(MARCOS.."botss:merox:Set:Rd"..msg.sender_id.user_id..":"..msg.chat_id,'rd3')
if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:photo2"..test..msg.chat_id, idPhoto)  
elseif msg.content.animation then
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:gif2"..test..msg.chat_id, msg.content.animation.animation.remote.id)  
elseif msg.content.video then 
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:video2"..test..msg.chat_id, msg.content.video.video.remote.id)  
elseif text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(MARCOS.."botss:merox:Add:Rd:Sudo:Text2"..test..msg.chat_id, text)  
end  
send(msg_chat_id,msg_id,"\n ✧ تم حفظ الرد المتعدد بنجاح ꪤ")
return false  
end  
end
if text then
local photo = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:photo"..text..msg.chat_id)   
local photo1 = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:photo1"..text..msg.chat_id)   
local photo2 = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:photo2"..text..msg.chat_id)   
if photo or photo1 or photo2 then 
local texting = {photo,photo1,photo2}
if texting[1] ~= nil or texting[2] ~= nil or texting[3] ~= nil then
bot.sendPhoto(msg_chat_id,msg_id, texting[math.random(#texting)],'')
end
end
local gif = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:gif"..text..msg.chat_id)   
local gif1 = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:gif1"..text..msg.chat_id)   
local gif2 = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:gif2"..text..msg.chat_id)   
if gif or gif1 or gif2 then 
local texting = {gif,gif1,gif2}
if texting[1] ~= nil or texting[2] ~= nil or texting[3] ~= nil then
bot.sendAnimation(msg_chat_id,msg_id, texting[math.random(#texting)], '', 'md')
end
end
local video = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:video"..text..msg.chat_id)   
local video1 = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:video1"..text..msg.chat_id)   
local video2 = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:video2"..text..msg.chat_id)   
if video or video1 or video2 then 
local texting = {video,video1,video2}
if texting[1] ~= nil or texting[2] ~= nil or texting[3] ~= nil then
bot.sendVideo(msg_chat_id,msg_id, texting[math.random(#texting)], '', "md")
end
end
local Text = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:Text"..text..msg.chat_id)   
local Text1 = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:Text1"..text..msg.chat_id)   
local Text2 = Redis:get(MARCOS.."botss:merox:Add:Rd:Sudo:Text2"..text..msg.chat_id)   
if Text or Text1 or Text2 then 
local texting = {Text,Text1,Text2}
send(msg_chat_id,msg_id,texting[math.random(#texting)])
end
end
if text == "مسح قائمه المنع عام" then   
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'All:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'All:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'All:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'All:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."All:List:Filter"..msg_chat_id)  
if #list == 0 then  
return send(msg_chat_id,msg_id,"* ✧ لا يوجد كلمات ممنوعه هنا *","md",true)   
end  
for k,v in pairs(list) do  
v = v:gsub('photo:',"") 
v = v:gsub('sticker:',"") 
v = v:gsub('animation:',"") 
v = v:gsub('text:',"") 
Redis:del(MARCOS.."All:Filter:Group:"..v)  
Redis:srem(MARCOS.."All:List:Filter",v)  
end  
return send(msg_chat_id,msg_id,"* ✧ تم مسح ("..#list..") كلمات ممنوعه *","md",true)   
end
if text == "قائمه المنع عام" then   
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'All:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'All:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'All:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'All:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."All:List:Filter")  
if #list == 0 then  
return send(msg_chat_id,msg_id,"* ✧ لا يوجد كلمات ممنوعه هنا *","md",true)   
end  
Filter = '\n* ✧ قائمه المنع \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k,v in pairs(list) do  
print(v)
if v:match('photo:(.*)') then
ver = 'صوره'
elseif v:match('animation:(.*)') then
ver = 'متحركه'
elseif v:match('sticker:(.*)') then
ver = 'ملصق'
elseif v:match('text:(.*)') then
ver = v:gsub('text:',"") 
end
v = v:gsub('photo:',"") 
v = v:gsub('sticker:',"") 
v = v:gsub('animation:',"") 
v = v:gsub('text:',"") 
local Text_Filter = Redis:get(MARCOS.."All:Filter:Group:"..v)   
Filter = Filter.."*"..k.."-> "..ver.." ->『 "..Text_Filter.." 』*\n"    
end  
send(msg_chat_id,msg_id,Filter,"md",true)  
end  
if text == "منع عام" then       
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'All:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'All:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'All:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'All:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS..'All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'true')
return send(msg_chat_id,msg_id,'\n* ✧ ارسل الان { ملصق ,متحركه ,صوره ,رساله } *',"md",true)  
end    
if text == "الغاء منع عام" then    
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'All:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'All:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'All:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'All:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS..'All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'DelFilterq')
return send(msg_chat_id,msg_id,'\n* ✧ ارسل الان { ملصق ,متحركه ,صوره ,رساله } *',"md",true)  
end
if (Redis:get(MARCOS..'All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'true') then
if text or msg.content.photo or msg.content.animation or msg.content.sticker then
if msg.content.photo then
Filters = 'صوره'
Redis:sadd(MARCOS.."All:List:Filter",'photo:'..msg.content.photo.sizes[1].photo.id)  
Redis:set(MARCOS.."All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.photo.sizes[1].photo.id)  
elseif msg.content.animation then
Filters = 'متحركه'
Redis:sadd(MARCOS.."All:List:Filter",'animation:'..msg.content.animation.animation.id)  
Redis:set(MARCOS.."All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.animation.animation.id)  
elseif msg.content.sticker then
Filters = 'ملصق'
Redis:sadd(MARCOS.."All:List:Filter",'sticker:'..msg.content.sticker.sticker.id)  
Redis:set(MARCOS.."All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, msg.content.sticker.sticker.id)  
elseif text then
Redis:set(MARCOS.."All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id, text)  
Redis:sadd(MARCOS.."All:List:Filter",'text:'..text)  
Filters = 'نص'
end
Redis:set(MARCOS..'All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'true1')
return send(msg_chat_id,msg_id,"\n ✧ ارسل تحذير ( "..Filters.." ) عند ارساله","md",true)  
end
end
if text and (Redis:get(MARCOS..'All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id) == 'true1') then
local Text_Filter = Redis:get(MARCOS.."All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id)  
if Text_Filter then   
Redis:set(MARCOS.."All:Filter:Group:"..Text_Filter,text)  
end  
Redis:del(MARCOS.."All:Filter:Text"..msg.sender_id.user_id..':'..msg_chat_id)  
Redis:del(MARCOS..'All:FilterText'..msg_chat_id..':'..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,"\n ✧ تم اضافه رد التحذير","md",true)  
end

if text or msg.content.photo or msg.content.animation or msg.content.sticker then
if msg.content.photo then
DelFilters = msg.content.photo.sizes[1].photo.id
statusfilter = 'الصوره'
elseif msg.content.animation then
DelFilters = msg.content.animation.animation.id
statusfilter = 'المتحركه'
elseif msg.content.sticker then
DelFilters = msg.content.sticker.sticker.id
statusfilter = 'الملصق'
elseif text then
DelFilters = text
statusfilter = 'الرساله'
end
local ReplyFilters = Redis:get(MARCOS.."All:Filter:Group:"..DelFilters)
if ReplyFilters and not msg.Special then
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
return send(msg_chat_id,msg_id,"* ✧ لقد تم منع هذه ( "..statusfilter.." ) هنا*\n ✧ "..ReplyFilters,"md",true)   
end
end
------------------------------------------------------------------------------------------------------------
if text then
local NewCmmd = Redis:get(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..text)
if NewCmmd then
text = (NewCmmd or text)
end
end
if text == 'رفع النسخه الاحتياطيه' and msg.reply_to_message_id ~= 0 or text == 'رفع النسخه العامه' and msg.reply_to_message_id ~= 0 then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if Message_Reply.content.document then
local File_Id = Message_Reply.content.document.document.remote.id
local Name_File = Message_Reply.content.document.file_name

local File = json:decode(https.request('https://api.telegram.org/bot'..Token..'/getfile?file_id='..File_Id)) 
local download_ = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path,''..Name_File) 
local Get_Info = io.open(download_,"r"):read('*a')
local FilesJson = JSON.decode(Get_Info)
if tonumber(MARCOS) ~= tonumber(FilesJson.BotId) then
return send(msg_chat_id,msg_id,' ✧ عذرا هذا الملف غير مطابق مع البوت يرجى جلب النسخه الحقيقيه')
end -- end botid
send(msg_chat_id,msg_id,' ✧ جاري استرجاع المشتركين والمجموعهات ...')
Y = 0
for k,v in pairs(FilesJson.UsersBot) do
Y = Y + 1
Redis:sadd(MARCOS..'Num:User:Pv',v)  
end
X = 0
for GroupId,ListGroup in pairs(FilesJson.GroupsBot) do
X = X + 1
Redis:sadd(MARCOS.."ChekBotAdd",GroupId) 
if ListGroup.President then
for k,v in pairs(ListGroup.President) do
Redis:sadd(MARCOS.."SuperCreator:Group"..GroupId,v)
end
end
if ListGroup.Constructor then
for k,v in pairs(ListGroup.Constructor) do
Redis:sadd(MARCOS.."Creator:Group"..GroupId,v)
end
end
if ListGroup.Manager then
for k,v in pairs(ListGroup.Manager) do
Redis:sadd(MARCOS.."Manger:Group"..GroupId,v)
end
end
if ListGroup.Admin then
for k,v in pairs(ListGroup.Admin) do
Redis:sadd(MARCOS.."Admin:Group"..GroupId,v)
end
end
if ListGroup.Vips then
for k,v in pairs(ListGroup.Vips) do
Redis:sadd(MARCOS.."Special:Group"..GroupId,v)
end
end 
end
return send(msg_chat_id,msg_id,' ✧ تم استرجاع『 '..X..' 』جروب \n ✧ واسترجاع『 '..Y..' 』مشترك في البوت')
end
end
if text == 'رفع نسخه ماركوس' and msg.reply_to_message_id ~= 0 then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if Message_Reply.content.document then
local File_Id = Message_Reply.content.document.document.remote.id
local Name_File = Message_Reply.content.document.file_name
if tonumber(Name_File:match('(%d+)')) ~= tonumber(MARCOS) then 
return send(msg_chat_id,msg_id,' ✧ عذرا هذا الملف غير مطابق مع البوت يرجى جلب النسخه الحقيقيه')
end -- end Namefile
local File = json:decode(https.request('https://api.telegram.org/bot'..Token..'/getfile?file_id='..File_Id)) 
local download_ = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path,''..Name_File) 
local Get_Info = io.open(download_,"r"):read('*a')
local All_Groups = JSON.decode(Get_Info)
if All_Groups.GP_BOT then
for idg,v in pairs(All_Groups.GP_BOT) do
Redis:sadd(MARCOS.."ChekBotAdd",idg) 
if v.MNSH then
for k,idmsh in pairs(v.MNSH) do
Redis:sadd(MARCOS.."Creator:Group"..idg,idmsh)
end;end
if v.MDER then
for k,idmder in pairs(v.MDER) do
Redis:sadd(MARCOS.."Manger:Group"..idg,idmder)  
end;end
if v.MOD then
for k,idmod in pairs(v.MOD) do
Redis:sadd(MARCOS.."Admin:Group"..idg,idmod)
end;end
if v.ASAS then
for k,idASAS in pairs(v.ASAS) do
Redis:sadd(MARCOS.."SuperCreator:Group"..idg,idASAS)
end;end
end
return send(msg_chat_id,msg_id,' ✧ تم استرجاع المجموعات من نسخه ماركوس')
else
return send(msg_chat_id,msg_id,' ✧ الملف لا يدعم هذا البوت')
end
end
end
if text then
if text:match("^حظر من السيرفر (%d+)$") then
if tonumber(msg.sender_id.user_id) == tonumber(689087834) then
local iduser = tonumber(text:match("^حظر من السيرفر (%d+)$"))
Redis:sadd("banserver",iduser)
send(msg.chat_id,msg.id,"✧ تم حظر العضو من السيرفر")
else
send(msg.chat_id,msg.id,"✧ عذرآ هذا الامر للمطورين فقط")
end
end
end
if text then
if text:match("^الغاء حظر من السيرفر (%d+)$") then
if tonumber(msg.sender_id.user_id) == tonumber(689087834) then
local iduser = tonumber(text:match("^الغاء حظر من السيرفر (%d+)$"))
Redis:srem("banserver",iduser)
send(msg.chat_id,msg.id,"✧ تم الغاء حظر العضو من السيرفر")
else
send(msg.chat_id,msg.id,"✧ عذرآ هذا الامر للمطورين فقط")
end
end
end
if text == "المحظورين من السيرفر" then
if tonumber(msg.sender_id.user_id) == tonumber(689087834) then
local list = Redis:smembers("banserver")
if #list == 0 then
return send(msg.chat_id,msg.id,"✧ لا يوجد احد محظور ")
end
local txx = "المحظورين من السيرفر \n"
for k,v in pairs(list) do 
xx = bot.getUser(v)
if xx.username then 
users = "@"..xx.username
else
users = v
end
txx = txx..' k -> '..users..'\n'
end
send(msg.chat_id,msg.id,txx)
else
send(msg.chat_id,msg.id,"✧ عذرآ هذا الامر للمطورين فقط")
end
end
---------------------- Dev JABWA ----------------------
if text == 'انشاء حساب بنكي' or text == 'انشاء حساب البنكي' or text =='انشاء الحساب بنكي' or text =='انشاء الحساب البنكي' or text == "انشاء حساب" or text == "فتح حساب بنكي" then
cobnum = tonumber(Redis:get(MARCOS.."bandid"..msg.sender_id.user_id))
if cobnum == msg.sender_id.user_id then
return bot.sendText(msg.chat_id,msg.id, "*✧ حسابك محظور من لعبة البنك*","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "*✧ لديك حساب بنكي مسبقاً\n\n ✧ لعرض معلومات حسابك اكتب\n ->* `حسابي`","md",true)
end
local t = '*✧ عشان تسوي حساب لازم تختار نوع البطاقة*\n\n[𝑮𝑨𝑴𝑬 𝑩𝑨𝑵𝑲 𝑺𝑶𝑼𝑹𝑪𝑬 𝑺𝑨𝑰𝑫𝑰](t.me/ZAXY00 )'
local m = "https://t.me/S_a_i_d_i/3233" 
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'الاهلي', callback_data=msg.sender_id.user_id..'/master'},{text = 'الرافدين', callback_data=msg.sender_id.user_id..'/visaa'},{text = 'ماركوس', callback_data=msg.sender_id.user_id..'/express'},
},
{
{text='• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url='t.me/'..chsource..''},
}
}
local rep = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id="..msg_chat_id.."&caption="..URL.escape(t).."&photo="..m.."&reply_to_message_id="..rep.."&parse_mode=Markdown&reply_markup="..JSON.encode(keyboard))
end
if text == 'مسح حساب بنكي' or text == 'مسح حساب البنكي' or text =='مسح الحساب بنكي' or text =='مسح الحساب البنكي' or text == "مسح حسابي البنكي" or text == "مسح حسابي بنكي" or text == "مسح حسابي" then
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:get(MARCOS.."in_company:name:"..msg.sender_id.user_id) then
local Cname = Redis:get(MARCOS.."in_company:name:"..msg.sender_id.user_id)
for k,v in pairs(Redis:smembers(MARCOS.."company:mem:"..Cname)) do
Redis:srem(MARCOS.."in_company:", v)
end
Redis:del(MARCOS.."company:mem:"..Cname)
Redis:srem(MARCOS.."in_company:", msg.sender_id.user_id)
Redis:del(MARCOS.."in_company:name:"..msg.sender_id.user_id, Cname)
end
Redis:srem(MARCOS.."booob", msg.sender_id.user_id)
Redis:srem(MARCOS.."taza", msg.sender_id.user_id)
Redis:del(MARCOS.."boob"..msg.sender_id.user_id)
Redis:del(MARCOS.."boobb"..msg.sender_id.user_id)
Redis:del(MARCOS.."rrfff"..msg.sender_id.user_id)
Redis:srem(MARCOS.."rrfffid", msg.sender_id.user_id)
Redis:srem(MARCOS.."roogg1", msg.sender_id.user_id)
Redis:srem(MARCOS.."roogga1", msg.sender_id.user_id)
Redis:del(MARCOS.."roog1"..msg.sender_id.user_id)
Redis:del(MARCOS.."rooga1"..msg.sender_id.user_id)
Redis:del(MARCOS.."rahr1"..msg.sender_id.user_id)
Redis:del(MARCOS.."rahrr1"..msg.sender_id.user_id)
Redis:del(MARCOS.."tabbroat"..msg.sender_id.user_id)
Redis:del(MARCOS.."shkse"..msg.sender_id.user_id)
Redis:del(MARCOS.."ratbinc"..msg.sender_id.user_id)
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrmasname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrmasnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrkldname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrkldnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrswrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrswrnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrktmname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrktmnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrksrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrksrnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrfelname"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrfelnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrmnzname"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrmnznum"..msg.sender_id.user_id)
Redis:del(MARCOS.."airshbhname"..msg.sender_id.user_id)
Redis:del(MARCOS.."airshbhnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."airsfarname"..msg.sender_id.user_id)
Redis:del(MARCOS.."airsfarnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."airkhasname"..msg.sender_id.user_id)
Redis:del(MARCOS.."airkhasnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."carrangname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carrangnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."caraccename"..msg.sender_id.user_id)
Redis:del(MARCOS.."caraccenum"..msg.sender_id.user_id)
Redis:del(MARCOS.."carcamrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carcamrnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."caralntrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."caralntrnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."carhilxname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carhilxnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."carsonaname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carsonanum"..msg.sender_id.user_id)
Redis:del(MARCOS.."carcoroname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carcoronum"..msg.sender_id.user_id)
namfra = Redis:get(MARCOS.."namefram"..msg.sender_id.user_id)
Redis:del(MARCOS.."toplvfarm"..msg.sender_id.user_id)
Redis:del(MARCOS.."btatatime"..msg.sender_id.user_id)
Redis:del(MARCOS.."btatanum"..msg.sender_id.user_id)
Redis:del(MARCOS.."btataname"..msg.sender_id.user_id)
Redis:del(MARCOS.."lemontime"..msg.sender_id.user_id)
Redis:del(MARCOS.."lemonnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."lemonname"..msg.sender_id.user_id)
Redis:del(MARCOS.."khesstime"..msg.sender_id.user_id)
Redis:del(MARCOS.."khessnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."khessname"..msg.sender_id.user_id)
Redis:del(MARCOS.."kheartime"..msg.sender_id.user_id)
Redis:del(MARCOS.."khearnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."khearname"..msg.sender_id.user_id)
Redis:del(MARCOS.."jzartime"..msg.sender_id.user_id)
Redis:del(MARCOS.."jzarnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."jzarname"..msg.sender_id.user_id)
Redis:del(MARCOS.."fleflatime"..msg.sender_id.user_id)
Redis:del(MARCOS.."fleflanum"..msg.sender_id.user_id)
Redis:del(MARCOS.."fleflaname"..msg.sender_id.user_id)
Redis:del(MARCOS.."freaztime"..msg.sender_id.user_id)
Redis:del(MARCOS.."freaznum"..msg.sender_id.user_id)
Redis:del(MARCOS.."freazname"..msg.sender_id.user_id)
Redis:del(MARCOS.."tfahtime"..msg.sender_id.user_id)
Redis:del(MARCOS.."tfahnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."tfahname"..msg.sender_id.user_id)
Redis:del(MARCOS.."enabtime"..msg.sender_id.user_id)
Redis:del(MARCOS.."enabnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."enabname"..msg.sender_id.user_id)
Redis:del(MARCOS.."zetontime"..msg.sender_id.user_id)
Redis:del(MARCOS.."zetonnum"..msg.sender_id.user_id)
Redis:del(MARCOS.."zetonname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mozztime"..msg.sender_id.user_id)
Redis:del(MARCOS.."mozznum"..msg.sender_id.user_id)
Redis:del(MARCOS.."mozzname"..msg.sender_id.user_id)
Redis:del(MARCOS.."sizefram"..msg.sender_id.user_id)
Redis:del(MARCOS.."namefram"..msg.sender_id.user_id)
Redis:del(MARCOS.."mzroatsize"..msg.sender_id.user_id)
Redis:srem(MARCOS.."farmarname", namfra)
Redis:srem(MARCOS.."ownerfram",msg.sender_id.user_id)
bot.sendText(msg.chat_id,msg.id, "✧ مسحت حسابك البنكي 🏦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == 'تثبيت النتائج' or text == 'تثبيت نتائج' then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
time = os.date("*t")
month = time.month
day = time.day
local_time = month.."/"..day
local bank_users = Redis:smembers(MARCOS.."booob")
if #bank_users == 0 then
return bot.sendText(msg.chat_id,msg.id,"✧ لا يوجد حسابات في البنك","md",true)
end
mony_list = {}
for k,v in pairs(bank_users) do
local mony = Redis:get(MARCOS.."boob"..v)
table.insert(mony_list, {tonumber(mony) , v})
end
table.sort(mony_list, function(a, b) return a[1] > b[1] end)
num = 1
emoji ={ 
"🥇",
"🥈",
"🥉"
}
for k,v in pairs(mony_list) do
local user_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
local mony = v[1]
local convert_mony = string.format("%.0f",mony)
local emo = emoji[k]
num = num + 1
Redis:set(MARCOS.."medal"..v[2],convert_mony)
Redis:set(MARCOS.."medal2"..v[2],emo)
Redis:set(MARCOS.."medal3"..v[2],local_time)
Redis:sadd(MARCOS.."medalid",v[2])
Redis:set(MARCOS.."medal"..v[2],convert_mony)
Redis:set(MARCOS.."medal2"..v[2],emo)
Redis:set(MARCOS.."medal3"..v[2],local_time)
Redis:sadd(MARCOS.."medalid",v[2])
local user_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
local user_tag = '['..user_name..'](tg://user?id='..v[2]..')'
local mony = v[1]
local convert_mony = string.format("%.0f",mony)
local emo = emoji[k]
num = num + 1
Redis:set(MARCOS.."medal"..v[2],convert_mony)
Redis:set(MARCOS.."medal2"..v[2],emo)
Redis:set(MARCOS.."medal3"..v[2],local_time)
Redis:sadd(MARCOS.."medalid",v[2])
if num == 4 then
return end
end
bot.sendText(msg.chat_id,msg.id, "✧ تم تثبيت النتائج","md",true)
end
end

if text == 'حذف لعبة البنك' or text == 'حذف لعبه البنك' then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
Redis:del(MARCOS.."rrfffid")
Redis:del(MARCOS.."booob")
Redis:del(MARCOS.."taza")
Redis:del(MARCOS.."ownerfram")
Redis:del(MARCOS.."farmarname")
bot.sendText(msg.chat_id,msg.id, "✧ حذفت لعبه البنك 🏦","md",true)
end
end

if text == "مسح تخزين البوت" or text == "مسح تخزين البوت" then
if tonumber(msg.sender_id.user_id) == tonumber(689087834) then 
local keys = Redis:keys(MARCOS..'*')
for i = 1, #keys do
Redis:del(keys[i])
end
bot.sendText(msg.chat_id,msg.id, "✧ مسحت تخزين بوت كامل","md",true)
end
end

if text == 'مسح لعبة البنك' or text == 'مسح لعبه البنك' then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
local bank_users = Redis:smembers(MARCOS.."booob")
for k,v in pairs(bank_users) do
Redis:del(MARCOS.."boob"..v)
Redis:del(MARCOS.."kreednum"..v)
Redis:del(MARCOS.."kreed"..v)
Redis:del(MARCOS.."rrfff"..v)
Redis:del(MARCOS.."numattack"..v)
Redis:del(MARCOS.."tabbroat"..v)
Redis:del(MARCOS.."shkse"..v)
Redis:del(MARCOS.."ratbinc"..v)
Redis:del(MARCOS.."ratbtrans"..v)
Redis:del(MARCOS.."mgrmasname"..v)
Redis:del(MARCOS.."mgrmasnum"..v)
Redis:del(MARCOS.."mgrkldname"..v)
Redis:del(MARCOS.."mgrkldnum"..v)
Redis:del(MARCOS.."mgrswrname"..v)
Redis:del(MARCOS.."mgrswrnum"..v)
Redis:del(MARCOS.."mgrktmname"..v)
Redis:del(MARCOS.."mgrktmnum"..v)
Redis:del(MARCOS.."akrksrname"..v)
Redis:del(MARCOS.."akrksrnum"..v)
Redis:del(MARCOS.."akrfelname"..v)
Redis:del(MARCOS.."akrfelnum"..v)
Redis:del(MARCOS.."akrmnzname"..v)
Redis:del(MARCOS.."akrmnznum"..v)
Redis:del(MARCOS.."airshbhname"..v)
Redis:del(MARCOS.."airshbhnum"..v)
Redis:del(MARCOS.."airsfarname"..v)
Redis:del(MARCOS.."airsfarnum"..v)
Redis:del(MARCOS.."airkhasname"..v)
Redis:del(MARCOS.."airkhasnum"..v)
Redis:del(MARCOS.."carrangname"..v)
Redis:del(MARCOS.."carrangnum"..v)
Redis:del(MARCOS.."caraccename"..v)
Redis:del(MARCOS.."caraccenum"..v)
Redis:del(MARCOS.."carcamrname"..v)
Redis:del(MARCOS.."carcamrnum"..v)
Redis:del(MARCOS.."caralntrname"..v)
Redis:del(MARCOS.."caralntrnum"..v)
Redis:del(MARCOS.."carhilxname"..v)
Redis:del(MARCOS.."carhilxnum"..v)
Redis:del(MARCOS.."carsonaname"..v)
Redis:del(MARCOS.."carsonanum"..v)
Redis:del(MARCOS.."carcoroname"..v)
Redis:del(MARCOS.."carcoronum"..v)
Redis:del(MARCOS.."rotpa"..v)
Redis:del(MARCOS.."rddd"..v)
Redis:del(MARCOS.."rotpagrid"..v)
Redis:del(MARCOS.."rotpaid"..v)
Redis:del(MARCOS.."rdddgr"..v)
Redis:del(MARCOS.."rdddid"..v)
Redis:del(MARCOS.."rdddtex"..v)
end
for k,v in pairs(Redis:smembers(MARCOS.."company_owners:")) do 
local Cname = Redis:get(MARCOS.."companys_name:"..v)
Redis:del(MARCOS.."companys_owner:"..Cname)
Redis:del(MARCOS.."companys_id:"..Cname)
Redis:del(MARCOS.."company:mem:"..Cname)
Redis:del(MARCOS.."companys_name:"..v)
end
Redis:del(MARCOS.."company_owners:")
Redis:del(MARCOS.."companys:")
Redis:del(MARCOS.."in_company:")
local bank_usersr = Redis:smembers(MARCOS.."rrfffid")
for k,v in pairs(bank_usersr) do
Redis:del(MARCOS.."boob"..v)
Redis:del(MARCOS.."rrfff"..v)
end
for k,v in pairs(Redis:smembers(MARCOS.."ownerfram")) do 
Redis:del(MARCOS.."toplvfarm"..v)
Redis:del(MARCOS.."btatatime"..v)
Redis:del(MARCOS.."btatanum"..v)
Redis:del(MARCOS.."btataname"..v)
Redis:del(MARCOS.."lemontime"..v)
Redis:del(MARCOS.."lemonnum"..v)
Redis:del(MARCOS.."lemonname"..v)
Redis:del(MARCOS.."khesstime"..v)
Redis:del(MARCOS.."khessnum"..v)
Redis:del(MARCOS.."khessname"..v)
Redis:del(MARCOS.."kheartime"..v)
Redis:del(MARCOS.."khearnum"..v)
Redis:del(MARCOS.."khearname"..v)
Redis:del(MARCOS.."jzartime"..v)
Redis:del(MARCOS.."jzarnum"..v)
Redis:del(MARCOS.."jzarname"..v)
Redis:del(MARCOS.."fleflatime"..v)
Redis:del(MARCOS.."fleflanum"..v)
Redis:del(MARCOS.."fleflaname"..v)
Redis:del(MARCOS.."freaztime"..v)
Redis:del(MARCOS.."freaznum"..v)
Redis:del(MARCOS.."freazname"..v)
Redis:del(MARCOS.."tfahtime"..v)
Redis:del(MARCOS.."tfahnum"..v)
Redis:del(MARCOS.."tfahname"..v)
Redis:del(MARCOS.."enabtime"..v)
Redis:del(MARCOS.."enabnum"..v)
Redis:del(MARCOS.."enabname"..v)
Redis:del(MARCOS.."zetontime"..v)
Redis:del(MARCOS.."zetonnum"..v)
Redis:del(MARCOS.."zetonname"..v)
Redis:del(MARCOS.."mozztime"..v)
Redis:del(MARCOS.."mozznum"..v)
Redis:del(MARCOS.."mozzname"..v)
Redis:del(MARCOS.."sizefram"..v)
Redis:del(MARCOS.."namefram"..v)
Redis:del(MARCOS.."mzroatsize"..v)
end
bot.sendText(msg.chat_id,msg.id, "✧ مسحت لعبه البنك 🏦","md",true)
end
end
if text == 'ميدالياتي' or text == 'ميداليات' then
if Redis:sismember(MARCOS.."medalid",msg.sender_id.user_id) then
local medaa2 = Redis:get(MARCOS.."medal2"..msg.sender_id.user_id)
if medaa2 == "🥇" then
local medaa = Redis:get(MARCOS.."medal"..msg.sender_id.user_id)
local medaa2 = Redis:get(MARCOS.."medal2"..msg.sender_id.user_id)
local medaa3 = Redis:get(MARCOS.."medal3"..msg.sender_id.user_id)
bot.sendText(msg.chat_id,msg.id, "ميدالياتك :\n\nالتاريخ -> "..medaa3.." \nالفلوس -> "..medaa.." 💵\nالمركز -> "..medaa2.." كونكر "..medaa2.."\n✦","md",true)
elseif medaa2 == "🥈" then
local medaa = Redis:get(MARCOS.."medal"..msg.sender_id.user_id)
local medaa2 = Redis:get(MARCOS.."medal2"..msg.sender_id.user_id)
local medaa3 = Redis:get(MARCOS.."medal3"..msg.sender_id.user_id)
bot.sendText(msg.chat_id,msg.id, "ميدالياتك :\n\nالتاريخ -> "..medaa3.." \nالفلوس -> "..medaa.." 💵\nالمركز -> "..medaa2.." ايس "..medaa2.."\n✦","md",true)
else
local medaa = Redis:get(MARCOS.."medal"..msg.sender_id.user_id)
local medaa2 = Redis:get(MARCOS.."medal2"..msg.sender_id.user_id)
local medaa3 = Redis:get(MARCOS.."medal3"..msg.sender_id.user_id)
bot.sendText(msg.chat_id,msg.id, "ميدالياتك :\n\nالتاريخ -> "..medaa3.." \nالفلوس -> "..medaa.." 💵\nالمركز -> "..medaa2.." كراون "..medaa2.."\n✦","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك ميداليات","md",true)
end
end
if text == 'فلوسي' or text == 'فلوس' and tonumber(msg.reply_to_message_id) == 0 then
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if tonumber(ballancee) < 1 then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك فلوس ارسل الالعاب وابدأ بجمع الفلوس \n✦","md",true)
end
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id, "✧ فلوسك `"..convert_mony.."` جنيه 💵","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match("^فلوس @(%S+)$") or text and text:match("^فلوسه @(%S+)$") then
local UserName = text:match("^فلوس @(%S+)$") or text:match("^فلوسه @(%S+)$")
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return bot.sendText(msg.chat_id,msg.id,"\n✧ مافيه حساب كذا ","md",true)
end
local UserInfo = bot.getUser(UserId_Info.id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)  
end
if Redis:sismember(MARCOS.."booob",UserId_Info.id) then
ballanceed = Redis:get(MARCOS.."boob"..UserId_Info.id) or 0
local convert_mony = string.format("%.0f",ballanceed)
bot.sendText(msg.chat_id,msg.id, "✧ فلوسه `"..convert_mony.."` جنيه 💵","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
end
if text == 'فلوسه' or text == 'فلوس' and tonumber(msg.reply_to_message_id) ~= 0 then
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballanceed)
bot.sendText(msg.chat_id,msg.id, "✧ فلوسه `"..convert_mony.."` جنيه 💵","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
end
if text == 'حسابي' or text == 'حسابي البنكي' or text == 'رقم حسابي' then
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
news = ""..ban.first_name..""
else
news = " لا يوجد"
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
cccc = Redis:get(MARCOS.."boobb"..msg.sender_id.user_id)
uuuu = Redis:get(MARCOS.."bbobb"..msg.sender_id.user_id)
pppp = Redis:get(MARCOS.."rrfff"..msg.sender_id.user_id) or 0
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
shkse = Redis:get(MARCOS.."shkse"..msg.sender_id.user_id)
local convert_mony = string.format("%.0f",ballancee)
if shkse == "طيبة" then
shkseemg = "طيبة 😇"
else
shkseemg = "شريرة 😈"
end
bot.sendText(msg.chat_id,msg.id, "✧ الاسم -> "..news.."\n✧ الحساب -> `"..cccc.."`\n✧ بنك -> ( ماركوس )\n✧ نوع -> ( "..uuuu.." )\n✧ الرصيد -> ( "..convert_mony.." جنيه 💵 )\n✧ الزرف ( "..math.floor(pppp).." جنيه 💵 )\n✧ شخصيتك -> "..shkseemg.."\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == 'مسح حسابه' and tonumber(msg.reply_to_message_id) ~= 0 then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)  
return false
end
local ban = bot.getUser(Remsg.sender_id.user_id)
if ban.first_name then
news = ""..ban.first_name..""
else
news = " لا يوجد"
end
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local Cname = Redis:get(MARCOS.."in_company:name:"..msg.sender_id.user_id) or 0
Redis:srem(MARCOS.."company:mem:"..Cname, msg.sender_id.user_id)
Redis:srem(MARCOS.."in_company:", msg.sender_id.user_id)
Redis:del(MARCOS.."in_company:name:"..msg.sender_id.user_id, Cname)
ccccc = Redis:get(MARCOS.."boobb"..Remsg.sender_id.user_id)
uuuuu = Redis:get(MARCOS.."bbobb"..Remsg.sender_id.user_id)
ppppp = Redis:get(MARCOS.."rrfff"..Remsg.sender_id.user_id) or 0
ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballanceed)
Redis:srem(MARCOS.."booob", Remsg.sender_id.user_id)
Redis:srem(MARCOS.."taza", Remsg.sender_id.user_id)
Redis:del(MARCOS.."boob"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."boobb"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."rrfff"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."numattack"..Remsg.sender_id.user_id)
Redis:srem(MARCOS.."rrfffid", Remsg.sender_id.user_id)
Redis:srem(MARCOS.."roogg1", Remsg.sender_id.user_id)
Redis:srem(MARCOS.."roogga1", Remsg.sender_id.user_id)
Redis:del(MARCOS.."roog1"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."rooga1"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."rahr1"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."rahrr1"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."tabbroat"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."shkse"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."ratbinc"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."ratbtrans"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."mgrmasname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."mgrmasnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."mgrkldname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."mgrkldnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."mgrswrname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."mgrswrnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."mgrktmname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."mgrktmnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."akrksrname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."akrksrnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."akrfelname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."akrfelnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."akrmnzname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."akrmnznum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."airshbhname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."airshbhnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."airsfarname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."airsfarnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."airkhasname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."airkhasnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."carrangname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."carrangnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."caraccename"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."caraccenum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."carcamrname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."carcamrnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."caralntrname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."caralntrnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."carhilxname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."carhilxnum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."carsonaname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."carsonanum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."carcoroname"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."carcoronum"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."rotpa"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."rddd"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."rotpagrid"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."rotpaid"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."rdddgr"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."rdddid"..Remsg.sender_id.user_id)
Redis:del(MARCOS.."rdddtex"..Remsg.sender_id.user_id)
bot.sendText(msg.chat_id,msg.id, "✧ الاسم -> "..news.."\n✧ الحساب -> `"..ccccc.."`\n✧ بنك -> ( ماركوس )\n✧ نوع -> ( "..uuuuu.." )\n✧ الرصيد -> ( "..convert_mony.." جنيه 💵 )\n✧ الزرف -> ( "..math.floor(ppppp).." جنيه 💵 )\n✧ مسكين مسحت حسابه \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي اصلاً ","md",true)
end
end
end
if text == 'حسابه' and tonumber(msg.reply_to_message_id) ~= 0 then
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)  
return false
end
local ban = bot.getUser(Remsg.sender_id.user_id)
if ban.first_name then
news = ""..ban.first_name..""
else
news = " لا يوجد"
end
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
ccccc = Redis:get(MARCOS.."boobb"..Remsg.sender_id.user_id)
uuuuu = Redis:get(MARCOS.."bbobb"..Remsg.sender_id.user_id)
ppppp = Redis:get(MARCOS.."rrfff"..Remsg.sender_id.user_id) or 0
ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
shkse = Redis:get(MARCOS.."shkse"..Remsg.sender_id.user_id)
local convert_mony = string.format("%.0f",ballanceed)
if shkse == "طيبة" then
shkseemg = "طيبة 😇"
else
shkseemg = "شريرة 😈"
end
bot.sendText(msg.chat_id,msg.id, "✧ الاسم -> "..news.."\n✧ الحساب -> `"..ccccc.."`\n✧ بنك -> ( ماركوس )\n✧ نوع -> ( "..uuuuu.." )\n✧ الرصيد -> ( "..convert_mony.." جنيه 💵 )\n✧ الزرف -> ( "..math.floor(ppppp).." جنيه 💵 )\n✧ شخصيته -> "..shkseemg.."\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
end
if text and text:match('^مسح حساب (.*)$') or text and text:match('^مسح حسابه (.*)$') then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
local UserName = text:match('^مسح حساب (.*)$') or text:match('^مسح حسابه (.*)$')
local coniss = coin(UserName)
local ban = bot.getUser(coniss)
if ban.first_name then
news = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
news = " لا يوجد "
end
if Redis:sismember(MARCOS.."booob",coniss) then
local Cname = Redis:get(MARCOS.."in_company:name:"..coniss) or 0
Redis:srem(MARCOS.."company:mem:"..Cname, coniss)
Redis:srem(MARCOS.."in_company:", coniss)
Redis:del(MARCOS.."in_company:name:"..coniss, Cname)
ccccc = Redis:get(MARCOS.."boobb"..coniss)
uuuuu = Redis:get(MARCOS.."bbobb"..coniss)
ppppp = Redis:get(MARCOS.."rrfff"..coniss) or 0
ballanceed = Redis:get(MARCOS.."boob"..coniss) or 0
local convert_mony = string.format("%.0f",ballanceed)
Redis:srem(MARCOS.."booob", coniss)
Redis:srem(MARCOS.."taza", coniss)
Redis:del(MARCOS.."boob"..coniss)
Redis:del(MARCOS.."boobb"..coniss)
Redis:del(MARCOS.."rrfff"..coniss)
Redis:srem(MARCOS.."roogg1", coniss)
Redis:srem(MARCOS.."roogga1", coniss)
Redis:del(MARCOS.."roog1"..coniss)
Redis:del(MARCOS.."rooga1"..coniss)
Redis:del(MARCOS.."rahr1"..coniss)
Redis:del(MARCOS.."rahrr1"..coniss)
Redis:del(MARCOS.."tabbroat"..coniss)
Redis:del(MARCOS.."shkse"..coniss)
Redis:del(MARCOS.."ratbinc"..coniss)
Redis:del(MARCOS.."ratbtrans"..coniss)
Redis:del(MARCOS.."numattack"..coniss)
Redis:del(MARCOS.."mgrmasname"..coniss)
Redis:del(MARCOS.."mgrmasnum"..coniss)
Redis:del(MARCOS.."mgrkldname"..coniss)
Redis:del(MARCOS.."mgrkldnum"..coniss)
Redis:del(MARCOS.."mgrswrname"..coniss)
Redis:del(MARCOS.."mgrswrnum"..coniss)
Redis:del(MARCOS.."mgrktmname"..coniss)
Redis:del(MARCOS.."mgrktmnum"..coniss)
Redis:del(MARCOS.."akrksrname"..coniss)
Redis:del(MARCOS.."akrksrnum"..coniss)
Redis:del(MARCOS.."akrfelname"..coniss)
Redis:del(MARCOS.."akrfelnum"..coniss)
Redis:del(MARCOS.."akrmnzname"..coniss)
Redis:del(MARCOS.."akrmnznum"..coniss)
Redis:del(MARCOS.."airshbhname"..coniss)
Redis:del(MARCOS.."airshbhnum"..coniss)
Redis:del(MARCOS.."airsfarname"..coniss)
Redis:del(MARCOS.."airsfarnum"..coniss)
Redis:del(MARCOS.."airkhasname"..coniss)
Redis:del(MARCOS.."airkhasnum"..coniss)
Redis:del(MARCOS.."carrangname"..coniss)
Redis:del(MARCOS.."carrangnum"..coniss)
Redis:del(MARCOS.."caraccename"..coniss)
Redis:del(MARCOS.."caraccenum"..coniss)
Redis:del(MARCOS.."carcamrname"..coniss)
Redis:del(MARCOS.."carcamrnum"..coniss)
Redis:del(MARCOS.."caralntrname"..coniss)
Redis:del(MARCOS.."caralntrnum"..coniss)
Redis:del(MARCOS.."carhilxname"..coniss)
Redis:del(MARCOS.."carhilxnum"..coniss)
Redis:del(MARCOS.."carsonaname"..coniss)
Redis:del(MARCOS.."carsonanum"..coniss)
Redis:del(MARCOS.."carcoroname"..coniss)
Redis:del(MARCOS.."carcoronum"..coniss)
Redis:srem(MARCOS.."rrfffid", coniss)
Redis:del(MARCOS.."rotpa"..coniss)
Redis:del(MARCOS.."rddd"..coniss)
Redis:del(MARCOS.."rotpagrid"..coniss)
Redis:del(MARCOS.."rotpaid"..coniss)
Redis:del(MARCOS.."rdddgr"..coniss)
Redis:del(MARCOS.."rdddid"..coniss)
Redis:del(MARCOS.."rdddtex"..coniss)
bot.sendText(msg.chat_id,msg.id, "✧ الاسم -> "..news.."\n✧ الحساب -> `"..ccccc.."`\n✧ بنك -> ( ماركوس )\n✧ نوع -> ( "..uuuuu.." )\n✧ الرصيد -> ( "..convert_mony.." جنيه 💵 )\n✧ الزرف -> ( "..math.floor(ppppp).." جنيه 💵 )\n✧ مسكين مسحت حسابه \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي اصلاً ","md",true)
end
end
end
if text and text:match('^حساب (.*)$') or text and text:match('^حسابه (.*)$') then
local UserName = text:match('^حساب (.*)$') or text:match('^حسابه (.*)$')
local coniss = coin(UserName)
if Redis:get(MARCOS.."boballcc"..coniss) then
local yty = Redis:get(MARCOS.."boballname"..coniss)
local bobpkh = Redis:get(MARCOS.."boballid"..coniss)
ballancee = Redis:get(MARCOS.."boob"..bobpkh) or 0
local convert_mony = string.format("%.0f",ballancee)
local dfhb = Redis:get(MARCOS.."boballbalc"..coniss)
local fsvhh = Redis:get(MARCOS.."boballban"..coniss)
shkse = Redis:get(MARCOS.."shkse"..coniss)
if shkse == "طيبة" then
shkseemg = "طيبة 😇"
else
shkseemg = "شريرة 😈"
end
bot.sendText(msg.chat_id,msg.id, "✧ الاسم -> "..yty.."\n✧ الحساب -> `"..coniss.."`\n✧ بنك -> ( ماركوس )\n✧ نوع -> ( "..fsvhh.." )\n✧ الرصيد -> ( "..convert_mony.." جنيه 💵 )\n✧ شخصيته -> "..shkseemg.."\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ مافيه حساب بنكي كذا","md",true)
end
end
if text and text:match('اكشط (.*)') then
local TextAksht = text:match('اكشط (.*)')
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if not Redis:sismember(MARCOS.."Akshtd:Games:",TextAksht) then
return bot.sendText(msg.chat_id,msg.id,"✧ الرمز مستخدم قبل !")
end
local list ={"10000","20000","30000","40000","50000","60000"}
local Number = tonumber(list[math.random(#list)])
Redis:srem(MARCOS.."Akshtd:Games:",TextAksht)
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
cobonplus = tonumber(ballancee) + Number
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , cobonplus)
local UserInfoo = bot.getUser(msg.sender_id.user_id)
local GetName = ' ['..UserInfoo.first_name..'](tg://user?id='..msg.sender_id.user_id..')'
return bot.sendText(msg.chat_id,msg.id,GetName.."\n\n*✧ مبروك كشطتها واخذت -> "..Number.. " جنيه 💵*\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ","md",true)
end
end
if text == "قائمه اكشطها" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
local Text = Redis:smembers(MARCOS.."Akshtd:Games:") 
if #Text == 0 then
return bot.sendText(msg.chat_id,msg.id,"لا يوجد رموز اكشطها","md",true)  
end
local Texter = "\nقائمه اكشطها -> \n\n"
for k, v in pairs(Text) do
Texter = Texter.."*"..k.."-* `"..v.."`\n"
end
return bot.sendText(msg.chat_id,msg.id,Texter,"md")
end
if text == "صنع اكشطها" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."Akshtd:Games:")
local list ={"q","w","e","r","t","y","u","i","o","p","a","s","d","f","g","h","j","k","l","z","x","c","v","b","n","m"}
local En = list[math.random(#list)]
local En1 = list[math.random(#list)]
local En2 = list[math.random(#list)]
local En3 = list[math.random(#list)]
local En4 = list[math.random(#list)]
local En5 = list[math.random(#list)]
local En6 = list[math.random(#list)]
local En7 = list[math.random(#list)]
local En8 = list[math.random(#list)]
local En9 = list[math.random(#list)]
local Num = En..En1..En2..En3..En4..En5..En6..En7..En8..En9
local Num1 = En..En1..En9..En8..En6..En7..En5..En4..En3..En2
local Num2 = En1..En2..En3..En4..En5..En6..En7..En8..En9..En
local Num3 = En9..En2..En..En4..En6..En5..En8..En3..En1..En7
local Num4 = En6..En7..En8..En9..En..En1..En2..En3..En4..En5
local Num5 = En5..En4..En3..En2..En1..En..En9..En8..En7..En6
local Num6 = En6..En7..En3..En2..En1..En5..En4..En..En9..En8
local Num7 = En1..En..En2..En7..En4..En3..En6..En5..En9..En8
local Num8 = En2..En4..En5..En6..En4..En8..En3..En7..En..En9
local Num9 = En1..En..En3..En5..En7..En9..En2..En4..En6..En8
Redis:sadd(MARCOS.."Akshtd:Games:",Num)
Redis:sadd(MARCOS.."Akshtd:Games:",Num1)
Redis:sadd(MARCOS.."Akshtd:Games:",Num2)
Redis:sadd(MARCOS.."Akshtd:Games:",Num3)
Redis:sadd(MARCOS.."Akshtd:Games:",Num4)
Redis:sadd(MARCOS.."Akshtd:Games:",Num5)
Redis:sadd(MARCOS.."Akshtd:Games:",Num6)
Redis:sadd(MARCOS.."Akshtd:Games:",Num7)
Redis:sadd(MARCOS.."Akshtd:Games:",Num8)
Redis:sadd(MARCOS.."Akshtd:Games:",Num9)
return bot.sendText(msg.chat_id,msg.id,[[
تم صنع قائمة اكشط جديدة :

1 - `]]..Num..[[`

2 - `]]..Num1..[[`

3 - `]]..Num2..[[`

4 - `]]..Num3..[[`

5 - `]]..Num4..[[`

6 - `]]..Num5..[[`

7 - `]]..Num6..[[`

8 - `]]..Num7..[[`

9 - `]]..Num8..[[`

10 - `]]..Num9..[[`
]],"md")
end
if text == 'مضاربه' then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:ttl(MARCOS.."iiooooo" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."iiooooo" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ مايمديك تضارب الحين\n✧ تعال بعد "..math.floor(hours).." دقيقة","md",true)
end
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`مضاربه` المبلغ","md",true)
end
if text and text:match('^مضاربه (.*)$') or text and text:match('^مضاربة (.*)$') then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local UserName = text:match('^مضاربه (.*)$') or text:match('^مضاربة (.*)$')
local coniss = coin(UserName)
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:ttl(MARCOS.."iiooooo" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."iiooooo" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ مايمديك تضارب الحين\n✧ تعال بعد "..math.floor(hours).." دقيقة","md",true)
end
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if tonumber(coniss) < 99 then
return bot.sendText(msg.chat_id,msg.id, "✧ الحد الادنى المسموح هو 100 جنيه 💵\n✦","md",true)
end
if tonumber(ballancee) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي \n✦","md",true)
end
local modarba = {"1", "2", "3", "4️",}
local Descriptioontt = modarba[math.random(#modarba)]
local modarbaa = math.random(1,90);
if Descriptioontt == "1" or Descriptioontt == "3" then
ballanceekku = coniss / 100 * modarbaa
ballanceekkku = ballancee - ballanceekku
local convert_mony = string.format("%.0f",ballanceekku)
local convert_mony1 = string.format("%.0f",ballanceekkku)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ballanceekkku))
Redis:setex(MARCOS.."iiooooo" .. msg.sender_id.user_id,920, true)
bot.sendText(msg.chat_id,msg.id, "✧ مضاربة فاشلة 📉\n✧ نسبة الخسارة -> "..modarbaa.."%\n✧ المبلغ الذي خسرته -> ( "..convert_mony.." جنيه 💵 )\n✧ فلوسك صارت -> ( "..convert_mony1.." جنيه 💵 )\n✦","md",true)
else
ballanceekku = coniss / 100 * modarbaa
ballanceekkku = ballancee + ballanceekku
local convert_mony = string.format("%.0f",ballanceekku)
local convert_mony1 = string.format("%.0f",ballanceekkku)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ballanceekkku))
Redis:setex(MARCOS.."iiooooo" .. msg.sender_id.user_id,920, true)
bot.sendText(msg.chat_id,msg.id, "✧ مضاربة ناجحة 📈\n✧ نسبة الربح -> "..modarbaa.."%\n✧ المبلغ الذي ربحته -> ( "..convert_mony.." جنيه 💵 )\n✧ فلوسك صارت -> ( "..convert_mony1.." جنيه 💵 )\n✦","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == 'استثمار' then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:ttl(MARCOS.."iioooo" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."iioooo" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ مايمديك تستثمر الحين\n✧ تعال بعد "..math.floor(hours).." دقيقة","md",true)
end
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`استثمار` المبلغ","md",true)
end
if text and text:match('^استثمار (.*)$') then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local UserName = text:match('^استثمار (.*)$')
local coniss = coin(UserName)
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:ttl(MARCOS.."iioooo" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."iioooo" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ مايمديك تستثمر الحين\n✧ تعال بعد "..math.floor(hours).." دقيقة","md",true)
end
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if tonumber(coniss) < 99 then
return bot.sendText(msg.chat_id,msg.id, "✧ الحد الادنى المسموح هو 100 جنيه 💵\n✦","md",true)
end
if tonumber(ballancee) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي \n✦","md",true)
end
if tonumber(ballancee) < 100000 then
local hadddd = math.random(10,15);
ballanceekk = coniss / 100 * hadddd
ballanceekkk = ballancee + ballanceekk
local convert_mony = string.format("%.0f",ballanceekk)
local convert_mony1 = string.format("%.0f",ballanceekkk)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ballanceekkk))
Redis:setex(MARCOS.."iioooo" .. msg.sender_id.user_id,1220, true)
bot.sendText(msg.chat_id,msg.id, "✧ استثمار ناجح 💰\n✧ نسبة الربح -> "..hadddd.."%\n✧ مبلغ الربح -> ( "..convert_mony.." جنيه 💵 )\n✧ فلوسك صارت -> ( "..convert_mony1.." جنيه 💵 )\n✦","md",true)
else
local hadddd = math.random(1,9);
ballanceekk = coniss / 100 * hadddd
ballanceekkk = ballancee + ballanceekk
local convert_mony = string.format("%.0f",ballanceekk)
local convert_mony1 = string.format("%.0f",ballanceekkk)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ballanceekkk))
Redis:setex(MARCOS.."iioooo" .. msg.sender_id.user_id,1220, true)
bot.sendText(msg.chat_id,msg.id, "✧ استثمار ناجح 💰\n✧ نسبة الربح -> "..hadddd.."%\n✧ مبلغ الربح -> ( "..convert_mony.." جنيه 💵 )\n✧ فلوسك صارت -> ( "..convert_mony1.." جنيه 💵 )\n✦","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == 'سحب' then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:ttl(MARCOS.."iioood" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."iioood" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ مايمديك تلعب سحب الحين\n✧ تعال بعد "..math.floor(hours).." دقيقة","md",true)
end
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`سحب` المبلغ","md",true)
end
if text == 'حظ' then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:ttl(MARCOS.."iiooo" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."iiooo" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ مايمديك تلعب حظ الحين\n✧ تعال بعد "..math.floor(hours).." دقيقة","md",true)
end
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`حظ` المبلغ","md",true)
end
if text and text:match('^حظ (.*)$') then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local UserName = text:match('^حظ (.*)$')
local coniss = coin(UserName)
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:ttl(MARCOS.."iiooo" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."iiooo" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ مايمديك تلعب حظ الحين\n✧ تعال بعد "..math.floor(hours).." دقيقة","md",true)
end
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if tonumber(coniss) < 99 then
return bot.sendText(msg.chat_id,msg.id, "✧ الحد الادنى المسموح هو 100 جنيه 💵\n✦","md",true)
end
if tonumber(ballancee) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي \n✦","md",true)
end
local daddd = {"1", "2"}
local haddd = daddd[math.random(#daddd)]
if haddd == "1" then
local ballanceek = ballancee + coniss
local convert_mony = string.format("%.0f",ballancee)
local convert_mony1 = string.format("%.0f",ballanceek)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ballanceek))
Redis:setex(MARCOS.."iiooo" .. msg.sender_id.user_id,920, true)
bot.sendText(msg.chat_id,msg.id, "✧ مبروك فزت بالحظ 🎉\n✧ فلوسك قبل -> ( "..convert_mony.." جنيه 💵 )\n✧ رصيدك الان -> ( "..convert_mony1.." جنيه 💵 )\n✦","md",true)
else
local ballanceekk = ballancee - coniss
local convert_mony = string.format("%.0f",ballancee)
local convert_mony1 = string.format("%.0f",ballanceekk)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ballanceekk))
Redis:setex(MARCOS.."iiooo" .. msg.sender_id.user_id,920, true)
bot.sendText(msg.chat_id,msg.id, "✧ للاسف خسرت بالحظ 😬\n✧ فلوسك قبل -> ( "..convert_mony.." جنيه 💵 )\n✧ رصيدك الان -> ( "..convert_mony1.." جنيه 💵 )\n✦","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == 'تحويل' then
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`تحويل` المبلغ","md",true)
end
if text and text:match('^تحويل (.*)$') then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local UserName = text:match('^تحويل (.*)$')
local coniss = coin(UserName)
if not Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ","md",true)
end
if tonumber(coniss) < 100 then
return bot.sendText(msg.chat_id,msg.id, "✧ الحد الادنى المسموح به هو 100 جنيه \n✦","md",true)
end
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if tonumber(ballancee) < 100 then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي \n✦","md",true)
end
if tonumber(coniss) > tonumber(ballancee) then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي\n✦","md",true)
end
Redis:set(MARCOS.."transn"..msg.sender_id.user_id,coniss)
Redis:setex(MARCOS.."trans" .. msg.chat_id .. ":" .. msg.sender_id.user_id,60, true)
bot.sendText(msg.chat_id,msg.id,[[
✧ ارسل الحين رقم الحساب البنكي الي تبي تحول له

– معاك دقيقة وحدة والغي طلب التحويل .
✦
]],"md",true)  
return false
end
if Redis:get(MARCOS.."trans" .. msg.chat_id .. ":" .. msg.sender_id.user_id) then
cccc = Redis:get(MARCOS.."boobb"..msg.sender_id.user_id)
uuuu = Redis:get(MARCOS.."bbobb"..msg.sender_id.user_id)
if text ~= text:match('^(%d+)$') then
Redis:del(MARCOS.."trans" .. msg.chat_id .. ":" .. msg.sender_id.user_id) 
Redis:del(MARCOS.."transn" .. msg.sender_id.user_id)
return bot.sendText(msg.chat_id,msg.id,"✧ ارسل رقم حساب بنكي ","md",true)
end
if text == cccc then
Redis:del(MARCOS.."trans" .. msg.chat_id .. ":" .. msg.sender_id.user_id) 
Redis:del(MARCOS.."transn" .. msg.sender_id.user_id)
return bot.sendText(msg.chat_id,msg.id,"✧ مايمديك تحول لنفسك ","md",true)
end
if Redis:get(MARCOS.."boballcc"..text) then
local UserNamey = Redis:get(MARCOS.."transn"..msg.sender_id.user_id)
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
news = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
news = " لا يوجد "
end
local fsvhhh = Redis:get(MARCOS.."boballid"..text)
local bann = bot.getUser(fsvhhh)
if bann.first_name then
newss = "["..bann.first_name.."](tg://user?id="..bann.id..")"
else
newss = " لا يوجد "
end
local fsvhh = Redis:get(MARCOS.."boballban"..text)
UserNameyr = UserNamey / 10
UserNameyy = UserNamey - UserNameyr
local convert_mony = string.format("%.0f",UserNameyy)
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
deccde = ballancee - UserNamey
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(deccde))
decdecb = Redis:get(MARCOS.."boob"..fsvhhh) or 0
deccde2 = decdecb + UserNameyy
Redis:set(MARCOS.."boob"..fsvhhh , math.floor(deccde2))

bot.sendText(msg.chat_id,msg.id, "✧ حوالة صادرة من بنك ماركوس\n\n✧ المرسل -> "..news.."\n✧ الحساب رقم -> `"..cccc.."`\n✧ نوع البطاقة -> "..uuuu.."\n✧ المستلم -> "..newss.."\n✧ الحساب رقم -> `"..text.."`\n✧ نوع البطاقة -> "..fsvhh.."\n✧ خصمت 10% رسوم تحويل\n✧ المبلغ -> "..convert_mony.." جنيه 💵","md",true)
bot.sendText(fsvhhh,0, "✧ حوالة واردة من بنك ماركوس\n\n✧ المرسل -> "..news.."\n✧ الحساب رقم -> `"..cccc.."`\n✧ نوع البطاقة -> "..uuuu.."\n✧ المبلغ -> "..convert_mony.." جنيه 💵","md",true)
Redis:del(MARCOS.."trans" .. msg.chat_id .. ":" .. msg.sender_id.user_id) 
Redis:del(MARCOS.."transn" .. msg.sender_id.user_id)
else
bot.sendText(msg.chat_id,msg.id, "✧ مافيه حساب بنكي كذا","md",true)
Redis:del(MARCOS.."trans" .. msg.chat_id .. ":" .. msg.sender_id.user_id) 
Redis:del(MARCOS.."transn" .. msg.sender_id.user_id)
end
end
if text == "ترتيبي" then
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local bank_users = Redis:smembers(MARCOS.."booob")
my_num_in_bank = {}
for k,v in pairs(bank_users) do
local mony = Redis:get(MARCOS.."boob"..v)
table.insert(my_num_in_bank, {math.floor(tonumber(mony)) , v})
end
table.sort(my_num_in_bank, function(a, b) return a[1] > b[1] end)
for k,v in pairs(my_num_in_bank) do
if tonumber(v[2]) == tonumber(msg.sender_id.user_id) then
local mony = v[1]
return bot.sendText(msg.chat_id,msg.id,"✧ ترتيبك ( "..k.." )","md",true)
end
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == "ترتيبه" and tonumber(msg.reply_to_message_id) ~= 0 then
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local bank_users = Redis:smembers(MARCOS.."booob")
my_num_in_bank = {}
for k,v in pairs(bank_users) do
local mony = Redis:get(MARCOS.."boob"..v)
table.insert(my_num_in_bank, {math.floor(tonumber(mony)) , v})
end
table.sort(my_num_in_bank, function(a, b) return a[1] > b[1] end)
for k,v in pairs(my_num_in_bank) do
if tonumber(v[2]) == tonumber(Remsg.sender_id.user_id) then
local mony = v[1]
return bot.sendText(msg.chat_id,msg.id,"✧ ترتيبه ( "..k.." )","md",true)
end
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي","md",true)
end
end
if text == "توب" or text == "التوب" then
local toptop = "✧ اهلين فيك في قوائم التوب\nللمزيد من التفاصيل - [@ZAXY00]\n✦"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الزرف', data = msg.sender_id.user_id..'/topzrf'},{text = 'الفلوس', data = msg.sender_id.user_id..'/topmon'},{text = 'زواجات', data = msg.sender_id.user_id..'/zoztee'},
},
{
{text = 'المتبرعين', data = msg.sender_id.user_id..'/motbra'},{text = 'الشركات', data = msg.sender_id.user_id..'/shrkatt'},
},
{
{text = 'اخفاء', data = msg.sender_id.user_id..'/delAmr'}, 
},
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url="t.me/ZAXY00"},
},
}
}
return bot.sendText(msg.chat_id,msg.id,toptop,"md",false, false, false, false, reply_markup)
end
if text == "توب فلوس" or text == "توب الفلوس" then
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
news = "["..ban.first_name.."]("..ban.first_name..")"
else
news = " لا يوجد"
end
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local bank_users = Redis:smembers(MARCOS.."booob")
if #bank_users == 0 then
return bot.sendText(msg.chat_id,msg.id,"✧ لا يوجد حسابات في البنك","md",true)
end
top_mony = "توب اغنى 20 شخص :\n\n"
mony_list = {}
for k,v in pairs(bank_users) do
local mony = Redis:get(MARCOS.."boob"..v)
table.insert(mony_list, {tonumber(mony) , v})
end
table.sort(mony_list, function(a, b) return a[1] > b[1] end)
num = 1
emoji ={ 
"🥇" ,
"🥈",
"🥉",
"4)",
"5)",
"6)",
"7)",
"8)",
"9)",
"10)",
"11)",
"12)",
"13)",
"14)",
"15)",
"16)",
"17)",
"18)",
"19)",
"20)"
}
for k,v in pairs(mony_list) do
if num <= 20 then
local user_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
tt =  "["..user_name.."]("..user_name..")"
local mony = v[1]
local convert_mony = string.format("%.0f",mony)
local emo = emoji[k]
num = num + 1
gflos = string.format("%.0f", mony):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
top_mony = top_mony..emo.." "..gflos.." 💵 l "..tt.." \n"
gflous = string.format("%.0f", ballancee):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
gg = " ━━━━━━━━━\nyou ) "..gflous.." 💵 l "..news.." \n\nملاحظة -> اي شخص مخالف للعبة بالغش او حاط يوزر بينحظر من اللعبه وتتصفر فلوسه"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url="t.me/ZAXY00"},
},
}
}
return bot.sendText(msg.chat_id,msg.id,top_mony..gg,"md",false, false, false, false, reply_markup)
end
if text == "توب الحراميه" or text == "توب الحرامية" or text == "توب حراميه" or text == "توب الزرف" or text == "توب زرف" then
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
news = "["..ban.first_name.."]("..ban.first_name..")"
else
news = " لا يوجد"
end
zrfee = Redis:get(MARCOS.."rrfff"..msg.sender_id.user_id) or 0
local ty_users = Redis:smembers(MARCOS.."rrfffid")
if #ty_users == 0 then
return bot.sendText(chat_id,msg_id,"✧ لا يوجد احد","md",true)
end
ty_anubis = "توب 20 شخص زرفوا فلوس :\n\n"
ty_list = {}
for k,v in pairs(ty_users) do
local mony = Redis:get(MARCOS.."rrfff"..v)
table.insert(ty_list, {tonumber(mony) , v})
end
table.sort(ty_list, function(a, b) return a[1] > b[1] end)
num_ty = 1
emojii ={ 
"🥇" ,
"🥈",
"🥉",
"4)",
"5)",
"6)",
"7)",
"8)",
"9)",
"10)",
"11)",
"12)",
"13)",
"14)",
"15)",
"16)",
"17)",
"18)",
"19)",
"20)"
}
for k,v in pairs(ty_list) do
if num_ty <= 20 then
local user_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
tt =  "["..user_name.."]("..user_name..")"
local mony = v[1]
local convert_mony = string.format("%.0f",mony)
local emoo = emojii[k]
num_ty = num_ty + 1
gflos = string.format("%.0f", mony):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
ty_anubis = ty_anubis..emoo.." "..gflos.." 💵 l "..tt.." \n"
gflous = string.format("%.0f", zrfee):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
gg = " ━━━━━━━━━\n• you) "..gflous.." 💵 l "..news.." \n\nملاحظة -> اي شخص مخالف للعبة بالغش او حاط يوزر بينحظر من اللعبه وتتصفر فلوسه"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url="t.me/ZAXY00"},
},
}
}
return bot.sendText(msg.chat_id,msg.id,ty_anubis..gg,"md",false, false, false, false, reply_markup)
end
if text == 'رشوة' or text == 'رشوه' or text == 'رشوى' or text == 'رشوا' then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:ttl(MARCOS.."iioo" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."iioo" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ من شوي اخذت رشوة استنى "..math.floor(hours).." دقيقة","md",true)
end
if Redis:ttl(MARCOS.."polrsho" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."polrsho" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ انتا بالسجن 🏤\n✧ استنى "..math.floor(hours).." دقيقة\n✦","md",true)
end
shkse = Redis:get(MARCOS.."shkse"..msg.sender_id.user_id)
if shkse == "طيبة" then
return bot.sendText(msg.chat_id,msg.id, "✧ شخصيتك طيبة مايمديك تاخذ رشوة","md",true)
end
local daddd = {"1", "2", "3", "4",}
local haddd = daddd[math.random(#daddd)]
if haddd == "1" or haddd == "2" or haddd == "3" then
local jjjo = math.random(200,7000);
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
bakigcj = ballanceed + jjjo
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , bakigcj)
bot.sendText(msg.chat_id,msg.id,"✧ هذه رشوة بطل زرف "..jjjo.." جنيه 💵","md",true)
Redis:setex(MARCOS.."iioo" .. msg.sender_id.user_id,620, true)
else
Redis:setex(MARCOS.."polrsho" .. msg.sender_id.user_id,320, true)
bot.sendText(msg.chat_id,msg.id, "✧ مسكتك الشرطة وانتا ترتشي 🚔\n✦","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == 'بخشيش' or text == 'بقشيش' then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:ttl(MARCOS.."iioo" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."iioo" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ من شوي اخذت بخشيش استنى "..math.floor(hours).." دقيقة","md",true)
end
shkse = Redis:get(MARCOS.."shkse"..msg.sender_id.user_id)
if shkse == "شريرة" then
return bot.sendText(msg.chat_id,msg.id, "✧ شخصيتك شريرة مايمديك تاخذ بخشيش","md",true)
end
local jjjo = math.random(200,5000);
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
bakigcj = ballanceed + jjjo
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , bakigcj)
bot.sendText(msg.chat_id,msg.id,"✧ تكرم وهي بخشيش "..jjjo.." جنيه 💵","md",true)
Redis:setex(MARCOS.."iioo" .. msg.sender_id.user_id,620, true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == 'زرف' and tonumber(msg.reply_to_message_id) == 0 then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`زرف` بالرد","md",true)
end
if text == 'زرف' or text == 'زرفو' or text == 'زرفه' and tonumber(msg.reply_to_message_id) ~= 0 then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
shkse = Redis:get(MARCOS.."shkse"..msg.sender_id.user_id)
if shkse == "طيبة" then
return bot.sendText(msg.chat_id,msg.id, "✧ شخصيتك طيبة مايمديك تزرف العالم","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)
return false
end
if Remsg.sender_id.user_id == msg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ بدك تزرف نفسك 🤡*","md",true)  
return false
end
if Redis:ttl(MARCOS.."polic" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."polic" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ انتا بالسجن 🏤 استنى "..math.floor(hours).." دقائق\n✦","md",true)
end
if Redis:ttl(MARCOS.."hrame" .. Remsg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."hrame" .. Remsg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ ذا المسكين مزروف قبل شوي\n✧ يمديك تزرفه بعد "..math.floor(hours).." دقيقة","md",true)
end
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
if tonumber(ballanceed) < 199 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تزرفه فلوسه اقل من 200 جنيه 💵","md",true)
end
shkseto = Redis:get(MARCOS.."shkse"..Remsg.sender_id.user_id)
if shkseto == "طيبة" then
local hrame = math.floor(math.random() * 200) + 1;
local ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
local ballancope = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
zrfne = ballanceed - hrame
zrfnee = ballancope + hrame
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(zrfnee))
Redis:set(MARCOS.."boob"..Remsg.sender_id.user_id , math.floor(zrfne))
Redis:setex(MARCOS.."hrame" .. Remsg.sender_id.user_id,620, true)
local zoropeo = Redis:get(MARCOS.."rrfff"..msg.sender_id.user_id) or 0
zoroprod = zoropeo + hrame
Redis:set(MARCOS.."rrfff"..msg.sender_id.user_id,zoroprod)
Redis:sadd(MARCOS.."rrfffid",msg.sender_id.user_id)
local ban = bot.getUser(Remsg.sender_id.user_id)
if ban.first_name then
news = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
news = " لا يوجد اسم"
end
Redis:set(MARCOS.."msrokid"..msg.chat_id..Remsg.sender_id.user_id,Remsg.sender_id.user_id)
Redis:set(MARCOS.."hrameid"..msg.chat_id..Remsg.sender_id.user_id,msg.sender_id.user_id)
Redis:set(MARCOS.."balcmsrok"..msg.chat_id..Remsg.sender_id.user_id,hrame)
Redis:setex(MARCOS.."timehrame"..msg.chat_id..msg.sender_id.user_id,30, true)
bot.deleteMessages(msg.chat_id,{[1]= msg.id})
bot.sendText(msg.chat_id,0, "✧ "..news.." في حرامي زرفك "..hrame.." جنيه 💵\n✧ رد عليه بكلمة ( شرطه )\n✧ معك 30 ثانية\n✦","md",true)
else
local hrame = math.floor(math.random() * 200) + 1;
local ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
local ballancope = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
zrfne = ballanceed - hrame
zrfnee = ballancope + hrame
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(zrfnee))
Redis:set(MARCOS.."boob"..Remsg.sender_id.user_id , math.floor(zrfne))
Redis:setex(MARCOS.."hrame" .. Remsg.sender_id.user_id,620, true)
local zoropeo = Redis:get(MARCOS.."rrfff"..msg.sender_id.user_id) or 0
zoroprod = zoropeo + hrame
Redis:set(MARCOS.."rrfff"..msg.sender_id.user_id,zoroprod)
Redis:sadd(MARCOS.."rrfffid",msg.sender_id.user_id)
bot.sendText(msg.chat_id,msg.id, "✧ خذ يالحرامي زرفته "..hrame.." جنيه 💵\n✦","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end

if text and text:match("^شرطه @(%S+)$") or text and text:match("^شرطة @(%S+)$") then
local UserName = text:match("^شرطه @(%S+)$") or text:match("^شرطة @(%S+)$")
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return bot.sendText(msg.chat_id,msg.id,"\n✧ مافيه حساب كذا ","md",true)
end
local UserInfo = bot.getUser(UserId_Info.id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)  
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local hrameid = Redis:get(MARCOS.."hrameid"..msg.chat_id..msg.sender_id.user_id)
shkse = Redis:get(MARCOS.."shkse"..msg.sender_id.user_id)
if shkse == "شريرة" then
return bot.sendText(msg.chat_id,msg.id, "✧ شخصيتك شريرة مايمديك تطلب الشرطة","md",true)
end
if Redis:get(MARCOS.."timehrame" .. hrameid) then
local hours = Redis:ttl(MARCOS.."timehrame" .. hrameid)
local msrokid = Redis:get(MARCOS.."msrokid"..msg.chat_id..msg.sender_id.user_id)
local hrameid = Redis:get(MARCOS.."hrameid"..msg.chat_id..msg.sender_id.user_id)
local balcmsrok = Redis:get(MARCOS.."balcmsrok"..msg.chat_id..msg.sender_id.user_id) or 0
if tonumber(hrameid) == UserId_Info.id and tonumber(msrokid) == msg.sender_id.user_id then
local ballancehrame = Redis:get(MARCOS.."boob"..hrameid) or 0
local ballancmsrok = Redis:get(MARCOS.."boob"..msrokid) or 0
ballancehramenow = tonumber(ballancehrame) - tonumber(balcmsrok)
ballancmsroknow = tonumber(ballancmsrok) + tonumber(balcmsrok)
Redis:set(MARCOS.."boob"..hrameid , ballancehramenow)
Redis:set(MARCOS.."boob"..msrokid , ballancmsroknow)
local ban = bot.getUser(hrameid)
if ban.first_name then
news = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
news = " لا يوجد اسم"
end
Redis:setex(MARCOS.."polic" .. hrameid,620, true)
Redis:del(MARCOS.."msrokid" ..msg.chat_id..msg.sender_id.user_id) 
Redis:del(MARCOS.."hrameid" ..msg.chat_id..msg.sender_id.user_id) 
Redis:del(MARCOS.."balcmsrok" ..msg.chat_id..msg.sender_id.user_id)
Redis:del(MARCOS.."timehrame" ..msg.chat_id..msg.sender_id.user_id)
bot.sendText(msg.chat_id,msg.id,"✧ كفو مسكته الشرطة 👨‍✈️\n✧ الحرامي -> "..news.."\n✧ تم اعادة فلوسك -> "..tonumber(balcmsrok).." جنيه 💵\n✧ سيتم سجن الحرامي\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id,"✧ تم التحقيق معه وتبين مو هو الحرامي\n✧ باقي معك "..math.floor(hours).." ثانية\n✦","md",true)
end
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end

if text == 'شرطه' or text == 'الشرطه' or text == 'شرطة' and tonumber(msg.reply_to_message_id) ~= 0 then
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)
return false
end
local hrameid = Redis:get(MARCOS.."hrameid"..msg.chat_id..msg.sender_id.user_id)
shkse = Redis:get(MARCOS.."shkse"..msg.sender_id.user_id)
if shkse == "شريرة" then
return bot.sendText(msg.chat_id,msg.id, "✧ شخصيتك شريرة مايمديك تطلب الشرطة","md",true)
end
if Redis:get(MARCOS.."timehrame" .. hrameid) then
local hours = Redis:ttl(MARCOS.."timehrame" .. hrameid)
local msrokid = Redis:get(MARCOS.."msrokid"..msg.chat_id..msg.sender_id.user_id)
local hrameid = Redis:get(MARCOS.."hrameid"..msg.chat_id..msg.sender_id.user_id)
local balcmsrok = Redis:get(MARCOS.."balcmsrok"..msg.chat_id..msg.sender_id.user_id) or 0
if tonumber(hrameid) == Remsg.sender_id.user_id and tonumber(msrokid) == msg.sender_id.user_id then
local ballancehrame = Redis:get(MARCOS.."boob"..hrameid) or 0
local ballancmsrok = Redis:get(MARCOS.."boob"..msrokid) or 0
ballancehramenow = tonumber(ballancehrame) - tonumber(balcmsrok)
ballancmsroknow = tonumber(ballancmsrok) + tonumber(balcmsrok)
Redis:set(MARCOS.."boob"..hrameid , ballancehramenow)
Redis:set(MARCOS.."boob"..msrokid , ballancmsroknow)
local ban = bot.getUser(hrameid)
if ban.first_name then
news = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
news = " لا يوجد اسم"
end
Redis:setex(MARCOS.."polic" .. hrameid,620, true)
Redis:del(MARCOS.."msrokid" ..msg.chat_id..msg.sender_id.user_id) 
Redis:del(MARCOS.."hrameid" ..msg.chat_id..msg.sender_id.user_id) 
Redis:del(MARCOS.."balcmsrok" ..msg.chat_id..msg.sender_id.user_id) 
Redis:del(MARCOS.."timehrame" ..msg.chat_id..msg.sender_id.user_id)
bot.sendText(msg.chat_id,msg.id,"✧ كفو مسكته الشرطة 👨‍✈️\n✧ الحرامي -> "..news.."\n✧ تم اعادة فلوسك -> "..tonumber(balcmsrok).." جنيه 💵\n✧ سيتم سجن الحرامي\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id,"✧ تم التحقيق معه وتبين مو هو الحرامي\n✧ باقي معك "..math.floor(hours).." ثانية\n✦","md",true)
end
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == 'راتب' or text == 'راتبي' then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:ttl(MARCOS.."iiioo" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."iiioo" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ راتبك بينزل بعد "..math.floor(hours).." دقيقة","md",true)
end
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
neews = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
neews = " لا يوجد "
end
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
shkse = Redis:get(MARCOS.."shkse"..msg.sender_id.user_id)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id) or 1
ratbtrans = Redis:get(MARCOS.."ratbtrans"..msg.sender_id.user_id) or 1
if shkse == "طيبة" then
if tonumber(ratbinc) >= 270 and tonumber(ratbtrans) == 10 then
local ratpep = ballancee + 500000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 300 or tonumber(ratbinc) == 301 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 500000 جنيه 💵\n✧ وظيفتك -> ملك 👑\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,300)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 500000 جنيه 💵\n✧ وظيفتك -> ملك 👑\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 240 and tonumber(ratbtrans) == 9 then
local ratpep = ballancee + 200000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id) or 0
if tonumber(ratbinc) == 270 or tonumber(ratbinc) == 271 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 200000 جنيه 💵\n✧ وظيفتك -> امير 🤵‍♂️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,270)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 200000 جنيه 💵\n✧ وظيفتك -> امير 🤵‍♂️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 210 and tonumber(ratbtrans) == 8 then
local ratpep = ballancee + 100000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 240 or tonumber(ratbinc) == 241 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 100000 جنيه 💵\n✧ وظيفتك -> وزير 🤵‍♂️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,240)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 100000 جنيه 💵\n✧ وظيفتك -> وزير 🤵‍♂️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 180 and tonumber(ratbtrans) == 7 then
local ratpep = ballancee + 70000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 210 or tonumber(ratbinc) == 211 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 70000 جنيه 💵\n✧ وظيفتك -> بزنس مان كبير 💸\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,210)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 70000 جنيه 💵\n✧ وظيفتك -> بزنس مان كبير 💸\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 150 and tonumber(ratbtrans) == 6 then
local ratpep = ballancee + 40000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 180 or tonumber(ratbinc) == 181 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 40000 جنيه 💵\n✧ وظيفتك -> تاجر صغير 💰\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,180)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 40000 جنيه 💵\n✧ وظيفتك -> تاجر صغير 💰\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 120 and tonumber(ratbtrans) == 5 then
local ratpep = ballancee + 25000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 150 or tonumber(ratbinc) == 151 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 25000 جنيه 💵\n✧ وظيفتك -> طيار 👨‍✈️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,150)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 25000 جنيه 💵\n✧ وظيفتك -> طيار 👨‍✈️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 90 and tonumber(ratbtrans) == 4 then
local ratpep = ballancee + 18000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 120 or tonumber(ratbinc) == 121 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 18000 جنيه 💵\n✧ وظيفتك -> دكتور 👨‍⚕️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,120)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 18000 جنيه 💵\n✧ وظيفتك -> دكتور 👨‍⚕️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 60 and tonumber(ratbtrans) == 3 then
local ratpep = ballancee + 9000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 90 or tonumber(ratbinc) == 91 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 9000 جنيه 💵\n✧ وظيفتك -> صيدلي 👨‍🔬\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,90)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 9000 جنيه 💵\n✧ وظيفتك -> صيدلي 👨‍🔬\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 30 and tonumber(ratbtrans) == 2 then
local ratpep = ballancee + 2500
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 60 or tonumber(ratbinc) == 61 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 2500 جنيه 💵\n✧ وظيفتك -> نجار 👨‍🔧\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,60)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 2500 جنيه 💵\n✧ وظيفتك -> نجار 👨‍🔧\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 1 and tonumber(ratbtrans) == 1 then
local ratpep = ballancee + 500
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 30 or tonumber(ratbinc) == 31 then
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,30)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 500 جنيه 💵\n✧ وظيفتك -> قروي 👨‍🌾\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 500 جنيه 💵\n✧ وظيفتك -> قروي 👨‍🌾\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
end
else
if tonumber(ratbinc) >= 270 and tonumber(ratbtrans) == 10 then
local ratpep = ballancee + 500000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 300 or tonumber(ratbinc) == 301 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 500000 جنيه 💵\n✧ وظيفتك -> ال تشابو 🧛‍♂️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,300)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 500000 جنيه 💵\n✧ وظيفتك -> ال تشابو 🧛‍♂️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 240 and tonumber(ratbtrans) == 9 then
local ratpep = ballancee + 200000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 270 or tonumber(ratbinc) == 271 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 200000 جنيه 💵\n✧ وظيفتك -> بائع ممنوعات دولي 🎩\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,270)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 200000 جنيه 💵\n✧ وظيفتك -> بائع ممنوعات دولي 🎩\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 210 and tonumber(ratbtrans) == 8 then
local ratpep = ballancee + 100000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 240 or tonumber(ratbinc) == 241 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 100000 جنيه 💵\n✧ وظيفتك -> تاجر ممنوعات 🧔‍♂️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,240)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 100000 جنيه 💵\n✧ وظيفتك -> تاجر ممنوعات 🧔‍♂️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 180 and tonumber(ratbtrans) == 7 then
local ratpep = ballancee + 70000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 210 or tonumber(ratbinc) == 211 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 70000 جنيه 💵\n✧ وظيفتك -> بق بوس العصابة 🗣\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,210)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 70000 جنيه 💵\n✧ وظيفتك -> بق بوس العصابة 🗣\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 150 and tonumber(ratbtrans) == 6 then
local ratpep = ballancee + 40000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 180 or tonumber(ratbinc) == 181 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 40000 جنيه 💵\n✧ وظيفتك -> مساعد رئيس العصابة 🦹‍♀️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,180)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 40000 جنيه 💵\n✧ وظيفتك -> مساعد رئيس العصابة 🦹‍♀️\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 120 and tonumber(ratbtrans) == 5 then
local ratpep = ballancee + 25000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 150 or tonumber(ratbinc) == 151 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 25000 جنيه 💵\n✧ وظيفتك -> عضو عصابة 🙍\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,150)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 25000 جنيه 💵\n✧ وظيفتك -> عضو عصابة 🙍\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 90 and tonumber(ratbtrans) == 4 then
local ratpep = ballancee + 18000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 120 or tonumber(ratbinc) == 121 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 18000 جنيه 💵\n✧ وظيفتك -> قاتل مأجور 🔫\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,120)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 18000 جنيه 💵\n✧ وظيفتك -> قاتل مأجور 🔫\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 60 and tonumber(ratbtrans) == 3 then
local ratpep = ballancee + 9000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 90 or tonumber(ratbinc) == 91 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 9000 جنيه 💵\n✧ وظيفتك -> قاتل 🕴\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,90)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 9000 جنيه 💵\n✧ وظيفتك -> قاتل 🕴\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 30 and tonumber(ratbtrans) == 2 then
local ratpep = ballancee + 2500
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 60 or tonumber(ratbinc) == 61 then
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 2500 جنيه 💵\n✧ وظيفتك -> سارق 🥷\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,60)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 2500 جنيه 💵\n✧ وظيفتك -> سارق 🥷\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
elseif tonumber(ratbinc) >= 0 and tonumber(ratbtrans) == 1 then
local ratpep = ballancee + 500
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ratpep))
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:setex(MARCOS.."iiioo" .. msg.sender_id.user_id,620, true)
Redis:incrby(MARCOS.."ratbinc"..msg.sender_id.user_id,1)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id)
if tonumber(ratbinc) == 30 or tonumber(ratbinc) == 31 then
Redis:set(MARCOS.."ratbinc"..msg.sender_id.user_id,30)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 500 جنيه 💵\n✧ وظيفتك -> مشرد 👣\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n\nتستطيع الان تطوير راتبك ارسل ( `تطوير راتب` )\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id,"✧ اشعار ايداع "..neews.."\n\n✧ المبلغ -> 500 جنيه 💵\n✧ وظيفتك -> مشرد 👣\n✧ نوع العملية -> اضافة راتب\n✧ تطوير الراتب -> "..tonumber(ratbinc).."\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
end
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == 'تطوير راتب' or text == 'تطوير الراتب' or text == 'تطوير راتبي' then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
shkse = Redis:get(MARCOS.."shkse"..msg.sender_id.user_id)
ratbinc = Redis:get(MARCOS.."ratbinc"..msg.sender_id.user_id) or 0
ratbtrans = Redis:get(MARCOS.."ratbtrans"..msg.sender_id.user_id) or 1
if shkse == "طيبة" then
if tonumber(ratbinc) == 270 then
if tonumber(ballanceed) < 1000000000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 1000000000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,10)
nowbalc = tonumber(ballancee) - 1000000000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 1000000000 جنيه 💵\n✧ اصبحت وظيفتك -> ملك 👑\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 240 then
if tonumber(ballanceed) < 200000000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 200000000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,9)
nowbalc = tonumber(ballancee) - 200000000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 200000000 جنيه 💵\n✧ اصبحت وظيفتك -> امير 🤵\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 210 then
if tonumber(ballanceed) < 30000000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 30000000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,8)
nowbalc = tonumber(ballancee) - 30000000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 30000000 جنيه 💵\n✧ اصبحت وظيفتك -> وزير 🤵\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 180 then
if tonumber(ballanceed) < 1000000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 1000000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,7)
nowbalc = tonumber(ballancee) - 1000000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 1000000 جنيه 💵\n✧ اصبحت وظيفتك -> بزنس مان كبير 💸\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 150 then
if tonumber(ballanceed) < 300000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 300000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,6)
nowbalc = tonumber(ballancee) - 300000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 300000 جنيه 💵\n✧ اصبحت وظيفتك -> تاجر صغير 💰\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 120 then
if tonumber(ballanceed) < 120000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 120000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,5)
nowbalc = tonumber(ballancee) - 120000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 120000 جنيه 💵\n✧ اصبحت وظيفتك -> طيار 👨\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 90 then
if tonumber(ballanceed) < 80000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 80000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,4)
nowbalc = tonumber(ballancee) - 80000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 80000 جنيه 💵\n✧ اصبحت وظيفتك -> دكتور 👨\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 60 then
if tonumber(ballanceed) < 30000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 30000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,3)
nowbalc = tonumber(ballancee) - 30000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 30000 جنيه 💵\n✧ اصبحت وظيفتك -> صيدلي ‍👨\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 30 then
if tonumber(ballanceed) < 3000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 3000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,2)
nowbalc = tonumber(ballancee) - 3000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 3000 جنيه 💵\n✧ اصبحت وظيفتك -> نجار 👨\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
else
return bot.sendText(msg.chat_id,msg.id,"✧ لا تستطيع تطوير راتبك حالياً\n✦","md",true)
end
else
if tonumber(ratbinc) == 270 then
if tonumber(ballanceed) < 1000000000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 1000000000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,10)
nowbalc = tonumber(ballancee) - 1000000000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 1000000000 جنيه 💵\n✧ اصبحت وظيفتك -> ال تشابو 🧛\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 240 then
if tonumber(ballanceed) < 200000000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 200000000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,9)
nowbalc = tonumber(ballancee) - 200000000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 200000000 جنيه 💵\n✧ اصبحت وظيفتك -> بائع ممنوعات دولي 🎩\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 210 then
if tonumber(ballanceed) < 30000000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 30000000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,8)
nowbalc = tonumber(ballancee) - 30000000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 30000000 جنيه 💵\n✧ اصبحت وظيفتك -> تاجر ممنوعات 🧔‍♂️\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 180 then
if tonumber(ballanceed) < 1000000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 1000000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,7)
nowbalc = tonumber(ballancee) - 1000000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 1000000 جنيه 💵\n✧ اصبحت وظيفتك -> بق بوس العصابة 🗣\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 150 then
if tonumber(ballanceed) < 300000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 300000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,6)
nowbalc = tonumber(ballancee) - 300000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 300000 جنيه 💵\n✧ اصبحت وظيفتك -> مساعد رئيس العصابة 🦹\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 120 then
if tonumber(ballanceed) < 120000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 120000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,5)
nowbalc = tonumber(ballancee) - 120000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 120000 جنيه 💵\n✧ اصبحت وظيفتك -> عضو عصابة 🙍\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 90 then
if tonumber(ballanceed) < 80000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 80000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,4)
nowbalc = tonumber(ballancee) - 80000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 80000 جنيه 💵\n✧ اصبحت وظيفتك -> قاتل مأجور 🔫\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 60 then
if tonumber(ballanceed) < 30000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 30000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,3)
nowbalc = tonumber(ballancee) - 30000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 30000 جنيه 💵\n✧ اصبحت وظيفتك -> قاتل 🕴\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
elseif tonumber(ratbinc) == 30 then
if tonumber(ballanceed) < 3000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تطور راتبك تحتاج مبلغ 3000 جنيه 💵","md",true)
end
Redis:del(MARCOS.."ratbtrans"..msg.sender_id.user_id)
Redis:set(MARCOS.."ratbtrans"..msg.sender_id.user_id,2)
nowbalc = tonumber(ballancee) - 3000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(nowbalc))
local convert_mony = string.format("%.0f",nowbalc)
bot.sendText(msg.chat_id,msg.id,"✧ اشعار تطوير راتب\n\n✧ المبلغ -> 3000 جنيه 💵\n✧ اصبحت وظيفتك -> سارق 🥷\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
else
return bot.sendText(msg.chat_id,msg.id,"✧ لا تستطيع تطوير راتبك حالياً\n✦","md",true)
end
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == 'هجوم' then
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`هجوم` المبلغ ( بالرد )","md",true)
end
if text and text:match("^هجوم (%d+)$") and msg.reply_to_message_id == 0 then
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`هجوم` المبلغ ( بالرد )","md",true)
end
if text and text:match('^هجوم (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^هجوم (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)  
return false
end
if Remsg.sender_id.user_id == msg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهاجم نفسك 🤡*","md",true)  
return false
end
if Redis:ttl(MARCOS.."attack" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."attack" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ خسرت بأخر معركة استنى "..math.floor(hours).." دقيقة","md",true)
end
if Redis:ttl(MARCOS.."defen" .. Remsg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."defen" .. Remsg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ الخصم خسر بأخر معركة\n✧ يمديك تهاجمه بعد "..math.floor(hours).." دقيقة","md",true)
end
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
ballancope = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
if tonumber(ballancope) < 100000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تهجم فلوسك اقل من 100000 جنيه 💵","md",true)
end
if tonumber(ballanceed) < 100000 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تهجم عليه فلوسه اقل من 100000 جنيه 💵","md",true)
end
if tonumber(coniss) < 9999 then
return bot.sendText(msg.chat_id,msg.id, "✧ الحد الادنى المسموح هو 10000 جنيه 💵\n✦","md",true)
end
if tonumber(ballancope) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي","md",true)
end
if tonumber(ballanceed) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسه ماتكفي","md",true)
end
local Textinggt = {"1", "2", "3", "4", "5", "6", "7", "8",}
local Descriptioont = Textinggt[math.random(#Textinggt)]
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
neews = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
neews = " لا يوجد اسم "
end
local bann = bot.getUser(Remsg.sender_id.user_id)
if bann.first_name then
neewss = "["..bann.first_name.."](tg://user?id="..bann.id..")"
else
neewss = " لا يوجد اسم"
end
if Descriptioont == "1" or Descriptioont == "3" then
local ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
local ballancope = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
zrfne = ballancope - coniss
drebattack = tonumber(coniss) / 100 * 25
drebattackk = tonumber(coniss) - math.floor(drebattack)
zrfnee = ballanceed + math.floor(drebattackk)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(zrfne))
Redis:set(MARCOS.."boob"..Remsg.sender_id.user_id , math.floor(zrfnee))
Redis:setex(MARCOS.."attack" .. msg.sender_id.user_id,600, true)
local convert_mony = string.format("%.0f",drebattackk)
local convert_monyy = string.format("%.0f",drebattack)
bot.sendText(msg.chat_id,msg.id, "✧ لقد خسرت في المعركة "..neews.." 🛡\n✧ الفائز -> "..neewss.."\n✧ الخاسر -> "..neews.."\n✧ الجائزة -> "..convert_mony.." جنيه 💵\n✧ الضريبة -> "..convert_monyy.." جنيه 💵\n✦","md",true)
elseif Descriptioont == "2" or Descriptioont == "4" or Descriptioont == "5" or  Descriptioont == "6" or Descriptioont == "8" then
local ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
local ballancope = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
begaatt = Redis:get(MARCOS.."numattack"..msg.sender_id.user_id) or 1000
numattackk = tonumber(begaatt) - 1
if numattackk == 0 then
numattackk = 1
end
attack = coniss / numattackk
zrfne = ballancope + math.floor(attack)
zrfnee = ballanceed - math.floor(attack)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(zrfne))
Redis:set(MARCOS.."boob"..Remsg.sender_id.user_id , math.floor(zrfnee))
Redis:setex(MARCOS.."defen" .. Remsg.sender_id.user_id,1800, true)
Redis:set(MARCOS.."numattack"..msg.sender_id.user_id , math.floor(numattackk))
local convert_mony = string.format("%.0f",math.floor(attack))
bot.sendText(msg.chat_id,msg.id, "✧ لقد فزت في المعركة\n✧ ودمرت قلعة "..neewss.." 🏰\n✧ الفائز -> "..neews.."\n✧ الخاسر -> "..neewss.."\n✧ الجائزة -> "..convert_mony.." جنيه 💵\n✧ نسبة قوة المهاجم اصبحت "..numattackk.." 🩸\n✦","md",true)
elseif Descriptioont == "7" then
local ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
local ballancope = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
halfzrf = coniss / 2
zrfne = ballancope - halfzrf
zrfnee = ballanceed + halfzrf
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(zrfne))
Redis:set(MARCOS.."boob"..Remsg.sender_id.user_id , math.floor(zrfnee))
Redis:setex(MARCOS.."attack" .. msg.sender_id.user_id,600, true)
local convert_mony = string.format("%.0f",math.floor(halfzrf))
bot.sendText(msg.chat_id,msg.id, "✧ لقد خسرت في المعركة "..neews.." 🛡\n✧ ولكن استطعت اعادة نصف الموارد\n✧ الفائز -> "..neewss.."\n✧ الخاسر -> "..neews.."\n✧ الجائزة -> "..convert_mony.." جنيه 💵\n✦","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == "المعرض" or text == "معرض" then
Redis:setex(MARCOS.."marad" .. msg.chat_id .. ":" .. msg.sender_id.user_id,60, true)
bot.sendText(msg.chat_id,msg.id,[[
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*

*✧ المعرض يقدم لكم ↑↓*

-> `سيارات`  🚗
-> `طيارات`  ✈️
-> `عقارات`  🏘
-> `مجوهرات`  💎

*- اضغط للنسخ ♡ ,,*

*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*
]],"md",true)  
return false
end
if text == "سيارات" and Redis:get(MARCOS.."marad" .. msg.chat_id .. ":" .. msg.sender_id.user_id) then
Redis:del(MARCOS.."marad" .. msg.chat_id .. ":" .. msg.sender_id.user_id) 
bot.sendText(msg.chat_id,msg.id,[[
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*

*✧ السيارات المتوفرة لدينا حالياً ↑↓*

-> `فيلار` - السعر -> 10000000 💵
-> `اكسنت` - السعر -> 9000000 💵
-> `كامري` - السعر -> 8000000 💵
-> `النترا` - السعر -> 7000000 💵
-> `هايلكس` - السعر -> 6000000 💵
-> `سوناتا` - السعر -> 5000000 💵
-> `كورولا` - السعر -> 4000000 💵

*✧ ارسل اسم السيارة والعدد*
*✧ مثال -> شراء سياره فيلار 2*

*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*
]],"md",true)  
return false
end
if text == "طيارات" and Redis:get(MARCOS.."marad" .. msg.chat_id .. ":" .. msg.sender_id.user_id) then
Redis:del(MARCOS.."marad" .. msg.chat_id .. ":" .. msg.sender_id.user_id) 
bot.sendText(msg.chat_id,msg.id,[[
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*

*✧ الطيارات المتوفرة لدينا حالياً ↑↓*

-> `شبح` - السعر -> 1000000000 💵
-> `سفر` - السعر -> 500000000 💵
-> `خاصه` - السعر -> 200000000 💵

*✧ ارسل اسم الطائرة والعدد*
*✧ مثال -> شراء طياره سفر 2*

*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*
]],"md",true)  
return false
end
if text == "عقارات" and Redis:get(MARCOS.."marad" .. msg.chat_id .. ":" .. msg.sender_id.user_id) then
Redis:del(MARCOS.."marad" .. msg.chat_id .. ":" .. msg.sender_id.user_id) 
bot.sendText(msg.chat_id,msg.id,[[
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*

*✧ العقارات المتوفرة لدينا حالياً ↑↓*

-> `قصر` - السعر -> 1000000 💵
-> `فيلا` - السعر -> 500000 💵
-> `منزل` - السعر -> 100000 💵

*✧ ارسل اسم العقار والعدد*
*✧ مثال -> شراء قصر 2*

*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*
]],"md",true)  
return false
end
if text == "مجوهرات" and Redis:get(MARCOS.."marad" .. msg.chat_id .. ":" .. msg.sender_id.user_id) then
Redis:del(MARCOS.."marad" .. msg.chat_id .. ":" .. msg.sender_id.user_id) 
bot.sendText(msg.chat_id,msg.id,[[
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*

*✧ المجوهرات المتوفرة لدينا حالياً ↑↓*

-> `ماسه` - السعر -> 1000000 💵
-> `قلاده` - السعر -> 500000 💵
-> `سوار` - السعر -> 200000 💵
-> `خاتم` - السعر -> 50000 💵

*✧ ارسل الاسم والعدد*
*✧ مثال -> شراء سوار 2*

*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*
]],"md",true)  
return false
end
if text and text:match('^شراء ماسه (.*)$') or text and text:match('^شراء ماسة (.*)$') then
local UserName = text:match('^شراء ماسه (.*)$') or text:match('^شراء ماسة (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار ماسه بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
masmgr = tonumber(coniss) * 1000000
if tonumber(ballance) < tonumber(masmgr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local mgrmasname = Redis:get(MARCOS.."mgrmasname"..msg.sender_id.user_id)
local mgrmasprice = Redis:get(MARCOS.."mgrmasprice"..msg.sender_id.user_id) or 0
local mgrmasnum = Redis:get(MARCOS.."mgrmasnum"..msg.sender_id.user_id) or 0
local mgrmasnow = tonumber(mgrmasnum) + tonumber(coniss)
Redis:set(MARCOS.."mgrmasnum"..msg.sender_id.user_id , mgrmasnow)
masnamed = "ماسه"
Redis:set(MARCOS.."mgrmasname"..msg.sender_id.user_id , masnamed)
Redis:set(MARCOS.."mgrmasprice"..msg.sender_id.user_id , 1000000)
totalypalice = tonumber(ballance) - tonumber(masmgr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(masmgr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء مجوهرات\nالنوع -> ماسه \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد ماساتك -> `"..mgrmasnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء قلاده (.*)$') or text and text:match('^شراء قلادة (.*)$') then
local UserName = text:match('^شراء قلاده (.*)$') or text:match('^شراء قلادة (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار قلاده بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
kldmgr = tonumber(coniss) * 500000
if tonumber(ballance) < tonumber(kldmgr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local mgrkldname = Redis:get(MARCOS.."mgrkldname"..msg.sender_id.user_id)
local mgrkldprice = Redis:get(MARCOS.."mgrkldprice"..msg.sender_id.user_id) or 0
local mgrkldnum = Redis:get(MARCOS.."mgrkldnum"..msg.sender_id.user_id) or 0
local mgrkldnow = tonumber(mgrkldnum) + tonumber(coniss)
Redis:set(MARCOS.."mgrkldnum"..msg.sender_id.user_id , mgrkldnow)
kldnamed = "قلاده"
Redis:set(MARCOS.."mgrkldname"..msg.sender_id.user_id , kldnamed)
Redis:set(MARCOS.."mgrkldprice"..msg.sender_id.user_id , 500000)
totalypalice = tonumber(ballance) - tonumber(kldmgr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(kldmgr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء مجوهرات\nالنوع -> قلاده \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد قلاداتك -> `"..mgrkldnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء سوار (.*)$') then
local UserName = text:match('^شراء سوار (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار سوار بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
swrmgr = tonumber(coniss) * 200000
if tonumber(ballance) < tonumber(swrmgr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local mgrswrname = Redis:get(MARCOS.."mgrswrname"..msg.sender_id.user_id)
local mgrswrprice = Redis:get(MARCOS.."mgrswrprice"..msg.sender_id.user_id) or 0
local mgrswrnum = Redis:get(MARCOS.."mgrswrnum"..msg.sender_id.user_id) or 0
local mgrswrnow = tonumber(mgrswrnum) + tonumber(coniss)
Redis:set(MARCOS.."mgrswrnum"..msg.sender_id.user_id , mgrswrnow)
swrnamed = "سوار"
Redis:set(MARCOS.."mgrswrname"..msg.sender_id.user_id , swrnamed)
Redis:set(MARCOS.."mgrswrprice"..msg.sender_id.user_id , 200000)
totalypalice = tonumber(ballance) - tonumber(swrmgr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(swrmgr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء مجوهرات\nالنوع -> سوار \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد اساورك -> `"..mgrswrnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء خاتم (.*)$') then
local UserName = text:match('^شراء خاتم (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار خاتم بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
ktmmgr = tonumber(coniss) * 50000
if tonumber(ballance) < tonumber(ktmmgr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local mgrktmname = Redis:get(MARCOS.."mgrktmname"..msg.sender_id.user_id)
local mgrktmprice = Redis:get(MARCOS.."mgrktmprice"..msg.sender_id.user_id) or 0
local mgrktmnum = Redis:get(MARCOS.."mgrktmnum"..msg.sender_id.user_id) or 0
local mgrktmnow = tonumber(mgrktmnum) + tonumber(coniss)
Redis:set(MARCOS.."mgrktmnum"..msg.sender_id.user_id , mgrktmnow)
ktmnamed = "خاتم"
Redis:set(MARCOS.."mgrktmname"..msg.sender_id.user_id , ktmnamed)
Redis:set(MARCOS.."mgrktmprice"..msg.sender_id.user_id , 50000)
totalypalice = tonumber(ballance) - tonumber(ktmmgr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(ktmmgr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء مجوهرات\nالنوع -> خاتم \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد خواتمك -> `"..mgrktmnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع ماسه (.*)$') then
local UserName = text:match('^بيع ماسه (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local mgrmasnum = Redis:get(MARCOS.."mgrmasnum"..msg.sender_id.user_id) or 0
if tonumber(mgrmasnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك ماسات ","md",true)
end
if tonumber(mgrmasnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." ماسه","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local mgrmasname = Redis:get(MARCOS.."mgrmasname"..msg.sender_id.user_id)
local mgrmasprice = Redis:get(MARCOS.."mgrmasprice"..msg.sender_id.user_id) or 0
local mgrmasnum = Redis:get(MARCOS.."mgrmasnum"..msg.sender_id.user_id) or 0
local mgrmasnow = tonumber(mgrmasnum) - tonumber(coniss)
Redis:set(MARCOS.."mgrmasnum"..msg.sender_id.user_id , mgrmasnow)
sellmgr = tonumber(coniss) * 900000
totalypalice = tonumber(ballanceed) + sellmgr
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local mgrmasnum = Redis:get(MARCOS.."mgrmasnum"..msg.sender_id.user_id) or 0
if tonumber(mgrmasnum) == 0 then
Redis:del(MARCOS.."mgrmasname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrmasnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع مجوهرات\nالنوع -> ماسه \nالعدد -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellmgr).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع قلاده (.*)$') or text and text:match('^شراء قلادة (.*)$') then
local UserName = text:match('^بيع قلاده (.*)$') or text:match('^شراء قلادة (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local mgrkldnum = Redis:get(MARCOS.."mgrkldnum"..msg.sender_id.user_id) or 0
if tonumber(mgrkldnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك قلادات ","md",true)
end
if tonumber(mgrkldnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." قلاده ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local mgrkldname = Redis:get(MARCOS.."mgrkldname"..msg.sender_id.user_id)
local mgrkldprice = Redis:get(MARCOS.."mgrkldprice"..msg.sender_id.user_id) or 0
local mgrkldnum = Redis:get(MARCOS.."mgrkldnum"..msg.sender_id.user_id) or 0
local mgrkldnow = tonumber(mgrkldnum) - tonumber(coniss)
Redis:set(MARCOS.."mgrkldnum"..msg.sender_id.user_id , mgrkldnow)
sellkld = tonumber(coniss) * 400000
totalypalice = tonumber(ballanceed) + sellkld
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local mgrkldnum = Redis:get(MARCOS.."mgrkldnum"..msg.sender_id.user_id) or 0
if tonumber(mgrkldnum) == 0 then
Redis:del(MARCOS.."mgrkldname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrkldnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع مجوهرات\nالنوع -> قلاده \nالعدد -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellkld).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع سوار (.*)$') then
local UserName = text:match('^بيع سوار (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local mgrswrnum = Redis:get(MARCOS.."mgrswrnum"..msg.sender_id.user_id) or 0
if tonumber(mgrswrnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك اساور ","md",true)
end
if tonumber(mgrswrnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سوار ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local mgrswrname = Redis:get(MARCOS.."mgrswrname"..msg.sender_id.user_id)
local mgrswrprice = Redis:get(MARCOS.."mgrswrprice"..msg.sender_id.user_id) or 0
local mgrswrnum = Redis:get(MARCOS.."mgrswrnum"..msg.sender_id.user_id) or 0
local mgrswrnow = tonumber(mgrswrnum) - tonumber(coniss)
Redis:set(MARCOS.."mgrswrnum"..msg.sender_id.user_id , mgrswrnow)
sellswr = tonumber(coniss) * 150000
totalypalice = tonumber(ballanceed) + sellswr
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local mgrswrnum = Redis:get(MARCOS.."mgrswrnum"..msg.sender_id.user_id) or 0
if tonumber(mgrswrnum) == 0 then
Redis:del(MARCOS.."mgrswrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrswrnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع مجوهرات\nالنوع -> سوار \nالعدد -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellswr).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع خاتم (.*)$') then
local UserName = text:match('^بيع خاتم (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local mgrktmnum = Redis:get(MARCOS.."mgrktmnum"..msg.sender_id.user_id) or 0
if tonumber(mgrktmnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك خواتم ","md",true)
end
if tonumber(mgrktmnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." خاتم ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local mgrktmname = Redis:get(MARCOS.."mgrktmname"..msg.sender_id.user_id)
local mgrktmprice = Redis:get(MARCOS.."mgrktmprice"..msg.sender_id.user_id) or 0
local mgrktmnum = Redis:get(MARCOS.."mgrktmnum"..msg.sender_id.user_id) or 0
local mgrktmnow = tonumber(mgrktmnum) - tonumber(coniss)
Redis:set(MARCOS.."mgrktmnum"..msg.sender_id.user_id , mgrktmnow)
sellktm = tonumber(coniss) * 40000
totalypalice = tonumber(ballanceed) + sellktm
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local mgrktmnum = Redis:get(MARCOS.."mgrktmnum"..msg.sender_id.user_id) or 0
if tonumber(mgrktmnum) == 0 then
Redis:del(MARCOS.."mgrktmname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrktmnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع مجوهرات\nالنوع -> خاتم \nالعدد -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellktm).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء ماسه (.*)$') or text and text:match('^اهداء ماسة (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء ماسه (.*)$') or text:match('^اهداء ماسة (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local mgrmasnum = Redis:get(MARCOS.."mgrmasnum"..msg.sender_id.user_id) or 0
if tonumber(mgrmasnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك ماسات ","md",true)
end
if tonumber(mgrmasnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." ماسه ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local mgrmasnum = Redis:get(MARCOS.."mgrmasnum"..msg.sender_id.user_id) or 0
local mgrmasnow = tonumber(mgrmasnum) - tonumber(coniss)
Redis:set(MARCOS.."mgrmasnum"..msg.sender_id.user_id , mgrmasnow)
local mgrmasnumm = Redis:get(MARCOS.."mgrmasnum"..Remsg.sender_id.user_id) or 0
local mgrmasnoww = tonumber(mgrmasnumm) + tonumber(coniss)
Redis:set(MARCOS.."mgrmasnum"..Remsg.sender_id.user_id , mgrmasnoww)
masnamed = "ماسه"
Redis:set(MARCOS.."mgrmasname"..Remsg.sender_id.user_id,masnamed)
local mgrmasnum = Redis:get(MARCOS.."mgrmasnum"..msg.sender_id.user_id) or 0
if tonumber(mgrmasnum) == 0 then
Redis:del(MARCOS.."mgrmasname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrmasnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) ماسه\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء قلاده (.*)$') or text and text:match('^اهداء قلادة (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء قلاده (.*)$') or text:match('^اهداء قلادة (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local mgrkldnum = Redis:get(MARCOS.."mgrkldnum"..msg.sender_id.user_id) or 0
if tonumber(mgrkldnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك قلادات ","md",true)
end
if tonumber(mgrkldnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." قلاده ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local mgrkldnum = Redis:get(MARCOS.."mgrkldnum"..msg.sender_id.user_id) or 0
local mgrkldnow = tonumber(mgrkldnum) - tonumber(coniss)
Redis:set(MARCOS.."mgrkldnum"..msg.sender_id.user_id , mgrkldnow)
local mgrkldnumm = Redis:get(MARCOS.."mgrkldnum"..Remsg.sender_id.user_id) or 0
local mgrkldnoww = tonumber(mgrkldnumm) + tonumber(coniss)
Redis:set(MARCOS.."mgrkldnum"..Remsg.sender_id.user_id , mgrkldnoww)
kldnamed = "قلاده"
Redis:set(MARCOS.."mgrkldname"..Remsg.sender_id.user_id,kldnamed)
local mgrkldnum = Redis:get(MARCOS.."mgrkldnum"..msg.sender_id.user_id) or 0
if tonumber(mgrkldnum) == 0 then
Redis:del(MARCOS.."mgrkldname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrkldnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) قلاده\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء سوار (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء سوار (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local mgrswrnum = Redis:get(MARCOS.."mgrswrnum"..msg.sender_id.user_id) or 0
if tonumber(mgrswrnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك اساور ","md",true)
end
if tonumber(mgrswrnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سوار","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local mgrswrnum = Redis:get(MARCOS.."mgrswrnum"..msg.sender_id.user_id) or 0
local mgrswrnow = tonumber(mgrswrnum) - tonumber(coniss)
Redis:set(MARCOS.."mgrswrnum"..msg.sender_id.user_id , mgrswrnow)
local mgrswrnumm = Redis:get(MARCOS.."mgrswrnum"..Remsg.sender_id.user_id) or 0
local mgrswrnoww = tonumber(mgrswrnumm) + tonumber(coniss)
Redis:set(MARCOS.."mgrswrnum"..Remsg.sender_id.user_id , mgrswrnoww)
swrnamed = "سوار"
Redis:set(MARCOS.."mgrswrname"..Remsg.sender_id.user_id,swrnamed)
local mgrswrnum = Redis:get(MARCOS.."mgrswrnum"..msg.sender_id.user_id) or 0
if tonumber(mgrswrnum) == 0 then
Redis:del(MARCOS.."mgrswrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrswrnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) سوار\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء خاتم (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء خاتم (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local mgrktmnum = Redis:get(MARCOS.."mgrktmnum"..msg.sender_id.user_id) or 0
if tonumber(mgrktmnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك خواتم ","md",true)
end
if tonumber(mgrktmnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." خاتم","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local mgrktmnum = Redis:get(MARCOS.."mgrktmnum"..msg.sender_id.user_id) or 0
local mgrktmnow = tonumber(mgrktmnum) - tonumber(coniss)
Redis:set(MARCOS.."mgrktmnum"..msg.sender_id.user_id , mgrktmnow)
local mgrktmnumm = Redis:get(MARCOS.."mgrktmnum"..Remsg.sender_id.user_id) or 0
local mgrktmnoww = tonumber(mgrktmnumm) + tonumber(coniss)
Redis:set(MARCOS.."mgrktmnum"..Remsg.sender_id.user_id , mgrktmnoww)
ktmnamed = "خاتم"
Redis:set(MARCOS.."mgrktmname"..Remsg.sender_id.user_id,ktmnamed)
local mgrktmnum = Redis:get(MARCOS.."mgrktmnum"..msg.sender_id.user_id) or 0
if tonumber(mgrktmnum) == 0 then
Redis:del(MARCOS.."mgrktmname"..msg.sender_id.user_id)
Redis:del(MARCOS.."mgrktmnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) خاتم\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء قصر (.*)$') then
local UserName = text:match('^شراء قصر (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار قصر بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
ksrakr = tonumber(coniss) * 1000000
if tonumber(ballance) < tonumber(ksrakr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local akrksrname = Redis:get(MARCOS.."akrksrname"..msg.sender_id.user_id)
local akrksrprice = Redis:get(MARCOS.."akrksrprice"..msg.sender_id.user_id) or 0
local akrksrnum = Redis:get(MARCOS.."akrksrnum"..msg.sender_id.user_id) or 0
local akrksrnow = tonumber(akrksrnum) + tonumber(coniss)
Redis:set(MARCOS.."akrksrnum"..msg.sender_id.user_id , akrksrnow)
ksrnamed = "قصر"
Redis:set(MARCOS.."akrksrname"..msg.sender_id.user_id , ksrnamed)
Redis:set(MARCOS.."akrksrprice"..msg.sender_id.user_id , 1000000)
totalypalice = tonumber(ballance) - tonumber(ksrakr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(ksrakr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء عقار\nنوع العقار -> قصر \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد قصورك -> `"..akrksrnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء فيلا (.*)$') then
local UserName = text:match('^شراء فيلا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار فيلا بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
felakr = tonumber(coniss) * 500000
if tonumber(ballance) < tonumber(felakr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local akrfelname = Redis:get(MARCOS.."akrfelname"..msg.sender_id.user_id)
local akrfelprice = Redis:get(MARCOS.."akrfelprice"..msg.sender_id.user_id) or 0
local akrfelnum = Redis:get(MARCOS.."akrfelnum"..msg.sender_id.user_id) or 0
local akrfelnow = tonumber(akrfelnum) + tonumber(coniss)
Redis:set(MARCOS.."akrfelnum"..msg.sender_id.user_id , akrfelnow)
felnamed = "فيلا"
Redis:set(MARCOS.."akrfelname"..msg.sender_id.user_id , felnamed)
Redis:set(MARCOS.."akrfelprice"..msg.sender_id.user_id , 500000)
totalypalice = tonumber(ballance) - tonumber(felakr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(felakr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء عقار\nنوع العقار -> قصر \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد فيلاتك -> `"..akrfelnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء منزل (.*)$') then
local UserName = text:match('^شراء منزل (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار منزل بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
mnzakr = tonumber(coniss) * 200000
if tonumber(ballance) < tonumber(mnzakr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local akrmnzname = Redis:get(MARCOS.."akrmnzname"..msg.sender_id.user_id)
local akrmnzprice = Redis:get(MARCOS.."akrmnzprice"..msg.sender_id.user_id) or 0
local akrmnznum = Redis:get(MARCOS.."akrmnznum"..msg.sender_id.user_id) or 0
local akrmnznow = tonumber(akrmnznum) + tonumber(coniss)
Redis:set(MARCOS.."akrmnznum"..msg.sender_id.user_id , akrmnznow)
mnznamed = "منزل"
Redis:set(MARCOS.."akrmnzname"..msg.sender_id.user_id , mnznamed)
Redis:set(MARCOS.."akrmnzprice"..msg.sender_id.user_id , 200000)
totalypalice = tonumber(ballance) - tonumber(mnzakr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(mnzakr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء عقار\nنوع العقار -> منزل \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد منازلك -> `"..akrmnznow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع قصر (.*)$') then
local UserName = text:match('^بيع قصر (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local akrksrnum = Redis:get(MARCOS.."akrksrnum"..msg.sender_id.user_id) or 0
if tonumber(akrksrnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك قصور ","md",true)
end
if tonumber(akrksrnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." قصر","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local akrksrname = Redis:get(MARCOS.."akrksrname"..msg.sender_id.user_id)
local akrksrprice = Redis:get(MARCOS.."akrksrprice"..msg.sender_id.user_id) or 0
local akrksrnum = Redis:get(MARCOS.."akrksrnum"..msg.sender_id.user_id) or 0
local akrksrnow = tonumber(akrksrnum) - tonumber(coniss)
Redis:set(MARCOS.."akrksrnum"..msg.sender_id.user_id , akrksrnow)
sellakr = tonumber(coniss) * 900000
totalypalice = tonumber(ballanceed) + sellakr
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local akrksrnum = Redis:get(MARCOS.."akrksrnum"..msg.sender_id.user_id) or 0
if tonumber(akrksrnum) == 0 then
Redis:del(MARCOS.."akrksrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrksrnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع عقار\nنوع العقار -> قصر \nالعدد -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellakr).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع فيلا (.*)$') then
local UserName = text:match('^بيع فيلا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local akrfelnum = Redis:get(MARCOS.."akrfelnum"..msg.sender_id.user_id) or 0
if tonumber(akrfelnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك فيلات ","md",true)
end
if tonumber(akrfelnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." فيلا ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local akrfelname = Redis:get(MARCOS.."akrfelname"..msg.sender_id.user_id)
local akrfelprice = Redis:get(MARCOS.."akrfelprice"..msg.sender_id.user_id) or 0
local akrfelnum = Redis:get(MARCOS.."akrfelnum"..msg.sender_id.user_id) or 0
local akrfelnow = tonumber(akrfelnum) - tonumber(coniss)
Redis:set(MARCOS.."akrfelnum"..msg.sender_id.user_id , akrfelnow)
felakr = tonumber(coniss) * 400000
totalypalice = tonumber(ballanceed) + felakr
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local akrfelnum = Redis:get(MARCOS.."akrfelnum"..msg.sender_id.user_id) or 0
if tonumber(akrfelnum) == 0 then
Redis:del(MARCOS.."akrfelname"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrfelnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع عقار\nنوع العقار -> فيلا \nالعدد -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(felakr).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع منزل (.*)$') then
local UserName = text:match('^بيع منزل (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local akrmnznum = Redis:get(MARCOS.."akrmnznum"..msg.sender_id.user_id) or 0
if tonumber(akrmnznum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك منازل ","md",true)
end
if tonumber(akrmnznum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." منزل ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local akrmnzname = Redis:get(MARCOS.."akrmnzname"..msg.sender_id.user_id)
local akrmnzprice = Redis:get(MARCOS.."akrmnzprice"..msg.sender_id.user_id) or 0
local akrmnznum = Redis:get(MARCOS.."akrmnznum"..msg.sender_id.user_id) or 0
local akrmnznow = tonumber(akrmnznum) - tonumber(coniss)
Redis:set(MARCOS.."akrmnznum"..msg.sender_id.user_id , akrmnznow)
mnzakr = tonumber(coniss) * 90000
totalypalice = tonumber(ballanceed) + mnzakr
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local akrmnznum = Redis:get(MARCOS.."akrmnznum"..msg.sender_id.user_id) or 0
if tonumber(akrmnznum) == 0 then
Redis:del(MARCOS.."akrmnzname"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrmnznum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع عقار\nنوع العقار -> منزل \nالعدد -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(mnzakr).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء قصر (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء قصر (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local akrksrnum = Redis:get(MARCOS.."akrksrnum"..msg.sender_id.user_id) or 0
if tonumber(akrksrnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك قصور ","md",true)
end
if tonumber(akrksrnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." قصر ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local akrksrnum = Redis:get(MARCOS.."akrksrnum"..msg.sender_id.user_id) or 0
local akrksrnow = tonumber(akrksrnum) - tonumber(coniss)
Redis:set(MARCOS.."akrksrnum"..msg.sender_id.user_id , akrksrnow)
local akrksrnumm = Redis:get(MARCOS.."akrksrnum"..Remsg.sender_id.user_id) or 0
local akrksrnoww = tonumber(akrksrnumm) + tonumber(coniss)
Redis:set(MARCOS.."akrksrnum"..Remsg.sender_id.user_id , akrksrnoww)
ksrnamed = "قصر"
Redis:set(MARCOS.."akrksrname"..Remsg.sender_id.user_id,ksrnamed)
local akrksrnum = Redis:get(MARCOS.."akrksrnum"..msg.sender_id.user_id) or 0
if tonumber(akrksrnum) == 0 then
Redis:del(MARCOS.."akrksrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrksrnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) قصر\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء فيلا (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء فيلا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local akrfelnum = Redis:get(MARCOS.."akrfelnum"..msg.sender_id.user_id) or 0
if tonumber(akrfelnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك فيلات ","md",true)
end
if tonumber(akrfelnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." فيلا ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local akrfelnum = Redis:get(MARCOS.."akrfelnum"..msg.sender_id.user_id) or 0
local akrfelnow = tonumber(akrfelnum) - tonumber(coniss)
Redis:set(MARCOS.."akrfelnum"..msg.sender_id.user_id , akrfelnow)
local akrfelnumm = Redis:get(MARCOS.."akrfelnum"..Remsg.sender_id.user_id) or 0
local akrfelnoww = tonumber(akrfelnumm) + tonumber(coniss)
Redis:set(MARCOS.."akrfelnum"..Remsg.sender_id.user_id , akrfelnoww)
felnamed = "فيلا"
Redis:set(MARCOS.."akrfelname"..Remsg.sender_id.user_id,felnamed)
local akrfelnum = Redis:get(MARCOS.."akrfelnum"..msg.sender_id.user_id) or 0
if tonumber(akrfelnum) == 0 then
Redis:del(MARCOS.."akrfelname"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrfelnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) فيلا\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء منزل (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء منزل (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local akrmnznum = Redis:get(MARCOS.."akrmnznum"..msg.sender_id.user_id) or 0
if tonumber(akrmnznum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك منازل ","md",true)
end
if tonumber(akrmnznum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." منزل","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local akrmnznum = Redis:get(MARCOS.."akrmnznum"..msg.sender_id.user_id) or 0
local akrmnznow = tonumber(akrmnznum) - tonumber(coniss)
Redis:set(MARCOS.."akrmnznum"..msg.sender_id.user_id , akrmnznow)
local akrmnznumm = Redis:get(MARCOS.."akrmnznum"..Remsg.sender_id.user_id) or 0
local akrmnznoww = tonumber(akrmnznumm) + tonumber(coniss)
Redis:set(MARCOS.."akrmnznum"..Remsg.sender_id.user_id , akrmnznoww)
mnznamed = "منزل"
Redis:set(MARCOS.."akrmnzname"..Remsg.sender_id.user_id,mnznamed)
local akrmnznum = Redis:get(MARCOS.."akrmnznum"..msg.sender_id.user_id) or 0
if tonumber(akrmnznum) == 0 then
Redis:del(MARCOS.."akrmnzname"..msg.sender_id.user_id)
Redis:del(MARCOS.."akrmnznum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) منزل\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء طياره شبح (.*)$') or text and text:match('^شراء طيارة شبح (.*)$') then
local UserName = text:match('^شراء طياره شبح (.*)$') or text:match('^شراء طيارة شبح (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار طياره شبح بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
shbhair = tonumber(coniss) * 1000000000
if tonumber(ballance) < tonumber(shbhair) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local airshbhname = Redis:get(MARCOS.."airshbhname"..msg.sender_id.user_id)
local airshbhprice = Redis:get(MARCOS.."airshbhprice"..msg.sender_id.user_id) or 0
local airshbhnum = Redis:get(MARCOS.."airshbhnum"..msg.sender_id.user_id) or 0
local airshbhnow = tonumber(airshbhnum) + tonumber(coniss)
Redis:set(MARCOS.."airshbhnum"..msg.sender_id.user_id , airshbhnow)
shbhnamed = "شبح"
Redis:set(MARCOS.."airshbhname"..msg.sender_id.user_id , shbhnamed)
Redis:set(MARCOS.."airshbhprice"..msg.sender_id.user_id , 1000000000)
totalypalice = tonumber(ballance) - tonumber(shbhair)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(shbhair))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء طائرة\nنوع الطائرة -> شبح \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد طائراتك الشبح -> `"..airshbhnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء طياره سفر (.*)$') or text and text:match('^شراء طيارة سفر (.*)$') then
local UserName = text:match('^شراء طياره سفر (.*)$') or text:match('^شراء طيارة سفر (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار طياره سفر بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
sfarair = tonumber(coniss) * 500000000
if tonumber(ballance) < tonumber(sfarair) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local airsfarname = Redis:get(MARCOS.."airsfarname"..msg.sender_id.user_id)
local airsfarprice = Redis:get(MARCOS.."airsfarprice"..msg.sender_id.user_id) or 0
local airsfarnum = Redis:get(MARCOS.."airsfarnum"..msg.sender_id.user_id) or 0
local airsfarnow = tonumber(airsfarnum) + tonumber(coniss)
Redis:set(MARCOS.."airsfarnum"..msg.sender_id.user_id , airsfarnow)
sfarnamed = "سفر"
Redis:set(MARCOS.."airsfarname"..msg.sender_id.user_id , sfarnamed)
Redis:set(MARCOS.."airsfarprice"..msg.sender_id.user_id , 500000000)
totalypalice = tonumber(ballance) - tonumber(sfarair)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(sfarair))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء طائرة\nنوع الطائرة -> سفر \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد طائراتك السفر -> `"..airsfarnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء طياره خاصه (.*)$') or text and text:match('^شراء طيارة خاصه (.*)$') then
local UserName = text:match('^شراء طياره خاصه (.*)$') or text:match('^شراء طيارة خاصه (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار طياره خاصه بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
khasair = tonumber(coniss) * 200000000
if tonumber(ballance) < tonumber(khasair) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local airkhasname = Redis:get(MARCOS.."airkhasname"..msg.sender_id.user_id)
local airkhasprice = Redis:get(MARCOS.."airkhasprice"..msg.sender_id.user_id) or 0
local airkhasnum = Redis:get(MARCOS.."airkhasnum"..msg.sender_id.user_id) or 0
local airkhasnow = tonumber(airkhasnum) + tonumber(coniss)
Redis:set(MARCOS.."airkhasnum"..msg.sender_id.user_id , airkhasnow)
khasnamed = "خاصه"
Redis:set(MARCOS.."airkhasname"..msg.sender_id.user_id , khasnamed)
Redis:set(MARCOS.."airkhasprice"..msg.sender_id.user_id , 200000000)
totalypalice = tonumber(ballance) - tonumber(khasair)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(khasair))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء طائرة\nنوع الطائرة -> خاصه \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد طائراتك الخاصه -> `"..airkhasnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع طياره شبح (.*)$') or text and text:match('^بيع طيارة شبح (.*)$') then
local UserName = text:match('^بيع طياره شبح (.*)$') or text:match('^بيع طيارة شبح (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local airshbhnum = Redis:get(MARCOS.."airshbhnum"..msg.sender_id.user_id) or 0
if tonumber(airshbhnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك طائرات شبح ","md",true)
end
if tonumber(airshbhnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." طيارة شبح ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local airshbhname = Redis:get(MARCOS.."airshbhname"..msg.sender_id.user_id)
local airshbhprice = Redis:get(MARCOS.."airshbhprice"..msg.sender_id.user_id) or 0
local airshbhnum = Redis:get(MARCOS.."airshbhnum"..msg.sender_id.user_id) or 0
local airshbhnow = tonumber(airshbhnum) - tonumber(coniss)
Redis:set(MARCOS.."airshbhnum"..msg.sender_id.user_id , airshbhnow)
sellair = tonumber(coniss) * 900000000
totalypalice = tonumber(ballanceed) + sellair
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local airshbhnum = Redis:get(MARCOS.."airshbhnum"..msg.sender_id.user_id) or 0
if tonumber(airshbhnum) == 0 then
Redis:del(MARCOS.."airshbhname"..msg.sender_id.user_id)
Redis:del(MARCOS.."airshbhnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع طائرة\nنوع الطائرة -> شبح \nعدد الطائرات -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellair).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع طياره سفر (.*)$') or text and text:match('^بيع طيارة سفر (.*)$') then
local UserName = text:match('^بيع طياره سفر (.*)$') or text:match('^بيع طيارة سفر (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local airsfarnum = Redis:get(MARCOS.."airsfarnum"..msg.sender_id.user_id) or 0
if tonumber(airsfarnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك طائرات سفر ","md",true)
end
if tonumber(airsfarnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." طيارة سفر ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local airsfarname = Redis:get(MARCOS.."airsfarname"..msg.sender_id.user_id)
local airsfarprice = Redis:get(MARCOS.."airsfarprice"..msg.sender_id.user_id) or 0
local airsfarnum = Redis:get(MARCOS.."airsfarnum"..msg.sender_id.user_id) or 0
local airsfarnow = tonumber(airsfarnum) - tonumber(coniss)
Redis:set(MARCOS.."airsfarnum"..msg.sender_id.user_id , airsfarnow)
sellair = tonumber(coniss) * 400000000
totalypalice = tonumber(ballanceed) + sellair
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local airsfarnum = Redis:get(MARCOS.."airsfarnum"..msg.sender_id.user_id) or 0
if tonumber(airsfarnum) == 0 then
Redis:del(MARCOS.."airsfarname"..msg.sender_id.user_id)
Redis:del(MARCOS.."airsfarnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع طائرة\nنوع الطائرة -> سفر \nعدد الطائرات -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellair).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع طياره خاصه (.*)$') or text and text:match('^بيع طيارة خاصه (.*)$') then
local UserName = text:match('^بيع طياره خاصه (.*)$') or text:match('^بيع طيارة خاصه (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local airkhasnum = Redis:get(MARCOS.."airkhasnum"..msg.sender_id.user_id) or 0
if tonumber(airkhasnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك طائرات خاصه ","md",true)
end
if tonumber(airkhasnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." طيارة خاصه ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local airkhasname = Redis:get(MARCOS.."airkhasname"..msg.sender_id.user_id)
local airkhasprice = Redis:get(MARCOS.."airkhasprice"..msg.sender_id.user_id) or 0
local airkhasnum = Redis:get(MARCOS.."airkhasnum"..msg.sender_id.user_id) or 0
local airkhasnow = tonumber(airkhasnum) - tonumber(coniss)
Redis:set(MARCOS.."airkhasnum"..msg.sender_id.user_id , airkhasnow)
sellair = tonumber(coniss) * 150000000
totalypalice = tonumber(ballanceed) + sellair
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local airkhasnum = Redis:get(MARCOS.."airkhasnum"..msg.sender_id.user_id) or 0
if tonumber(airkhasnum) == 0 then
Redis:del(MARCOS.."airkhasname"..msg.sender_id.user_id)
Redis:del(MARCOS.."airkhasnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع طائرة\nنوع الطائرة -> خاصه \nعدد الطائرات -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellair).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء طائره شبح (.*)$') or text and text:match('^اهداء طائرة شبح (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء طائره شبح (.*)$') or text:match('^اهداء طائرة شبح (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local airshbhnum = Redis:get(MARCOS.."airshbhnum"..msg.sender_id.user_id) or 0
if tonumber(airshbhnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك طائرات شبح ","md",true)
end
if tonumber(airshbhnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." طائرة شبح ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local airshbhnum = Redis:get(MARCOS.."airshbhnum"..msg.sender_id.user_id) or 0
local airshbhnow = tonumber(airshbhnum) - tonumber(coniss)
Redis:set(MARCOS.."airshbhnum"..msg.sender_id.user_id , airshbhnow)
local airshbhnumm = Redis:get(MARCOS.."airshbhnum"..Remsg.sender_id.user_id) or 0
local airshbhnoww = tonumber(airshbhnumm) + tonumber(coniss)
Redis:set(MARCOS.."airshbhnum"..Remsg.sender_id.user_id , airshbhnoww)
shbhnamed = "شبح"
Redis:set(MARCOS.."airshbhname"..Remsg.sender_id.user_id,shbhnamed)
local airshbhnum = Redis:get(MARCOS.."airshbhnum"..msg.sender_id.user_id) or 0
if tonumber(airshbhnum) == 0 then
Redis:del(MARCOS.."airshbhname"..msg.sender_id.user_id)
Redis:del(MARCOS.."airshbhnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) طائرة شبح\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء طائره سفر (.*)$') or text and text:match('^اهداء طائرة سفر (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء طائره سفر (.*)$') or text:match('^اهداء طائرة سفر (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local airsfarnum = Redis:get(MARCOS.."airsfarnum"..msg.sender_id.user_id) or 0
if tonumber(airsfarnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك طائرات سفر ","md",true)
end
if tonumber(airsfarnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." طائرة سفر ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local airsfarnum = Redis:get(MARCOS.."airsfarnum"..msg.sender_id.user_id) or 0
local airsfarnow = tonumber(airsfarnum) - tonumber(coniss)
Redis:set(MARCOS.."airsfarnum"..msg.sender_id.user_id , airsfarnow)
local airsfarnumm = Redis:get(MARCOS.."airsfarnum"..Remsg.sender_id.user_id) or 0
local airsfarnoww = tonumber(airsfarnumm) + tonumber(coniss)
Redis:set(MARCOS.."airsfarnum"..Remsg.sender_id.user_id , airsfarnoww)
sfarnamed = "سفر"
Redis:set(MARCOS.."airsfarname"..Remsg.sender_id.user_id,sfarnamed)
local airsfarnum = Redis:get(MARCOS.."airsfarnum"..msg.sender_id.user_id) or 0
if tonumber(airsfarnum) == 0 then
Redis:del(MARCOS.."airsfarname"..msg.sender_id.user_id)
Redis:del(MARCOS.."airsfarnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) طائرة سفر\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء طائره خاصه (.*)$') or text and text:match('^اهداء طائرة خاصه (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء طائره خاصه (.*)$') or text:match('^اهداء طائرة خاصه (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local airkhasnum = Redis:get(MARCOS.."airkhasnum"..msg.sender_id.user_id) or 0
if tonumber(airkhasnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك طائرات خاصه ","md",true)
end
if tonumber(airkhasnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." طائرة خاصه ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local airkhasnum = Redis:get(MARCOS.."airkhasnum"..msg.sender_id.user_id) or 0
local airkhasnow = tonumber(airkhasnum) - tonumber(coniss)
Redis:set(MARCOS.."airkhasnum"..msg.sender_id.user_id , airkhasnow)
local airkhasnumm = Redis:get(MARCOS.."airkhasnum"..Remsg.sender_id.user_id) or 0
local airkhasnoww = tonumber(airkhasnumm) + tonumber(coniss)
Redis:set(MARCOS.."airkhasnum"..Remsg.sender_id.user_id , airkhasnoww)
khasnamed = "خاصه"
Redis:set(MARCOS.."airkhasname"..Remsg.sender_id.user_id,khasnamed)
local airkhasnum = Redis:get(MARCOS.."airkhasnum"..msg.sender_id.user_id) or 0
if tonumber(airkhasnum) == 0 then
Redis:del(MARCOS.."airkhasname"..msg.sender_id.user_id)
Redis:del(MARCOS.."airkhasnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) طائرة خاصه\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء سياره فيلار (.*)$') or text and text:match('^شراء سيارة فيلار (.*)$') then
local UserName = text:match('^شراء سياره فيلار (.*)$') or text:match('^شراء سيارة فيلار (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار سياره فيلار بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
rangpr = tonumber(coniss) * 10000000
if tonumber(ballance) < tonumber(rangpr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local carrangname = Redis:get(MARCOS.."carrangname"..msg.sender_id.user_id)
local carrangprice = Redis:get(MARCOS.."carrangprice"..msg.sender_id.user_id) or 0
local carrangnum = Redis:get(MARCOS.."carrangnum"..msg.sender_id.user_id) or 0
local carrangnow = tonumber(carrangnum) + tonumber(coniss)
Redis:set(MARCOS.."carrangnum"..msg.sender_id.user_id , carrangnow)
rangnamed = "فيلار"
Redis:set(MARCOS.."carrangname"..msg.sender_id.user_id , rangnamed)
Redis:set(MARCOS.."carrangprice"..msg.sender_id.user_id , 10000000)
totalypalice = tonumber(ballance) - tonumber(rangpr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(rangpr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء سيارة\nنوع السيارة -> فيلار \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد سياراتك الفيلار -> `"..carrangnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء سياره اكسنت (.*)$') or text and text:match('^شراء سيارة اكسنت (.*)$') then
local UserName = text:match('^شراء سياره اكسنت (.*)$') or text:match('^شراء سيارة اكسنت (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار سياره اكسنت بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
accepr = tonumber(coniss) * 9000000
if tonumber(ballance) < tonumber(accepr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local caraccename = Redis:get(MARCOS.."caraccename"..msg.sender_id.user_id)
local caracceprice = Redis:get(MARCOS.."caracceprice"..msg.sender_id.user_id) or 0
local caraccenum = Redis:get(MARCOS.."caraccenum"..msg.sender_id.user_id) or 0
local caraccenow = tonumber(caraccenum) + tonumber(coniss)
Redis:set(MARCOS.."caraccenum"..msg.sender_id.user_id , caraccenow)
accenamed = "اكسنت"
Redis:set(MARCOS.."caraccename"..msg.sender_id.user_id , accenamed)
Redis:set(MARCOS.."caracceprice"..msg.sender_id.user_id , 9000000)
totalypalice = tonumber(ballance) - tonumber(accepr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(accepr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء سيارة\nنوع السيارة -> اكسنت \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد سياراتك الاكسنت -> `"..caraccenow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء سياره كامري (.*)$') or text and text:match('^شراء سيارة كامري (.*)$') then
local UserName = text:match('^شراء سياره كامري (.*)$') or text:match('^شراء سيارة كامري (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار سياره كامري بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
camrpr = tonumber(coniss) * 8000000
if tonumber(ballance) < tonumber(camrpr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local carcamrname = Redis:get(MARCOS.."carcamrname"..msg.sender_id.user_id)
local carcamrprice = Redis:get(MARCOS.."carcamrprice"..msg.sender_id.user_id) or 0
local carcamrnum = Redis:get(MARCOS.."carcamrnum"..msg.sender_id.user_id) or 0
local carcamrnow = tonumber(carcamrnum) + tonumber(coniss)
Redis:set(MARCOS.."carcamrnum"..msg.sender_id.user_id , carcamrnow)
camrnamed = "كامري"
Redis:set(MARCOS.."carcamrname"..msg.sender_id.user_id , camrnamed)
Redis:set(MARCOS.."carcamrprice"..msg.sender_id.user_id , 8000000)
totalypalice = tonumber(ballance) - tonumber(camrpr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(camrpr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء سيارة\nنوع السيارة -> كامري \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد سياراتك الكامري -> `"..carcamrnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء سياره النترا (.*)$') or text and text:match('^شراء سيارة النترا (.*)$') then
local UserName = text:match('^شراء سياره النترا (.*)$') or text:match('^شراء سيارة النترا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار سياره النترا بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
alntrpr = tonumber(coniss) * 7000000
if tonumber(ballance) < tonumber(alntrpr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local caralntrname = Redis:get(MARCOS.."caralntrname"..msg.sender_id.user_id)
local caralntrprice = Redis:get(MARCOS.."caralntrprice"..msg.sender_id.user_id) or 0
local caralntrnum = Redis:get(MARCOS.."caralntrnum"..msg.sender_id.user_id) or 0
local caralntrnow = tonumber(caralntrnum) + tonumber(coniss)
Redis:set(MARCOS.."caralntrnum"..msg.sender_id.user_id , caralntrnow)
alntrnamed = "النترا"
Redis:set(MARCOS.."caralntrname"..msg.sender_id.user_id , alntrnamed)
Redis:set(MARCOS.."caralntrprice"..msg.sender_id.user_id , 7000000)
totalypalice = tonumber(ballance) - tonumber(alntrpr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(alntrpr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء سيارة\nنوع السيارة -> النترا \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد سياراتك الالنترا -> `"..caralntrnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء سياره هايلكس (.*)$') or text and text:match('^شراء سيارة هايلكس (.*)$') then
local UserName = text:match('^شراء سياره هايلكس (.*)$') or text:match('^شراء سيارة هايلكس (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار سياره هايلكس بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
hilxpr = tonumber(coniss) * 6000000
if tonumber(ballance) < tonumber(hilxpr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local carhilxname = Redis:get(MARCOS.."carhilxname"..msg.sender_id.user_id)
local carhilxprice = Redis:get(MARCOS.."carhilxprice"..msg.sender_id.user_id) or 0
local carhilxnum = Redis:get(MARCOS.."carhilxnum"..msg.sender_id.user_id) or 0
local carhilxnow = tonumber(carhilxnum) + tonumber(coniss)
Redis:set(MARCOS.."carhilxnum"..msg.sender_id.user_id , carhilxnow)
hilxnamed = "هايلكس"
Redis:set(MARCOS.."carhilxname"..msg.sender_id.user_id , hilxnamed)
Redis:set(MARCOS.."carhilxprice"..msg.sender_id.user_id , 6000000)
totalypalice = tonumber(ballance) - tonumber(hilxpr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(hilxpr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء سيارة\nنوع السيارة -> هايلكس \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد سياراتك الهايلكس -> `"..carhilxnow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء سياره سوناتا (.*)$') or text and text:match('^شراء سيارة سوناتا (.*)$') then
local UserName = text:match('^شراء سياره سوناتا (.*)$') or text:match('^شراء سيارة سوناتا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار سياره سوناتا بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
sonapr = tonumber(coniss) * 5000000
if tonumber(ballance) < tonumber(sonapr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local carsonaname = Redis:get(MARCOS.."carsonaname"..msg.sender_id.user_id)
local carsonaprice = Redis:get(MARCOS.."carsonaprice"..msg.sender_id.user_id) or 0
local carsonanum = Redis:get(MARCOS.."carsonanum"..msg.sender_id.user_id) or 0
local carsonanow = tonumber(carsonanum) + tonumber(coniss)
Redis:set(MARCOS.."carsonanum"..msg.sender_id.user_id , carsonanow)
sonanamed = "سوناتا"
Redis:set(MARCOS.."carsonaname"..msg.sender_id.user_id , sonanamed)
Redis:set(MARCOS.."carsonaprice"..msg.sender_id.user_id , 5000000)
totalypalice = tonumber(ballance) - tonumber(sonapr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(sonapr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء سيارة\nنوع السيارة -> سوناتا \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد سياراتك السوناتا -> `"..carsonanow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^شراء سياره كورولا (.*)$') or text and text:match('^شراء سيارة كورولا (.*)$') then
local UserName = text:match('^شراء سياره كورولا (.*)$') or text:match('^شراء سيارة كورولا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if tonumber(coniss) > 1000000001 then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري اكثر من مليار سياره كورولا بعملية وحدة\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
coropr = tonumber(coniss) * 4000000
if tonumber(ballance) < tonumber(coropr) then
return bot.sendText(msg.chat_id,msg.id, "✧ مايمديك تشتري فلوسك ماتكفي","md",true)
end
local carcoroname = Redis:get(MARCOS.."carcoroname"..msg.sender_id.user_id)
local carcoroprice = Redis:get(MARCOS.."carcoroprice"..msg.sender_id.user_id) or 0
local carcoronum = Redis:get(MARCOS.."carcoronum"..msg.sender_id.user_id) or 0
local carcoronow = tonumber(carcoronum) + tonumber(coniss)
Redis:set(MARCOS.."carcoronum"..msg.sender_id.user_id , carcoronow)
coronamed = "كورولا"
Redis:set(MARCOS.."carcoroname"..msg.sender_id.user_id , coronamed)
Redis:set(MARCOS.."carcoroprice"..msg.sender_id.user_id , 4000000)
totalypalice = tonumber(ballance) - tonumber(coropr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(totalypalice))
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local convert_monyy = string.format("%.0f",math.floor(coropr))
bot.sendText(msg.chat_id,msg.id, "✧ وصل شراء سيارة\nنوع السيارة -> كورولا \nاجمالي السعر -> "..convert_monyy.." 💵\nعدد سياراتك الكورولا -> `"..carcoronow.."`\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع سياره فيلار (.*)$') or text and text:match('^بيع سيارة فيلار (.*)$') then
local UserName = text:match('^بيع سياره فيلار (.*)$') or text:match('^بيع سيارة فيلار (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local carrangnum = Redis:get(MARCOS.."carrangnum"..msg.sender_id.user_id) or 0
if tonumber(carrangnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات فيلار ","md",true)
end
if tonumber(carrangnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة فيلار ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local carrangname = Redis:get(MARCOS.."carrangname"..msg.sender_id.user_id)
local carrangprice = Redis:get(MARCOS.."carrangprice"..msg.sender_id.user_id) or 0
local carrangnum = Redis:get(MARCOS.."carrangnum"..msg.sender_id.user_id) or 0
local carrangnow = tonumber(carrangnum) - tonumber(coniss)
Redis:set(MARCOS.."carrangnum"..msg.sender_id.user_id , carrangnow)
sellcar = tonumber(coniss) * 9000000
totalypalice = tonumber(ballanceed) + sellcar
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local convert_mony = string.format("%.0f",math.floor(totalypalice))
local carrangnum = Redis:get(MARCOS.."carrangnum"..msg.sender_id.user_id) or 0
if tonumber(carrangnum) == 0 then
Redis:del(MARCOS.."carrangname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carrangnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع سيارة\nنوع السيارة -> فيلار \nعدد السيارات -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellcar).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع سياره اكسنت (.*)$') or text and text:match('^بيع سيارة اكسنت (.*)$') then
local UserName = text:match('^بيع سياره اكسنت (.*)$') or text:match('^بيع سيارة اكسنت (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local caraccenum = Redis:get(MARCOS.."caraccenum"..msg.sender_id.user_id) or 0
if tonumber(caraccenum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات اكسنت ","md",true)
end
if tonumber(caraccenum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة اكسنت ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local caraccename = Redis:get(MARCOS.."caraccename"..msg.sender_id.user_id)
local caracceprice = Redis:get(MARCOS.."caracceprice"..msg.sender_id.user_id) or 0
local caraccenum = Redis:get(MARCOS.."caraccenum"..msg.sender_id.user_id) or 0
local caraccenow = tonumber(caraccenum) - tonumber(coniss)
Redis:set(MARCOS.."caraccenum"..msg.sender_id.user_id , caraccenow)
sellcar = tonumber(coniss) * 8000000
totalypalice = tonumber(ballanceed) + sellcar
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local caraccenum = Redis:get(MARCOS.."caraccenum"..msg.sender_id.user_id) or 0
if tonumber(caraccenum) == 0 then
Redis:del(MARCOS.."caraccename"..msg.sender_id.user_id)
Redis:del(MARCOS.."caraccenum"..msg.sender_id.user_id)
end
local convert_mony = string.format("%.0f",math.floor(totalypalice))
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع سيارة\nنوع السيارة -> اكسنت \nعدد السيارات -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellcar).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع سياره كامري (.*)$') or text and text:match('^بيع سيارة كامري (.*)$') then
local UserName = text:match('^بيع سياره كامري (.*)$') or text:match('^بيع سيارة كامري (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local carcamrnum = Redis:get(MARCOS.."carcamrnum"..msg.sender_id.user_id) or 0
if tonumber(carcamrnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات كامري ","md",true)
end
if tonumber(carcamrnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة كامري ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local carcamrname = Redis:get(MARCOS.."carcamrname"..msg.sender_id.user_id)
local carcamrprice = Redis:get(MARCOS.."carcamrprice"..msg.sender_id.user_id) or 0
local carcamrnum = Redis:get(MARCOS.."carcamrnum"..msg.sender_id.user_id) or 0
local carcamrnow = tonumber(carcamrnum) - tonumber(coniss)
Redis:set(MARCOS.."carcamrnum"..msg.sender_id.user_id , carcamrnow)
sellcar = tonumber(coniss) * 7000000
totalypalice = tonumber(ballanceed) + sellcar
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local carcamrnum = Redis:get(MARCOS.."carcamrnum"..msg.sender_id.user_id) or 0
if tonumber(carcamrnum) == 0 then
Redis:del(MARCOS.."carcamrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carcamrnum"..msg.sender_id.user_id)
end
local convert_mony = string.format("%.0f",math.floor(totalypalice))
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع سيارة\nنوع السيارة -> كامري \nعدد السيارات -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellcar).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع سياره النترا (.*)$') or text and text:match('^بيع سيارة النترا (.*)$') then
local UserName = text:match('^بيع سياره النترا (.*)$') or text:match('^بيع سيارة النترا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local caralntrnum = Redis:get(MARCOS.."caralntrnum"..msg.sender_id.user_id) or 0
if tonumber(caralntrnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات النترا ","md",true)
end
if tonumber(caralntrnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة النترا ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local caralntrname = Redis:get(MARCOS.."caralntrname"..msg.sender_id.user_id)
local caralntrprice = Redis:get(MARCOS.."caralntrprice"..msg.sender_id.user_id) or 0
local caralntrnum = Redis:get(MARCOS.."caralntrnum"..msg.sender_id.user_id) or 0
local caralntrnow = tonumber(caralntrnum) - tonumber(coniss)
Redis:set(MARCOS.."caralntrnum"..msg.sender_id.user_id , caralntrnow)
sellcar = tonumber(coniss) * 6000000
totalypalice = tonumber(ballanceed) + sellcar
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local caralntrnum = Redis:get(MARCOS.."caralntrnum"..msg.sender_id.user_id) or 0
if tonumber(caralntrnum) == 0 then
Redis:del(MARCOS.."caralntrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."caralntrnum"..msg.sender_id.user_id)
end
local convert_mony = string.format("%.0f",math.floor(totalypalice))
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع سيارة\nنوع السيارة -> النترا \nعدد السيارات -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellcar).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع سياره هايلكس (.*)$') or text and text:match('^بيع سيارة هايلكس (.*)$') then
local UserName = text:match('^بيع سياره هايلكس (.*)$') or text:match('^بيع سيارة هايلكس (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local carhilxnum = Redis:get(MARCOS.."carhilxnum"..msg.sender_id.user_id) or 0
if tonumber(carhilxnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات هايلكس ","md",true)
end
if tonumber(carhilxnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة هايلكس ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local carhilxname = Redis:get(MARCOS.."carhilxname"..msg.sender_id.user_id)
local carhilxprice = Redis:get(MARCOS.."carhilxprice"..msg.sender_id.user_id) or 0
local carhilxnum = Redis:get(MARCOS.."carhilxnum"..msg.sender_id.user_id) or 0
local carhilxnow = tonumber(carhilxnum) - tonumber(coniss)
Redis:set(MARCOS.."carhilxnum"..msg.sender_id.user_id , carhilxnow)
sellcar = tonumber(coniss) * 5000000
totalypalice = tonumber(ballanceed) + sellcar
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local carhilxnum = Redis:get(MARCOS.."carhilxnum"..msg.sender_id.user_id) or 0
if tonumber(carhilxnum) == 0 then
Redis:del(MARCOS.."carhilxname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carhilxnum"..msg.sender_id.user_id)
end
local convert_mony = string.format("%.0f",math.floor(totalypalice))
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع سيارة\nنوع السيارة -> هايلكس \nعدد السيارات -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellcar).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع سياره سوناتا (.*)$') or text and text:match('^بيع سيارة سوناتا (.*)$') then
local UserName = text:match('^بيع سياره سوناتا (.*)$') or text:match('^بيع سيارة سوناتا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local carsonanum = Redis:get(MARCOS.."carsonanum"..msg.sender_id.user_id) or 0
if tonumber(carsonanum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات سوناتا ","md",true)
end
if tonumber(carsonanum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة سوناتا ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local carsonaname = Redis:get(MARCOS.."carsonaname"..msg.sender_id.user_id)
local carsonaprice = Redis:get(MARCOS.."carsonaprice"..msg.sender_id.user_id) or 0
local carsonanum = Redis:get(MARCOS.."carsonanum"..msg.sender_id.user_id) or 0
local carsonanow = tonumber(carsonanum) - tonumber(coniss)
Redis:set(MARCOS.."carsonanum"..msg.sender_id.user_id , carsonanow)
sellcar = tonumber(coniss) * 4000000
totalypalice = tonumber(ballanceed) + sellcar
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local carsonanum = Redis:get(MARCOS.."carsonanum"..msg.sender_id.user_id) or 0
if tonumber(carsonanum) == 0 then
Redis:del(MARCOS.."carsonaname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carsonanum"..msg.sender_id.user_id)
end
local convert_mony = string.format("%.0f",math.floor(totalypalice))
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع سيارة\nنوع السيارة -> سوناتا \nعدد السيارات -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellcar).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^بيع سياره كورولا (.*)$') or text and text:match('^بيع سيارة كورولا (.*)$') then
local UserName = text:match('^بيع سياره كورولا (.*)$') or text:match('^بيع سيارة كورولا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local carcoronum = Redis:get(MARCOS.."carcoronum"..msg.sender_id.user_id) or 0
if tonumber(carcoronum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات كورولا ","md",true)
end
if tonumber(carcoronum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة كورولا ","md",true)
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local carcoroname = Redis:get(MARCOS.."carcoroname"..msg.sender_id.user_id)
local carcoroprice = Redis:get(MARCOS.."carcoroprice"..msg.sender_id.user_id) or 0
local carcoronum = Redis:get(MARCOS.."carcoronum"..msg.sender_id.user_id) or 0
local carcoronow = tonumber(carcoronum) - tonumber(coniss)
Redis:set(MARCOS.."carcoronum"..msg.sender_id.user_id , carcoronow)
sellcar = tonumber(coniss) * 3000000
totalypalice = tonumber(ballanceed) + sellcar
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , totalypalice)
local carcoronum = Redis:get(MARCOS.."carcoronum"..msg.sender_id.user_id) or 0
if tonumber(carcoronum) == 0 then
Redis:del(MARCOS.."carcoroname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carcoronum"..msg.sender_id.user_id)
end
local convert_mony = string.format("%.0f",math.floor(totalypalice))
bot.sendText(msg.chat_id,msg.id, "✧ وصل بيع سيارة\nنوع السيارة -> كورولا \nعدد السيارات -> "..tonumber(coniss).."\nاجمالي السعر -> "..tonumber(sellcar).." 💵\nرصيدك الان -> "..convert_mony.."\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء سياره فيلار (.*)$') or text and text:match('^اهداء سيارة فيلار (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء سياره فيلار (.*)$') or text:match('^اهداء سيارة فيلار (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local carrangnum = Redis:get(MARCOS.."carrangnum"..msg.sender_id.user_id) or 0
if tonumber(carrangnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات فيلار ","md",true)
end
if tonumber(carrangnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة فيلار ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local carrangnum = Redis:get(MARCOS.."carrangnum"..msg.sender_id.user_id) or 0
local carrangnow = tonumber(carrangnum) - tonumber(coniss)
Redis:set(MARCOS.."carrangnum"..msg.sender_id.user_id , carrangnow)
local carrangnumm = Redis:get(MARCOS.."carrangnum"..Remsg.sender_id.user_id) or 0
local carrangnoww = tonumber(carrangnumm) + tonumber(coniss)
Redis:set(MARCOS.."carrangnum"..Remsg.sender_id.user_id , carrangnoww)
rangnamed = "فيلار"
Redis:set(MARCOS.."carrangname"..Remsg.sender_id.user_id,rangnamed)
local carrangnum = Redis:get(MARCOS.."carrangnum"..msg.sender_id.user_id) or 0
if tonumber(carrangnum) == 0 then
Redis:del(MARCOS.."carrangname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carrangnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) سيارة فيلار\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء سياره اكسنت (.*)$') or text and text:match('^اهداء سيارة اكسنت (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء سياره اكسنت (.*)$') or text:match('^اهداء سيارة اكسنت (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local caraccenum = Redis:get(MARCOS.."caraccenum"..msg.sender_id.user_id) or 0
if tonumber(caraccenum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات اكسنت ","md",true)
end
if tonumber(caraccenum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة اكسنت ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local caraccenum = Redis:get(MARCOS.."caraccenum"..msg.sender_id.user_id) or 0
local caraccenow = tonumber(caraccenum) - tonumber(coniss)
Redis:set(MARCOS.."caraccenum"..msg.sender_id.user_id , caraccenow)
local caraccenumm = Redis:get(MARCOS.."caraccenum"..Remsg.sender_id.user_id) or 0
local caraccenoww = tonumber(caraccenumm) + tonumber(coniss)
Redis:set(MARCOS.."caraccenum"..Remsg.sender_id.user_id , caraccenoww)
accenamed = "اكسنت"
Redis:set(MARCOS.."caraccename"..Remsg.sender_id.user_id,accenamed)
local caraccenum = Redis:get(MARCOS.."caraccenum"..msg.sender_id.user_id) or 0
if tonumber(caraccenum) == 0 then
Redis:del(MARCOS.."caraccename"..msg.sender_id.user_id)
Redis:del(MARCOS.."caraccenum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) سيارة اكسنت\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء سياره كامري (.*)$') or text and text:match('^اهداء سيارة كامري (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء سياره كامري (.*)$') or text:match('^اهداء سيارة كامري (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local carcamrnum = Redis:get(MARCOS.."carcamrnum"..msg.sender_id.user_id) or 0
if tonumber(carcamrnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات كامري ","md",true)
end
if tonumber(carcamrnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة كامري ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local carcamrnum = Redis:get(MARCOS.."carcamrnum"..msg.sender_id.user_id) or 0
local carcamrnow = tonumber(carcamrnum) - tonumber(coniss)
Redis:set(MARCOS.."carcamrnum"..msg.sender_id.user_id , carcamrnow)
local carcamrnumm = Redis:get(MARCOS.."carcamrnum"..Remsg.sender_id.user_id) or 0
local carcamrnoww = tonumber(carcamrnumm) + tonumber(coniss)
Redis:set(MARCOS.."carcamrnum"..Remsg.sender_id.user_id , carcamrnoww)
camrnamed = "كامري"
Redis:set(MARCOS.."carcamrname"..Remsg.sender_id.user_id,camrnamed)
local carcamrnum = Redis:get(MARCOS.."carcamrnum"..msg.sender_id.user_id) or 0
if tonumber(carcamrnum) == 0 then
Redis:del(MARCOS.."carcamrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carcamrnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) سيارة كامري\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء سياره هايلكس (.*)$') or text and text:match('^اهداء سيارة هايلكس (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء سياره هايلكس (.*)$') or text:match('^اهداء سيارة هايلكس (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local carhilxnum = Redis:get(MARCOS.."carhilxnum"..msg.sender_id.user_id) or 0
if tonumber(carhilxnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات هايلكس ","md",true)
end
if tonumber(carhilxnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة هايلكس ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local carhilxnum = Redis:get(MARCOS.."carhilxnum"..msg.sender_id.user_id) or 0
local carhilxnow = tonumber(carhilxnum) - tonumber(coniss)
Redis:set(MARCOS.."carhilxnum"..msg.sender_id.user_id , carhilxnow)
local carhilxnumm = Redis:get(MARCOS.."carhilxnum"..Remsg.sender_id.user_id) or 0
local carhilxnoww = tonumber(carhilxnumm) + tonumber(coniss)
Redis:set(MARCOS.."carhilxnum"..Remsg.sender_id.user_id , carhilxnoww)
hilxnamed = "هايلكس"
Redis:set(MARCOS.."carhilxname"..Remsg.sender_id.user_id,hilxnamed)
local carhilxnum = Redis:get(MARCOS.."carhilxnum"..msg.sender_id.user_id) or 0
if tonumber(carhilxnum) == 0 then
Redis:del(MARCOS.."carhilxname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carhilxnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) سيارة هايلكس\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء سياره النترا (.*)$') or text and text:match('^اهداء سيارة النترا (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء سياره النترا (.*)$') or text:match('^اهداء سيارة النترا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local caralntrnum = Redis:get(MARCOS.."caralntrnum"..msg.sender_id.user_id) or 0
if tonumber(caralntrnum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات النترا ","md",true)
end
if tonumber(caralntrnum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة النترا ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local caralntrnum = Redis:get(MARCOS.."caralntrnum"..msg.sender_id.user_id) or 0
local caralntrnow = tonumber(caralntrnum) - tonumber(coniss)
Redis:set(MARCOS.."caralntrnum"..msg.sender_id.user_id , caralntrnow)
local caralntrnumm = Redis:get(MARCOS.."caralntrnum"..Remsg.sender_id.user_id) or 0
local caralntrnoww = tonumber(caralntrnumm) + tonumber(coniss)
Redis:set(MARCOS.."caralntrnum"..Remsg.sender_id.user_id , caralntrnoww)
alntrnamed = "النترا"
Redis:set(MARCOS.."caralntrname"..Remsg.sender_id.user_id,alntrnamed)
local caralntrnum = Redis:get(MARCOS.."caralntrnum"..msg.sender_id.user_id) or 0
if tonumber(caralntrnum) == 0 then
Redis:del(MARCOS.."caralntrname"..msg.sender_id.user_id)
Redis:del(MARCOS.."caralntrnum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) سيارة النترا\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء سياره سوناتا (.*)$') or text and text:match('^اهداء سيارة سوناتا (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء سياره سوناتا (.*)$') or text:match('^اهداء سيارة سوناتا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local carsonanum = Redis:get(MARCOS.."carsonanum"..msg.sender_id.user_id) or 0
if tonumber(carsonanum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات سوناتا ","md",true)
end
if tonumber(carsonanum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة سوناتا ","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local carsonanum = Redis:get(MARCOS.."carsonanum"..msg.sender_id.user_id) or 0
local carsonanow = tonumber(carsonanum) - tonumber(coniss)
Redis:set(MARCOS.."carsonanum"..msg.sender_id.user_id , carsonanow)
local carsonanumm = Redis:get(MARCOS.."carsonanum"..Remsg.sender_id.user_id) or 0
local carsonanoww = tonumber(carsonanumm) + tonumber(coniss)
Redis:set(MARCOS.."carsonanum"..Remsg.sender_id.user_id , carsonanoww)
sonanamed = "سوناتا"
Redis:set(MARCOS.."carsonaname"..Remsg.sender_id.user_id,sonanamed)
local carsonanum = Redis:get(MARCOS.."carsonanum"..msg.sender_id.user_id) or 0
if tonumber(carsonanum) == 0 then
Redis:del(MARCOS.."carsonaname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carsonanum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) سيارة سوناتا\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('^اهداء سياره كورولا (.*)$') or text and text:match('^اهداء سيارة كورولا (.*)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local UserName = text:match('^اهداء سياره كورولا (.*)$') or text:match('^اهداء سيارة كورولا (.*)$')
local coniss = coin(UserName)
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local carcoronum = Redis:get(MARCOS.."carcoronum"..msg.sender_id.user_id) or 0
if tonumber(carcoronum) == 0 then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك سيارات كورولا ","md",true)
end
if tonumber(carcoronum) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك "..tonumber(coniss).." سيارة كورولا","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ تهدي نفسك 🤡*","md",true)  
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local carcoronum = Redis:get(MARCOS.."carcoronum"..msg.sender_id.user_id) or 0
local carcoronow = tonumber(carcoronum) - tonumber(coniss)
Redis:set(MARCOS.."carcoronum"..msg.sender_id.user_id , carcoronow)
local carcoronumm = Redis:get(MARCOS.."carcoronum"..Remsg.sender_id.user_id) or 0
local carcoronoww = tonumber(carcoronumm) + tonumber(coniss)
Redis:set(MARCOS.."carcoronum"..Remsg.sender_id.user_id , carcoronoww)
coronamed = "كورولا"
Redis:set(MARCOS.."carcoroname"..Remsg.sender_id.user_id,coronamed)
local carcoronum = Redis:get(MARCOS.."carcoronum"..msg.sender_id.user_id) or 0
if tonumber(carcoronum) == 0 then
Redis:del(MARCOS.."carcoroname"..msg.sender_id.user_id)
Redis:del(MARCOS.."carcoronum"..msg.sender_id.user_id)
end
bot.sendText(msg.chat_id,msg.id, "✧ تم اهديته ( "..tonumber(coniss).." ) سيارة كورولا\n\n✧ اكتب `ممتلكاتي` لعرض جميع ممتلكاتك \n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
----------
if text == "ممتلكاتي" or text == "ممتلكات" then
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local mgrmasname = Redis:get(MARCOS.."mgrmasname"..msg.sender_id.user_id)
local mgrmasnum = Redis:get(MARCOS.."mgrmasnum"..msg.sender_id.user_id) or 0
if mgrmasname then
mgrmasnamee = "- "..mgrmasname.." -> ( `"..mgrmasnum.."` ) \n"
else
mgrmasnamee = ""
end
local mgrkldname = Redis:get(MARCOS.."mgrkldname"..msg.sender_id.user_id)
local mgrkldnum = Redis:get(MARCOS.."mgrkldnum"..msg.sender_id.user_id) or 0
if mgrkldname then
mgrkldnamee = "- "..mgrkldname.." -> ( `"..mgrkldnum.."` ) \n"
else
mgrkldnamee = ""
end
local mgrswrname = Redis:get(MARCOS.."mgrswrname"..msg.sender_id.user_id)
local mgrswrnum = Redis:get(MARCOS.."mgrswrnum"..msg.sender_id.user_id) or 0
if mgrswrname then
mgrswrnamee = "- "..mgrswrname.." -> ( `"..mgrswrnum.."` ) \n"
else
mgrswrnamee = ""
end
local mgrktmname = Redis:get(MARCOS.."mgrktmname"..msg.sender_id.user_id)
local mgrktmnum = Redis:get(MARCOS.."mgrktmnum"..msg.sender_id.user_id) or 0
if mgrktmname then
mgrktmnamee = "- "..mgrktmname.." -> ( `"..mgrktmnum.."` ) \n"
else
mgrktmnamee = ""
end
local akrksrname = Redis:get(MARCOS.."akrksrname"..msg.sender_id.user_id)
local akrksrnum = Redis:get(MARCOS.."akrksrnum"..msg.sender_id.user_id) or 0
if akrksrname then
akrksrnamee = "- "..akrksrname.." -> ( `"..akrksrnum.."` ) \n"
else
akrksrnamee = ""
end
local akrfelname = Redis:get(MARCOS.."akrfelname"..msg.sender_id.user_id)
local akrfelnum = Redis:get(MARCOS.."akrfelnum"..msg.sender_id.user_id) or 0
if akrfelname then
akrfelnamee = "- "..akrfelname.." -> ( `"..akrfelnum.."` ) \n"
else
akrfelnamee = ""
end
local akrmnzname = Redis:get(MARCOS.."akrmnzname"..msg.sender_id.user_id)
local akrmnznum = Redis:get(MARCOS.."akrmnznum"..msg.sender_id.user_id) or 0
if akrmnzname then
akrmnznamee = "- "..akrmnzname.." -> ( `"..akrmnznum.."` ) \n"
else
akrmnznamee = ""
end
local airshbhname = Redis:get(MARCOS.."airshbhname"..msg.sender_id.user_id)
local airshbhnum = Redis:get(MARCOS.."airshbhnum"..msg.sender_id.user_id) or 0
if airshbhname then
airshbhnamee = "- "..airshbhname.." -> ( `"..airshbhnum.."` ) \n"
else
airshbhnamee = ""
end
local airsfarname = Redis:get(MARCOS.."airsfarname"..msg.sender_id.user_id)
local airsfarnum = Redis:get(MARCOS.."airsfarnum"..msg.sender_id.user_id) or 0
if airsfarname then
airsfarnamee = "- "..airsfarname.." -> ( `"..airsfarnum.."` ) \n"
else
airsfarnamee = ""
end
local airkhasname = Redis:get(MARCOS.."airkhasname"..msg.sender_id.user_id)
local airkhasnum = Redis:get(MARCOS.."airkhasnum"..msg.sender_id.user_id) or 0
if airkhasname then
airkhasnamee = "- "..airkhasname.." -> ( `"..airkhasnum.."` ) \n"
else
airkhasnamee = ""
end
local carrangname = Redis:get(MARCOS.."carrangname"..msg.sender_id.user_id)
local carrangnum = Redis:get(MARCOS.."carrangnum"..msg.sender_id.user_id) or 0
if carrangname then
carrangnamee = "- "..carrangname.." -> ( `"..carrangnum.."` ) \n"
else
carrangnamee = ""
end
local caraccename = Redis:get(MARCOS.."caraccename"..msg.sender_id.user_id)
local caraccenum = Redis:get(MARCOS.."caraccenum"..msg.sender_id.user_id) or 0
if caraccename then
caraccenamee = "- "..caraccename.." -> ( `"..caraccenum.."` ) \n"
else
caraccenamee = ""
end
local carcamrname = Redis:get(MARCOS.."carcamrname"..msg.sender_id.user_id)
local carcamrnum = Redis:get(MARCOS.."carcamrnum"..msg.sender_id.user_id) or 0
if carcamrname then
carcamrnamee = "- "..carcamrname.." -> ( `"..carcamrnum.."` ) \n"
else
carcamrnamee = ""
end
local caralntrname = Redis:get(MARCOS.."caralntrname"..msg.sender_id.user_id)
local caralntrnum = Redis:get(MARCOS.."caralntrnum"..msg.sender_id.user_id) or 0
if caralntrname then
caralntrnamee = "- "..caralntrname.." -> ( `"..caralntrnum.."` ) \n"
else
caralntrnamee = ""
end
local carhilxname = Redis:get(MARCOS.."carhilxname"..msg.sender_id.user_id)
local carhilxnum = Redis:get(MARCOS.."carhilxnum"..msg.sender_id.user_id) or 0
if carhilxname then
carhilxnamee = "- "..carhilxname.." -> ( `"..carhilxnum.."` ) \n"
else
carhilxnamee = ""
end
local carsonaname = Redis:get(MARCOS.."carsonaname"..msg.sender_id.user_id)
local carsonanum = Redis:get(MARCOS.."carsonanum"..msg.sender_id.user_id) or 0
if carsonaname then
carsonanamee = "- "..carsonaname.." -> ( `"..carsonanum.."` ) \n"
else
carsonanamee = ""
end
local carcoroname = Redis:get(MARCOS.."carcoroname"..msg.sender_id.user_id)
local carcoronum = Redis:get(MARCOS.."carcoronum"..msg.sender_id.user_id) or 0
if carcoroname then
carcoronamee = "- "..carcoroname.." -> ( `"..carcoronum.."` ) \n"
else
carcoronamee = ""
end
if akrksrnum == 0 and akrfelnum == 0 and akrmnznum == 0 and mgrmasnum == 0 and mgrkldnum == 0 and mgrswrnum == 0 and mgrktmnum == 0 and airshbhnum == 0 and airsfarnum == 0 and airkhasnum == 0 and carrangnum == 0 and caraccenum == 0 and carcamrnum == 0 and caralntrnum == 0 and carhilxnum == 0 and carsonanum == 0 and carcoronum == 0 then
bot.sendText(msg.chat_id,msg.id, "✧ لا يوجد لديك ممتلكات\nتستطيع الشراء عن طريق ارسال كلمة ( `المعرض` )\n\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ مجوهراتك -> 💎\n\n"..mgrmasnamee..""..mgrkldnamee..""..mgrswrnamee..""..mgrktmnamee.."\n✧ عقاراتك -> 🏘\n\n"..akrksrnamee..""..akrfelnamee..""..akrmnznamee.."\n✧ طائراتك -> ✈️\n\n"..airshbhnamee..""..airsfarnamee..""..airkhasnamee.."\n✧ سياراتك -> 🚗\n\n"..carrangnamee..""..caraccenamee..""..carcamrnamee..""..caralntrnamee..""..carhilxnamee..""..carsonanamee..""..carcoronamee.."\n\n✧ تستطيع بيع او اهداء ممتلكاتك\nمثال :\nبيع فيلا 4 \nاهداء طائره شبح 2 ( بالرد ) \n\n✦","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
----------
if text == 'مسح لعبه الزواج' then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
local zwag_users = Redis:smembers(MARCOS.."roogg1")
for k,v in pairs(zwag_users) do
Redis:del(MARCOS.."roog1"..v)
Redis:del(MARCOS.."rooga1"..v)
Redis:del(MARCOS.."rahr1"..v)
Redis:del(MARCOS.."rahrr1"..v)
Redis:del(MARCOS.."roogte1"..v)
end
local zwaga_users = Redis:smembers(MARCOS.."roogga1")
for k,v in pairs(zwaga_users) do
Redis:del(MARCOS.."roog1"..v)
Redis:del(MARCOS.."rooga1"..v)
Redis:del(MARCOS.."rahr1"..v)
Redis:del(MARCOS.."rahrr1"..v)
Redis:del(MARCOS.."roogte1"..v)
end
Redis:del(MARCOS.."roogga1")
Redis:del(MARCOS.."roogg1")
bot.sendText(msg.chat_id,msg.id, "✧ مسحت لعبه الزواج","md",true)
end
end
if text == 'زواج' then
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`زواج` المهر","md",true)
end
if text and text:match("^زواج (%d+)$") and msg.reply_to_message_id == 0 then
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`زواج` المهر ( بالرد )","md",true)
end
if text and text:match("^زواج (.*)$") and msg.reply_to_message_id ~= 0 then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0

local UserName = text:match('^زواج (.*)$')
local coniss = coin(UserName)
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ زوجتك نفسي 🤣😒*","md",true)  
return false
end
if Redis:get(MARCOS.."zwag_request:"..msg.sender_id.user_id) then 
return bot.sendText(msg.chat_id,msg.id, "✧ في طلب باسمك انتظر قليلاً \n✦","md",true)
end
if tonumber(coniss) < 10000 then
return bot.sendText(msg.chat_id,msg.id, "✧ الحد الادنى المسموح به هو 10000 جنيه \n✦","md",true)
end
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if tonumber(ballancee) < 10000 then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي \n✦","md",true)
end
if tonumber(coniss) > tonumber(ballancee) then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي\n✦","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)  
return false
end
if Redis:get(MARCOS.."roog1"..msg.sender_id.user_id) then
bot.sendText(msg.chat_id,msg.id, "✧ ابك تراك متزوج !!","md",true)
return false
end
if Redis:get(MARCOS.."rooga1"..msg.sender_id.user_id) then
bot.sendText(msg.chat_id,msg.id, "✧ ابك تراك متزوج !!","md",true)
return false
end
if Redis:get(MARCOS.."roog1"..Remsg.sender_id.user_id) then
bot.sendText(msg.chat_id,msg.id, "✧ ابعد بعيد لاتحوس وتدور حول المتزوجين","md",true)
return false
end
if Redis:get(MARCOS.."rooga1"..Remsg.sender_id.user_id) then
bot.sendText(msg.chat_id,msg.id, "✧ ابعد بعيد لاتحوس وتدور حول المتزوجين","md",true)
return false
end
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local zwg = bot.getUser(msg.sender_id.user_id)
local zwga = bot.getUser(Remsg.sender_id.user_id)
local zwg_tag = '['..zwg.first_name.."](tg://user?id="..msg.sender_id.user_id..")"
local zwga_tag = '['..zwga.first_name.."](tg://user?id="..Remsg.sender_id.user_id..")"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'موافقة', data =Remsg.sender_id.user_id.."/zwag_yes/"..msg.sender_id.user_id.."/mahr/"..coniss},{text = 'غير موافقة', data = Remsg.sender_id.user_id.."/zwag_no/"..msg.sender_id.user_id},
},
}
}
Redis:setex(MARCOS.."zwag_request:"..msg.sender_id.user_id,60,true)
Redis:setex(MARCOS.."zwag_request:"..Remsg.sender_id.user_id,60,true)
return bot.sendText(msg.chat_id,msg.id,"*✧ الزوج ->* "..zwg_tag.."\n*✧ الزوجة ->* "..zwga_tag.."\n*✧ المهر ->* "..coniss.."\n*✧ لديك دقيقه وينتهي الطلب 💫*","md",false, false, false, false, reply_markup)
else
return bot.sendText(msg.chat_id,msg.reply_to_message_id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == "زواجات غش" then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
  local zwag_users = Redis:smembers(MARCOS.."roogg1")
  if #zwag_users == 0 then
  return bot.sendText(msg.chat_id,msg.id,"✧ مافي زواجات حاليا","md",true)
  end
  top_zwag = "توب 30 اغلى زواجات :\n\n"
  zwag_list = {}
  for k,v in pairs(zwag_users) do
  local mahr = Redis:get(MARCOS.."rahr1"..v)
  local zwga = Redis:get(MARCOS.."rooga1"..v)
  table.insert(zwag_list, {tonumber(mahr) , v , zwga})
  end
  table.sort(zwag_list, function(a, b) return a[1] > b[1] end)
  znum = 1
  zwag_emoji ={ 
"🥇" ,
"🥈",
"🥉",
"4)",
"5)",
"6)",
"7)",
"8)",
"9)",
"10)",
"11)",
"12)",
"13)",
"14)",
"15)",
"16)",
"17)",
"18)",
"19)",
"20)",
"21)",
"22)",
"23)",
"24)",
"25)",
"26)",
"27)",
"28)",
"29)",
"30)"
  }
  for k,v in pairs(zwag_list) do
  if znum <= 30 then
  local zwg_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
  local zwg_tag = '['..zwg_name..'](tg://user?id='..v[2]..')'
  local zwga_name = bot.getUser(v[3]).first_name or Redis:get(MARCOS..v[3].."first_name:") or "لا يوجد اسم"
  local zwga_tag = '['..zwga_name..'](tg://user?id='..v[3]..')'
tt =  '['..zwg_name..'](tg://user?id='..v[2]..')'
kk = '['..zwga_name..'](tg://user?id='..v[3]..')'
local mony = v[1]
local convert_mony = string.format("%.0f",mony)
local emo = zwag_emoji[k]
znum = znum + 1
gflos = string.format("%.0f", mony):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
top_zwag = top_zwag..emo.." "..gflos.." 💵 l "..tt.." 👫 "..kk.."\n"
gg = "\n\nملاحظة -> اي شخص مخالف للعبة بالغش او حاط يوزر بينحظر من اللعبه وتتصفر فلوسه"
  end
  end
  local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url="t.me/ZAXY00"},
},
}
}
return bot.sendText(msg.chat_id,msg.id,top_zwag,"md",false, false, false, false, reply_markup)
  end
  end
if text == "توب زواج" or text == "توب متزوجات" or text == "توب زوجات" or text == "توب زواجات" or text == "زواجات" or text == "الزواجات" then
  local zwag_users = Redis:smembers(MARCOS.."roogg1")
  if #zwag_users == 0 then
  return bot.sendText(msg.chat_id,msg.id,"✧ مافي زواجات حاليا","md",true)
  end
  top_zwag = "توب 30 اغلى زواجات :\n\n"
  zwag_list = {}
  for k,v in pairs(zwag_users) do
  local mahr = Redis:get(MARCOS.."rahr1"..v)
  local zwga = Redis:get(MARCOS.."rooga1"..v)
  table.insert(zwag_list, {tonumber(mahr) , v , zwga})
  end
  table.sort(zwag_list, function(a, b) return a[1] > b[1] end)
  znum = 1
  zwag_emoji ={ 
"🥇" ,
"🥈",
"🥉",
"4)",
"5)",
"6)",
"7)",
"8)",
"9)",
"10)",
"11)",
"12)",
"13)",
"14)",
"15)",
"16)",
"17)",
"18)",
"19)",
"20)",
"21)",
"22)",
"23)",
"24)",
"25)",
"26)",
"27)",
"28)",
"29)",
"30)"
  }
  for k,v in pairs(zwag_list) do
  if znum <= 30 then
  local zwg_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
  local zwga_name = bot.getUser(v[3]).first_name or Redis:get(MARCOS..v[3].."first_name:") or "لا يوجد اسم"
tt =  "["..zwg_name.."]("..zwg_name..")"
kk = "["..zwga_name.."]("..zwga_name..")"
local mony = v[1]
local convert_mony = string.format("%.0f",mony)
local emo = zwag_emoji[k]
znum = znum + 1
gflos = string.format("%.0f", mony):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
top_zwag = top_zwag..emo.." "..gflos.." 💵 l "..tt.." 👫 "..kk.."\n"
gg = "\n\nملاحظة -> اي شخص مخالف للعبة بالغش او حاط يوزر بينحظر من اللعبه وتتصفر فلوسه"
  end
  end
  local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url="t.me/ZAXY00"},
},
}
}
return bot.sendText(msg.chat_id,msg.id,top_zwag..gg,"md",false, false, false, false, reply_markup)
  end
if text == 'زواجي' then
if Redis:sismember(MARCOS.."roogg1",msg.sender_id.user_id) or Redis:sismember(MARCOS.."roogga1",msg.sender_id.user_id) then
local zoog = Redis:get(MARCOS.."roog1"..msg.sender_id.user_id)
local zooga = Redis:get(MARCOS.."rooga1"..msg.sender_id.user_id)
local mahr = Redis:get(MARCOS.."rahr1"..msg.sender_id.user_id)
local convert_mony = string.format("%.0f",mahr)
local bandd = bot.getUser(zoog)
if bandd.first_name then
neews = "["..bandd.first_name.."](tg://user?id="..bandd.id..")"
else
neews = " لا يوجد"
end
local ban = bot.getUser(zooga)
if ban.first_name then
newws = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
newws = " لا يوجد"
end
bot.sendText(msg.chat_id,msg.id, "✧ وثيقة الزواج حقتك :\n\n✧ الزوج "..neews.." 🤵🏻\n✧ الزوجة "..newws.." 👰🏻‍♀️\n✧ المهر -> "..convert_mony.." جنيه 💵","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ انت اعزب","md",true)
end
end
if text == 'زوجها' or text == "زوجته" or text == "جوزها" or text == "زوجتو" or text == "زواجه" and msg.reply_to_message_id ~= 0 then
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if msg.sender_id.user_id == Remsg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ لا تكشف نفسك وتخسر فلوس عالفاضي\n اكتب `زواجي`*","md",true)  
return false
end
if Redis:sismember(MARCOS.."roogg1",Remsg.sender_id.user_id) or Redis:sismember(MARCOS.."roogga1",Remsg.sender_id.user_id) then
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if tonumber(ballancee) < 100 then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي \n✦","md",true)
end
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)  
return false
end
local zoog = Redis:get(MARCOS.."roog1"..Remsg.sender_id.user_id)
local zooga = Redis:get(MARCOS.."rooga1"..Remsg.sender_id.user_id)
local mahr = Redis:get(MARCOS.."rahr1"..Remsg.sender_id.user_id)
local bandd = bot.getUser(zoog)
if bandd.first_name then
neews = "["..bandd.first_name.."](tg://user?id="..bandd.id..")"
else
neews = " لا يوجد"
end
local ban = bot.getUser(zooga)
if ban.first_name then
newws = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
newws = " لا يوجد"
end
local otheka = ballancee - 100
local convert_mony = string.format("%.0f",mahr)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(otheka))
bot.sendText(msg.chat_id,msg.id, "✧ وثيقة الزواج حقته :\n\n✧ الزوج "..neews.." 🤵🏻\n✧ الزوجة "..newws.." 👰🏻‍♀️\n✧ المهر -> "..convert_mony.." جنيه 💵","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ مسكين اعزب مو متزوج","md",true)
end
end
if text == 'طلاق' then
if Redis:sismember(MARCOS.."roogg1",msg.sender_id.user_id) or Redis:sismember(MARCOS.."roogga1",msg.sender_id.user_id) then
local zoog = Redis:get(MARCOS.."roog1"..msg.sender_id.user_id)
local zooga = tonumber(Redis:get(MARCOS.."rooga1"..msg.sender_id.user_id))
if tonumber(zoog) == msg.sender_id.user_id then
local bandd = bot.getUser(zoog)
if bandd.first_name then
neews = "["..bandd.first_name.."](tg://user?id="..bandd.id..")"
else
neews = " لا يوجد"
end
local ban = bot.getUser(zooga)
if ban.first_name then
newws = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
newws = " لا يوجد"
end
Redis:srem(MARCOS.."roogg1", msg.sender_id.user_id)
Redis:srem(MARCOS.."roogga1", msg.sender_id.user_id)
Redis:del(MARCOS.."roog1"..msg.sender_id.user_id)
Redis:del(MARCOS.."rooga1"..msg.sender_id.user_id)
Redis:del(MARCOS.."rahr1"..msg.sender_id.user_id)
Redis:del(MARCOS.."rahrr1"..msg.sender_id.user_id)
Redis:srem(MARCOS.."roogg1", zooga)
Redis:srem(MARCOS.."roogga1", zooga)
Redis:del(MARCOS.."roog1"..zooga)
Redis:del(MARCOS.."rooga1"..zooga)
Redis:del(MARCOS.."rahr1"..zooga)
Redis:del(MARCOS.."rahrr1"..zooga)
return bot.sendText(msg.chat_id,msg.id, "✧ ابشر طلقتك من زوجتك "..newws.."","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ الطلاق للزوج فقط","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ انت اعزب","md",true)
end
end
if text == 'خلع' then
if Redis:sismember(MARCOS.."roogg1",msg.sender_id.user_id) or Redis:sismember(MARCOS.."roogga1",msg.sender_id.user_id) then
local zoog = Redis:get(MARCOS.."roog1"..msg.sender_id.user_id)
local zooga = Redis:get(MARCOS.."rooga1"..msg.sender_id.user_id)
if tonumber(zooga) == msg.sender_id.user_id then
local mahrr = Redis:get(MARCOS.."rahrr1"..msg.sender_id.user_id)
local bandd = bot.getUser(zoog)
if bandd.first_name then
neews = "["..bandd.first_name.."](tg://user?id="..bandd.id..")"
else
neews = " لا يوجد"
end
local ban = bot.getUser(zooga)
if ban.first_name then
newws = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
newws = " لا يوجد"
end
ballancee = Redis:get(MARCOS.."boob"..zoog) or 0
kalea = ballancee + mahrr
Redis:set(MARCOS.."boob"..zoog , kalea)
local convert_mony = string.format("%.0f",mahrr)
bot.sendText(msg.chat_id,msg.id, "✧ خلعت زوجك "..neews.."\n✧ ورجعت له المهر ( "..convert_mony.." جنيه 💵 )","md",true)
Redis:srem(MARCOS.."roogg1", zoog)
Redis:srem(MARCOS.."roogga1", zoog)
Redis:del(MARCOS.."roog1"..zoog)
Redis:del(MARCOS.."rooga1"..zoog)
Redis:del(MARCOS.."rahr1"..zoog)
Redis:del(MARCOS.."rahrr1"..zoog)
Redis:srem(MARCOS.."roogg1", msg.sender_id.user_id)
Redis:srem(MARCOS.."roogga1", msg.sender_id.user_id)
Redis:del(MARCOS.."roog1"..msg.sender_id.user_id)
Redis:del(MARCOS.."rooga1"..msg.sender_id.user_id)
Redis:del(MARCOS.."rahr1"..msg.sender_id.user_id)
Redis:del(MARCOS.."rahrr1"..msg.sender_id.user_id)
else
bot.sendText(msg.chat_id,msg.id, "✧ الخلع للزوجات فقط","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ انت اعزب","md",true)
end
end
if text == 'مراهنه' or text == 'مراهنة' then
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`مراهنه` المبلغ","md",true)
end
if text and text:match('^مراهنه (.*)$') or text and text:match('^مراهنة (.*)$') then
local UserName = text:match('^مراهنه (.*)$') or text:match('^مراهنة (.*)$')
local coniss = coin(UserName)
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if tonumber(coniss) < 999 then
return bot.sendText(msg.chat_id,msg.id, "✧ الحد الادنى المسموح هو 1000 جنيه 💵\n✦","md",true)
end
if tonumber(ballancee) < tonumber(coniss) then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي \n✦","md",true)
end
Redis:del(MARCOS..'List_rhan'..msg.chat_id)  
Redis:set(MARCOS.."playerrhan"..msg.chat_id,msg.sender_id.user_id)
Redis:set(MARCOS.."playercoins"..msg.chat_id..msg.sender_id.user_id,coniss)
Redis:set(MARCOS.."raeahkam"..msg.chat_id,msg.sender_id.user_id)
Redis:sadd(MARCOS..'List_rhan'..msg.chat_id,msg.sender_id.user_id)
Redis:setex(MARCOS.."Start_rhan"..msg.chat_id,3600,true)
Redis:set(MARCOS.."allrhan"..msg.chat_id..12345 , coniss)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
rehan = tonumber(ballancee) - tonumber(coniss)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , rehan)
return bot.sendText(msg.chat_id,msg.id,"✧ تم بدء المراهنة وتم تسجيلك \n✧ اللي بده يشارك يرسل ( انا والمبلغ ) .","md",true)
end
if text == 'نعم' and Redis:get(MARCOS.."Witting_Startrhan"..msg.chat_id) then
rarahkam = Redis:get(MARCOS.."raeahkam"..msg.chat_id)
if tonumber(rarahkam) == msg.sender_id.user_id then
local list = Redis:smembers(MARCOS..'List_rhan'..msg.chat_id) 
if #list == 1 then 
return bot.sendText(msg.chat_id,msg.id,"✧ عذراً لم يشارك احد بالرهان","md",true)  
end 
local UserName = list[math.random(#list)]
local UserId_Info = bot.getUser(UserName)
if UserId_Info.username and UserId_Info.username ~= "" then
ls = '['..UserId_Info.first_name..'](tg://user?id='..UserName..')'
else
ls = '@['..UserId_Info.username..']'
end
benrahan = Redis:get(MARCOS.."allrhan"..msg.chat_id..12345) or 0
local ballancee = Redis:get(MARCOS.."boob"..UserName) or 0
rehane = tonumber(benrahan) / 100 * 25
rehan = tonumber(ballancee) + math.floor(rehane)
Redis:set(MARCOS.."boob"..UserName , rehan)
local rhan_users = Redis:smembers(MARCOS.."List_rhan"..msg.chat_id)
for k,v in pairs(rhan_users) do
Redis:del(MARCOS..'playercoins'..msg.chat_id..v)
end
Redis:del(MARCOS..'allrhan'..msg.chat_id..12345) 
Redis:del(MARCOS..'playerrhan'..msg.chat_id) 
Redis:del(MARCOS..'raeahkam'..msg.chat_id) 
Redis:del(MARCOS..'List_rhan'..msg.chat_id) 
Redis:del(MARCOS.."Witting_Startrhan"..msg.chat_id)
Redis:del(MARCOS.."Start_rhan"..msg.chat_id)
local ballancee = Redis:get(MARCOS.."boob"..UserName) or 0
local convert_mony = string.format("%.0f",rehane)
local convert_monyy = string.format("%.0f",ballancee)
return bot.sendText(msg.chat_id,msg.id,'✧ فاز '..ls..' بالرهان 🎊\n✧ المبلغ -> '..convert_mony..' جنيه 💵\n✧ خصمت 25% ضريبة \n✧ رصيدك الان -> '..convert_monyy..' جنيه 💵\n✦',"md",true)
end
end
if text == "توب شركات" then 
local companys = Redis:smembers(MARCOS.."companys:")
if #companys == 0 then
return bot.sendText(msg.chat_id,msg.id,"✧ لا يوجد شركات","md",true)
end
local top_company = {}
for A,N in pairs(companys) do
local Cmony = 0
for k,v in pairs(Redis:smembers(MARCOS.."company:mem:"..N)) do
local mem_mony = tonumber(Redis:get(MARCOS.."boob"..v)) or 0
Cmony = Cmony + mem_mony
end
local owner_id = Redis:get(MARCOS.."companys_owner:"..N)
local Cid = Redis:get(MARCOS.."companys_id:"..N)
if Redis:sismember(MARCOS.."booob", owner_id) then
table.insert(top_company, {tonumber(Cmony) , owner_id , N , Cid})
end
end
table.sort(top_company, function(a, b) return a[1] > b[1] end)
local num = 1
local emoji ={ 
"🥇" ,
"🥈",
"🥉",
"4)",
"5)",
"6)",
"7)",
"8)",
"9)",
"10)",
"11)",
"12)",
"13)",
"14)",
"15)",
"16)",
"17)",
"18)",
"19)",
"20)"
}
local msg_text = "✧ توب اعلى 20 شركة ↑↓ \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(top_company) do
if num <= 20 then
local user_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
local Cname = v[3]
local Cid = v[4]
local mony = v[1]
gflous = string.format("%.0f", mony):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
local emoo = emoji[k]
num = num + 1
msg_text = msg_text..emoo.." "..gflous.."  💵 l "..Cname.."\n"
end
end
return bot.sendText(msg.chat_id,msg.id, msg_text ,"html",true)
end
if text == "حذف شركتي" or text == "مسح شركتي" then
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:sismember(MARCOS.."company_owners:",msg.sender_id.user_id) then
local Cname = Redis:get(MARCOS.."companys_name:"..msg.sender_id.user_id)
for k,v in pairs(Redis:smembers(MARCOS.."company:mem:"..Cname)) do
Redis:srem(MARCOS.."in_company:", v)
end
Redis:srem(MARCOS.."company_owners:", msg.sender_id.user_id)
Redis:srem(MARCOS.."companys:", Cname)
Redis:del(MARCOS.."companys_name:"..msg.sender_id.user_id)
Redis:del(MARCOS.."companys_owner:"..Cname)
Redis:del(MARCOS.."companys_id:"..Cname)
Redis:del(MARCOS.."company:mem:"..Cname)
return bot.sendText(msg.chat_id,msg.id, "✧ تم حذف شركتك بنجاح","md",true)  
else
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك شركة","md",true)  
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل ↢ ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('انشاء شركه (.*)') or text and text:match('انشاء شركة (.*)') then
local Cnamed = text:match('انشاء شركه (.*)') or text:match('انشاء شركة (.*)')
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."in_company:" , msg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ لديك شركة حاليا\n✧ تستطيع استخدام الامر ( `استقاله` )\n✦","md",true)
end
if Redis:sismember(MARCOS.."company_owners:",msg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ لديك شركة مسبقاً","md",true)
end
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if tonumber(ballancee) < 1000000 then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي \n✦","md",true)
end
if Redis:sismember(MARCOS.."companys:", Cnamed) then
return bot.sendText(msg.chat_id,msg.id, "✧ الاسم مأخوذ جرب اسم ثاني \n✦","md",true)
end
local shrkcoi = tonumber(ballancee) - 1000000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , shrkcoi)
Redis:sadd(MARCOS.."company_owners:", msg.sender_id.user_id)
local rand = math.random(1,99999999999999)
Redis:sadd(MARCOS.."companys:", Cnamed)
Redis:set(MARCOS.."companys_name:"..msg.sender_id.user_id, Cnamed)
Redis:set(MARCOS.."companys_owner:"..Cnamed, msg.sender_id.user_id)
Redis:set(MARCOS.."companys_id:"..rand, Cnamed)
Redis:set(MARCOS.."companys_id:"..Cnamed, rand)
Redis:sadd(MARCOS.."company:mem:"..Cnamed, msg.sender_id.user_id)
Redis:sadd(MARCOS.."in_company:", msg.sender_id.user_id)
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,"✧ تم انشاء شركتك\n✧ اسم الشركة -> "..Cnamed.."\n✧ رصيد الشركة -> "..convert_mony.." جنيه 💵\n✧ تستطيع اضافة اعضاء معك بالشركة\n✧ ارسل الامر ( اضافه ) بالرد\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل ↢ ( `انشاء حساب بنكي` )","md",true)
end
end
if text and text:match('كشف شركه (.*)') or text and text:match('كشف شركة (.*)') then
local Cname = text:match('كشف شركه (.*)') or text:match('كشف شركة (.*)')
if not Redis:sismember(MARCOS.."companys:", Cname) then return bot.sendText(msg.chat_id,msg.id,"✧ لا يوجد شركه بهذا الاسم","md",true) end
local owner_id = Redis:get(MARCOS.."companys_owner:"..Cname)
local Cowner_tag = "["..bot.getUser(owner_id).first_name.."](tg://user?id="..owner_id..")"
local Cid = Redis:get(MARCOS.."companys_id:"..Cname)
local Cmem = Redis:smembers(MARCOS.."company:mem:"..Cname)
local Cmony = 0
if #Cmem > 1 then 
mem_txt = "✧ اعضاء شركه "..Cname.." :\n"
else
mem_txt = "✧ اعضاء شركه "..Cname.." :\n✧ لا يوجد اعضاء بالشركه\n"
end
for k,v in pairs(Cmem) do
local mem_mony = tonumber(Redis:get(MARCOS.."boob"..v)) or 0
local mem_tag = "["..bot.getUser(v).first_name.."](tg://user?id="..v..")"
if tonumber(v) ~= tonumber(owner_id) then
mem_txt = mem_txt.."- "..mem_tag.."\nفلوسه -> "..mem_mony.." جنيه 💵\n\n"
end
Cmony = Cmony + mem_mony
end
local convert_mony = string.format("%.0f",Cmony)
bot.sendText(msg.chat_id,msg.id,"✧ تم ايجاد الشركه بنجاح\n\n✧ صاحب الشركه -> "..Cowner_tag.."\n✧ ايدي الشركه -> "..Cid.."\n✧ فلوس الشركه -> "..convert_mony.." جنيه 💵\n"..mem_txt.."\n✦","md",true)
end
if text == "شركتي" then
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if not Redis:sismember(MARCOS.."in_company:", msg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ انت غير موظف في اي شركة","md",true)  
end
local Cname = Redis:get(MARCOS.."companys_name:"..msg.sender_id.user_id) or Redis:get(MARCOS.."in_company:name:"..msg.sender_id.user_id)
local owner_id = Redis:get(MARCOS.."companys_owner:"..Cname)
local Cid = Redis:get(MARCOS.."companys_id:"..Cname)
local Cmem = Redis:smembers(MARCOS.."company:mem:"..Cname)
local Cmony = 0
if #Cmem > 1 then
mem_txt = "✧ اعضاء شركه "..Cname.." :\n"
else
mem_txt = "✧ اعضاء شركه "..Cname.." :\n✧ لا يوجد اعضاء بالشركه\n"
end
for k,v in pairs(Cmem) do
local mem_mony = tonumber(Redis:get(MARCOS.."boob"..v))
if mem_mony then
if tonumber(v) ~= tonumber(owner_id) then
local mem_tag = "["..bot.getUser(v).first_name.."](tg://user?id="..v..")"
mem_txt = mem_txt.."- "..mem_tag.."\nفلوسه -> "..mem_mony.." جنيه 💵\n"
end
Cmony = Cmony + mem_mony
end
end
local convert_mony = string.format("%.0f",Cmony)
bot.sendText(msg.chat_id,msg.id,"✧ اهلا بك عزيزي في شركتك\n\n✧ ايدي الشركه -> "..Cid.."\n✧ فلوس الشركه -> "..convert_mony.." جنيه 💵\n✧ صاحب الشركه -> ".."["..bot.getUser(owner_id).first_name.."](tg://user?id="..owner_id..")\n"..mem_txt.."\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل ↢ ( `انشاء حساب بنكي` )","md",true)
end
end
if (text == 'اضافه' or text == 'اضافة') and msg.reply_to_message_id == 0 then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`اضافه` بالرد","md",true)
end
if (text == 'طرد' or text == 'رفض') and msg.reply_to_message_id == 0 then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`طرد` بالرد","md",true)
end
if (text == 'اضافه' or text == 'اضافة' or text == "توظيف") and msg.reply_to_message_id ~= 0 then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)
return false
end
if Remsg.sender_id.user_id == msg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ بدك تضيف نفسك 👻😹*","md",true)  
return false
end
if not Redis:sismember(MARCOS.."company_owners:", msg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك شركه","md",true)  
end
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
if Redis:sismember(MARCOS.."in_company:" , Remsg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ لديه شركة مسبقاً","md",true)
end
local Cname = Redis:get(MARCOS.."companys_name:"..msg.sender_id.user_id)
local Cmem = Redis:smembers(MARCOS.."company:mem:"..Cname)
if #Cmem == 5 then
return bot.sendText(msg.chat_id,msg.id, "✧ لقد وصلت شركتك لاقصى عدد من الموظفين\n✧ تستطيع طرد الموظفين\n✦","md",true)
end
if Redis:get(MARCOS.."company_request:"..Remsg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ اللاعب لديه طلب توظيف استنى يخلص مدته","md",true)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'موافق', data = Remsg.sender_id.user_id.."/company_yes/"..msg.sender_id.user_id},{text = 'غير موافق', data = Remsg.sender_id.user_id.."/company_no/"..msg.sender_id.user_id},
},
}
}
Redis:setex(MARCOS.."company_request:"..Remsg.sender_id.user_id,60,true)
return bot.sendText(msg.chat_id, msg.reply_to_message_id ,"✧ صاحب الشركة -> "..Cname.."\n✧ طلب منك العمل معه بالشركة ؟","md",false, false, false, false, reply_markup)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if (text == 'طرد' or text == 'رفض') and msg.reply_to_message_id ~= 0 then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا تستطيع استخدام الامر على البوت*","md",true)
return false
end
if Remsg.sender_id.user_id == msg.sender_id.user_id then
bot.sendText(msg.chat_id,msg.id,"\n*✧ بدك تضيف نفسك 👻😹*","md",true)  
return false
end
if not Redis:sismember(MARCOS.."company_owners:", msg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك شركه","md",true)  
end
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
local Cname = Redis:get(MARCOS.."companys_name:"..msg.sender_id.user_id)
if not Redis:sismember(MARCOS.."company:mem:"..Cname, Remsg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك في الشركة مشان تطرده","md",true)  
end
Redis:srem(MARCOS.."company:mem:"..Cname, Remsg.sender_id.user_id)
Redis:srem(MARCOS.."in_company:", Remsg.sender_id.user_id)
Redis:del(MARCOS.."in_company:name:"..Remsg.sender_id.user_id, Cname)
return bot.sendText(msg.chat_id,msg.id, "✧ تم طرده من الشركه ","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == "استقاله" or text == "استقالة" then
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if not Redis:sismember(MARCOS.."in_company:" , msg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ ليس لديك شركة","md",true)
end
if Redis:sismember(MARCOS.."company_owners:", msg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ انت صاحب الشركه ما يمديك تستقيل\n✧ اكتب ( `مسح شركتي` )","md",true)  
end
local Cname = Redis:get(MARCOS.."in_company:name:"..msg.sender_id.user_id)
Redis:srem(MARCOS.."company:mem:"..Cname, msg.sender_id.user_id)
Redis:srem(MARCOS.."in_company:", msg.sender_id.user_id)
Redis:del(MARCOS.."in_company:name:"..msg.sender_id.user_id, Cname)
local owner_id = Redis:get(MARCOS.."companys_owner:"..Cname)
local mem_tag = "["..bot.getUser(msg.sender_id.user_id).first_name.."](tg://user?id="..msg.sender_id.user_id..")"
bot.sendText(owner_id,0, "✧ اللاعب "..mem_tag.." استقال من شركتك" ,"md",true)
return bot.sendText(msg.chat_id,msg.id, "✧ انت الان لست موظف في شركه "..Cname ,"md",true)
else
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل -> ( `انشاء حساب بنكي` )","md",true)
end
end
if text == "عجله الحظ" or text == "عجلة الحظ" or text == "عجله" or text == "عجلة" then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:ttl(MARCOS.."aglahd" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."aglahd" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ يمديك تلعب عجله الحظ بعد "..math.floor(hours).." دقيقة","md",true)
end
local mony = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if tonumber(mony) < 4000000 then
return bot.sendText(msg.chat_id,msg.id, "✧ الحد الادنى المسموح به هو 4000000 جنيه 💵\n✦","md",true)
end
ballance = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
ballanceek = ballance - 4000000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(ballanceek))
Redis:setex(MARCOS.."aglahd" .. msg.sender_id.user_id,1800, true)
local msg_text = ""
local photo = "https://t.me/f_0_C/27"
local msg_reply = msg.id/2097152/0.5
local keyboard = {}
keyboard.inline_keyboard = {
{
{text = '• العب الان •', callback_data=msg.sender_id.user_id.."/happywheel"},
},
}
return https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id="..msg.chat_id.."&reply_to_message_id="..msg_reply.."&photo="..photo.."&caption="..URL.escape(msg_text).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ","md",true)
end
end
if text and text:match('^حظر حساب (.*)$') then
local UserName = text:match('^حظر حساب (.*)$')
local coniss = coin(UserName)
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
Redis:set(MARCOS.."bandid"..coniss,coniss)
bot.sendText(msg.chat_id,msg.id, "✧ تم حظر الحساب "..coniss.." من لعبة البنك\n✦","md",true)
end
end
if text and text:match('^الغاء حظر حساب (.*)$') then
local UserName = text:match('^الغاء حظر حساب (.*)$')
local coniss = coin(UserName)
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
Redis:del(MARCOS.."bandid"..coniss)
bot.sendText(msg.chat_id,msg.id, "✧ تم الغاء حظر الحساب "..coniss.." من لعبة البنك\n✦","md",true)
end
end
if text and text:match('^انشاء كوبون (.*)$') then
local UserName = text:match('^انشاء كوبون (.*)$')
local coniss = coin(UserName)
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
numcobo = math.random(1000000000000,9999999999999);
local convert_mony = string.format("%.0f",coniss)
Redis:set(MARCOS.."cobonum"..numcobo,numcobo)
Redis:set(MARCOS.."cobon"..numcobo,coniss)
bot.sendText(msg.chat_id,msg.id, "✧ وصل كوبون \n\n✧ المبلغ -> "..convert_mony.." جنيه 💵\n✧ رقم الكوبون -> `"..numcobo.."`\n\n✧ طريقة استخدام الكوبون :\n✧ تكتب ( كوبون + رقمه )\n✧ مثال -> كوبون 4593875\n✦","md",true)
end
end
if text == "كوبون" or text == "الكوبون" then
bot.sendText(msg.chat_id,msg.id, "✧ طريقة استخدام الكوبون :\nتكتب ( كوبون + رقمه )\nمثال -> كوبون 4593875\n\n- ملاحظة -> الكوبون يستخدم لمرة واحدة ولشخص واحد\n✦","md",true)
end
if text and text:match('^كوبون (.*)$') then
local UserName = text:match('^كوبون (.*)$')
local coniss = coin(UserName)
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
cobnum = Redis:get(MARCOS.."cobonum"..coniss)
if coniss == tonumber(cobnum) then
cobblc = Redis:get(MARCOS.."cobon"..coniss)
ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
cobonplus = ballancee + cobblc
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , cobonplus)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
Redis:del(MARCOS.."cobon"..coniss)
Redis:del(MARCOS.."cobonum"..coniss)
bot.sendText(msg.chat_id,msg.id, "✧ وصل كوبون \n\n✧ المبلغ -> "..cobblc.." جنيه 💵\n✧ رقم الكوبون -> `"..coniss.."`\n✧ رصيدك الان -> "..convert_mony.." جنيه 💵\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ لا يوجد كوبون بهذا الرقم `"..coniss.."`\n✦","md",true)
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ","md",true)
end
end
if text == 'تبرع' then
if Redis:ttl(MARCOS.."tabrotime" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."tabrotime" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ يمديك تتبرع بعد "..math.floor(hours).." دقيقة","md",true)
end
bot.sendText(msg.chat_id,msg.id, "**✧ استعمل الامر كذا ↑↓**\n\n`تبرع` المبلغ","md",true)
end
if text and text:match('^تبرع (.*)$') then
local UserName = text:match('^تبرع (.*)$')
local coniss = coin(UserName)
if not Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل  ->  ( `انشاء حساب بنكي` )","md",true)
end
if tonumber(coniss) > 10001 then
return bot.sendText(msg.chat_id,msg.id, "✧ الحد الاعلى المسموح به هو 10000 جنيه \n✦","md",true)
end
if tonumber(coniss) < 999 then
return bot.sendText(msg.chat_id,msg.id, "✧ الحد الادنى المسموح به هو 1000 جنيه \n✦","md",true)
end
if Redis:ttl(MARCOS.."tabrotime" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."tabrotime" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ يمديك تتبرع بعد "..math.floor(hours).." دقيقة","md",true)
end
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if tonumber(coniss) > tonumber(ballanceed) then
return bot.sendText(msg.chat_id,msg.id, "✧ فلوسك ماتكفي\n✦","md",true)
end
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
news = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
news = " لا يوجد اسم "
end
local bank_users = Redis:smembers(MARCOS.."booob")
monyyy_list = {}
for k,v in pairs(bank_users) do
local mony = Redis:get(MARCOS.."boob"..v)
table.insert(monyyy_list, {tonumber(mony) , v})
end
table.sort(monyyy_list, function(a, b) return a[1] < b[1] end)
tabr = math.random(1,200)
winner_id = monyyy_list[tabr][2]
local user_name = bot.getUser(winner_id).first_name or Redis:get(MARCOS..winner_id.."first_name:") or "لا يوجد اسم"
tt =  "["..user_name.."]("..user_name..")"
winner_mony = monyyy_list[tabr][1]
local convert_mony = string.format("%.0f",tonumber(coniss))
byre = tonumber(ballanceed) - tonumber(coniss)
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , math.floor(byre))
taeswq = Redis:get(MARCOS.."tabbroat"..msg.sender_id.user_id) or 0
pokloo = tonumber(taeswq) + tonumber(coniss)
Redis:set(MARCOS.."tabbroat"..msg.sender_id.user_id , math.floor(pokloo))
ballanceeed = Redis:get(MARCOS.."boob"..winner_id) or 0
tekash = tonumber(ballanceeed) + tonumber(coniss)
Redis:set(MARCOS.."boob"..winner_id , tonumber(tekash))
ballanceeed = Redis:get(MARCOS.."boob"..winner_id) or 0
Redis:sadd(MARCOS.."taza",msg.sender_id.user_id)
Redis:setex(MARCOS.."tabrotime" .. msg.sender_id.user_id,620, true)
local convert_monyy = string.format("%.0f",tonumber(ballanceeed))
tttt = "⌯ وصل تبرع 📄\n\n✧ من -> "..news.."\n✧ المستفيد -> "..user_name.."\n✧ المبلغ -> "..convert_mony.." جنيه 💵 \n✧ فلوس المستفيد الان -> "..convert_monyy.." جنيه 💵\n✦"
bot.sendText(msg.chat_id,msg.id, tttt,"md",true)  
bot.sendText(winner_id,0, "⌯ وصلك تبرعات من -> "..news.."\n✧ المبلغ -> "..convert_mony.." جنيه 💵","md",true)
end
if text == 'تبرعاتي' and tonumber(msg.reply_to_message_id) == 0 then
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
ballancee = Redis:get(MARCOS.."tabbroat"..msg.sender_id.user_id) or 0
if tonumber(ballancee) < 1 then
return bot.sendText(msg.chat_id,msg.id, "✧ ماعندك تبرعات \n✦","md",true)
end
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id, "✧ تبرعاتك -> `"..convert_mony.."` جنيه 💵","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل  ->  ( `انشاء حساب بنكي` )","md",true)
end
end
if text == "توب التبرعات" or text == "توب المتبرعين" or text == "توب متبرعين" or text == "المتبرعين" or text == "متبرعين" then
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
news = "["..ban.first_name.."]("..ban.first_name..")"
else
news = " لا يوجد"
end
ballancee = Redis:get(MARCOS.."tabbroat"..msg.sender_id.user_id) or 0
local bank_users = Redis:smembers(MARCOS.."taza")
if #bank_users == 0 then
return bot.sendText(msg.chat_id,msg.id,"✧ لا يوجد حسابات في البنك","md",true)
end
top_mony = "✧ توب اعلى 20 شخص بالتبرعات ↑↓\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
tabr_list = {}
for k,v in pairs(bank_users) do
local mony = Redis:get(MARCOS.."tabbroat"..v)
table.insert(tabr_list, {tonumber(mony) , v})
end
table.sort(tabr_list, function(a, b) return a[1] > b[1] end)
num = 1
emoji ={ 
"🥇" ,
"🥈",
"🥉",
"4)",
"5)",
"6)",
"7)",
"8)",
"9)",
"10)",
"11)",
"12)",
"13)",
"14)",
"15)",
"16)",
"17)",
"18)",
"19)",
"20)"
}
for k,v in pairs(tabr_list) do
if num <= 20 then
local user_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
tt =  "["..user_name.."]("..user_name..")"
local mony = v[1]
local convert_mony = string.format("%.0f",mony)
local emo = emoji[k]
num = num + 1
gflos = string.format("%.0f", mony):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
top_mony = top_mony..emo.." "..gflos.." 💵 l "..tt.." \n"
gflous = string.format("%.0f", ballancee):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
gg = " • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n✧ you -> "..gflous.." 💵 l "..news.." \n\nملاحظة -> اي شخص مخالف للعبة بالغش او حاط يوزر بينحظر من اللعبه وتتصفر فلوسه"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00'}, 
},
}
}
return bot.sendText(msg.chat_id,msg.id,top_mony..gg,"md",false, false, false, false, reply_markup)
end
---------------------- Dev JABWA ----------------------
if text == 'تفكيك' then
if not Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
return bot.sendText(msg.chat_id,msg.id," ✧ الالعاب معطلة من قبل المشرفين","md",true)
end
katu = {'ا ح ب ك','ذ ئ ب','ب ع ي ر','ط ي ر','و ر د ه','ج م ي ل ','ح ل و','ب ط ر ي ق','ط م ا ط م','م و ز','س ي ا ر ة','ت ح ر ي ك','ف ل و س','ب و ت','ث ق ة','ح ل ز و ن','م ك ي ف','م ر و ح ه'
};
name = katu[math.random(#katu)]
Redis:set(MARCOS..'Set_fkk'..msg.chat_id,name)
name = string.gsub(name,'ا ح ب ك','احبك')
name = string.gsub(name,'ا ك ر ه ك','اكرهك')
name = string.gsub(name,'ذ ئ ب','ذئب')
name = string.gsub(name,'ب ع ي ر','بعير')
name = string.gsub(name,'ط ي ر','طير')
name = string.gsub(name,'و ر د ه','ورده')
name = string.gsub(name,'ج م ي ل','جميل')
name = string.gsub(name,'ح ل و','حلو')
name = string.gsub(name,'ب ط ر ي ق','بطريق')
name = string.gsub(name,'ط م ا ط م','طماطم')
name = string.gsub(name,'م و ز','موز')
name = string.gsub(name,'س ي ا ر ة','سيارة')
name = string.gsub(name,'ت ح ر ي ك','تحريك')
name = string.gsub(name,'ف ل و س','فلوس')
name = string.gsub(name,'ب و ت','بوت')
name = string.gsub(name,'ث ق ة','ثقة')
name = string.gsub(name,'ح ل ز و ن','حلزون')
name = string.gsub(name,'م ك ي ف','مكيف')
name = string.gsub(name,'م ر و ح ه','مروحه')
return bot.sendText(msg.chat_id,msg.id,"✧ اسرع واحد يفكك -> "..name.."","md",true)
end
if text == 'تركيب' then
if not Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
return bot.sendText(msg.chat_id,msg.id," ✧ الالعاب معطلة من قبل المشرفين","md",true)
end
katu = {'احبك','ذئب','بعير','طير','ورده','جميل ','حلو','بطريق','طماطم','موز','سيارة','تحريك','فلوس','بوت','ثقة','حلزون','مكيف','مروحه'
};
name = katu[math.random(#katu)]
Redis:set(MARCOS..'Set_trkib'..msg.chat_id,name)
name = string.gsub(name,'احبك','ا ح ب ك')
name = string.gsub(name,'ذئب','ذ ئ ب')
name = string.gsub(name,'بعير','ب ع ي ر')
name = string.gsub(name,'طير','ط ي ر')
name = string.gsub(name,'ورده','و ر د ه')
name = string.gsub(name,'جميل','ج م ي ل')
name = string.gsub(name,'حلو','ح ل و')
name = string.gsub(name,'بطريق','ب ط ر ي ق')
name = string.gsub(name,'طماطم','ط م ا ط م')
name = string.gsub(name,'موز','م و ز')
name = string.gsub(name,'سيارة','س ي ا ر ة')
name = string.gsub(name,'تحريك','ت ح ر ي ك')
name = string.gsub(name,'فلوس','ف ل و س')
name = string.gsub(name,'بوت','ب و ت')
name = string.gsub(name,'ثقة','ث ق ة')
name = string.gsub(name,'حلزون','ح ل ز و ن')
name = string.gsub(name,'مكيف','م ك ي ف')
name = string.gsub(name,'مروحه','م ر و ح ه')
return bot.sendText(msg.chat_id,msg.id,"✧ اسرع واحد يركب -> "..name.."","md",true)
end

if text == 'عقاب' then
if not Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
return bot.sendText(msg.chat_id,msg.id," ✧ الالعاب معطلة من قبل المشرفين","md",true)
end
Redis:del(MARCOS..'List_Ahkamm'..msg.chat_id)
Redis:set(MARCOS.."raeahkamm"..msg.chat_id,msg.sender_id.user_id)
Redis:sadd(MARCOS..'List_Ahkamm'..msg.chat_id,msg.sender_id.user_id)
Redis:setex(MARCOS.."Start_Ahkamm"..msg.chat_id,3600,true)
return bot.sendText(msg.chat_id,msg.id,"⇜ بدينا لعبة عقاب واضفت اسمك\n⇜ اللي يبي يلعب يرسل كلمة ( انا )","md",true)
end
if text == 'نعم' and Redis:get(MARCOS.."Witting_StartGamehh"..msg.chat_id) then
rarahkam = Redis:get(MARCOS.."raeahkamm"..msg.chat_id)
if tonumber(rarahkam) == msg.sender_id.user_id then
local list = Redis:smembers(MARCOS..'List_Ahkamm'..msg.chat_id) 
if #list == 1 then 
return bot.sendText(msg.chat_id,msg.id,"✧ عذراً لم يشارك اي لاعب","md",true)
end 
local UserName = list[math.random(#list)]

local UserId_Info = bot.getUser(UserName)
if UserId_Info.username and UserId_Info.username ~= "" then
ls = '@['..UserId_Info.username..']'
else
ls = '['..UserId_Info.first_name..'](tg://user?id='..UserName..')'
end
Redis:incrby(MARCOS..'Num:Add:Games'..msg.chat_id..UserId_Info.id,5)
Redis:del(MARCOS..'raeahkamm'..msg.chat_id) 
Redis:del(MARCOS..'List_Ahkamm'..msg.chat_id) 
Redis:del(MARCOS.."Witting_StartGamehh"..msg.chat_id)
Redis:del(MARCOS.."Start_Ahkamm"..msg.chat_id)
katu = {
"**صورة وجهك او رجلك او خشمك او يدك**.",
"**اصدر اي صوت يطلبه منك الاعبين**.",
"**سكر خشمك و قول كلمة من اختيار الاعبين الي معك**.",
"**روح الى اي قروب عندك في الواتس اب و اكتب اي شيء يطلبه منك الاعبينالحد الاقصى 3 رسائل**.",
"**قول نكتة ولازم احد الاعبين يضحك اذا ضحك يعطونك ميوت الى ان يجي دورك مرة ثانية**.",
"**سمعنا صوتك و غن اي اغنية من اختيار الاعبين الي معك**.",
"**ذي المرة لك لا تعيدها**.",
"**ارمي جوالك على الارض بقوة و اذا انكسر صور الجوال و ارسله في الشات العام**.",
"**صور اي شيء يطلبه منك الاعبين**.",
"**اتصل على ابوك و قول له انك رحت مع بنت و احين هي حامل....**.",
"**سكر خشمك و قول كلمة من اختيار الاعبين الي معك**.",
"**اعطي اي احد جنبك كف اذا مافيه احد جنبك اعطي نفسك و نبي نسمع صوته**.",
"**ارمي جوالك على الارض بقوة و اذا انكسر صور الجوال و ارسله في الشات العام**.",
"**روح عند اي احد بالخاص و قول له انك تحبه و الخ**.",
"**اكتب في الشات اي شيء يطلبه منك الاعبين في الخاص**.",
"**قول نكتة اذا و لازم احد الاعبين يضحك اذا محد ضحك يعطونك ميوت الى ان يجي دورك مرة ثانية**.",
"**سامحتك خلاص مافيه عقاب لك **.",
"**اتصل على احد من اخوياكخوياتك , و اطلب منهم مبلغ على اساس انك صدمت بسيارتك**.",
"**غير اسمك الى اسم من اختيار الاعبين الي معك**.",
"**اتصل على امك و قول لها انك تحبها **.",
"**لا يوجد سؤال لك سامحتك **.",
"**قل لواحد ماتعرفه عطني كف**.",
"**منشن الجميع وقل انا اكرهكم**.",
"**اتصل لاخوك و قول له انك سويت حادث و الخ....**.",
"**روح المطبخ و اكسر صحن **.",
"**اعطي اي احد جنبك كف اذا مافيه احد جنبك اعطي نفسك و نبي نسمع صوت الكف**.",
"**قول لاي بنت موجود في الروم كلمة حلوه**.",
"**تكلم باللغة الانجليزية الين يجي دورك مرة ثانية لازم تتكلم اذا ما تكلمت تنفذ عقاب ثاني**.",
"**لا تتكلم ولا كلمة الين يجي دورك مرة ثانية و اذا تكلمت يجيك باند لمدة يوم كامل من السيرفر**.",
"**قول قصيدة **.",
"**تكلم باللهجة السودانية الين يجي دورك مرة ثانية**.",
"**اتصل على احد من اخوياكخوياتك , و اطلب منهم مبلغ على اساس انك صدمت بسيارتك**.",
"**اول واحد تشوفه عطه كف**.",
"**سو مشهد تمثيلي عن اي شيء يطلبه منك الاعبين**.",
"**سامحتك خلاص مافيه عقاب لك **.",
"**اتصل على ابوك و قول له انك رحت مع بنت و احين هي حامل....**.",
"**روح اكل ملح + ليمون اذا مافيه اكل اي شيء من اختيار الي معك**.",
"**تاخذ عقابين**.",
"**قول اسم امك افتخر بأسم امك**.",
"**ارمي اي شيء قدامك على اي احد موجود او على نفسك**.",
"**اذا انت ولد اكسر اغلى او احسن عطور عندك اذا انتي بنت اكسري الروج حقك او الميك اب حقك**.",
"**اذهب الى واحد ماتعرفه وقل له انا كيوت وابي بوسه**.",
"**تتصل على الوالدهو تقول لها خطفت شخص**.",
"** تتصل على الوالدهو تقول لها تزوجت با سر**.",
"**اتصل على الوالدهو تقول لهااحب وحده**.",
"**تتصل على شرطي تقول له عندكم مطافي**.",
"**خلاص سامحتك**.",
"** تصيح في الشارع انامجنوون**.",
"** تروح عند شخص وقول له احبك**."
}
name = katu[math.random(#katu)]
return bot.sendText(msg.chat_id,msg.id,'✧ تم اختيار '..ls..' لمعاقبته\n✧ العقوبة هي ( '..name..' ) ',"md",true)
end
end

if text == 'احكام' then
if not Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
return bot.sendText(msg.chat_id,msg.id," ✧ الالعاب معطلة من قبل المشرفين","md",true)
end
Redis:del(MARCOS..'List_Ahkam'..msg.chat_id)
Redis:set(MARCOS.."raeahkam"..msg.chat_id,msg.sender_id.user_id)
Redis:sadd(MARCOS..'List_Ahkam'..msg.chat_id,msg.sender_id.user_id)
Redis:setex(MARCOS.."Start_Ahkam"..msg.chat_id,3600,true)
return bot.sendText(msg.chat_id,msg.id,"⇜ بدينا لعبة احكام واضفت اسمك\n ⇜ اللي يبي يلعب يرسل كلمة ( انا )","md",true)
end
if text == 'نعم' and Redis:get(MARCOS.."Witting_StartGameh"..msg.chat_id) then
rarahkam = Redis:get(MARCOS.."raeahkam"..msg.chat_id)
if tonumber(rarahkam) == msg.sender_id.user_id then
local list = Redis:smembers(MARCOS..'List_Ahkam'..msg.chat_id) 
if #list == 1 then 
return bot.sendText(msg.chat_id,msg.id,"✧ عذراً لم يشارك اي لاعب","md",true)
end 
local UserName = list[math.random(#list)]
local UserId_Info = bot.getUser(UserName)
if UserId_Info.username and UserId_Info.username ~= "" then
ls = '@['..UserId_Info.username..']'
else
ls = '['..UserId_Info.first_name..'](tg://user?id='..UserName..')'
end
Redis:incrby(MARCOS..'Num:Add:Games'..msg.chat_id..UserId_Info.id,5)
Redis:del(MARCOS..'raeahkam'..msg.chat_id) 
Redis:del(MARCOS..'List_Ahkam'..msg.chat_id) 
Redis:del(MARCOS.."Witting_StartGameh"..msg.chat_id)
Redis:del(MARCOS.."Start_Ahkam"..msg.chat_id)
return bot.sendText(msg.chat_id,msg.id,'⇜ تم اختيار '..ls..' للحكم عليه',"md",true)
end
end
---------------------- Dev JABWA ----------------------
if text and text:match("^مسح كل (.*)$") then
local rtba = text:match("^مسح كل (.*)$")
if Redis:sismember(MARCOS.."rowtab:", rtba) then
local rtba_type = Redis:get(MARCOS..rtba.."type:")
if rtba_type == "sdev" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(1)..' * ',"md",true)
end
local sdev_list = Redis:smembers(MARCOS.."rtba:"..rtba..":")
if #sdev_list == 0 then 
return send(msg_chat_id,msg_id," ✧ لا يوجد "..rtba,"md",true) 
else
Redis:del(MARCOS.."rtba:"..rtba..":")
for k,v in pairs(sdev_list) do
Redis:srem(MARCOS.."Devss:Groups", v)
Redis:del(MARCOS.."rtba_name:"..v)
end
return send(msg_chat_id,msg_id," ✧ تم مسح كل "..rtba.." بنجاح","md",true)
end
end
if rtba_type == "dev Dev:Groups" then 
if not msg.Dev then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(3)..' * ',"md",true)
end
local dev_list = Redis:smembers(MARCOS.."rtba:"..rtba..":")
if #dev_list == 0 then 
return send(msg_chat_id,msg_id," ✧ لا يوجد "..rtba,"md",true) 
else
Redis:del(MARCOS.."rtba:"..rtba..":")
for k,v in pairs(dev_list) do
Redis:srem(MARCOS.."Dev:Groups", v)
Redis:del(MARCOS.."rtba_name:"..v)
end
return send(msg_chat_id,msg_id," ✧ تم مسح كل "..rtba.." بنجاح","md",true)
end
end
if rtba_type == "owner" then 
if not msg.Dev then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(3)..' * ',"md",true)
end
local owner_list = Redis:smembers(MARCOS.."rtba:"..rtba..":"..msg_chat_id)
if #owner_list == 0 then 
return send(msg_chat_id,msg_id," ✧ لا يوجد "..rtba,"md",true) 
else
Redis:del(MARCOS.."rtba:"..rtba..":"..msg_chat_id)
for k,v in pairs(owner_list) do
Redis:srem(MARCOS.."Ownerss:Group"..msg_chat_id, v)
Redis:del(MARCOS.."rtba_name:"..msg_chat_id..v)
end
return send(msg_chat_id,msg_id," ✧ تم مسح كل "..rtba.." بنجاح","md",true)
end
end
if rtba_type == "acreator" then 
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(44)..' }* ',"md",true)
end
local acreator_list = Redis:smembers(MARCOS.."rtba:"..rtba..":"..msg_chat_id)
if #acreator_list == 0 then 
return send(msg_chat_id,msg_id," ✧ لا يوجد "..rtba,"md",true) 
else
Redis:del(MARCOS.."rtba:"..rtba..":"..msg_chat_id)
for k,v in pairs(acreator_list) do
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, v)
Redis:del(MARCOS.."rtba_name:"..msg_chat_id..v)
end
return send(msg_chat_id,msg_id," ✧ تم مسح كل "..rtba.." بنجاح","md",true)
end
end
if rtba_type == "creator" then 
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(4)..' * ',"md",true)
end
 local creator_list = Redis:smembers(MARCOS.."rtba:"..rtba..":"..msg_chat_id)
if #creator_list == 0 then 
return send(msg_chat_id,msg_id," ✧ لا يوجد "..rtba,"md",true) 
else
Redis:del(MARCOS.."rtba:"..rtba..":"..msg_chat_id)
for k,v in pairs(creator_list) do
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, v)
Redis:del(MARCOS.."rtba_name:"..msg_chat_id..v)
end
return send(msg_chat_id,msg_id," ✧ تم مسح كل "..rtba.." بنجاح","md",true)
end
end
if rtba_type == "admin" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(6)..' * ',"md",true)
end
 local admin_list = Redis:smembers(MARCOS.."rtba:"..rtba..":"..msg_chat_id)
if #admin_list == 0 then 
return send(msg_chat_id,msg_id," ✧ لا يوجد "..rtba,"md",true) 
else
Redis:del(MARCOS.."rtba:"..rtba..":"..msg_chat_id)
for k,v in pairs(admin_list) do
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, v)
Redis:del(MARCOS.."rtba_name:"..msg_chat_id..v)
end
return send(msg_chat_id,msg_id," ✧ تم مسح كل "..rtba.." بنجاح","md",true)
end
end
if rtba_type == "mmez" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(7)..' * ',"md",true)
end
 local mmez_list = Redis:smembers(MARCOS.."rtba:"..rtba..":"..msg_chat_id)
if #mmez_list == 0 then 
return send(msg_chat_id,msg_id," ✧ لا يوجد "..rtba,"md",true) 
else
Redis:del(MARCOS.."rtba:"..rtba..":"..msg_chat_id)
for k,v in pairs(mmez_list) do
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, v)
Redis:del(MARCOS.."rtba_name:"..msg_chat_id..v)
end
return send(msg_chat_id,msg_id," ✧ تم مسح كل "..rtba.." بنجاح","md",true)
end
end
end
end
if text == ("الرتب المضافه") then
if not msg.Asasy then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(1)..' * ',"md",true)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = 't.me/ZAXY00'}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local rtb_list = Redis:smembers(MARCOS.."rowtab:")
if #rtb_list == 0 then return send(msg_chat_id,msg_id,' ✧ لايوجد رتب مضافه ف البوت',"md",true)end
rtb = "الرتب المضافه في البوت \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(rtb_list) do
rtba_type = Redis:get(MARCOS..v.."type:")
if rtba_type == "sdev" then rtba_t = "مطور ثانوي"
elseif rtba_type == "dev" then rtba_t = "مطور"
elseif rtba_type == "owner" then rtba_t = "مالك"
elseif rtba_type == "acreator" then rtba_t = "منشئ اساسي"
elseif rtba_type == "creator" then rtba_t = "منشئ"
elseif rtba_type == "admin" then rtba_t = "ادمن"
elseif rtba_type == "mmez" then rtba_t = "مميز"
end
rtb = rtb..k.." - "..v.." ( "..rtba_t.." )\n"
end
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'مسح الرتب المضافه', data = msg.sender_id.user_id..'/del_rtb'}, },}}
return send(msg.chat_id,msg.id,rtb,"md",false, false, false, false, reply_markup)
end
if text == ("مسح رتبه") then
if not msg.Asasy then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(1)..' * ',"md",true)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = 't.me/ZAXY00'}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."del:rtba"..msg.sender_id.user_id..":"..msg_chat_id, true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الغاء الامر', data = msg.sender_id.user_id..'/cancelrdd'},
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان اسم الرتبه ","md",false, false, false, false, reply_markup)
end
if text and Redis:get(MARCOS.."del:rtba"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
Redis:srem(MARCOS.."rowtab:", text)
Redis:del(MARCOS..text.."type:")
local list_del = Redis:smembers(MARCOS.."rtba:"..text..":") or Redis:smembers(MARCOS.."rtba:"..text..":"..msg_chat_id)
local list_chatid = Redis:smembers(MARCOS.."ChekBotAdd")
for f,chat_id_del in pairs(list_chatid) do
for k,v in pairs(list_del) do
 Redis:del(MARCOS.."rtba:"..text..":"..v)
 Redis:del(MARCOS.."rtba_name:"..chat_id_del..v)
 Redis:del(MARCOS.."rtba_name:"..v)
end
end
for k,v in pairs(list_chatid) do
 Redis:del(MARCOS.."rtba:"..text..":"..v)
end
Redis:del(MARCOS.."rtba:"..text..":")
Redis:del(MARCOS.."del:rtba"..msg.sender_id.user_id..":"..msg_chat_id)
return send(msg_chat_id,msg_id," ✧ تم مسح الرتبه من الرتب المضافه ","md")
end
if text == ("اضف رتبه") then
if not msg.Asasy then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(1)..' * ',"md",true)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = 't.me/ZAXY00'}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Set:rtba"..msg.sender_id.user_id..":"..msg_chat_id, true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الغاء الامر', data = msg.sender_id.user_id..'/cancelrdd'},
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان اسم الرتبه ","md",false, false, false, false, reply_markup)
end
if text and Redis:get(MARCOS.."Set:rtba"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
Redis:srem(MARCOS.."rowtab:", text)
Redis:del(MARCOS..text.."type:")
Redis:del(MARCOS.."Set:rtba"..msg.sender_id.user_id..":"..msg_chat_id)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'مميز', data = msg.sender_id.user_id..'/promot_mmez/'..text}},
{{text = 'ادمن', data = msg.sender_id.user_id..'/promot_admin/'..text}},
{{text = 'منشئ', data = msg.sender_id.user_id..'/promot_creator/'..text}},
{{text = 'منشئ اساسي', data = msg.sender_id.user_id..'/promot_acreator/'..text}},
{{text = 'مالك', data = msg.sender_id.user_id..'/promot_owner/'..text}},
{{text = 'مطور', data = msg.sender_id.user_id..'/promot_dev/'..text}},
{{text = 'مطور ثانوي', data = msg.sender_id.user_id..'/promot_sdev/'..text}},
}
}
return send(msg_chat_id,msg_id," ✧ الان اختر صلاحيات الرتبه الجديده ","md",false, false, false, false, reply_markup)
end
if text and text:match("^رفع (.*)$") and msg.reply_to_message_id ~= 0 then
local rtba = text:match("^رفع (.*)$")
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)
end
if Redis:sismember(MARCOS.."rowtab:", rtba) then
local rtba_type = Redis:get(MARCOS..rtba.."type:")
if rtba_type == "sdev" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(1)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":", Message_Reply.sender_id.user_id) then 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." مسبقا").Reply,"md",true) 
else
Redis:sadd(MARCOS.."Devss:Groups", Message_Reply.sender_id.user_id)
Redis:sadd(MARCOS.."rtba:"..rtba..":", Message_Reply.sender_id.user_id)
Redis:set(MARCOS.."rtba_name:"..Message_Reply.sender_id.user_id , rtba)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." بنجاح").Reply,"md",true)
end
end
if rtba_type == "dev" then 
if not msg.Dev then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(3)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":", Message_Reply.sender_id.user_id) then 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." مسبقا").Reply,"md",true) 
else
Redis:sadd(MARCOS.."Dev:Groups", Message_Reply.sender_id.user_id)
Redis:sadd(MARCOS.."rtba:"..rtba..":", Message_Reply.sender_id.user_id)
Redis:set(MARCOS.."rtba_name:"..Message_Reply.sender_id.user_id , rtba)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." بنجاح").Reply,"md",true)
end
end
if rtba_type == "owner" then 
if not msg.Dev then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(3)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id) then 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." مسبقا").Reply,"md",true) 
else
Redis:sadd(MARCOS.."Ownerss:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:sadd(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:set(MARCOS.."rtba_name:"..msg_chat_id..Message_Reply.sender_id.user_id , rtba)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." بنجاح").Reply,"md",true)
end
end
if rtba_type == "acreator" then 
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(44)..' }* ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id) then 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." مسبقا").Reply,"md",true) 
else
Redis:sadd(MARCOS.."Creator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:sadd(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:set(MARCOS.."rtba_name:"..msg_chat_id..Message_Reply.sender_id.user_id , rtba)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." بنجاح").Reply,"md",true)
end
end
if rtba_type == "creator" then 
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(4)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id) then 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." مسبقا").Reply,"md",true) 
else
Redis:sadd(MARCOS.."Creator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:sadd(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:set(MARCOS.."rtba_name:"..msg_chat_id..Message_Reply.sender_id.user_id , rtba)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." بنجاح").Reply,"md",true)
end
end
if rtba_type == "admin" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(6)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id) then 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." مسبقا").Reply,"md",true) 
else
Redis:sadd(MARCOS.."Admin:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:sadd(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:set(MARCOS.."rtba_name:"..msg_chat_id..Message_Reply.sender_id.user_id , rtba)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." بنجاح").Reply,"md",true)
end
end
if rtba_type == "mmez" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(7)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id) then 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." مسبقا").Reply,"md",true) 
else
Redis:sadd(MARCOS.."Special:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:sadd(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:set(MARCOS.."rtba_name:"..msg_chat_id..Message_Reply.sender_id.user_id , rtba)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته "..rtba.." بنجاح").Reply,"md",true)
end
end
end
end
-- tanzel --
if text and text:match("^تنزيل (.*)$") and msg.reply_to_message_id ~= 0 then
local rtba = text:match("^تنزيل (.*)$")
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)
end
if Redis:sismember(MARCOS.."rowtab:", rtba) then
local rtba_type = Redis:get(MARCOS..rtba.."type:")
if rtba_type == "sdev" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(1)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":", Message_Reply.sender_id.user_id) then 
Redis:srem(MARCOS.."Devss:Groups", Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."rtba:"..rtba..":", Message_Reply.sender_id.user_id)
Redis:del(MARCOS.."rtba_name:"..Message_Reply.sender_id.user_id)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله "..rtba.." بنجاح").Reply,"md",true) 
else
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ ليس"..rtba.." ليتم تنزيله").Reply,"md",true)
end
end
if rtba_type == "dev" then 
if not msg.Dev then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(3)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":", Message_Reply.sender_id.user_id) then 
 Redis:srem(MARCOS.."Dev:Groups", Message_Reply.sender_id.user_id)
 Redis:srem(MARCOS.."rtba:"..rtba..":", Message_Reply.sender_id.user_id)
 Redis:del(MARCOS.."rtba_name:"..Message_Reply.sender_id.user_id)
 return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله "..rtba.." بنجاح").Reply,"md",true) 
else
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ ليس"..rtba.." ليتم تنزيله").Reply,"md",true)
end
end
if rtba_type == "owner" then 
if not msg.Dev then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(3)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id) then 
Redis:srem(MARCOS.."Ownerss:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:del(MARCOS.."rtba_name:"..msg_chat_id..Message_Reply.sender_id.user_id)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله "..rtba.." بنجاح").Reply,"md",true) 
else
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ ليس"..rtba.." ليتم تنزيله").Reply,"md",true)
end
end
if rtba_type == "acreator" then 
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(44)..' }* ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id) then 
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:del(MARCOS.."rtba_name:"..msg_chat_id..Message_Reply.sender_id.user_id)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله "..rtba.." بنجاح").Reply,"md",true) 
else
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ ليس"..rtba.." ليتم تنزيله").Reply,"md",true) 
end
end
if rtba_type == "creator" then 
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(4)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id) then 
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:del(MARCOS.."rtba_name:"..msg_chat_id..Message_Reply.sender_id.user_id)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله "..rtba.." بنجاح").Reply,"md",true) 
else
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ ليس"..rtba.." ليتم تنزيله").Reply,"md",true)
end
end
if rtba_type == "admin" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(6)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id) then 
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id) 
Redis:del(MARCOS.."rtba_name:"..msg_chat_id..Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله "..rtba.." بنجاح").Reply,"md",true) 
else
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ ليس"..rtba.." ليتم تنزيله").Reply,"md",true)
end
end
if rtba_type == "mmez" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص'..Controller_Num(7)..' * ',"md",true)
end
if Redis:sismember(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id) then 
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."rtba:"..rtba..":"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:del(MARCOS.."rtba_name:"..msg_chat_id..Message_Reply.sender_id.user_id)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله "..rtba.." بنجاح").Reply,"md",true) 
else
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ ليس"..rtba.." ليتم تنزيله").Reply,"md",true)
end
end
end
end
if text == "حذف قسم" or text == "مسح قسم" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(7)..' * ',"md",true)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = 't.me/ZAXY00'}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '✧ الغاء الامر', data = msg.sender_id.user_id..'/cancelrdd'},
},
}
}
Redis:set(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id,"true2")
return send(msg_chat_id,msg_id,"* ✧ ارسل الان الكلمه لحذفها من الاقسام*","md",false, false, false, false, reply_markup)
end 
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id.."") == "true2" then
Redis:del(MARCOS.."Add:Sections:Text:inline"..text) 
Redis:del(MARCOS.."Sections:inline:text"..text)
Redis:del(MARCOS.."Sections:inline:link"..text)
Redis:del(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id.."")
Redis:srem(MARCOS.."List:Sections:inline", text)
send(msg_chat_id,msg_id,"* ✧ تم حذف القسم من الاقسام بنجاح*","md",true)
return false
end
end
if text == ("مسح الاقسام") then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(6)..' * ',"md",true)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = 't.me/ZAXY00'}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Sections:inline")
for k,v in pairs(list) do 
Redis:del(MARCOS.."Add:Sections:Text:inline"..v) 
Redis:del(MARCOS.."Sections:inline:v"..v)
Redis:del(MARCOS.."Sections:inline:link"..v)
end
Redis:del(MARCOS.."List:Sections:inline")
return send(msg_chat_id,msg_id,"* ✧ تم مسح قائمه الاقسام*","md",true)
end
if text == "اضف قسم" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(7)..' * ',"md",true)
end
Redis:set(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '✧ الغاء الامر', data = msg.sender_id.user_id..'/cancelrdd'},
},
}
}
return send(msg_chat_id,msg_id,"* ✧ ارسل الان اسم القسم*","md",false, false, false, false, reply_markup)
end
if text and text:match("^(.*)$") and tonumber(msg.sender_id.user_id) ~= tonumber(MARCOS) then
if Redis:get(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
Redis:set(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id,"true1")
Redis:set(MARCOS.."Text:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id, text)
Redis:del(MARCOS.."Add:Sections:Text:inline"..text) 
Redis:del(MARCOS.."Sections:inline:text"..text)
Redis:sadd(MARCOS.."List:Sections:inline", text)
send(msg_chat_id,msg_id,[[
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, ✧ ارسل الان كليشه القسم ،
, ✧ارسل نص فقط ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*
`#username` *-> معرف المستخدم*
 `#name` *-> اسم المستخدم*
 `#id` *-> ايدي المستخدم*
 `#stast`* -> رتبة المستخدم*
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*
]],"md",true)
return false
end
end
if Redis:get(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id) == "true1" and tonumber(msg.sender_id.user_id) ~= tonumber(MARCOS) then
Redis:del(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:set(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id,"set_inline")
if text then
local anubis = Redis:get(MARCOS.."Text:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id)
if msg.content.text then 
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(MARCOS.."Add:Sections:Text:inline"..anubis, text)
send(msg_chat_id,msg_id," ✧ الان ارسل اسم الزر","md",true)
return false
end
end
end
if text and Redis:get(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id) == "set_inline" then
Redis:set(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id, "set_link")
Redis:del(MARCOS.."Sections:inline:help"..msg.sender_id.user_id..":"..msg_chat_id)
local anubis = Redis:get(MARCOS.."Text:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:sadd(MARCOS.."Sections:inline:text"..anubis, text)
Redis:set(MARCOS.."Sections:inline:help"..msg.sender_id.user_id..":"..msg_chat_id, text)
send(msg_chat_id,msg_id,"✧ الان ارسل محتوي الزر \n✧ ارسل نص او رابط فقط حيث يظر عند ضغط العضو عليه","md",true)
return false
end
if text and Redis:get(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id) == "set_link" then
local anubis = Redis:get(MARCOS.."Text:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id)
local anubis_rand = math.random(1,999999999999)
local anubiss = Redis:get(MARCOS.."Sections:inline:help"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:set(MARCOS.."Set:Sections:inline"..msg.sender_id.user_id..":"..msg_chat_id, "set_inline")
Redis:set(MARCOS.."in_inline_button:"..anubiss, "/Anubis/"..anubis_rand)
Redis:set(MARCOS.."/Anubis/"..anubis_rand, text )
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = "✧ انهاء" , data = msg.sender_id.user_id.."/cancelSection"},
},
}
}
send(msg_chat_id,msg_id," ✧ تم اضافه الزر بنجاح\n ✧ الان ارسل الكلام داخل الزر التالي \n ✧ او انهاء لحفظ القسم","md",true, false, false, false, reply_markup)
return false
end
if text and not Redis:get(MARCOS.."Status:Reply:inline"..msg_chat_id) then
local button = Redis:smembers(MARCOS.."Sections:inline:text"..text)
local Texingt = Redis:get(MARCOS.."Add:Sections:Text:inline"..text)
local inline_anubis = {data = {}}
for k,v in pairs(button) do
inline_anubis[k] = {{text = v , data = msg.sender_id.user_id..Redis:get(MARCOS.."in_inline_button:"..v).."&"..text}}
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = inline_anubis
}
if Texingt then 
local UserInfo = bot.getUser(msg.sender_id.user_id)
local Status_Gps = msg.Name_Controller
local Texingt = Texingt:gsub('#username',(UserInfo.username or 'لا يوجد')) 
local Texingt = Texingt:gsub('#name',UserInfo.first_name)
local Texingt = Texingt:gsub('#id',msg.sender_id.user_id)
local Texingt = Texingt:gsub('#stast',Status_Gps)
send(msg_chat_id,msg_id,'['..Texingt..']',"md",false, false, false, false, reply_markup)
end
end

if text == ("الاقسام") then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(6)..' * ',"md",true)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = 't.me/ZAXY00'}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Sections:inline")
text = " ✧ قائمه الاقسام ↑↓ \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
text = text..""..k.." -> "..v.."\n"
end
if #list == 0 then
text = " ✧ عذرا لا يوجد اقسام في المجموعة"
end
return send(msg_chat_id,msg_id,"["..text.."]","md",true)
end
if text == "اضف امر عام" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."All:Command:not:Group"..msg_chat_id..":"..msg.sender_id.user_id,"true") 
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return send(msg_chat_id,msg_id,"* ✧ الان ارسل لي الامر القديم ...*", 'md', false, false, false, false, reply_markup)
end
if text == "مسح امر عام" or text == "حذف امر عام" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."All:Command:not:Group:Del"..msg_chat_id..":"..msg.sender_id.user_id,"true") 
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return send(msg_chat_id,msg_id,"* ✧ ارسل الان الامر الذي قمت بوضعه مكان الامر القديم*", 'md', false, false, false, false, reply_markup)
end
if text == "مسح الاوامر المضافه عام" or text == "مسح الاوامر المضافه عام" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."All:Command:List:Group"..msg_chat_id)
for k,v in pairs(list) do
Redis:del(MARCOS.."All:Get:Reides:Jabwa:Group"..msg_chat_id..":"..v)
Redis:del(MARCOS.."All:Command:List:Group"..msg_chat_id)
end
return send(msg_chat_id,msg_id,"* ✧ تم مسح جميع الاوامر التي تم اضافتها عام*","md",true)
end
if text == "الاوامر المضافه عام" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."All:Get:Reides:Jabwa:Group"..msg_chat_id.."")
Command = " ✧ قائمه الاوامر المضافه عام  \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • \n"
for k,v in pairs(list) do
Jabwa = Redis:get(MARCOS.."All:Get:Reides:Jabwa:Group"..msg_chat_id..":"..v)
if Jabwa then 
Command = Command..""..k..": ("..v..")  {"..Jabwa.."}\n"
else
Command = Command..""..k..": ("..v..") \n"
end
end
if #list == 0 then
Command = " ✧ لا توجد اوامر مضافه عام"
end
return send(msg_chat_id,msg_id,Command,"md",true)
end
if Redis:get(MARCOS.."msg:match:"..msg.chat_id) then
if msg.content.luatele then
get_msg = Redis:get(MARCOS.."msg:match:"..msg.chat_id..":"..msg.sender_id.user_id) or 0
gms = get_msg + 1
Redis:setex(MARCOS..'msg:match:'..msg.chat_id..":"..msg.sender_id.user_id,86400,gms)
end
if text == "تفاعلي اليوم" and msg.reply_to_message_id == 0 then    
bot.sendText(msg_chat_id,msg_id,'*✧ عدد رسائلك الكلي اليوم هنا هو -> '..(Redis:get(MARCOS..'msg:match:'..msg.chat_id..':'..msg.sender_id.user_id) or 0)..'*',"md",true)  
end  
if text == "تفاعله اليوم" and msg.reply_to_message_id ~= 0 then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local ban = bot.getUser(Message_Reply.sender_id.user_id)
bot.sendText(msg_chat_id,msg_id,'*✧ عدد رسائل الشخص الكلي اليوم هنا هو -> '..(Redis:get(MARCOS..'msg:match:'..msg.chat_id..':'..Message_Reply.sender.user_id) or 0)..'*',"md",true)  
end
end
if text and text:match("%a") and Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."zkrf:") == "zeng" then
Redis:del(MARCOS..msg_chat_id..msg.sender_id.user_id.."zkrf:")
Redis:set(MARCOS..msg_chat_id..msg.sender_id.user_id.."zkrf:text", text)
local api = https.request("https://ayad-12.xyz/anubis/zkhrfa.php?text="..URL.escape(text))
local zkrf = JSON.decode(api)
local inline_anubis = {data = {}}
for k,v in pairs(zkrf.anubis) do
inline_anubis[k] = {{text = v , data = msg.sender_id.user_id.."/az"..k}}
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = inline_anubis
}
return send(msg_chat_id,msg_id, "★ اختࢪ الزخࢪفھـۃ التي تࢪيدها\n ▽ "..#zkrf['anubis'],"html",false,false,false,false,reply_markup)
end
if text and not text:match("%a") and Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."zkrf:") == "zar" then
Redis:del(MARCOS..msg_chat_id..msg.sender_id.user_id.."zkrf:")
Redis:set(MARCOS..msg_chat_id..msg.sender_id.user_id.."zkrf:text", text)
local api = https.request("https://ayad-12.xyz/anubis/zkhrfa.php?text="..URL.escape(text))
local zkrf = JSON.decode(api)
local inline_anubis = {data = {}}
for k,v in pairs(zkrf.anubis) do
inline_anubis[k] = {{text = v , data = msg.sender_id.user_id.."/az"..k}}
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = inline_anubis
}
return send(msg_chat_id,msg_id, "★ اختࢪ الزخࢪفھـۃ التي تࢪيدها\n ▽","html",false,false,false,false,reply_markup)
end
if text == "استيراد زخرفه السورس" then 
if not msg.Asasy then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(1)..' * ',"md",true)
end
if Redis:get(MARCOS.."zk_deffult") then
return send(msg_chat_id,msg_id,' ✧ تم استيراد قائمه الزخرفه مسبقا',"md",true)
end
local zk_list = {
"###",
"𓂄𓆩###𓆪𓂁",
"𓆩⸤###⸥𓆪",
"𓆩###𓆪",
"ꔷ ### ’♥", 
"ꔷ ### ˝♥›.", 
"➹ ### 𓂄𓆩♥𓆪‌‌𓂁", 
"★⃝▷ ### ꗛ", 
"✧⃟▷ ### ꕸ",
"⸢ ### ⸥",
"ꞏ ### ｢♥｣",
"✧ ### ’🧸💕›",
" ᯓ 𓆩 ˹ ### ˼ 𓆪 𓆃",
"𓆩 ###ｌ➝ ˛⁽♥₎ 𓆪",
"𒅒 ✧!! ###ᵛ͢ᵎᵖ 𒅒",
"˚₊· ͟͟͞͞➳❥❬ ### ❭ ✧ °",
"ᥫ᭡ 𖥻 ### ۰ ໋࣭ヾ",
"- َ### 𓍲 🎀.",
"#;ُِ ### .𓇼",
}
for i = 1 , #zk_list , 1 do
Redis:sadd(MARCOS.."zk_list:", zk_list[i])
end
Redis:set(MARCOS.."zk_deffult", true)
return send(msg_chat_id,msg_id," ✧ تم استيراد جميع الزخارف","md",true)
end
if text == "مسح الزخارف" then 
if not msg.Asasy then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(1)..' * ',"md",true)
end
if not Redis:get(MARCOS.."zk_deffult") then
return send(msg_chat_id,msg_id,' ✧ لايوجد زخارف اصلا',"md",true)
end
Redis:del(MARCOS.."zk_deffult")
return send(msg_chat_id,msg_id," ✧ تم حذف جميع الزخارف","md",true)
end
if text == "اضف زخرفه" then 
if not msg.Asasy then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(1)..' * ',"md",true)
end
Redis:set(MARCOS.."add_zk"..msg.sender_id.user_id, true)
return send(msg_chat_id,msg_id," ✧ ارسل الزخرفه الان بهذا الشكل :\n▷ 𓂄𓆩###𓆪𓂁 \n ✧ هاذه مثال حبيبي جرب اسم ","md",true) 
end
if text and Redis:get(MARCOS.."add_zk"..msg.sender_id.user_id) then
if not msg.Asasy then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(1)..' * ',"md",true)
end
if not text:match("(.*)###(.*)") then
return send(msg_chat_id,msg_id," حبيبي انته من اول ادري بيك اثول ومدبرها دزها هيج \n▷ 𓂄𓆩###𓆪𓂁 ","md",true)
end
Redis:del(MARCOS.."add_zk"..msg.sender_id.user_id)
Redis:sadd(MARCOS.."zk_list:", text)
return send(msg_chat_id,msg_id," ✧ تم حفظ الزخرفه بنجاح","md",true) 
end
if text == "حذف زخرفه" or text == "مسح زخرفه" then 
if not msg.Asasy then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص'..Controller_Num(1)..' * ',"md",true)
end
local zk_list = Redis:smembers(MARCOS.."zk_list:")
local inline_anubis = {data = {}}
for k,v in pairs(zk_list) do
inline_anubis[k] = {{text = v , data = msg.sender_id.user_id.."/delz"..k}}
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = inline_anubis
}
send(msg_chat_id,msg_id," ✧ اضغط على الزخرفه لحذفها", "md",true,false,false,false,reply_markup)
end
if text == "تعطيل صورته" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."hisphoto"..msg_chat_id,"off")
return send(msg_chat_id,msg_id,' ✧ تم تعطيل صورته\n ꪤ',"md")
end
if text == "تفعيل صورته" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."hisphoto"..msg_chat_id)
return send(msg_chat_id,msg_id,' ✧ تم تفعيل صورته\n ꪤ',"md")
end
if text == "تعطيل صورتي" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."myphoto"..msg_chat_id,"off")
return send(msg_chat_id,msg_id,' ✧ تم تعطيل امر صورتي\n ꪤ',"md")
end
if text == "تفعيل صورتي" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."myphoto"..msg_chat_id)
return send(msg_chat_id,msg_id,' ✧ تم تفعيل امر صورتي\n ꪤ',"md")
end
if text == "تعطيل اضف فلوس" or text == "تعطيل اضف فلوس للمطور الاساسي" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."add:money")
return send(msg_chat_id,msg_id,' ✧ تم تعطيل اضف فلوس\n ꪤ',"md")
end
if text == "تفعيل اضف فلوس" or text == "تفعيل اضف فلوس للمطور الاساسي" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."add:money",true)
return send(msg_chat_id,msg_id,' ✧ تم تفعيل اضف فلوس\n ꪤ',"md")
end
---------------------- Dev JABWA ----------------------
if text ==("صورته") and msg.reply_to_message_id ~= 0 or text ==("صورتة") and msg.reply_to_message_id ~= 0 then 
if Redis:get(MARCOS.."hisphoto"..msg_chat_id) == "off" then
bot.sendText(msg_chat_id,msg_id,'* ✧ الصوره معطله*',"md",true) 
else
local Message_Reply = bot.getMessage(msg_chat_id, msg.reply_to_message_id)
if Message_Reply.luatele == "error" then
return bot.sendText(msg_chat_id,msg_id,"\n ✧ عذرا هذا المستخدم غير مدعوم ","md",true)  
end
local photo = bot.getUserProfilePhotos(Message_Reply.sender_id.user_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if photo and photo.total_count and photo.total_count > 0 then
local Text = " ✧ عدد صوره هو -> "..photo.total_count.." صوره"
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = ' '..UserInfo.first_name..' ', url = 't.me/'..UserInfo.username}, },{{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00'},},}}
bot.sendPhoto(msg_chat_id, msg_id, photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id, Text, "md", true, nil, nil, nil, nil, nil, nil, nil, nil, reply_markup)
else
return bot.sendText(msg_chat_id,msg_id,'* ✧ لا توجد صوره ف حسابك*',"md",true) 
end
end
end
if text and (text:match('^صورته (%d+)$') or text:match('^صورتة (%d+)$')) then
local UserId = (text:match('^صورته (%d+)$') or text:match('^صورتة (%d+)$'))
if Redis:get(MARCOS.."hisphoto"..msg_chat_id) == "off" then
bot.sendText(msg_chat_id,msg_id,'* ✧ الصوره معطله*',"md",true) 
else
local UserInfo = bot.getUser(UserId)
local photo = bot.getUserProfilePhotos(UserId)
if photo and photo.total_count and photo.total_count > 0 then
local Text = " ✧ عدد صوره هو -> "..photo.total_count.." صوره"
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = ' '..UserInfo.first_name..' ', url = 't.me/'..UserInfo.username}, },{{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00'},},}}
bot.sendPhoto(msg_chat_id, msg_id, photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id, Text, "md", true, nil, nil, nil, nil, nil, nil, nil, nil, reply_markup)
else
return bot.sendText(msg_chat_id,msg_id,'* ✧ لا توجد صوره ف حسابك*',"md",true) 
end
end
end
if text and (text:match('^صورته @(%S+)$') or text:match('^صورتة @(%S+)$')) then
local UserName = (text:match('^صورته @(%S+)$') or text:match('^صورتة @(%S+)$'))
if Redis:get(MARCOS.."hisphoto"..msg_chat_id) == "off" then
bot.sendText(msg_chat_id,msg_id,'* ✧ الصوره معطله*',"md",true) 
else
local UserId_Info = bot.searchPublicChat(UserName)
local photo = bot.getUserProfilePhotos(UserId_Info.id)
local UserInfo = bot.getUser(UserId_Info.id)
if photo and photo.total_count and photo.total_count > 0 then
local Text = " ✧ عدد صوره هو -> "..photo.total_count.." صوره"
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = ' '..UserInfo.first_name..' ', url = 't.me/'..UserInfo.username}, },{{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00'},},}}
bot.sendPhoto(msg_chat_id, msg_id, photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id, Text, "md", true, nil, nil, nil, nil, nil, nil, nil, nil, reply_markup)
else
return bot.sendText(msg_chat_id,msg_id,'* ✧ لا توجد صوره ف حسابك*',"md",true) 
end
end
end
if text and (text:match("^ضع قناتي (.*)$") or text:match("^وضع قناتي (.*)$")) then
local UserId = Text:match("^ضع قناتي (.*)$") or text:match("^وضع قناتي (.*)$") 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
Redis:set(MARCOS..'SOFI:Channel:Vip'..msg.sender_id.user_id,UserId)
local Text = " ✧ تم حفظ قناتك"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text="• الغاء •",data="/DelChannelVip:"..msg.sender_id.user_id}},
{{text="• اخفاء •",data="/HideChannelVip:"..msg.sender_id.user_id}},
{{text='• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url='t.me/'..chsource..''}}, 
}
}
bot.sendText(msg_chat_id,msg_id,Text,"md",false, false, false, false, reply_markup)
return false   
end
if text == "حذف قناتي" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'SOFI:Channel:Vip'..msg.sender_id.user_id) then
Text = " ✧ انت لم تقم بـ وضع قناتك"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text="• وضع قناتي •",data="/ChangeChannelVip:"..msg.sender_id.user_id}},
{{text="• اخفاء •",data="/HideChannelVip:"..msg.sender_id.user_id}},
{{text='• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url='t.me/'..chsource..''}},
}
}
bot.sendText(msg_chat_id,msg_id,Text,"md",false, false, false, false, reply_markup)
return false
else
Redis:del(MARCOS..'SOFI:Channel:Vip'..msg.sender_id.user_id)
Text = " ✧ تم حذف قناتك بنجاح"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text="• وضع قناتي •",data="/ChangeChannelVip:"..msg.sender_id.user_id}},
{{text="• اخفاء •",data="/HideChannelVip:"..msg.sender_id.user_id}},
{{text='• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url='t.me/'..chsource..''}},
}
}
bot.sendText(msg_chat_id,msg_id,Text,"md",false, false, false, false, reply_markup)
return false
end
end
if Redis:get(MARCOS..'SetChannelVip'..msg.sender_id.user_id) then 
if text =='الغاء' then 
bot.sendText(msg_chat_id,msg_id, ' ✧ تم الغاء حفظ قناتك ',"md",true)  
Redis:del(MARCOS..'SetChannelVip'..msg.sender_id.user_id)
return false  
end 
Redis:del(MARCOS..'SetChannelVip'..msg.sender_id.user_id)
Redis:set(MARCOS..'SOFI:Channel:Vip'..msg.sender_id.user_id,text)
local text = " ✧ تم حفظ قناتك"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text="• تغيير قناتي •",data="/ChangeChannelVip:"..msg.sender_id.user_id},{text="• حذف قناتي •",callback_data="/DelChannelVip:"..msg.sender_id.user_id}},
{{text="• اخفاء •",data="/HideChannelVip:"..msg.sender_id.user_id}},
{{text='• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url='t.me/'..chsource..''}},
}
}
bot.sendText(msg_chat_id,msg_id,text,"md",false, false, false, false, reply_markup)
return false   
end
if text and text:match("^ضع قناتي$") or text and text:match("^وضع قناتي$") then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
local text = " ✧ حسنا ارسل لي قناتك الان"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text="• الغاء •",data="/CancelChannelVip:"..msg.sender_id.user_id}},
{{text='• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url='t.me/'..chsource..''}},
}
}
bot.sendText(msg_chat_id,msg_id,text,"md",false, false, false, false, reply_markup)
Redis:set(MARCOS..'SetChannelVip'..msg.sender_id.user_id,true)
return false
end
if text and text:match("^قناتي$") then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'SOFI:Channel:Vip'..msg.sender_id.user_id) then
bot.sendText(msg_chat_id,msg_id, " ✧ لم تقم باضافة قناتك\n ✧ قم بارسال وضع قناتي","md",true)
else
local rules = Redis:get(MARCOS..'SOFI:Channel:Vip'..msg.sender_id.user_id)
bot.sendText(msg_chat_id,msg_id, rules,"md",true)
end
end
if text ==("رفع رتبه") and msg.reply_to_message_id ~= 0 then 
local Message_Reply = bot.getMessage(msg_chat_id, msg.reply_to_message_id)
if Message_Reply.luatele == "error" then
return bot.sendText(msg_chat_id,msg_id,"\n ✧ عذرا هذا المستخدم غير مدعوم ","md",true)  
end
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.first_name == false then
bot.sendText(msg_chat_id,msg_id," ✧ الحساب محذوف","md",true)  
return false  
end
local Text =' ✧ قم باستعمال الازرار لرفع العضو ↑↓ \n ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')'
if msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..Message_Reply.sender_id.user_id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..Message_Reply.sender_id.user_id}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..Message_Reply.sender_id.user_id},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..Message_Reply.sender_id.user_id}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..Message_Reply.sender_id.user_id}},{{text="رفع مالك",data=msg.sender_id.user_id..":SetOwner:"..Message_Reply.sender_id.user_id},{text="رفع مطور",data=msg.sender_id.user_id..":SetSudoBot:"..Message_Reply.sender_id.user_id}},{{text="رفع مطور ثانوي",data=msg.sender_id.user_id..":SetSecondSudo:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Devss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..Message_Reply.sender_id.user_id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..Message_Reply.sender_id.user_id}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..Message_Reply.sender_id.user_id},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..Message_Reply.sender_id.user_id}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..Message_Reply.sender_id.user_id}},{{text="رفع مالك",data=msg.sender_id.user_id..":SetOwner:"..Message_Reply.sender_id.user_id},{text="رفع مطور",data=msg.sender_id.user_id..":SetSudoBot:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Dev then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..Message_Reply.sender_id.user_id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..Message_Reply.sender_id.user_id}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..Message_Reply.sender_id.user_id},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..Message_Reply.sender_id.user_id}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..Message_Reply.sender_id.user_id}},{{text="رفع مالك",data=msg.sender_id.user_id..":SetOwner:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Ownerss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..Message_Reply.sender_id.user_id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..Message_Reply.sender_id.user_id}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..Message_Reply.sender_id.user_id},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..Message_Reply.sender_id.user_id}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.SuperCreator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..Message_Reply.sender_id.user_id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..Message_Reply.sender_id.user_id}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..Message_Reply.sender_id.user_id},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Creator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..Message_Reply.sender_id.user_id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..Message_Reply.sender_id.user_id}},{{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Manger then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..Message_Reply.sender_id.user_id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Admin then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif not msg.Admin then
return bot.sendText(msg_chat_id, msg_id, " ✧ هذا الامر للادمنيه في البوت فما فوق", 'md', true)
end
end
if text and (text:match('^رفع رتبه (%d+)$')) then
local UserId = (text:match('^رفع رتبه (%d+)$'))
local UserInfo = bot.getUser(UserId)
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if UserInfo.first_name == false then
bot.sendText(msg_chat_id,msg_id," ✧ الحساب محذوف","md",true)  
return false  
end
local Text =' ✧ قم باستعمال الازرار لرفع العضو ↑↓ \n ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')'
if msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..UserId},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..UserId}},{{text="رفع مالك",data=msg.sender_id.user_id..":SetOwner:"..UserId},{text="رفع مطور",data=msg.sender_id.user_id..":SetSudoBot:"..UserId}},{{text="رفع مطور ثانوي",data=msg.sender_id.user_id..":SetSecondSudo:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Devss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..UserId},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..UserId}},{{text="رفع مالك",data=msg.sender_id.user_id..":SetOwner:"..UserId},{text="رفع مطور",data=msg.sender_id.user_id..":SetSudoBot:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Dev then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..UserId},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..UserId}},{{text="رفع مالك",data=msg.sender_id.user_id..":SetOwner:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Ownerss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..UserId},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.SuperCreator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..UserId},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Creator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId}},{{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Manger then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Admin then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif not msg.Admin then
return bot.sendText(msg_chat_id, msg_id, " ✧ هذا الامر للادمنيه في البوت فما فوق", 'md', true)
end
end
if text and (text:match('^رفع رتبه @(%S+)$')) then
local UserName = (text:match('^رفع رتبه @(%S+)$'))
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
local UserInfo = bot.getUser(UserId_Info.id)
if UserInfo.first_name == false then
bot.sendText(msg_chat_id,msg_id," ✧ الحساب محذوف","md",true)  
return false  
end
local Text =' ✧ قم باستعمال الازرار لرفع العضو ↑↓ \n ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')'
if msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId_Info.id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId_Info.id}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..UserId_Info.id},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId_Info.id}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..UserId_Info.id}},{{text="رفع مالك",data=msg.sender_id.user_id..":SetOwner:"..UserId_Info.id},{text="رفع مطور",data=msg.sender_id.user_id..":SetSudoBot:"..UserId_Info.id}},{{text="رفع مطور ثانوي",data=msg.sender_id.user_id..":SetSecondSudo:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Devss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId_Info.id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId_Info.id}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..UserId_Info.id},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId_Info.id}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..UserId_Info.id}},{{text="رفع مالك",data=msg.sender_id.user_id..":SetOwner:"..UserId_Info.id},{text="رفع مطور",data=msg.sender_id.user_id..":SetSudoBot:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Dev then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId_Info.id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId_Info.id}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..UserId_Info.id},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId_Info.id}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..UserId_Info.id}},{{text="رفع مالك",data=msg.sender_id.user_id..":SetOwner:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Ownerss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId_Info.id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId_Info.id}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..UserId_Info.id},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId_Info.id}},{{text="رفع منشئ اساسي",data=msg.sender_id.user_id..":SetBasicConstructor:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.SuperCreator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId_Info.id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId_Info.id}},{{text="رفع منشئ",data=msg.sender_id.user_id..":SetConstructor:"..UserId_Info.id},{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Creator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId_Info.id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId_Info.id}},{{text="رفع مدير",data=msg.sender_id.user_id..":SetManager:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Manger then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId_Info.id},{text="رفع ادمن",data=msg.sender_id.user_id..":SetAdmin:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Admin then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=msg.sender_id.user_id..":SetMem:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif not msg.Admin then
return bot.sendText(msg_chat_id, msg_id, " ✧ هذا الامر للادمنيه في البوت فما فوق", 'md', true)
end
end
if text ==("تنزيل رتبه") and msg.reply_to_message_id ~= 0 then 
local Message_Reply = bot.getMessage(msg_chat_id, msg.reply_to_message_id)
if Message_Reply.luatele == "error" then
return bot.sendText(msg_chat_id,msg_id,"\n ✧ عذرا هذا المستخدم غير مدعوم ","md",true)  
end
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.first_name == false then
bot.sendText(msg_chat_id,msg_id," ✧ الحساب محذوف","md",true)  
return false  
end
local Text =' ✧ قم باستعمال الازرار لتنزيل العضو ↑↓ \n ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')'
if msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..Message_Reply.sender_id.user_id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..Message_Reply.sender_id.user_id}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..Message_Reply.sender_id.user_id},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..Message_Reply.sender_id.user_id}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..Message_Reply.sender_id.user_id}},{{text="تنزيل مالك",data=msg.sender_id.user_id..":RemOwner:"..Message_Reply.sender_id.user_id},{text="تنزيل مطور",data=msg.sender_id.user_id..":RemSudoBot:"..Message_Reply.sender_id.user_id}},{{text="تنزيل مطور ثانوي",data=msg.sender_id.user_id..":RemSecondSudo:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Devss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..Message_Reply.sender_id.user_id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..Message_Reply.sender_id.user_id}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..Message_Reply.sender_id.user_id},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..Message_Reply.sender_id.user_id}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..Message_Reply.sender_id.user_id}},{{text="تنزيل مالك",data=msg.sender_id.user_id..":RemOwner:"..Message_Reply.sender_id.user_id},{text="تنزيل مطور",data=msg.sender_id.user_id..":RemSudoBot:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Dev then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..Message_Reply.sender_id.user_id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..Message_Reply.sender_id.user_id}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..Message_Reply.sender_id.user_id},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..Message_Reply.sender_id.user_id}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..Message_Reply.sender_id.user_id}},{{text="تنزيل مالك",data=msg.sender_id.user_id..":RemOwner:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Ownerss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..Message_Reply.sender_id.user_id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..Message_Reply.sender_id.user_id}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..Message_Reply.sender_id.user_id},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..Message_Reply.sender_id.user_id}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.SuperCreator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..Message_Reply.sender_id.user_id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..Message_Reply.sender_id.user_id}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..Message_Reply.sender_id.user_id},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Creator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..Message_Reply.sender_id.user_id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..Message_Reply.sender_id.user_id}},{{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Manger then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..Message_Reply.sender_id.user_id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Admin then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..Message_Reply.sender_id.user_id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif not msg.Admin then
return bot.sendText(msg_chat_id, msg_id, " ✧ هذا الامر للادمنيه في البوت فما فوق", 'md', true)
end
end
if text and (text:match('^تنزيل رتبه (%d+)$')) then
local UserId = (text:match('^تنزيل رتبه (%d+)$'))
local UserInfo = bot.getUser(UserId)
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if UserInfo.first_name == false then
bot.sendText(msg_chat_id,msg_id," ✧ الحساب محذوف","md",true)  
return false  
end
local Text =' ✧ قم باستعمال الازرار لتنزيل العضو ↑↓ \n ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')'
if msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..UserId},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..UserId}},{{text="تنزيل مالك",data=msg.sender_id.user_id..":RemOwner:"..UserId},{text="تنزيل مطور",data=msg.sender_id.user_id..":RemSudoBot:"..UserId}},{{text="تنزيل مطور ثانوي",data=msg.sender_id.user_id..":RemSecondSudo:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Devss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..UserId},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..UserId}},{{text="تنزيل مالك",data=msg.sender_id.user_id..":RemOwner:"..UserId},{text="تنزيل مطور",data=msg.sender_id.user_id..":RemSudoBot:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Dev then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..UserId},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..UserId}},{{text="تنزيل مالك",data=msg.sender_id.user_id..":RemOwner:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Ownerss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..UserId},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.SuperCreator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..UserId},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Creator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId}},{{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Manger then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Admin then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif not msg.Admin then
return bot.sendText(msg_chat_id, msg_id, " ✧ هذا الامر للادمنيه في البوت فما فوق", 'md', true)
end
end
if text and (text:match('^تنزيل رتبه @(%S+)$')) then
local UserName = (text:match('^تنزيل رتبه @(%S+)$'))
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
local UserInfo = bot.getUser(UserId_Info.id)
if UserInfo.first_name == false then
bot.sendText(msg_chat_id,msg_id," ✧ الحساب محذوف","md",true)  
return false  
end
local Text =' ✧ قم باستعمال الازرار لتنزيل العضو ↑↓ \n ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')'
if msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId_Info.id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId_Info.id}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..UserId_Info.id},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId_Info.id}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..UserId_Info.id}},{{text="تنزيل مالك",data=msg.sender_id.user_id..":RemOwner:"..UserId_Info.id},{text="تنزيل مطور",data=msg.sender_id.user_id..":RemSudoBot:"..UserId_Info.id}},{{text="تنزيل مطور ثانوي",data=msg.sender_id.user_id..":RemSecondSudo:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Devss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId_Info.id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId_Info.id}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..UserId_Info.id},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId_Info.id}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..UserId_Info.id}},{{text="تنزيل مالك",data=msg.sender_id.user_id..":RemOwner:"..UserId_Info.id},{text="تنزيل مطور",data=msg.sender_id.user_id..":RemSudoBot:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Dev then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId_Info.id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId_Info.id}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..UserId_Info.id},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId_Info.id}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..UserId_Info.id}},{{text="تنزيل مالك",data=msg.sender_id.user_id..":RemOwner:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Ownerss then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId_Info.id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId_Info.id}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..UserId_Info.id},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId_Info.id}},{{text="تنزيل منشئ اساسي",data=msg.sender_id.user_id..":RemBasicConstructor:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.SuperCreator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId_Info.id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId_Info.id}},{{text="تنزيل منشئ",data=msg.sender_id.user_id..":RemConstructor:"..UserId_Info.id},{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Creator then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId_Info.id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId_Info.id}},{{text="تنزيل مدير",data=msg.sender_id.user_id..":RemManager:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Manger then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId_Info.id},{text="تنزيل ادمن",data=msg.sender_id.user_id..":RemAdmin:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif msg.Admin then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=msg.sender_id.user_id..":RemMem:"..UserId_Info.id}},{{text='• قناة السورس •',url='http://t.me/'..chsource..''}},
}}
return bot.sendText(msg_chat_id, msg_id, Text, 'md', true, false, false, false, reply_markup)
elseif not msg.Admin then
return bot.sendText(msg_chat_id, msg_id, " ✧ هذا الامر للادمنيه في البوت فما فوق", 'md', true)
end
end
if text == (Redis:get(MARCOS.."Name:Bot") or 'ماركوس').." غادر" or text == 'غادر' or text == 'بوت غادر' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Mostafa = (Redis:get(MARCOS.."Name:Bot") or "ماركوس")
local Jabwa = bot.getUser(MARCOS)
local bain = bot.getUser(msg.sender_id.user_id)
local photo = bot.getUserProfilePhotos(MARCOS)
news = '*✧ عزيزي -› *['..bain.first_name..'](tg://user?id='..bain.id..')*\n✧ هل تريد بوت -› *['..Mostafa..'](tg://user?id='..Jabwa.id..')*\n✧ ان يغادر من المجموعه\n*'
if photo.total_count > 0 then
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '• نعم •', callback_data=msg.sender_id.user_id..'/Zxchq'..msg_chat_id},{text = '• لا •', callback_data = msg.sender_id.user_id..'/Redis'..msg_chat_id},
},
}
local msgg = msg_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id=" .. msg_chat_id .. "&photo="..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id.."&caption=".. URL.escape(news).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if text then
if text:match('^انذار @(%S+)$') or text:match('^إنذار @(%S+)$') then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
local UserName = text:match('^انذار @(%S+)$') or text:match('^إنذار @(%S+)$')
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهاذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local UserInfo = bot.getUser(UserId_Info.id)
local zz = Redis:get(MARCOS.."zz"..msg_chat_id..UserInfo.id)
if not zz then
Redis:set(MARCOS.."zz"..msg_chat_id..UserInfo.id,"1")
return send(msg_chat_id,msg_id,Reply_Status(UserInfo.id," ✧ تم اعطاءه انذار وتبقا له اثنين ").Reply,"md",true)  
end
if zz == "1" then
Redis:set(MARCOS.."zz"..msg_chat_id..UserInfo.id,"2")
return send(msg_chat_id,msg_id,Reply_Status(UserInfo.id," ✧ تم اعطاءه انذارين وتبقا له انذار ").Reply,"md",true)  
end
if zz == "2" then
Redis:del(MARCOS.."zz"..msg_chat_id..UserInfo.id)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'كتم', data = msg.sender_id.user_id..'mute'..UserInfo.id},{text = 'تقييد', data = msg.sender_id.user_id..'kid'..UserInfo.id},  
},
{
{text = 'حظر', data = msg.sender_id.user_id..'ban'..UserInfo.id}, 
},
}
}
return send(msg_chat_id,msg_id,Reply_Status(UserInfo.id," ✧ اختار العقوبه الان ").Reply,"md",true, false, false, true, reply_markup)
end
end 
end
if text == "انذار" or text == "إنذار" then
if msg.reply_to_message_id ~= 0 then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if StatusCanOrNotCan(msg_chat_id,UserInfo.id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserInfo.id).." } *","md",true)  
end
local zz = Redis:get(MARCOS.."zz"..msg_chat_id..UserInfo.id)
if not zz then
Redis:set(MARCOS.."zz"..msg_chat_id..UserInfo.id,"1")
return send(msg_chat_id,msg_id,Reply_Status(UserInfo.id," ✧ تم اعطاءه انذار وتبقا له اثنين ").Reply,"md",true)  
end
if zz == "1" then
Redis:set(MARCOS.."zz"..msg_chat_id..UserInfo.id,"2")
return send(msg_chat_id,msg_id,Reply_Status(UserInfo.id," ✧ تم اعطاءه انذارين وتبقا له انذار ").Reply,"md",true)  
end
if zz == "2" then
Redis:del(MARCOS.."zz"..msg_chat_id..UserInfo.id)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'كتم', data = msg.sender_id.user_id..'mute'..UserInfo.id},{text = 'تقييد', data = msg.sender_id.user_id..'kid'..UserInfo.id},  
},
{
{text = 'حظر', data = msg.sender_id.user_id..'ban'..UserInfo.id}, 
},
}
}
return send(msg_chat_id,msg_id,Reply_Status(UserInfo.id," ✧ اختر العقوبه الان").Reply,"md",true, false, false, true, reply_markup)
end
end
end
if text == "انا مينن" then
if not Redis:get(MARCOS.."SOFI:Channel:Vip"..msg_sender_id.user_id) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text="• وضع قناتي •",data="/ChangeChannelVip:"..msg_sender_id.user_id}},
{{text="• اخفاء •",data="/HideChannelVip:"..msg_sender_id.user_id}},
}
}
bot.sendText(msg_chat_id,msg_id,Reply_Status(msg_sender_id.user_id," ✧ انت لم تقم باضافة قناتك مسبقاَ\n ✧ قم بأرسال ↫  ضع قناتي + معرف قناتك\n ✧ او قم بالضغط علئ وضع قناتي\n ✧ ثم أرسل الامر ↫ انا\n•-› X").Warning,"md",true, false, false, false, reply_markup)
else
local UserInfo = bot.getUser(msg_sender_id.user_id)
local bio = getbio(msg_sender_id.user_id)
local photo = bot.getUserProfilePhotos(msg_sender_id.user_id)
if photo and photo.total_count and photo.total_count > 0 then
local FixName = (UserInfo.first_name):gsub('#','')
local FixChannel = (Redis:get(MARCOS.."SOFI:Channel:Vip"..msg_sender_id.user_id) or "SrcDrg")
local DevSOFI = FixChannel:gsub('@','')
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="•  "..FixName.." •",url=("t.me/"..UserInfo.username or "t.me/SrcDrg")}},
{{text="• قناتي •",url="t.me/"..DevSOFI}},
}}
bot.sendPhoto(msg_chat_id, msg_id, photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id, bio, "md", true, nil, nil, nil, nil, nil, nil, nil, nil, reply_markup)
return false
else
bot.sendText(msg_chat_id,msg_id,'لا تمتلك صوره في حسابك',"md",true)  
end
end
end
if text and text:match("^اضف فلوس (.*)$") and msg.reply_to_message_id ~= 0 then
local UserName = text:match('^اضف فلوس (.*)$')
local coniss = coin(UserName)
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
local Remsg = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Remsg.sender_id.user_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
bot.sendText(msg.chat_id,msg.id,"\n*✧ عذرآ لا استطيع استخدام الامر على البوت*","md",true)  
return false
end
local ban = bot.getUser(Remsg.sender_id.user_id)
if ban.first_name then
news = ""..ban.first_name..""
else
news = " لا يوجد اسم"
end
if Redis:sismember(MARCOS.."booob",Remsg.sender_id.user_id) then
ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
bajiop = ballanceed + coniss
Redis:set(MARCOS.."boob"..Remsg.sender_id.user_id , bajiop)
ccccc = Redis:get(MARCOS.."boobb"..Remsg.sender_id.user_id)
uuuuu = Redis:get(MARCOS.."bbobb"..Remsg.sender_id.user_id)
ppppp = Redis:get(MARCOS.."rrfff"..Remsg.sender_id.user_id) or 0
ballanceed = Redis:get(MARCOS.."boob"..Remsg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballanceed)
bot.sendText(msg.chat_id,msg.id, "✧ الاسم -> "..news.."\n✧ الحساب -> "..ccccc.."\n✧ بنك -> ( ماركوس )\n✧ نوع -> ( "..uuuuu.." )\n✧ الزرف -> ( "..ppppp.." دولار 💵 )\n✧ صار رصيده -> ( "..convert_mony.." جنيه 💵 )\n✦","md",true)
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعنده حساب بنكي ","md",true)
end
end
end
if text == 'كنز' then
ballanceed = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
if Redis:sismember(MARCOS.."booob",msg.sender_id.user_id) then
if Redis:ttl(MARCOS.."yiioooo" .. msg.sender_id.user_id) >=60 then
local hours = Redis:ttl(MARCOS.."yiioooo" .. msg.sender_id.user_id) / 60
return bot.sendText(msg.chat_id,msg.id,"✧ فرصة ايجاد كنز آخر بعد "..math.floor(hours).." دقيقة","md",true)
end
local Textinggt = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22","23",}
local Descriptioont = Textinggt[math.random(#Textinggt)]
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
neews = "["..ban.first_name.."](tg://user?id="..ban.id..")"
else
neews = " لا يوجد "
end
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
shkse = Redis:get(MARCOS.."shkse"..msg.sender_id.user_id)
if shkse == "طيبة" then
if Descriptioont == "1" then
local knez = ballancee + 40000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> قطعة اثرية 🗳\nسعره -> 40000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "2" then
local knez = ballancee + 35000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> حجر الماسي 💎\nسعره -> 35000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "3" then
local knez = ballancee + 10000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> لباس قديم 🥻\nسعره -> 10000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "4" then
local knez = ballancee + 23000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> عصى سحرية 🪄\nسعره -> 23000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "5" then
local knez = ballancee + 8000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> جوال نوكيا 📱\nسعره -> 8000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "6" then
local knez = ballancee + 27000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> صدف 🏝\nسعره -> 27000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "7" then
local knez = ballancee + 18000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> ابريق صدئ ⚗️\nسعره -> 18000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "8" then
local knez = ballancee + 100000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> قناع فرعوني 🗿\nسعره -> 100000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "9" then
local knez = ballancee + 50000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> جرة ذهب 💰\nسعره -> 50000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "10" then
local knez = ballancee + 36000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> مصباح فضي 🔦\nسعره -> 36000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "11" then
local knez = ballancee + 29000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> لوحة نحاسية 🌇\nسعره -> 29000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "12" then
local knez = ballancee + 1000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> جوارب قديمة 🧦\nسعره -> 1000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "13" then
local knez = ballancee + 16000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> اناء فخاري ⚱️\nسعره -> 16000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "14" then
local knez = ballancee + 12000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> خوذة محارب 🪖\nسعره -> 12000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "15" then
local knez = ballancee + 19000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> سيف جدي مرزوق 🗡\nسعره -> 19000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "16" then
local knez = ballancee + 14000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> مكنسة جدتي رقية 🧹\nسعره -> 14000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "17" then
local knez = ballancee + 26000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> فأس ارطغرل 🪓\nسعره -> 26000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "18" then
local knez = ballancee + 22000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> بندقية 🔫\nسعره -> 22000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "19" then
local knez = ballancee + 11000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> كبريت ناري 🪔\nسعره -> 11000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "20" then
local knez = ballancee + 33000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> فرو ثعلب 🦊\nسعره -> 33000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "21" then
local knez = ballancee + 40000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> جلد تمساح 🐊\nسعره -> 40000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "22" then
local knez = ballancee + 17000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> باقة ورود 💐\nسعره -> 17000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "23" then
local Textinggtt = {"1", "2",}
local Descriptioontt = Textinggtt[math.random(#Textinggtt)]
if Descriptioontt == "1" then
local knez = ballancee + 17000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> باقة ورود 💐\nسعره -> 17000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioontt == "2" then
local Textinggttt = {"1", "2",}
local Descriptioonttt = Textinggttt[math.random(#Textinggttt)]
if Descriptioonttt == "1" then
local knez = ballancee + 40000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> جلد تمساح 🐊\nسعره -> 40000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioonttt == "2" then
local knez = ballancee + 10000000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> حقيبة محاسب البنك 💼\nسعره -> 10000000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
end
end
end
else
if Descriptioont == "1" then
local knez = ballancee + 40000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> كتاب سحر 📕\nسعره -> 40000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "2" then
local knez = ballancee + 35000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> حقيبة ممنوعات 🎒\nسعره -> 35000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "3" then
local knez = ballancee + 60000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> زئبق احمر 🩸\nسعره -> 60000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "4" then
local knez = ballancee + 23000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> فيزا مسروقة 💳\nسعره -> 23000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "5" then
local knez = ballancee + 20000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> ماريجوانا 🚬\nسعره -> 20000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "6" then
local knez = ballancee + 27000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> قطعة اثرية 🪨\nسعره -> 27000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "7" then
local knez = ballancee + 18000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> سلا.ح ناري 🔫\nسعره -> 18000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "8" then
local knez = ballancee + 40000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> قطع فضة 🔗\nسعره -> 40000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "9" then
local knez = ballancee + 20000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> سكين 🗡\nسعره -> 20000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "10" then
local knez = ballancee + 36000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> مخطط عملية سطو 🧾\nسعره -> 36000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "11" then
local knez = ballancee + 29000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> عملات مزورة 💴\nسعره -> 29000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "12" then
local knez = ballancee + 200000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> سيارة مسروقة 🚙\nسعره -> 200000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "13" then
local knez = ballancee + 80000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> سبيكة ذهب 🪙\nسعره -> 80000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "14" then
local knez = ballancee + 75000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> الماس 💎\nسعره -> 75000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "15" then
local knez = ballancee + 19000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> رشوة من تاجر 👥️️\nسعره -> 19000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "16" then
local knez = ballancee + 14000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> علبة كبريت 🪔\nسعره -> 14000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "17" then
local knez = ballancee + 26000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> قفل 🔒\nسعره -> 26000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "18" then
local knez = ballancee + 26000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> قفل 🔒 \nسعره -> 26000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "19" then
local knez = ballancee + 14000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> علبة كبريت 🪔\nسعره -> 14000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "20" then
local knez = ballancee + 14000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> علبة كبريت 🪔\nسعره -> 14000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "21" then
local knez = ballancee + 26000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> قفل 🔒 \nسعره -> 26000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "22" then
local knez = ballancee + 17000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> صبار 🌵\nسعره -> 17000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
elseif Descriptioont == "23" then
local knez = ballancee + 40000
Redis:set(MARCOS.."boob"..msg.sender_id.user_id , knez)
local ballancee = Redis:get(MARCOS.."boob"..msg.sender_id.user_id) or 0
local convert_mony = string.format("%.0f",ballancee)
bot.sendText(msg.chat_id,msg.id,""..neews.." لقد وجدت كنز\nالكنز -> جلد تمساح 🐊\nسعره -> 40000 درهم 💵\nرصيدك الان -> "..convert_mony.." درهم 💵\n✦","md",true)
Redis:setex(MARCOS.."yiioooo" .. msg.sender_id.user_id,1800, true)
end
end
else
bot.sendText(msg.chat_id,msg.id, "✧ ماعندك حساب بنكي ارسل ↢ ( `انشاء حساب بنكي` )","md",true)
end
end
if msg.content.photo then
if msg.content.caption.text then
if msg.content.caption.text:match("^@all (.*)$") or msg.content.caption.text:match("^all (.*)$") or msg.content.caption.text == "@all" or msg.content.caption.text == "all" then
local ttag = msg.content.caption.text:match("^@all (.*)$") or msg.content.caption.text:match("^all (.*)$") 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if Redis:get(MARCOS.."lockalllll"..msg_chat_id) == "off" then
return send(msg_chat_id,msg_id,'* ✧ تم تعطيل @all من قبل المدراء*',"md",true)  
end
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
local Info_Members = bot.searchChatMembers(msg_chat_id, "*", 10000)
x = 0 
tags = 0 
local list = Info_Members.members
for k, v in pairs(list) do 
local data = bot.getUser(v.member_id.user_id)
if x == 20 or x == tags or k == 0 then 
tags = x + 100 
if ttag then
t = "#all "..ttag.."" 
else
t = "#all "
end
end 
x = x + 1 
tagname = data.first_name
tagname = tagname:gsub("]","") 
tagname = tagname:gsub("[[]","") 
t = t.." ▹ ["..tagname.."](tg://user?id="..v.member_id.user_id..") \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
if x == 20 or x == tags or k == 0 then 
if ttag then
Text = t:gsub('#all '..ttag..',','#all '..ttag..'\n') 
else 
Text = t:gsub('#all,','#all\n')
end
bot.sendPhoto(msg.chat_id, 0, idPhoto,Text,"md")
end 
end 
end
end
end
-------------------------------------------------------------------------------
if (Redis:get(MARCOS..'Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id) == 'true') then
if text == 'الغاء' or text == 'الغاء الامر' then 
Redis:del(MARCOS..'Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,' ✧ تم الغاء حفظ قناة الاشتراك')
end
Redis:del(MARCOS..'Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
if text and text:match("^@[%a%d_]+$") then
local UserId_Info = bot.searchPublicChat(text)
if not UserId_Info.id then
Redis:del(MARCOS..'Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
local ChannelUser = text:gsub('@','')
if UserId_Info.type.is_channel == true then
local StatusMember = bot.getChatMember(UserId_Info.id,MARCOS).status.MARCOSbots
if (StatusMember ~= "chatMemberStatusAdministrator") then
return send(msg_chat_id,msg_id,"\n ✧ البوت عضو في القناة يرجى رفع البوت ادمن واعادة وضع الاشتراك ","md",true)  
end
Redis:set(MARCOS..'Channel:Join',ChannelUser) 
Redis:set(MARCOS..'Channel:Join:Name',UserId_Info.title) 
return send(msg_chat_id,msg_id,"\n ✧ تم تعيين الاشتراك الاجباري على قناة -> [@"..ChannelUser..']',"md",true)  
else
return send(msg_chat_id,msg_id,"\n ✧ هذا ليس معرف قناة يرجى ارسال معرف القناة الصحيح: [@"..ChannelUser..']',"md",true)  
end
end
end
if Redis:get(MARCOS.."set:chs"..msg.sender_id.user_id) then
if text then
if text == "الغاء" or text == "الغاء الامر" then
Redis:del(MARCOS.."set:chs"..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,'*تم الغاء الامر بنجاح ✅* ',"md",true)  
end
if text:match("^@(.*)$") then
local ch = text:match("^@(.*)$")
Redis:set(MARCOS.."chsource",ch)
Redis:del(MARCOS.."set:chs"..msg.sender_id.user_id)
send(msg_chat_id,msg_id,'تم حفظ معرف قناة السورس ',"md",true)  
dofile('MARCOS.lua')  
else
send(msg_chat_id,msg_id,'المعرف خطأ ',"md",true)  
end
end
end
if text == "تعيين قناه السورس ✧" or text == "تعيين قناه السورس" then  
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص  '..Controller_Num(2)..' * ',"md",true)  
end
Redis:set(MARCOS.."set:chs"..msg.sender_id.user_id,true)
return send(msg_chat_id,msg_id,'ارسل معرف القناه الان',"md",true)  
end
if Redis:get(MARCOS.."set:rmz"..msg.sender_id.user_id) then
if text then
if text == "الغاء" or text == "الغاء الامر" then
Redis:del(MARCOS.."set:rmz"..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,'*تم الغاء الامر بنجاح ✅* ',"md",true)  
end
Redis:set(MARCOS..'rmzsource',text)
Redis:del(MARCOS.."set:rmz"..msg.sender_id.user_id)
send(msg_chat_id,msg_id,'تم حفظ رمز السورس ',"md",true)  
dofile('MARCOS.lua')  
end
end
if text == "تعيين رمز السورس" then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص  '..Controller_Num(2)..' * ',"md",true)  
end
Redis:set(MARCOS.."set:rmz"..msg.sender_id.user_id,true)
return send(msg_chat_id,msg_id,'ارسل رمز بدل من { ✧ }',"md",true)  
end
if text == "استرجاع رمز السورس" or text == "حذف رمز السورس" then  
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص  '..Controller_Num(2)..' * ',"md",true)  
end
Redis:set(MARCOS.."rmzsource"," ✧")
return send(msg_chat_id,msg_id,'تم ارجاع رمز السورس الي  { ✧ }',"md",true)  
end
if Redis:get(MARCOS.."set:devs"..msg.sender_id.user_id) then
if text then
if text == "الغاء" or text == "الغاء الامر" then
Redis:del(MARCOS.."set:devs"..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,'*تم الغاء الامر بنجاح ✅* ',"md",true)  
end
if text:match("^@(.*)$") then
local ch = text:match("^@(.*)$")
Redis:set(MARCOS.."chdevolper",ch)
Redis:del(MARCOS.."set:devs"..msg.sender_id.user_id)
send(msg_chat_id,msg_id,'تم حفظ معرف مطور السورس ',"md",true)  
dofile('MARCOS.lua')  
else
send(msg_chat_id,msg_id,'المعرف خطأ ',"md",true)  
end
end
end
if text == "تعيين مطور السورس ✧" or text == "تعيين مطور السورس" then  
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص  '..Controller_Num(2)..' * ',"md",true)  
end
Redis:set(MARCOS.."set:devs"..msg.sender_id.user_id,true)
return send(msg_chat_id,msg_id,'ارسل معرف المطور الان',"md",true)  
end
if text == 'تفعيل الاشتراك الاجباري' or text == 'تفعيل الاشتراك' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:set(MARCOS..'Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id,true)
return send(msg_chat_id,msg_id,"\n ✧ ارسل الي الان قناة الاشتراك ","md",true)  
end
if text == 'تعطيل الاشتراك الاجباري' or text == 'تعطيل الاشتراك' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:del(MARCOS..'Channel:Join')
return send(msg_chat_id,msg_id,"\n ✧ تم تعطيل الاشتراك الاجباري","md",true)  
end
if text == 'تغيير الاشتراك الاجباري' or text == 'تغيير الاشتراك الاجباري' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:set(MARCOS..'Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id,true)
return send(msg_chat_id,msg_id,"\n ✧ ارسل الي الان قناة الاشتراك ","md",true)  
end
if text == 'الاشتراك الاجباري' or text == 'الاشترك الاجباري' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
local Channel = Redis:get(MARCOS..'Channel:Join')
if Channel then
return send(msg_chat_id,msg_id,"\n ✧ الاشتراك الاجباري مفعل على -> [@"..Channel..']',"md",true)  
else
return send(msg_chat_id,msg_id,"\n ✧ لا توجد قناة في الاشتراك ارسل تغيير الاشتراك الاجباري","md",true)  
end
end

if (Redis:get(MARCOS..'Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id) == 'true') then
if text == 'الغاء' or text == 'الغاء الامر' then 
Redis:del(MARCOS..'Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,' ✧ تم الغاء حفظ قناة الاشتراك')
end
Redis:del(MARCOS..'Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
if text and text:match("^@[%a%d_]+$") then
local UserId_Info = bot.searchPublicChat(text)
if not UserId_Info.id then
Redis:del(MARCOS..'Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
local ChannelUser = text:gsub('@','')
if UserId_Info.type.is_channel == true then
local StatusMember = bot.getChatMember(UserId_Info.id,MARCOS).status.MARCOSbots
if (StatusMember ~= "chatMemberStatusAdministrator") then
return send(msg_chat_id,msg_id,"\n ✧ البوت عضو في القناة يرجى رفع البوت ادمن واعادة وضع الاشتراك ","md",true)  
end
Redis:set(MARCOS..'Chat:Channel:Join'..msg_chat_id,ChannelUser) 
Redis:set(MARCOS..'Chat:Channel:Join:Name'..msg_chat_id,UserId_Info.title) 
return send(msg_chat_id,msg_id,"\n ✧ تم تعيين الاشتراك الاجباري على قناة -> [@"..ChannelUser..']',"md",true)  
else
return send(msg_chat_id,msg_id,"\n ✧ هذا ليس معرف قناة يرجى ارسال معرف القناة الصحيح: [@"..ChannelUser..']',"md",true)  
end
end
end
if text == "تفعيل البوت بصوره" or text == "تفعيل البوت بالصورة" or text == "تفعيل البوت بالصوره" then
if not msg.Devss then
send(msg_chat_id,msg_id,'\n*✧ هذا الامر يخص  '..Controller_Num(2)..' * ',"md",true)  
end
Redis:set(MARCOS.."name bot type -> ", "photo")
send(msg_chat_id,msg_id,'\n*✧ تم تفعيل رد البوت بصوره * ',"md",true)  
end
if text == "تعطيل البوت بصوره" or text == "تعطيل البوت بالصورة" or text == "تعطيل البوت بالصوره" then
if not msg.Devss then
send(msg_chat_id,msg_id,'\n*✧ هذا الامر يخص  '..Controller_Num(2)..' * ',"md",true)  
end
Redis:set(MARCOS.."name bot type -> ", "text")
send(msg_chat_id,msg_id,'\n*✧ تم تعطيل رد البوت بصوره * ',"md",true)  
end
if text == 'تفعيل الاشتراك الاجباري للجروب' or text == 'تفعيل الاشتراك الاجباري لكل الاعضاء' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:set(MARCOS..'Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id,true)
return send(msg_chat_id,msg_id,"\n ✧ ارسل الي الان قناة الاشتراك ","md",true)  
end
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
if text == 'تعطيل الاشتراك الاجباري للجروب' or text == 'تعطيل الاشتراك الاجباري لكل الاعضاء' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:del(MARCOS..'Chat:Channel:Join'..msg_chat_id)
return send(msg_chat_id,msg_id,"\n ✧ تم تعطيل الاشتراك الاجباري","md",true)  
end
if text == 'تغيير الاشتراك الاجباري للجروب'  or text == 'تغيير الاشتراك الاجباري للاعضاء' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:set(MARCOS..'Chat:Channel:Redis'..msg_chat_id..':'..msg.sender_id.user_id,true)
return send(msg_chat_id,msg_id,"\n ✧ ارسل الي الان قناة الاشتراك ","md",true)  
end
if text == 'الاشتراك الاجباري للجروب' or text == 'الاشتراك الاجباري للاعضاء' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
local Channel = Redis:get(MARCOS..'Chat:Channel:Join'..msg_chat_id)
if Channel then
return send(msg_chat_id,msg_id,"\n ✧ الاشتراك الاجباري مفعل على -> [@"..Channel..']',"md",true)  
else
return send(msg_chat_id,msg_id,"\n ✧ لا توجد قناة في الاشتراك ارسل تغيير الاشتراك الاجباري","md",true)  
end
end
if (Redis:get(MARCOS.."AddSudosNew"..msg_chat_id) == 'true') then
if text == "الغاء" or text == 'الغاء الامر' then   
Redis:del(MARCOS.."AddSudosNew"..msg_chat_id)
return bot.sendText(msg_chat_id,msg_id, "\n✧ تم الغاء امر تغيير المطور الاساسي","md",true)    
end 
Redis:del(MARCOS.."AddSudosNew"..msg_chat_id)
if text and text:match("^@[%a%d_]+$") then
local UserId_Info = bot.searchPublicChat(text)
if not UserId_Info.id then
return bot.sendText(msg_chat_id,msg_id,"\n✧ عذرأ لا يوجد حساب بهاذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return bot.sendText(msg_chat_id,msg_id,"\n✧ عذرأ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
local Informationlua = io.open("Information.lua", 'w')
Informationlua:write([[
return {
Token = "]]..Token..[[",
UserBot = "]]..UserBot..[[",
UserSudo = "]]..text:gsub('@','')..[[",
SudoId = ]]..UserId_Info.id..[[
}
]])
Informationlua:close()
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = "https://t.me/ZAXY00"}
},
}
}
bot.sendText(msg_chat_id,msg_id,"\n*✧ تم تغيير المطور الاساسي بنجاح ✅ \n🤖 ᴅᴇᴠᴇʟᴏᴘᴇʀ -> [@"..text:gsub('@','').."] *","md",true, false, false, false, reply_markup)
dofile('MARCOS.lua')  
end
end
if Redis:get(MARCOS.."youtube"..msg.sender_id.user_id..msg_chat_id) == "mp3" then
Redis:del(MARCOS.."youtube"..msg.sender_id.user_id..msg_chat_id)
local rep = msg.id/2097152/0.5
local m = json:decode(https.request("https://api.telegram.org/bot"..Token.."/sendAnimation?chat_id="..msg_chat_id.."&animation=https://t.me/DEV_JABWA/171&reply_to_message_id="..rep)).result.message_id
local se = http.request("https://api-jack.ml/api18.php?search="..URL.escape(text))
local j = JSON.decode(se)
local link = j.results[1].url
local title = j.results[1].title 
local title = title:gsub("/","-") 
local title = title:gsub("\n","-") 
local title = title:gsub("|","-") 
local title = title:gsub("'","-") 
local title = title:gsub('"',"-") 
print(link)
os.execute("yt-dlp "..link.." -f 251 -o '"..title..".mp3'")
bot.sendAudio(msg_chat_id,msg_id,'./'..title..'.mp3',"["..title.."]("..link..")","md",nil,title)
https.request("https://api.telegram.org/bot"..Token.."/deleteMessage?chat_id="..msg_chat_id.."&message_id="..m)
Redis:del(MARCOS.."youtube"..msg.sender_id.user_id..msg_chat_id)
sleep(2)
os.remove(""..title..".mp3")
end
if Redis:get(MARCOS.."youtube"..msg.sender_id.user_id..msg_chat_id) == "mp4" then
local rep = msg.id/2097152/0.5
local m = json:decode(https.request("https://api.telegram.org/bot"..Token.."/sendAnimation?chat_id="..msg_chat_id.."&animation=https://t.me/DEV_JABWA/171&reply_to_message_id="..rep)).result.message_id
local se = http.request("https://api-jack.ml/api18.php?search="..URL.escape(text))
local j = JSON.decode(se)
local link = j.results[1].url
local title = j.results[1].title 
local title = title:gsub("/","-") 
local title = title:gsub("\n","-") 
local title = title:gsub("|","-") 
local title = title:gsub("'","-") 
local title = title:gsub('"',"-") 
os.execute("yt-dlp "..link.." -f 18 -o '"..title..".mp4'")
bot.sendVideo(msg_chat_id,msg_id,'./'..title..'.mp4',"["..title.."]("..link..")","md") 
https.request("https://api.telegram.org/bot"..Token.."/deleteMessage?chat_id="..msg_chat_id.."&message_id="..m)
Redis:del(MARCOS.."youtube"..msg.sender_id.user_id..msg_chat_id)
sleep(2)
os.remove(""..title..".mp4")
end
if text == "يوتيوب" or text == 'اليوتيوب' or text == 'YouTube' or text == 'The Youtube' or text == 'Youtube' or text == 'youtube' or text == 'You Tube' or text == 'تحميل' or text == 'بحث' then
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = 't.me/ZAXY00 '}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عذرآ عليك الاشتراك في قناة السورس*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'تحميل صوت 🎤', data = msg.sender_id.user_id..'/mp3'..msg_id}, {text = 'تحميل فيديو 🎬', data = msg.sender_id.user_id..'/mp4'..msg_id}, 
},
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = "https://t.me/ZAXY00"}
},
}
}
return send(msg_chat_id,msg_id, [[*
✧ اختار طريقة التحميل
*]],"md",false, false, false, false, reply_markup)
end
if text == 'تغيير المطور الاساسي' or text == 'تغير المطور الاساسي' or text == 'تغيير المطور الاساسي ✧' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'نعم', data = msg.sender_id.user_id..'/yaaaaa'}, {text = 'لا', data = msg.sender_id.user_id..'/Noooo'}, 
},
}
}
return bot.sendText(msg_chat_id,msg_id,'*\n ✧ هل انت متأكد بتغير المطور الاساسي *',"md",false, false, false, false, reply_markup)
end
if text == 'معلومات التنصيب' or text == 'معلومات التنصيب ✧' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
return send(msg_chat_id,msg_id,'\n\n ✧ التوكن -> `'..Token..'`\n\n ✧ معرف البوت -> [@'..UserBot..']\n\n ✧ ايدي المطور -> `'..Sudo_Id..'`\n\n ✧ معرف المطور -> [@'..UserSudo..']',"md",true)  
end
if text == "ضع صوره للترحيب" or text == "ضع صوره للترحيب ✧" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
Redis:setex(MARCOS..'welcom_ph:witting'..msg.sender_id.user_id,300,true) 
return send(msg_chat_id,msg_id, '  ✧ الان قم بارسال الصوره للترحيب\n' )
end 
if text == "تغير اسم البوت" or text == "تغيير اسم البوت" or text == "ضع اسم للبوت" or text == "اضف اسم البوت" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = '• تأكيد الأمر •', data = msg.sender_id.user_id..'/Namebot'},{text = '• الغاء الأمر •', data = msg.sender_id.user_id..'/Nobot'},},
}}
return bot.sendText(msg_chat_id,msg_id,"* ✧ يرجاء تأكيد أمر تغير اسم البوت*","md",false, false, false, false, reply_markup)
end 
if text == "حذف اسم البوت" or text == "مسح اسم البوت" or text == "مسح اسم بوت" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = '• تأكيد الأمر •', data = msg.sender_id.user_id..'/ySurvey'},{text = '• الغاء الأمر •', data = msg.sender_id.user_id..'/nSurvey'},},
}}
return bot.sendText(msg_chat_id,msg_id,"* ✧ يرجاء تأكيد أمر مسح اسم البوت*","md",false, false, false, false, reply_markup)
end 
if text == "تغيير" or text == "تغيير انلاين" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'المـطـور الاسـاسـي', data = msg.sender_id.user_id..'/yaaaaa'},
},
{
{text = 'اسـم البــوت', data = msg.sender_id.user_id..'/Namebot'},
},
{
{text = 'الـغـاء الامـر', data = msg.sender_id.user_id..'/Redis'},
},
}
}
return bot.sendText(msg_chat_id,msg_id,'*اليك ازرار تغيير\nالمطور الاساسي\nاسم البوت*',"md",false, false, false, false, reply_markup)
end
if text == 'سورس' or text == 'يا سورس' or text == 'السورس' or text == 'source' then
photo = "https://t.me/x_x_m_mm/8"
local T =[[
✧︙[𝑊𝐸𝐿𝐶𝑂𝑀𝐸 𝑇𝑂 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇](t.me/VLORANTT )
]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '• مبرمج السورس •', url = 't.me/L_M_Z '},{text = '• مطور السورس •', url = 't.me/'..chdevolper..' '},
},
{
{text = '• تنصيب بوت مدفوع •', url = 't.me/L_M_Z'},
},
{
{text = '• قناة التحديثات •', url = 't.me/VLORANTT '},{text = '• قناة السورس •', url = 't.me/'..chsource..' '},
},
{  
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/VLORANTT '},
},
}
local msgg = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id=" .. msg.chat_id .. "&photo="..photo.."&caption=".. URL.escape(T).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
if text == "تفعيل تاك للكل" or text == "تعطيل تاك للكل" or text == "تفعيل تاك" or text == "تعطيل تاك" then    
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'تعطيل تاك للكل', data = msg.sender_id.user_id..'/'.. 'of_tak'},{text = 'تفعيل تاك للكل', data = msg.sender_id.user_id..'/'.. 'on_tak'},
},
{
{text = 'تعطيل all بالكلام', data = msg.sender_id.user_id..'/'.. 'all_of'},{text = 'تفعيل all بالكلام', data = msg.sender_id.user_id..'/'.. 'all_on'},
},
{
{text = 'تعطيل all بالصوره', data = msg.sender_id.user_id..'/'.. 'picture_of'},{text = 'تفعيل all بالصوره', data = msg.sender_id.user_id..'/'.. 'picture_on'},
},
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
return send(msg_chat_id, msg_id, '* ✧ مـرحـبـا اخـتـار امـر تـفـعـيـل الـتـاك *', 'md', false, false, false, false, reply_markup)
end
if text == 'المجموعة' or text == 'البار' or text == 'عدد المجموعة' or text == 'عدد البار' then
Get_Chat = bot.getChat(msg.chat_id)
Info_Chats = bot.getSupergroupFullInfo(msg.chat_id)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = Get_Chat.title, url = Info_Chats.invite_link.invite_link}},
}
}
bot.sendText(msg.chat_id,msg.id,'\n*✧ معلومات المجموعة ↑↓\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n✧ الايدي -> '..msg.chat_id..' \n✧ عدد الاعضاء -> '..Info_Chats.member_count..'\n✧ عدد الادمنيه -> '..Info_Chats.administrator_count..'\n✧ عدد المطرودين -> '..Info_Chats.banned_count..'\n✧ عدد المقيدين -> '..Info_Chats.restricted_count..'\n✧ الرابط -> '..Info_Chats.invite_link.invite_link..'*',"md",true, false, false, false, reply_markup)
return false
end
if text == "تفعيل ردود السورس" or text == "تفعيل ردود سورس" or text == "تفعيل الردود السورس" then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Reply:Source"..msg_chat_id,true) 
return send(msg_chat_id,msg_id,"* ✧ تم تفعيل ردود السورس *","md",true)
end
if text == "تعطيل ردود السورس" or text == "تعطيل ردود سورس" or text == "تعطيل الردود السورس" then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Reply:Source"..msg_chat_id) 
return send(msg_chat_id,msg_id,"* ✧ تم تعطيل ردود السورس *","md",true)
end
if text == "اضف رد سورس" or text == "✧ اضف رد سورس" then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."reply:on"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return send(msg_chat_id,msg_id,"*ارسل الان رد السورس التي تريد اضافته ...*", 'md', false, false, false, false, reply_markup)
end
if text == "مسح رد سورس" or text == "✧ مسح رد سورس" or text == "حذف رد سورس" then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."reply:of"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return send(msg_chat_id,msg_id,"* ✧ ارسل الان الرد ليتم المسح ... *", 'md', false, false, false, false, reply_markup)
end
if text == "مسح ردود السورس" or text == "مسح ردود سورس" or text == "حذف ردود السورس" then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local app = Redis:smembers(MARCOS.."app:reply:Source")
for k,v in pairs(app) do
Redis:del(MARCOS.."Add:reply:Source:Gif"..v)   
Redis:del(MARCOS.."Add:reply:Source:vico"..v)   
Redis:del(MARCOS.."Add:reply:Source:stekr"..v)     
Redis:del(MARCOS.."Add:reply:Source:Text"..v)   
Redis:del(MARCOS.."Add:reply:Source:Photo"..v)
Redis:del(MARCOS.."Add:reply:Source:Video"..v)
Redis:del(MARCOS.."Add:reply:Source:File"..v)
Redis:del(MARCOS.."Add:reply:Source:Audio"..v)
Redis:del(MARCOS.."Add:reply:Source:video_note"..v)
Redis:del(MARCOS.."app:reply:Source")
end
return send(msg_chat_id,msg_id,"* ✧ تم مسح "..#app.." رد سورس *","md",true)  
end
if text == "ردود السورس" or text == "ردود سورس" then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local app = Redis:smembers(MARCOS.."app:reply:Source")
text = "\n✧ قائمة ردود السورس ⇧⇩\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(app) do
if Redis:get(MARCOS.."Add:reply:Source:Gif"..v) then
db = "متحركه 🎭"
elseif Redis:get(MARCOS.."Add:reply:Source:vico"..v) then
db = "بصمه 📢"
elseif Redis:get(MARCOS.."Add:reply:Source:stekr"..v) then
db = "ملصق 🃏"
elseif Redis:get(MARCOS.."Add:reply:Source:Text"..v) then
db = "رساله ✉"
elseif Redis:get(MARCOS.."Add:reply:Source:Photo"..v) then
db = "صوره 🎇"
elseif Redis:get(MARCOS.."Add:reply:Source:Video"..v) then
db = "فيديو 📹"
elseif Redis:get(MARCOS.."Add:reply:Source:File"..v) then
db = "ملف ✧"
elseif Redis:get(MARCOS.."Add:reply:Source:Audio"..v) then
db = "اغنيه 🎵"
elseif Redis:get(MARCOS.."Add:reply:Source:video_note"..v) then
db = "بصمه فيديو 🎥"
end
text = text..""..k.." ->〘 "..v.." 〙✧〘 "..db.." 〙\n"
end
if #app == 0 then
text = " ✧ لم تقم باضافه ردود من قبل"
end
return send(msg_chat_id,msg_id,"["..text.."]","md",true)  
end
if text == "افلام" or text == "فلم" or text == "الافلام" then
local Jabwa = bot.getUser(msg.sender_id.user_id)
local news = Jabwa.first_name
local t = "*اليك قائمة الافلام من سورس ماركوس ✧*"
local m = "https://t.me/S_a_i_d_i/1188"
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '🇪🇬 مصري', callback_data=msg.sender_id.user_id.."/Cinema1"},{text = '🇳🇿 أجنبي', callback_data=msg.sender_id.user_id.."/Cinema2"},
},
{
{text = '🧸 كارتون', callback_data=msg.sender_id.user_id.."/Cinema3"},{text = '🎬 مسرحيات', callback_data=msg.sender_id.user_id.."/Cinema4"},
},
{
{text =news, url = "https://t.me/"..Jabwa.username..""},
},
}
local rep = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id="..msg_chat_id.."&caption="..URL.escape(t).."&photo="..m.."&reply_to_message_id="..rep.."&parse_mode=Markdown&reply_markup="..JSON.encode(keyboard))
end
if text == "تخ" or text == "اقتلو" or text == "تخ تخ" then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local ban = bot.getUser(Message_Reply.sender_id.user_id)
local bain = bot.getUser(msg.sender_id.user_id)
if tonumber(Message_Reply.sender_id.user_id) == tonumber(msg.sender_id.user_id) then
return bot.sendText(msg_chat_id,msg_id,"*لول عوز يقتل نفسه العبيط 😹*","md",true)  
end
if tonumber(Message_Reply.sender_id.user_id) == tonumber(689087834) then
return bot.sendText(msg_chat_id,msg_id,"*لا استطيع استخدام الأمر على مطور السورس*","md",true)  
end
if tonumber(Message_Reply.sender_id.user_id) == tonumber(MARCOS) then
return bot.sendText(msg_chat_id,msg_id,"*لا استخدم الأمر على نفسي  😂*","md",true)  
end
if ban.first_name then
baniusername = '*قتل ->* ['..bain.first_name..'](tg://user?id='..bain.id..')\n*المجرم دا 😢 ->* ['..ban.first_name..'](tg://user?id='..ban.id..')\n*انـا لله وانـا اليـه راجعـون 😢\n*'
else
baniusername = 'لا يوجد'
end
 keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'المقتول 🔪', url = "https://t.me/"..ban.username..""},
},
}
local msgg = msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token.."/sendvideo?chat_id=" .. msg_chat_id .. "&video=https://t.me/DEV_JABWA/176&caption=".. URL.escape(baniusername).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
if text == "تف" or text == "اتفو" or text == "تف تف" then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local ban = bot.getUser(Message_Reply.sender_id.user_id)
local bain = bot.getUser(msg.sender_id.user_id)
if tonumber(Message_Reply.sender_id.user_id) == tonumber(msg.sender_id.user_id) then
return bot.sendText(msg_chat_id,msg_id,"*اععع عوز يتف على نفسه 😳*","md",true)  
end
if tonumber(Message_Reply.sender_id.user_id) == tonumber(689087834) then
return bot.sendText(msg_chat_id,msg_id,"*لا استطيع استخدام الأمر على مطور السورس*","md",true)  
end
if tonumber(Message_Reply.sender_id.user_id) == tonumber(MARCOS) then
return bot.sendText(msg_chat_id,msg_id,"*لا استخدم الأمر على نفسي  😂*","md",true)  
end
if ban.first_name then
baniusername = '*تف ->* ['..bain.first_name..'](tg://user?id='..bain.id..')\n*على المجرم دا 😢 -> * ['..ban.first_name..'](tg://user?id='..ban.id..')\n*اععع اي القرف دا\n*'
else
baniusername = 'لا يوجد'
end
 keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'المجني عليه 😹', url = "https://t.me/"..ban.username..""},
},
}
local msgg = msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token.."/sendvideo?chat_id=" .. msg_chat_id .. "&video=https://t.me/DEV_JABWA/175&caption=".. URL.escape(baniusername).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
if text == "مح" or text == "بوسه" or text == "مح فبؤقك" then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local ban = bot.getUser(Message_Reply.sender_id.user_id)
local bain = bot.getUser(msg.sender_id.user_id)
if tonumber(Message_Reply.sender_id.user_id) == tonumber(msg.sender_id.user_id) then
return bot.sendText(msg_chat_id,msg_id,"*اععع عوز يبوس نفسه 😳*","md",true)  
end
if tonumber(Message_Reply.sender_id.user_id) == tonumber(689087834) then
return bot.sendText(msg_chat_id,msg_id,"*لا استطيع استخدام الأمر على مطور السورس*","md",true)  
end
if tonumber(Message_Reply.sender_id.user_id) == tonumber(MARCOS) then
return bot.sendText(msg_chat_id,msg_id,"*لا استخدم الأمر على نفسي  😂*","md",true)  
end
if ban.first_name then
baniusername = '*💞 القميل ->* ['..bain.first_name..'](tg://user?id='..bain.id..')\n*😉 بعتلك بوسه ->* ['..ban.first_name..'](tg://user?id='..ban.id..')\n*✧ تم القبله بنجاح 🥺♥\n*'
else
baniusername = 'لا يوجد'
end
 keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'المقبول 👻😹', url = "https://t.me/"..ban.username..""},
},
}
local msgg = msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token.."/sendvideo?chat_id=" .. msg_chat_id .. "&video=https://t.me/DEV_JABWA/199&caption=".. URL.escape(baniusername).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
if text == '〘 مبرمج السورس 〙' or text == 'مبرمج السورس' or text == 'فوتلكس' or text == 'محمد' or text == 'اليوت' then  
local UserId_Info = bot.searchPublicChat("L_M_Z")
if UserId_Info.id then
local  ban = bot.getUser(UserId_Info.id)
local InfoUser = bot.getUserFullInfo(UserId_Info.id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = ''
end
local photo = bot.getUserProfilePhotos(UserId_Info.id)
if photo.total_count > 0 then
local DevJabwa = "*✧︙ 𝒅𝒆𝒗 𝒔𝒐𝒖𝒓𝒄𝒆 𝒗𝒂𝒍𝒐𝒓𝒂𝒏𝒕  ♯*\n*✧︙ɴᴀᴍᴇ -› *"..ban.first_name.."\n*✧︙ 𝒊𝒅 -› "..UserId_Info.id.."*\n*✧︙ 𝒃𝒊𝒐 -›*  *"..Bio.." *"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/L_M_Z"}
},
}
local msg_id = msg.id/2097152/0.5 
https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(DevJabwa)..'&photo='..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id..'&reply_to_message_id='..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
else
local DevJabwa = "*✧︙ 𝒅𝒆𝒗 𝒔𝒐𝒖𝒓𝒄𝒆 𝒗𝒂𝒍𝒐𝒓𝒂𝒏𝒕  ♯*\n*✧︙𝒏𝒂𝒎𝒆  -› *"..ban.first_name.."\n*✧︙ 𝒊𝒅  -› "..UserId_Info.id.."*\n*✧︙ 𝒃𝒊𝒐 -›*  *"..Bio.." *"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/L_M_Z"}
},
}
local msg_id = msg.id/2097152/0.5 
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(DevJabwa).."&reply_to_message_id="..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
end
end
end
if text == 'مطور السورس' or text == 'لانحج2' or text == 'مطور السورس ✧' then
local UserId_Info = bot.searchPublicChat("@"..chdevolper.."")
if UserId_Info.id then
local UserInfo = bot.getUser(UserId_Info.id)
local InfoUser = bot.getUserFullInfo(UserId_Info.id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = ''
end
if UserInfo.first_name then
username = UserInfo.first_name
else
username = ''
end
local photo = bot.getUserProfilePhotos(UserId_Info.id)
if photo.total_count > 0 then
local TestText = "*✧︙ sᴏᴜʀᴄᴇ ᴅᴇᴠᴇʟᴏᴘᴇʀ\n✧︙ ɴᴀᴍᴇ ->* ["..UserInfo.first_name.."](tg://user?id="..UserId_Info.id..")\n*✧︙ ʙɪᴏ -> "..Bio.." *"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/"..chdevolper..""}
},
{
{text = '• قناة السورس •', url = "https://t.me/"..chsource..""},
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(TestText)..'&photo='..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id..'&reply_to_message_id='..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
else
local TestText = "- معلومات مطور السورس : \\nn: name Dev . ["..UserInfo.first_name.."](tg://user?id="..UserId_Info.id..")\n\n ["..Bio.."]"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/"..chdevolper..""}
},
{
{text = '• قناة السورس •', url = "https://t.me/"..chsource..""},
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(TestText).."&reply_to_message_id="..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
end
end
end
if text == 'كئابه' or text == 'المبرمج كئابه' or text == 'المبرمج السورس ✧' then
local UserId_Info = bot.searchPublicChat("K2aBa")
if UserId_Info.id then
local UserInfo = bot.getUser(UserId_Info.id)
local InfoUser = bot.getUserFullInfo(UserId_Info.id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = ''
end
if UserInfo.first_name then
username = UserInfo.first_name
else
username = ''
end
local photo = bot.getUserProfilePhotos(UserId_Info.id)
if photo.total_count > 0 then
local TestText = "*✧︙ ɴᴀᴍᴇ ->* ["..UserInfo.first_name.."](tg://user?id="..UserId_Info.id..")\n*✧︙ ʙɪᴏ -> "..Bio.." *"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/K2aBa"}
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(TestText)..'&photo='..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id..'&reply_to_message_id='..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
else
local TestText = "- معلومات مبرمج السورس : \\nn: name Dev . ["..UserInfo.first_name.."](tg://user?id="..UserId_Info.id..")\n\n ["..Bio.."]"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/K2aBa"}
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(TestText).."&reply_to_message_id="..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
end
end
end
if text == 'سنيور' or text == 'المبرمج سنيور' or text == 'المبرمج سنيور ✧' then
local UserId_Info = bot.searchPublicChat("senior_66")
if UserId_Info.id then
local UserInfo = bot.getUser(UserId_Info.id)
local InfoUser = bot.getUserFullInfo(UserId_Info.id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = ''
end
if UserInfo.first_name then
username = UserInfo.first_name
else
username = ''
end
local photo = bot.getUserProfilePhotos(UserId_Info.id)
if photo.total_count > 0 then
local TestText = "*✧︙ ɴᴀᴍᴇ ->* ["..UserInfo.first_name.."](tg://user?id="..UserId_Info.id..")\n*✧︙ ʙɪᴏ -> "..Bio.." *"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/senior_66"}
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(TestText)..'&photo='..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id..'&reply_to_message_id='..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
else
local TestText = "- معلومات مبرمج السورس : \\nn: name Dev . ["..UserInfo.first_name.."](tg://user?id="..UserId_Info.id..")\n\n ["..Bio.."]"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/senior_66"}
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(TestText).."&reply_to_message_id="..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
end
end
end
if text == 'مطور البوت' or text == 'المطور' or text == 'مطوري السورس ✧' then
local UserId_Info = bot.searchPublicChat(""..UserSudo.."")
if UserId_Info.id then
local UserInfo = bot.getUser(UserId_Info.id)
local InfoUser = bot.getUserFullInfo(UserId_Info.id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = ''
end
if UserInfo.first_name then
username = UserInfo.first_name
else
username = ''
end
local photo = bot.getUserProfilePhotos(UserId_Info.id)
if photo.total_count > 0 then
local TestText = "*معلومات مطور البوت\n ✯︙ɴᴀᴍᴇ ->* ["..UserInfo.first_name.."](tg://user?id="..UserId_Info.id..")\n*✯︙ ʙɪᴏ -> "..Bio.." *"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/"..UserSudo..""}
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(TestText)..'&photo='..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id..'&reply_to_message_id='..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
else
local TestText = "- معلومات مطور البوت : \\nn: name Dev . ["..UserInfo.first_name.."](tg://user?id="..UserId_Info.id..")\n\n ["..Bio.."]"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/"..UserSudo..""}
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(TestText).."&reply_to_message_id="..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
end
end
end
if text == 'جلب النسخه الاحتياطيه ✧' or text == 'جلب النسخه الاحتياطيه' or text == 'جلب النسخه العامه' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Groups = Redis:smembers(MARCOS..'ChekBotAdd')  
local UsersBot = Redis:smembers(MARCOS..'Num:User:Pv')  
local Get_Json = '{"BotId": '..MARCOS..','  
if #UsersBot ~= 0 then 
Get_Json = Get_Json..'"UsersBot":['  
for k,v in pairs(UsersBot) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..']'
end
Get_Json = Get_Json..',"GroupsBot":{'
for k,v in pairs(Groups) do   
local President = Redis:smembers(MARCOS.."SuperCreator:Group"..v)
local Constructor = Redis:smembers(MARCOS.."Creator:Group"..v)
local Manager = Redis:smembers(MARCOS.."Manger:Group"..v)
local Admin = Redis:smembers(MARCOS.."Admin:Group"..v)
local Vips = Redis:smembers(MARCOS.."Special:Group"..v)
if k == 1 then
Get_Json = Get_Json..'"'..v..'":{'
else
Get_Json = Get_Json..',"'..v..'":{'
end
if #President ~= 0 then 
Get_Json = Get_Json..'"President":['
for k,v in pairs(President) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Constructor ~= 0 then
Get_Json = Get_Json..'"Constructor":['
for k,v in pairs(Constructor) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Manager ~= 0 then
Get_Json = Get_Json..'"Manager":['
for k,v in pairs(Manager) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Admin ~= 0 then
Get_Json = Get_Json..'"Admin":['
for k,v in pairs(Admin) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Vips ~= 0 then
Get_Json = Get_Json..'"Vips":['
for k,v in pairs(Vips) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
Get_Json = Get_Json..'"Dev":"JABWA"}'
end
Get_Json = Get_Json..'}}'
local File = io.open('./'..UserBot..'.json', "w")
File:write(Get_Json)
File:close()
return bot.sendDocument(msg_chat_id,msg_id,'./'..UserBot..'.json', '*✧ تم جلب النسخه الاحتياطيه\n✧ تحتوي على『 '..#Groups..' 』مجموعه \n✧ وتحتوي على『 '..#UsersBot..' 』مشترك *\n', 'md')
end
if text == 'تفعيل جلب النسخه التلقائيه' or text == 'تفعيل جلب النسخه التلقائيه' then   
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:setex(MARCOS.."Status:SendFile",43200,true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل جلب نسخة المجموعهات التلقائيه","md")
end
if text == 'تعطيل جلب النسخه التلقائيه' or text == 'تعطيل جلب النسخه التلقائيه' then   
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."Status:SendFile") 
return send(msg_chat_id,msg_id," ✧ تم تعطيل جلب نسخة المجموعهات التلقائيه","md")
end

if tonumber(Redis:ttl(MARCOS.."Status:SendFile")) <= 1 then
local Get_Json = '{"BotId": '..MARCOS..','  
Get_Json = Get_Json..'"GroupsBotreply":{'
local Groups = Redis:smembers(MARCOS..'ChekBotAdd')  
for k,ide in pairs(Groups) do   
listrep = Redis:smembers(MARCOS.."List:Manager"..ide.."")
if k == 1 then
Get_Json = Get_Json..'"'..ide..'":{'
else
Get_Json = Get_Json..',"'..ide..'":{'
end
if #listrep >= 5 then
for k,v in pairs(listrep) do
if Redis:get(MARCOS.."Add:Rd:Manager:Gif"..v..ide) then
db = "gif@"..Redis:get(MARCOS.."Add:Rd:Manager:Gif"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:Vico"..v..ide) then
db = "Vico@"..Redis:get(MARCOS.."Add:Rd:Manager:Vico"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:Stekrs"..v..ide) then
db = "Stekrs@"..Redis:get(MARCOS.."Add:Rd:Manager:Stekrs"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:Text"..v..ide) then
db = "Text@"..Redis:get(MARCOS.."Add:Rd:Manager:Text"..v..ide)
db = string.gsub(db,'"','')
db = string.gsub(db,"'",'')
db = string.gsub(db,'*','')
db = string.gsub(db,'`','')
db = string.gsub(db,'{','')
db = string.gsub(db,'}','')
db = string.gsub(db,'\n',' ')
elseif Redis:get(MARCOS.."Add:Rd:Manager:Photo"..v..ide) then
db = "Photo@"..Redis:get(MARCOS.."Add:Rd:Manager:Photo"..v..ide) 
elseif Redis:get(MARCOS.."Add:Rd:Manager:Video"..v..ide) then
db = "Video@"..Redis:get(MARCOS.."Add:Rd:Manager:Video"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:File"..v..ide) then
db = "File@"..Redis:get(MARCOS.."Add:Rd:Manager:File"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:Audio"..v..ide) then
db = "Audio@"..Redis:get(MARCOS.."Add:Rd:Manager:Audio"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:video_note"..v..ide) then
db = "video_note@"..Redis:get(MARCOS.."Add:Rd:Manager:video_note"..v..ide)
end
v = string.gsub(v,'"','')
v = string.gsub(v,"'",'')
Get_Json = Get_Json..'"'..v..'":"'..db..'",'
end   
Get_Json = Get_Json..'"mahmoud":"ok"'
end
Get_Json = Get_Json..'}'
end
Get_Json = Get_Json..'}}'
local File = io.open('./ReplyGroups.json', "w")
File:write(Get_Json)
File:close()
bot.sendDocument(Sudo_Id,0,'./ReplyGroups.json', '', 'md')

local Groups = Redis:smembers(MARCOS..'ChekBotAdd')  
local UsersBot = Redis:smembers(MARCOS..'Num:User:Pv')  
local Get_Json = '{"BotId": '..MARCOS..','  
if #UsersBot ~= 0 then 
Get_Json = Get_Json..'"UsersBot":['  
for k,v in pairs(UsersBot) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..']'
end
Get_Json = Get_Json..',"GroupsBot":{'
for k,v in pairs(Groups) do   
local President = Redis:smembers(MARCOS.."SuperCreator:Group"..v)
local Constructor = Redis:smembers(MARCOS.."Creator:Group"..v)
local Manager = Redis:smembers(MARCOS.."Manger:Group"..v)
local Admin = Redis:smembers(MARCOS.."Admin:Group"..v)
local Vips = Redis:smembers(MARCOS.."Special:Group"..v)
if k == 1 then
Get_Json = Get_Json..'"'..v..'":{'
else
Get_Json = Get_Json..',"'..v..'":{'
end
if #President ~= 0 then 
Get_Json = Get_Json..'"President":['
for k,v in pairs(President) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Constructor ~= 0 then
Get_Json = Get_Json..'"Constructor":['
for k,v in pairs(Constructor) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Manager ~= 0 then
Get_Json = Get_Json..'"Manager":['
for k,v in pairs(Manager) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Admin ~= 0 then
Get_Json = Get_Json..'"Admin":['
for k,v in pairs(Admin) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
if #Vips ~= 0 then
Get_Json = Get_Json..'"Vips":['
for k,v in pairs(Vips) do
if k == 1 then
Get_Json = Get_Json..'"'..v..'"'
else
Get_Json = Get_Json..',"'..v..'"'
end
end   
Get_Json = Get_Json..'],'
end
Get_Json = Get_Json..'"Dev":"JABWA"}'
end
Get_Json = Get_Json..'}}'
local File = io.open('./'..UserBot..'.json', "w")
File:write(Get_Json)
File:close()
bot.sendDocument(Sudo_Id,0,'./'..UserBot..'.json', '*✧ تم جلب النسخه الاحتياطيه\n✧ تحتوي على『 '..#Groups..' 』مجموعه \n✧ وتحتوي على『 '..#UsersBot..' 』مشترك *\n', 'md')
Redis:setex(MARCOS.."Status:SendFile",43200,true) 
end
if text == 'جلب نسخه الردود' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
local Get_Json = '{"BotId": '..MARCOS..','  
Get_Json = Get_Json..'"GroupsBotreply":{'
local Groups = Redis:smembers(MARCOS..'ChekBotAdd')  
for k,ide in pairs(Groups) do   
listrep = Redis:smembers(MARCOS.."List:Manager"..ide.."")
if k == 1 then
Get_Json = Get_Json..'"'..ide..'":{'
else
Get_Json = Get_Json..',"'..ide..'":{'
end
if #listrep >= 5 then
for k,v in pairs(listrep) do
if Redis:get(MARCOS.."Add:Rd:Manager:Gif"..v..ide) then
db = "gif@"..Redis:get(MARCOS.."Add:Rd:Manager:Gif"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:Vico"..v..ide) then
db = "Vico@"..Redis:get(MARCOS.."Add:Rd:Manager:Vico"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:Stekrs"..v..ide) then
db = "Stekrs@"..Redis:get(MARCOS.."Add:Rd:Manager:Stekrs"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:Text"..v..ide) then
db = "Text@"..Redis:get(MARCOS.."Add:Rd:Manager:Text"..v..ide)
db = string.gsub(db,'"','')
db = string.gsub(db,"'",'')
db = string.gsub(db,'*','')
db = string.gsub(db,'`','')
db = string.gsub(db,'{','')
db = string.gsub(db,'}','')
db = string.gsub(db,'\n',' ')
elseif Redis:get(MARCOS.."Add:Rd:Manager:Photo"..v..ide) then
db = "Photo@"..Redis:get(MARCOS.."Add:Rd:Manager:Photo"..v..ide) 
elseif Redis:get(MARCOS.."Add:Rd:Manager:Video"..v..ide) then
db = "Video@"..Redis:get(MARCOS.."Add:Rd:Manager:Video"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:File"..v..ide) then
db = "File@"..Redis:get(MARCOS.."Add:Rd:Manager:File"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:Audio"..v..ide) then
db = "Audio@"..Redis:get(MARCOS.."Add:Rd:Manager:Audio"..v..ide)
elseif Redis:get(MARCOS.."Add:Rd:Manager:video_note"..v..ide) then
db = "video_note@"..Redis:get(MARCOS.."Add:Rd:Manager:video_note"..v..ide)
end
v = string.gsub(v,'"','')
v = string.gsub(v,"'",'')
Get_Json = Get_Json..'"'..v..'":"'..db..'",'
end   
Get_Json = Get_Json..'"mahmoud":"ok"'
end
Get_Json = Get_Json..'}'
end
Get_Json = Get_Json..'}}'
local File = io.open('./ReplyGroups.json', "w")
File:write(Get_Json)
File:close()
return bot.sendDocument(msg_chat_id,msg_id,'./ReplyGroups.json', '', 'md')
end
if text == 'رفع نسخه الردود' and msg.reply_to_message_id ~= 0 then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if Message_Reply.content.document then
local File_Id = Message_Reply.content.document.document.remote.id
local Name_File = Message_Reply.content.document.file_name
local File = json:decode(https.request('https://api.telegram.org/bot'..Token..'/getfile?file_id='..File_Id)) 
local download_ = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path,''..Name_File) 
local Get_Info = io.open(download_,"r"):read('*a')
local Reply_Groups = JSON.decode(Get_Info) 
for GroupId,ListGroup in pairs(Reply_Groups.GroupsBotreply) do
if ListGroup.mahmoud == "ok" then
for k,v in pairs(ListGroup) do
Redis:sadd(MARCOS.."List:Manager"..GroupId,k)
if v and v:match('gif@(.*)') then
Redis:set(MARCOS.."Add:Rd:Manager:Gif"..k..GroupId,v:match('gif@(.*)'))
elseif v and v:match('Vico@(.*)') then
Redis:set(MARCOS.."Add:Rd:Manager:Vico"..k..GroupId,v:match('Vico@(.*)'))
elseif v and v:match('Stekrs@(.*)') then
Redis:set(MARCOS.."Add:Rd:Manager:Stekrs"..k..GroupId,v:match('Stekrs@(.*)'))
elseif v and v:match('Text@(.*)') then
Redis:set(MARCOS.."Add:Rd:Manager:Text"..k..GroupId,v:match('Text@(.*)'))
elseif v and v:match('Photo@(.*)') then
Redis:set(MARCOS.."Add:Rd:Manager:Photo"..k..GroupId,v:match('Photo@(.*)'))
elseif v and v:match('Video@(.*)') then
Redis:set(MARCOS.."Add:Rd:Manager:Video"..k..GroupId,v:match('Video@(.*)'))
elseif v and v:match('File@(.*)') then
Redis:set(MARCOS.."Add:Rd:Manager:File"..k..GroupId,v:match('File@(.*)') )
elseif v and v:match('Audio@(.*)') then
Redis:set(MARCOS.."Add:Rd:Manager:Audio"..k..GroupId,v:match('Audio@(.*)'))
elseif v and v:match('video_note@(.*)') then
Redis:set(MARCOS.."Add:Rd:Manager:video_note"..k..GroupId,v:match('video_note@(.*)') )
end
end
end
end
return send(msg_chat_id,msg_id,'\n* ✧ تم استرجاع ردود المجموعات* ',"md",true)  
end
end
if text and text:match("^تعيين عدد الاعضاء (%d+)$") then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS..'Num:Add:Bot',text:match("تعيين عدد الاعضاء (%d+)$") ) 
send(msg_chat_id,msg_id,'* ✧ تم تعيين عدد اعضاء تفعيل البوت اكثر من -> '..text:match("تعيين عدد الاعضاء (%d+)$")..' عضو *',"md",true)  
end
if Redis:get(MARCOS..'Set:array'..msg.sender_id.user_id..':'..msg_chat_id) == 'true1' then
text = text:gsub('"','') 
text = text:gsub("'",'') 
text = text:gsub('`','') 
text = text:gsub('*','') 
local test = Redis:get(MARCOS..'Text:array'..msg.sender_id.user_id..':'..msg_chat_id..'')
Redis:sadd(MARCOS.."Add:Rd:array:Text"..test,text)  
_key = {
{{text="اضغط هنا لانهاء الاضافه",callback_data="EndAddarray"..msg.sender_id.user_id}},
}
send_inlin_key(msg_chat_id,' * ✧تم حفظ الرد يمكنك ارسال اخر او اكمال العمليه من خلال الزر اسفل *',_key,msg_id)
return false  
end
if text then
if Redis:get(MARCOS.."Set:array:Ssd"..msg.sender_id.user_id..":"..msg_chat_id) == 'dttd' then
Redis:del(MARCOS.."Set:array:Ssd"..msg.sender_id.user_id..":"..msg_chat_id)
gery = Redis:get(MARCOS.."Set:array:addpu"..msg.sender_id.user_id..":"..msg_chat_id)
if not Redis:sismember(MARCOS.."Add:Rd:array:Text"..gery,text) then
send(msg_chat_id, msg_id,' * ✧لا يوجد رد متعدد * ',"md",true)
return false
end
Redis:srem(MARCOS.."Add:Rd:array:Text"..gery,text)
send(msg_chat_id, msg_id,' * ✧تم حذفه بنجاح .* ',"md",true)
end
end
if text then
if Redis:get(MARCOS.."Set:array:Ssd"..msg.sender_id.user_id..":"..msg_chat_id) == 'delrd' then
Redis:del(MARCOS.."Set:array:Ssd"..msg.sender_id.user_id..":"..msg_chat_id)
if not Redis:sismember(MARCOS..'List:array',text) then
send(msg_chat_id, msg_id,' * ✧لا يوجد رد متعدد * ',"md",true)
return false
end
Redis:set(MARCOS.."Set:array:addpu"..msg.sender_id.user_id..":"..msg_chat_id,text)
Redis:set(MARCOS.."Set:array:Ssd"..msg.sender_id.user_id..":"..msg_chat_id,"dttd")
send(msg_chat_id, msg_id,' * ✧قم بارسال الرد الذي تريد حذفه منه* ',"md",true)
return false
end
end
if text == "حذف رد من متعدد" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
inlin = {
{{text = '✧ اضغط هنا للالغاء.',callback_data=msg.sender_id.user_id..'/cancelrdd'}},
}
send_inlin_key(msg_chat_id," ✧ ارسل الكلمه التي تريد حذفها",inlin,msg_id)
Redis:set(MARCOS.."Set:array:Ssd"..msg.sender_id.user_id..":"..msg_chat_id,"delrd")
return false 
end
if text then
if Redis:get(MARCOS.."Set:array"..msg.sender_id.user_id..":"..msg_chat_id) == 'true' then
Redis:sadd(MARCOS..'List:array', text)
Redis:set(MARCOS..'Text:array'..msg.sender_id.user_id..':'..msg_chat_id, text)
send(msg_chat_id, msg_id,'ارسل الرد الذي تريد اضافته',"md",true)
Redis:del(MARCOS.."Set:array"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:set(MARCOS..'Set:array'..msg.sender_id.user_id..':'..msg_chat_id,'true1')
Redis:del(MARCOS.."Add:Rd:array:Text"..text)   
return false
end
end

if text then
if Redis:get(MARCOS.."Set:array:rd"..msg.sender_id.user_id..":"..msg_chat_id) == 'delrd' then
Redis:del(MARCOS.."Set:array:rd"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:array:Text"..text)
Redis:srem(MARCOS..'List:array', text)
send(msg_chat_id, msg_id,' * ✧تم ازالة الرد المتعدد بنجاح* ',"md",true)
return false
end
end

if text == "حذف رد متعدد" or text == "مسح رد متعدد" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
inlin = {
{{text = '✧ اضغط هنا للالغاء',callback_data=msg.sender_id.user_id..'/cancelrdd'}},
}
send_inlin_key(msg_chat_id," ✧ ارسل الكلمه التي تريد حذفها",inlin,msg_id)
Redis:set(MARCOS.."Set:array:rd"..msg.sender_id.user_id..":"..msg_chat_id,"delrd")
return false 
end
if text then
if  Redis:sismember(MARCOS..'List:array',text) then
local list = Redis:smembers(MARCOS.."Add:Rd:array:Text"..text)
quschen = list[math.random(#list)]
send(msg_chat_id, msg_id,'['..quschen..']',"md",true)
end
end
if text == ("الردود المتعدده") then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
local list = Redis:smembers(MARCOS..'List:array')
text = "  ✧قائمه الردود المتعدده \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • \n"
for k,v in pairs(list) do
text = text..""..k.." -> ("..v..") -> {رساله}\n"
end
if #list == 0 then
text = " ✧ لا يوجد ردود متعدده"
end
send(msg_chat_id, msg_id,'['..text..']',"md",true)
end
if text == ("مسح الردود المتعدده") then   
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
local list = Redis:smembers(MARCOS..'List:array')
for k,v in pairs(list) do
Redis:del(MARCOS.."Add:Rd:array:Text"..v..msg_chat_id)   
Redis:del(MARCOS..'List:array'..msg_chat_id)
end
send(msg_chat_id, msg_id," * ✧تم مسح الردود المتعدده*","md",true)
end
if text == "اضف رد متعدد" then   
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
inlin = {
{{text = '✧ اضغط هنا للالغاء',callback_data=msg.sender_id.user_id..'/cancelrdd'}},
}
send_inlin_key(msg_chat_id," ✧ ارسل الكلمه التي تريد اضافتها",inlin,msg_id)
Redis:set(MARCOS.."Set:array"..msg.sender_id.user_id..":"..msg_chat_id,true)
return false
end
if text == 'الاحصائيات' or text == 'الاحصائيات ✧' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local user_info = bot.getUser(msg.sender_id.user_id)
local RinkBot = msg.Name_Controller
Groups = (Redis:scard(MARCOS..'ChekBotAdd') or 0)
Users = (Redis:scard(MARCOS..'Num:User:Pv') or 0)
local ban = bot.getUser(MARCOS)
if ban.username then
Creator = " "..ban.first_name.." "
else 
Creator = " ماركوس\n"
end
local news = '*• ʏᴏᴜʀ ʀᴀɴᴋ->* ['..RinkBot..'](tg://user?id='..user_info.id..')\n'
local Grosupsw = 'المجموعةات -› '..Groups..''
local Usperos = 'المشتركين -› '..Users..''
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = Grosupsw, url = 't.me/'..UserBot..'?start'}, 
},
{
{text = Usperos, url = 't.me/'..UserBot..'?start'}, 
},
{
{text = Creator, url = 't.me/'..UserBot..'?start'},
},
}
msgg = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendMessage?chat_id=" .. msg_chat_id .. "&text=".. URL.escape(news).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
if text == 'المجموعةات' or text == 'ملف المجموعةات ✧' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local G = "جروبات البوت ✧ \n"
local list = Redis:smembers(MARCOS..'ChekBotAdd')  
for k,v in pairs(list) do  
local Get_Chat = bot.getChat(v)
local Info_Chats = bot.getSupergroupFullInfo(v)
if Info_Chats and Info_Chats.invite_link then
link = Info_Chats.invite_link.invite_link
else
link = "لا يوجد" 
end
if Get_Chat and Get_Chat.title then
title = Get_Chat.title
else 
title = "لا يوجد" 
end
G = G.." اسم المجموعة -> "..title.."\n ايدي المجموعة -> "..v.."\n رابط المجموعة -> "..link.."\n\n"
end
local File = io.open('./'..UserBot..'.JABWA', "w")
File:write(G)
File:close()
bot.sendDocument(msg_chat_id,msg_id,'./'..UserBot..'.JABWA','* ✧ تم جلب المجموعةات*\n', 'md')
end
if text == 'روابط المجموعةات ✧' or text == 'لينك المجموعةات' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local G = "جروبات البوت ✧ \n"
local list = Redis:smembers(MARCOS..'ChekBotAdd')  
for k,v in pairs(list) do  
local Get_Chat = bot.getChat(v)
local Info_Chats = bot.getSupergroupFullInfo(v)
if Info_Chats and Info_Chats.invite_link then
link = Info_Chats.invite_link.invite_link
else
link = "لا يوجد" 
end
if Get_Chat and Get_Chat.title then
title = Get_Chat.title
else 
title = "لا يوجد" 
end
G = G.." اسم المجموعة -> "..title.."\n ايدي المجموعة -> "..v.."\n رابط المجموعة -> "..link.."\n\n"
end
bot.sendText(msg_chat_id,msg_id,G, 'html')
end
if text == 'تفعيل' and msg.Dev then
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعة يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
y = 0
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.luatele == "chatMemberStatusCreator" then
Redis:sadd(MARCOS.."Ownerss:Group"..msg_chat_id,v.member_id.user_id) 
x = x + 1
else
Redis:sadd(MARCOS.."Admin:Group"..msg_chat_id,v.member_id.user_id) 
y = y + 1
end
end
end
local Get_Chat = bot.getChat(msg_chat_id)
local Info_Chats = bot.getSupergroupFullInfo(msg_chat_id)
if tonumber(Info_Chats.member_count) < tonumber((Redis:get(MARCOS..'Num:Add:Bot') or 0)) and not msg.Asasy then
return send(msg_chat_id,msg_id,' ✧ عدد الاعضاء قليل لا يمكن تفعيل المجموعة  يجب ان يكون اكثر من :'..Redis:get(MARCOS..'Num:Add:Bot'),"md",true)  
end
if Redis:sismember(MARCOS.."ChekBotAdd",msg_chat_id) then
return send(msg_chat_id,msg_id,'\n* ✧ الـجـروب مـفعـل مـن قبـل*',"md",true)  
else
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'ترتيب الاوامر 🌐', data = msg.sender_id.user_id..'/trtep@'..msg_chat_id},{text = 'اوامر البوت ⚙', data =msg.sender_id.user_id..'/appbot@'..msg_chat_id},
},
{
{text = Get_Chat.title, url = Info_Chats.invite_link.invite_link}, 
},
{
{text = 'قفل جميع الاوامر ❇️', data =msg.sender_id.user_id..'/LockAllGroup@'..msg_chat_id},{text = 'فتح جميع الاوامر 🔧', data =msg.sender_id.user_id..'/ongroup@'..msg_chat_id},
},
}
}
if not msg.Asasy then
local UserInfo = bot.getUser(msg.sender_id.user_id)
for Name_User in string.gmatch(UserInfo.first_name, "[^%s]+" ) do
UserInfo.first_name = Name_User
break
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = Get_Chat.title, url = Info_Chats.invite_link.invite_link}, 
},
}
}
send(Sudo_Id,0,'*\n ✧ تم تفعيل جروب جديده \n ✧ من قام بتفعيلها -> {*['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')*} \n ✧ معلومات المجموعة :\n ✧ عدد الاعضاء -> '..Info_Chats.member_count..'\n ✧ عدد الادمنيه -> '..Info_Chats.administrator_count..'\n ✧ عدد المطرودين -> '..Info_Chats.banned_count..'\n ✧ عدد المقيدين -> '..Info_Chats.restricted_count..'*\n ✧ ['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')\n ✧ `'..msg_chat_id..'`',"md",true, false, false, false, reply_markup)
end
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.luatele == "chatMemberStatusCreator" then
Redis:sadd(MARCOS.."Ownerss:Group"..msg_chat_id,v.member_id.user_id) 
else
Redis:sadd(MARCOS.."Admin:Group"..msg_chat_id,v.member_id.user_id) 
end
end
end
Redis:set(MARCOS..'tagallgroup'..msg.chat_id,'open') 
Redis:set(MARCOS.."Status:Link"..msg_chat_id,true) 
Redis:set(MARCOS.."Status:Games"..msg_chat_id,true) 
Redis:set(MARCOS.."Reply:Source"..msg_chat_id,true) 
Redis:set(MARCOS.."AlThther:Chat"..msg.chat_id,"true")
Redis:set(MARCOS.."replayallbot"..msg.chat_id,true)
Redis:set(MARCOS.."Status:Welcome"..msg_chat_id,true) 
Redis:set(MARCOS.."AlThther:Chat"..msg.chat_id,"true")
Redis:set(MARCOS..'takforall'..msg.chat_id,'open') 
Redis:set(MARCOS.."Status:IdPhoto"..msg_chat_id,true) 
Redis:del(MARCOS.."spammkick"..msg.chat_id)
Redis:set(MARCOS.."Lock:edit"..msg_chat_id,true) 
Redis:sadd(MARCOS.."ChekBotAdd",msg_chat_id)
Redis:set(MARCOS.."Status:Id"..msg_chat_id,true) ;Redis:set(MARCOS.."Status:Reply"..msg_chat_id,true) ;Redis:set(MARCOS.."Status:ReplySudo"..msg_chat_id,true) ;Redis:set(MARCOS.."Status:BanId"..msg_chat_id,true) ;Redis:set(MARCOS.."Status:SetId"..msg_chat_id,true) 
return send(msg_chat_id,msg_id,'\n*تم تفعيل المجموعه بنجاح ✅\nتم ترقيته '..y..' من الادمن ✧*','md', true, false, false, false, reply_markup)
end
end 
if text == 'تفعيل' and not msg.Dev then
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعة يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if Redis:sismember(MARCOS..'Black:listBan:',msg_chat_id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ المجموعة محظوره من التفعيل *","md",true)  
end
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.luatele
if (StatusMember == "chatMemberStatusCreator") then
local AddedBot = true
elseif (StatusMember == "chatMemberStatusAdministrator") then
local AddedBot = true
else
local AddedBot = false
end
if AddedBot == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرا انته لست ادمن او مالك المجموعة *","md",true)  
end
if not Redis:get(MARCOS.."BotFree") then
return send(msg_chat_id,msg_id,"\n* ✧ الوضع الخدمي تم تعطيله من قبل مطور البوت *","md",true)  
end
local Get_Chat = bot.getChat(msg_chat_id)
local Info_Chats = bot.getSupergroupFullInfo(msg_chat_id)
if tonumber(Info_Chats.member_count) < tonumber((Redis:get(MARCOS..'Num:Add:Bot') or 0)) and not msg.Asasy then
return send(msg_chat_id,msg_id,' ✧ عدد الاعضاء قليل لا يمكن تفعيل المجموعة  يجب ان يكون اكثر من :'..Redis:get(MARCOS..'Num:Add:Bot'),"md",true)  
end
if Redis:sismember(MARCOS.."ChekBotAdd",msg_chat_id) then
return send(msg_chat_id,msg_id,'\n* ✧ المجموعة -> {*['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*}\n ✧ تم تفعيلها مسبقا *',"md",true)  
else
if not msg.Asasy then
local UserInfo = bot.getUser(msg.sender_id.user_id)
for Name_User in string.gmatch(UserInfo.first_name, "[^%s]+" ) do
UserInfo.first_name = Name_User
break
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = Get_Chat.title, url = Info_Chats.invite_link.invite_link}, 
},
}
}
send(Sudo_Id,0,'*\n ✧ تم تفعيل جروب جديده \n ✧ من قام بتفعيلها -> {*['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')*} \n ✧ معلومات المجموعة :\n ✧ عدد الاعضاء -> '..Info_Chats.member_count..'\n ✧ عدد الادمنيه -> '..Info_Chats.administrator_count..'\n ✧ عدد المطرودين -> '..Info_Chats.banned_count..'\n ✧ عدد المقيدين -> '..Info_Chats.restricted_count..'*\n ✧ ['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')\n ✧ `'..msg_chat_id..'`',"md",true, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• رفع المالك والادمنيه •', data = msg.sender_id.user_id..'/addAdmins@'..msg_chat_id},
},
{
{text = '• قفل جميع الاوامر •', data =msg.sender_id.user_id..'/LockAllGroup@'..msg_chat_id},{text = '- ترتيب الاوامر •', data = msg.sender_id.user_id..'/trtep@'..msg_chat_id},
},
}
}
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.luatele == "chatMemberStatusCreator" then
Redis:sadd(MARCOS.."Ownerss:Group"..msg_chat_id,v.member_id.user_id) 
else
Redis:sadd(MARCOS.."Admin:Group"..msg_chat_id,v.member_id.user_id) 
end
end
end
Redis:set(MARCOS..'tagallgroup'..msg.chat_id,'open') 
Redis:set(MARCOS.."Status:Link"..msg_chat_id,true) 
Redis:set(MARCOS.."Reply:Source"..msg_chat_id,true) 
Redis:set(MARCOS.."Status:Games"..msg_chat_id,true) 
Redis:set(MARCOS.."replayallbot"..msg.chat_id,true)
Redis:set(MARCOS.."AlThther:Chat"..msg.chat_id,"true")
Redis:set(MARCOS.."Status:Welcome"..msg_chat_id,true) 
Redis:set(MARCOS.."AlThther:Chat"..msg.chat_id,"true")
Redis:set(MARCOS..'takforall'..msg.chat_id,'open') 
Redis:set(MARCOS.."Status:IdPhoto"..msg_chat_id,true) 
Redis:del(MARCOS.."spammkick"..msg.chat_id)
Redis:set(MARCOS.."Lock:edit"..msg_chat_id,true) 
Redis:sadd(MARCOS.."ChekBotAdd",msg_chat_id)
Redis:set(MARCOS.."Status:Id"..msg_chat_id,true) ;Redis:set(MARCOS.."Status:Reply"..msg_chat_id,true) ;Redis:set(MARCOS.."Status:ReplySudo"..msg_chat_id,true) ;Redis:set(MARCOS.."Status:BanId"..msg_chat_id,true) ;Redis:set(MARCOS.."Status:SetId"..msg_chat_id,true) 
return send(msg_chat_id,msg_id,'\n* ✧ المجموعة -> {*['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')*}\n ✧ تم تفعيل المجموعة *','md', true, false, false, false, reply_markup)
end
end

if text == 'تعطيل' and msg.Dev then
local Get_Chat = bot.getChat(msg_chat_id)
local Info_Chats = bot.getSupergroupFullInfo(msg_chat_id)
local Info_Members = Redis:smembers(MARCOS.."Admin:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id,"* ✧ الـبوت مـعطـل مـن قبـل*","md",true)  
end
Redis:del(MARCOS.."Admin:Group"..msg_chat_id) 
if not Redis:sismember(MARCOS.."ChekBotAdd",msg_chat_id) then
return send(msg_chat_id,msg_id,'\n* ✧ الـبوت مـعطـل مـن قبـل*',"md",true)  
else
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text="غادر 🚶",data="/LeaveBotCmd:"..msg.sender_id.user_id},{text="تفعيل 🔄",data=msg.sender_id.user_id..'/onlinebotcmd'..msg_chat_id},
},
{
{text = '• قناة السورس •',url='t.me/'..chsource..''},
},
}
}
if not msg.Asasy then
local UserInfo = bot.getUser(msg.sender_id.user_id)
for Name_User in string.gmatch(UserInfo.first_name, "[^%s]+" ) do
UserInfo.first_name = Name_User
break
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = Get_Chat.title, url = Info_Chats.invite_link.invite_link}, 
},
}
}
send(Sudo_Id,0,'*\n ✧ تم تعطيل جروب جديده \n ✧ من قام بتعطيلها -> {*['..UserInfo.first_name..'](tg://user?id='..msg.sender_id.user_id..')*} \n ✧ معلومات المجموعة :\n ✧ عدد الاعضاء -> '..Info_Chats.member_count..'\n ✧ عدد الادمنيه -> '..Info_Chats.administrator_count..'\n ✧ عدد المطرودين -> '..Info_Chats.banned_count..'\n ✧ عدد المقيدين -> '..Info_Chats.restricted_count..'*',"md",true, false, false, false, reply_markup)
end
Redis:srem(MARCOS.."ChekBotAdd",msg_chat_id)
return send(msg_chat_id,msg_id,'\n*تم تعطيل المجموعه بنجاح ✅\nتم تنزيل '..#Info_Members..' من الادمن ✧*','md',true)
end
end

if chat_type(msg.chat_id) == "GroupBot" and Redis:sismember(MARCOS.."ChekBotAdd",msg_chat_id) then
Redis:incr(MARCOS..'Num:Message:User'..msg.chat_id..':'..msg.sender_id.user_id) 

if text then
local GetMsg = Redis:incr(MARCOS..'Num:Message:User'..msg.chat_id..':'..msg.sender_id.user_id) 
Redis:hset(MARCOS..':GroupUserCountMsg:'..msg.chat_id,msg.sender_id.user_id,GetMsg)
local UserInfo = bot.getUser(msg.sender_id.user_id) 
if UserInfo.first_name then
NameLUser = UserInfo.first_name
else
NameLUser = UserInfo.first_name
end
NameLUser = NameLUser
NameLUser = NameLUser:gsub("]","")
NameLUser = NameLUser:gsub("[[]","")
Redis:hset(MARCOS..':GroupNameUser:'..msg.chat_id,msg.sender_id.user_id,NameLUser)
end


if text == "ترند" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص 〘 '..Controller_Num(8)..' 〙* ',"md",true)  
end
GroupAllRtba = Redis:hgetall(MARCOS..':GroupUserCountMsg:'..msg.chat_id)
GetAllNames  = Redis:hgetall(MARCOS..':GroupNameUser:'..msg.chat_id)
GroupAllRtbaL = {}
for k,v in pairs(GroupAllRtba) do table.insert(GroupAllRtbaL,{v,k}) end
Count,Kount,i = 8 , 0 , 1
for _ in pairs(GroupAllRtbaL) do Kount = Kount + 1 end
table.sort(GroupAllRtbaL, function(a, b) return tonumber(a[1]) > tonumber(b[1]) end)
if Count >= Kount then Count = Kount end
Text = "* ✧ قائمه ترند التفاعل 📊 \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*\n"
for k,v in ipairs(GroupAllRtbaL) do
if i <= Count then  Text = Text..i.."->『 ["..(GetAllNames[v[2]] or "خطأ بالأسـم").."](tg://user?id="..v[2]..") 』->『 *"..v[1].."* 』 \n" end ; i=i+1
end
return send(msg.chat_id,msg.id,Text,"md")
end
if text == "ترند المجموعةات" or text == "ترند المجموعةات" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص 〘 '..Controller_Num(8)..' 〙* ',"md",true)  
end
GroupAllRtba = Redis:hgetall(MARCOS..':GroupUserCountMsg:groups')
GetAllNames  = Redis:hgetall(MARCOS..':GroupNameUser:groups')
GroupAllRtbaL = {}
for k,v in pairs(GroupAllRtba) do table.insert(GroupAllRtbaL,{v,k}) end
Count,Kount,i = 8 , 0 , 1
for _ in pairs(GroupAllRtbaL) do Kount = Kount + 1 end
table.sort(GroupAllRtbaL, function(a, b) return tonumber(a[1]) > tonumber(b[1]) end)
if Count >= Kount then Count = Kount end
Text = "* ✧ قائمه ترند المجموعةات 📊 \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*\n"
for k,v in pairs(GroupAllRtbaL) do
if v[2] and v[2]:match("(-100%d+)") then
local InfoChat = bot.getChat(v[2])
local InfoChats = bot.getSupergroupFullInfo(v[2])
if InfoChats.code ~= 400 then
var(InfoChats.invite_link)
if not InfoChats.invite_link then
linkedid = "["..InfoChat.title.."]" or "خطأ بالأسـم"
else
linkedid = "["..InfoChat.title.."]("..InfoChats.invite_link.invite_link..")"
end
if i <= Count then  
Text = Text..i.."->『 "..(linkedid).." 』->『 *"..v[1].."* 』 \n" 
end ; 
i=i+1
end
end
end
return send(msg.chat_id,msg.id,Text,"md",true)
end
if text and msg.chat_id then
local GetMsg = Redis:incr(MARCOS..'MARCOS:MsgNumbergroups'..msg.chat_id) or 1
Redis:hset(MARCOS..':GroupUserCountMsg:groups',msg.chat_id,GetMsg)
end

if text== 'مسح موسيقى' and msg.reply_to_message_id then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)  
Redis:del(MARCOS..'Text:Games:audio'..Message_Reply.content.audio.audio.remote.id)  
Redis:srem(MARCOS.."audio:Games:Bot",Message_Reply.content.audio.audio.remote.id)  
return send(msg.chat_id, msg.id,' ✧ تم مسح الموسيقى ومسح الجواب .')
end


if text== 'اضف موسيقى' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'start')
return send(msg.chat_id, msg.id,' ✧ ارسل الموسيقى الان ...')
end

if text== ("قائمه الموسيقى") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
local list = Redis:smembers(MARCOS.."audio:Games:Bot")
if #list == 0 then
return send(msg.chat_id, msg.id, " ✧ لا يوجد اسئله")
end
for k,v in pairs(list) do
bot.sendAudio(msg_chat_id, msg.id,v , '', "md") 
end
end

if text== ("مسح قائمه الموسيقى") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
local list = Redis:smembers(MARCOS.."audio:Games:Bot")
if #list == 0 then
return send(msg.chat_id, msg.id, " ✧ لا يوجد موسيقى")
end
for k,v in pairs(list) do
Redis:del(MARCOS..'Text:Games:audio'..v)  
Redis:srem(MARCOS.."audio:Games:Bot",v)  
end
return send(msg.chat_id, msg.id, " ✧ تم مسح جميع الموسيقى")
end

if text== 'موسيقى' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."audio:Games:Bot")
if #list == 0 then
return send(msg.chat_id, msg.id, " ✧ لا يوجد موسيقى")
end
local quschen = list[math.random(#list)]
local GetAnswer = Redis:get(MARCOS..'Text:Games:audio'..quschen)
Redis:set(MARCOS..'Games:Set:Answer'..msg.chat_id,GetAnswer)
bot.sendAudio(msg_chat_id, msg.id,quschen , '', "md") 
return false
end
local Bot_Name = (Redis:get(MARCOS.."Name:Bot") or "ماركوس")
if text and  text:match("^"..Bot_Name.." اتفل(.*)$") and msg.Managers then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then
send(msg.chat_id,msg.id,'اوك سيدي 🌝 ✧')
send(msg.chat_id,msg.reply_to_message_id,'لك شنو هاذه ويهك ختفوووووووووو💦💦️️ بنص ويهك 😹') 
else
end
end
if text and  text:match("^صيحه$") and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
local FlterName = UserInfo.first_name
local seha = {
"فينك يقمر تعاله اتكلم معانا 🌚♥️",
"مسا يقمر 🌚🤍",
"اللمه ناقصاك يروحي 🌚♥️",
"فينك مختفي يجميل 👈👉",
"نورنا يعمري 🌚♥️"
}
 
local msg_id = msg.reply_to_message_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape('☁ ɴᴀᴍᴇ -> ['..FlterName..'](tg://user?id='..Message_Reply.sender_id.user_id..')'..'\n'..seha[math.random(#seha)]).."&reply_to_message_id="..msg_id.."&parse_mode=markdown")
return false
end
end

if text and  text:match("^رزله$") and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then
local tzl = {
"ميستاهل اتعب روحي ويا لانه عار 😐",
"ولك هيو لتندك بسيادك لو بهاي 👈👞 انت شايف وجهك تكول فحمايه 🌚 وجه الطاوه يلا دي منا🏌️😡",
"عوفه حبيبي هذا جاهل يضل يبجي🤣",
"لك حيوان ادبسز انت شدخلك \nانت حياتك كلهه تروح تاكلك ماعون تمن وتشريب ولحم وتكعد وتسكت 😕🚶",
"شوف هذا العار يريدني ارزلك يروحلك فدوه 🥰💖",
"لك دي وتفو بعد لتندك بتاج راسك خوش حمبقلبي 🏌️",
"تعال هيوو ✊😏 شو طالعه عينك ولسانك طويل سربوت  اشو تعال بله شنو هذا ويهك هاذ 😳 كول بلعباس😅",
"روح من يمي لا الطمك سطره اكلب جهرتك 🤬بعدك كتكوت روح العب بعيد ابني🧑‍🦯",
"لك شلون ارزل تاج راسك يا غبي يلا اشطح??☹",
"شبيك انت تظل ملطلط شكدك بعد تصير شايلين عقلك مخلين مكانه قندره😹👊 ",
"لتحجي ولا حرف فهمت ترا بالنعال واكطعه ع راسك وجه الصخل🐐😡 ",
"انت طيب وغالي عليه وهذا يكولي رزله روح طيح حظه😅 ",
}

return send(msg.chat_id,msg.reply_to_message_id,tzl[math.random(#tzl)]) 
end 
end

if text and  text:match("^بوسه$") and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then
local bos = {
"امممووااهحح شهلعسل🥺🍯💘",
"مابوس واحد خايس مثلك 😁",
"يععع تلعب نفسي 😷",
"مابوس خدك مالح 😹👌",
"امممووااهحح شهلعسل🥺🍯💘",
"ولي مابوس واحد عاوي مثلك☹️",
"ممممح😘ححح😍😍??",
"ممممح💋ححح مو خدود ضيم🥰",
}

return send(msg.chat_id,msg.reply_to_message_id,bos[math.random(#bos)]) 
end
end

if text and  text:match("^بوسه$") and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) or text and  text:match("^بوسني$")  and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local bos = {
"امممووااهحح شهلعسل🥺🍯💘",
"مابوس واحد خايس مثلك 😁",
"يععع تلعب نفسي 😷",
"مابوس خدك مالح 😹??",
"امممووااهحح شهلعسل🥺🍯💘",
"ولي مابوس واحد عاوي مثلك☹️",
"ممممح??ححح😍😍💋",
"ممممح💋ححح مو خدود ضيم🥰",
}
return send(msg.chat_id,msg.id,bos[math.random(#bos)]) 
end
if text== "شنو رئيك بهذا" or text== "شنو رئيك بي" or text== "شنو رئيك بهاذه" or text== "شنو رئيك بهذا" or text== "شنو رأيك بهذا" or text== "شنو رايك بهذا" then 
if  not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then
local he = {"هـذا شـخص حـباب بـس وكـح وشـويـه زاحـف 😂 عـمريي كـله لـيضل يـزحف تـرا فـضـحنا 😂💔","هذا الحلو ..شخـص ايـجابـي ومـحبـوب🥺واللي ميـحبه ادكـه بالنـعال 🤭😂صـح مـرات يـجفـص بـس يـبقـى مـحبوب 🥺♥️","لوكي وزاحف قبل شويه زحفلي وحضرتـه 🤪","خــوش ولـد و ورده مـال الله 💖","يلعـــب ع البنـــات 🙄","واحـــد زايعتــه الكـــاع 😶😁","صــاك يخبــل وشخصيــه😘","محلــو وشواربــه جنها مكناسـه??","لـك ضلعــي هــذا امــوت عليـه 🌝","هــو غيــر الحب مـال انــي 🤓❤️","مــو خــوش ولــد صراحــه ☹️","ادبســز وميحتــرم البنــات😏","فــد واحـــد قـــذر 😁","ماطيقــه كل ما الزمـه ريحتــه  تكتــل 😂🤪","ولـد طيـب مـن اهــل اللـه 😁",
}
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
local FlterName = UserInfo.first_name
local msg_id = msg.reply_to_message_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape('- ['..FlterName..'](tg://user?id='..Message_Reply.sender_id.user_id..')'..'\n'..he[math.random(#he)]).."&reply_to_message_id="..msg_id.."&parse_mode=markdown")
end
end
end
if text== "انطي هديه" and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then     
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.reply_to_message_id then

local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
local FlterName = UserInfo.first_name
local geft = {
"الف مبروك 👏 هديتك بيذنجان🍆سوي تبسي واندعيلي 🤲😹",
"الف مبروك 👏 هديتك نوتيلا 🍫 \nيا كيكه انت 🥰😹",
"الف مبروك 🥰 هديتك شفقه 🧢 البسهه الشمس تسمط راسك 😁😹",
"الف مبروك 👏 هديتك راس بصل 🧅 اكله وابجي الدموع تريح القلب 😁😹",
"الف مبروك 👏 هديتك حذاء 👞 تلبسهه لو اكطعهه على راسك 🥰😹",
"الف مبروك 👏 هديتك شده 💸\n بس مو تتكبر على اصدقائك 😁😹",
"الف مبروك 👏 هديتك تاج ذهب 👑\n يا تاج وباج انت 😉🥰",
"الف مبروك 🥰 هديتك ساعه 🕰  بيها\nمنبه تكعدك الصبح 😁😹",
"الف مبروك 👏 هديتك خاتم 💍 \nواعزمنه بعرسك 💃😹",
"الف مبروك 👏 هديتك صابونه 🧼 والمي بلاش وروح اسبح يالوصخ 😁😹"
}

local msg_id = msg.reply_to_message_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape('- ['..FlterName..'](tg://user?id='..Message_Reply.sender_id.user_id..')'..'\n'..geft[math.random(#geft)]).."&reply_to_message_id="..msg_id.."&parse_mode=markdown")
return false
end
end
if text== "شنو رئيك بهاي" or text=="شنو رئيك بيه" or text== "شنو رئيك بهاذش" or text== "شنو رأيك بهاي" or text== "شنو رايك بهاي" then 
if msg.reply_to_message_id then
if not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then     
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
local FlterName = UserInfo.first_name
local she = {"الكبـد مــال اني هيـه🥰","ختولـي محبهــه جنهه فخريـه🤣","خانتنـــي ويـــا صديقـــي 😔","بس لــو الكفها الا اعضهــا 💔","خــوش بنيــه بس عـدهه سوالــف  ماصخــه وهيـه تــدري بنفسها 😁🤪","جذابــه ومنافقــه سوتلـي مشكله ويـا الحـب مالتـي😑","اووووووووف امـــوت  عليهـه💖","ديــرو بالكــم منها تلعــب ع الشبـاب 😶 ضحكـت ع واحـد قطتــه ايفــون 11 بـــرو☹","صديقتـي واختـي وروحـــي وحياتـي😊","فــد وحــده خبــله ولسانهه متبـري منهه😁","معـــدله ونازكــهه وعيونهـه تمــوت 😊","ام سحــوره سحـرت اخويــه وطيـرت عقلــه😭","حبيبــة كلبـي هايـه العشـق🥰","بلــه هـايـه هــم جهــره تسأل عليها ؟🤣","بربــك انت والله فــارغ وبطـــران ومعنـدك شي تسوي جـاي تسأل ع بنــات العالم ولــي يله ☹️","يااخــي بنيه حبوبــه وكلبهــه طيــب فديتهــه😍","هــاي البقـره مقدسـه مجرد ماتكلهه بس يجونـك بالتفـك منيـن ويـن ليـش بيـش عيـش طيـط طيـط طيـط 🤣🏃‍♂️",
}
local msg_id = msg.reply_to_message_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape('- ['..FlterName..'](tg://user?id='..Message_Reply.sender_id.user_id..')'..'\n'..she[math.random(#she)]).."&reply_to_message_id="..msg_id.."&parse_mode=markdown")
end
end
end
if text=="اتفل" or text=="تفل" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.Admin then 
return send(msg.chat_id,msg.id,'ختفوووووووووو💦💦️️')
else 
return send(msg.chat_id,msg.id," ✧ انجب ما اتفل عيب 😼🙌🏿") 
end
end

if text== "اضف سؤال كت" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."gamebot:Set:Manager:rd"..msg.sender_id.user_id..":"..msg.chat_id,true)
return send(msg.chat_id,msg.id,"ارسل السؤال الان ")
end
if text== "مسح سؤال كت" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."gamebot:Set:Manager:rdd"..msg.sender_id.user_id..":"..msg.chat_id,true)
return send(msg.chat_id,msg.id,"ارسل السؤال ")
end
if Redis:get(MARCOS.."tast"..msg.sender_id.user_id) == "botttt" then
local nspp = {"يراجل قول كلام غير كدا 😹","انت كداب يا ابو صلاح 😹","كلامك صحيح 👍","انت صح يواد 😊","اي تذب ده كلو 😒","الرجل ده صح 🙈❤️","الرجل ده كداب 😂",}
local rdbhoto = nspp[math.random(#nspp)]
xl = '*〘  '..text..'  〙*\n* '..rdbhoto..' *'
bot.sendText(msg_chat_id,msg_id,xl,"md",true) 
Redis:del(MARCOS.."tast"..msg.sender_id.user_id) 
end
if text == "صراحه" or text == "صرحه" then
Redis:set(MARCOS.."tast"..msg.sender_id.user_id,"botttt") 
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
local texting = {"صراحه  -›  صوتك حلوة؟",
"صراحه  -›  التقيت الناس مع وجوهين ✧ ",
"صراحه  -›  شيء وكنت تحقق اللسان ✧ ",
"صراحه  -›  أنا شخص ضعيف عندما ✧ ",
"صراحه  -›  هل ترغب في إظهار حبك ومرفق لشخص أو رؤية هذا الضعف ✧ ",
"صراحه  -›  يدل على أن الكذب مرات تكون ضرورية شي ✧ ",
"صراحه  -›  أشعر بالوحدة على الرغم من أنني تحيط بك كثيرا ✧ ",
"صراحه  -›  كيفية الكشف عن من يكمن عليك ✧ ",
"صراحه  -›  إذا حاول شخص ما أن يكرهه أن يقترب منك ويهتم بك تعطيه فرصة ✧ ",
"صراحه  -›  أشجع شيء حلو في حياتك ✧ ",
"صراحه  -›  طريقة جيدة يقنع حتى لو كانت الفكرة خاطئة توافق ✧ ",
"صراحه  -›  كيف تتصرف مع من يسيئون فهمك ويأخذ على ذهنه ثم ينتظر أن يرفض ✧ ",
"صراحه  -›  التغيير العادي عندما يكون الشخص الذي يحبه ✧ ",
"صراحه  -›  المواقف الصعبة تضعف لك ولا ترفع ✧ ",
"صراحه  -›  نظرة و يفسد الصداقة ✧ ",
"صراحه  -›  ‏‏إذا أحد قالك كلام سيء بالغالب وش تكون ردة فعلك ✧ ",
"صراحه  -›  شخص معك بالحلوه والمُره ✧ ",
"صراحه  -›  ‏هل تحب إظهار حبك وتعلقك بالشخص أم ترى ذلك ضعف ✧ ",
"صراحه  -›  تأخذ بكلام اللي ينصحك ولا تسوي اللي تبي ✧ ",
"صراحه  -›  وش تتمنى الناس تعرف عليك ✧ ",
"صراحه  -›  ابيع المجرة عشان ✧ ",
"صراحه  -›  أحيانا احس ان الناس ، كمل ✧ ",
"صراحه  -›  مع مين ودك تنام اليوم ✧ ",
"صراحه  -›  صدفة العمر الحلوة هي اني ✧ ",
"صراحه  -›  الكُره العظيم دايم يجي بعد حُب قوي تتفق ✧ ",
"صراحه  -›  صفة تحبها في نفسك ✧ ",
"صراحه  -›  ‏الفقر فقر العقول ليس الجيوب  ، تتفق ✧ ",
"صراحه  -›  تصلي صلواتك الخمس كلها ✧ ",
"صراحه  -›  ‏تجامل أحد على راحتك ✧ ",
"صراحه  -›  اشجع شيء سويتة بحياتك ✧ ",
"صراحه  -›  وش ناوي تسوي اليوم ✧ ",
"صراحه  -›  وش شعورك لما تشوف المطر ✧ ",
"صراحه  -›  غيرتك هاديه ولا تسوي مشاكل ✧ ",
"صراحه  -›  ما اكثر شي ندمن عليه ✧ ",
"صراحه  -›  اي الدول تتمنى ان تزورها ✧ ",
"صراحه  -›  متى اخر مره بكيت ✧ ",
"صراحه  -›  تقيم حظك من عشره ✧ ",
"صراحه  -›  هل تعتقد ان حظك سيئ ✧ ",
"صراحه  -›  شـخــص تتمنــي الإنتقــام منـــه ✧ ",
"صراحه  -›  كلمة تود سماعها كل يوم ✧ ",
"صراحه  -›  **هل تُتقن عملك أم تشعر بالممل ✧ ",
"صراحه  -›  هل قمت بانتحال أحد الشخصيات لتكذب على من حولك ✧ ",
"صراحه  -›  متى اخر مرة قمت بعمل مُشكلة كبيرة وتسببت في خسائر ✧ ",
"صراحه  -›  ما هو اسوأ خبر سمعته بحياتك ✧ ",
"‏صراحه  -› هل جرحت شخص تحبه من قبل  ✧ ",
"صراحه  -›  ما هي العادة التي تُحب أن تبتعد عنها ✧ ",
"‏صراحه  -› هل تحب عائلتك ام تكرههم ✧ ",
"‏صراحه  -›  من هو الشخص الذي يأتي في قلبك بعد الله – سبحانه وتعالى- ورسوله الكريم – صلى الله عليه وسلم ✧ ",
"‏صراحه  -›  هل خجلت من نفسك من قبل ✧ ",
"‏صراحه  -›  ما هو ا الحلم  الذي لم تستطيع ان تحققه ✧ ",
"‏صراحه  -›  ما هو الشخص الذي تحلم به كل ليلة ✧ ",
"‏صراحه  -›  هل تعرضت إلى موقف مُحرج جعلك تكره صاحبهُ ✧ ",
"‏صراحه  -›  هل قمت بالبكاء أمام من تُحب ✧ ",
"‏صراحه  -›  ماذا تختار حبيبك أم صديقك ✧ ",
"‏صراحه  -› هل حياتك سعيدة أم حزينة ✧ ",
"صراحه  -›  ما هي أجمل سنة عشتها بحياتك ✧ ",
"‏صراحه  -›  ما هو عمرك الحقيقي ✧ ",
"‏صراحه  -›  ما اكثر شي ندمن عليه ✧ ",
"صراحه  -›  ما هي أمنياتك المُستقبلية ✧ ‏",
"صراحه  -› هل قبلت فتاه ✧ "
}
return bot.sendText(msg_chat_id,msg_id,texting[math.random(#texting)],'md')
end
end
if text== 'كت تويت' or text== 'كت' or text == "تويت" then
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then 
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."gamebot:List:Manager")
if #list ~= 0 then
local quschen = list[math.random(#list)]
return send(msg.chat_id,msg.id,quschen)
end
end
end
if text == 'اضف اسئله كت' then
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
local list = {

' ما هو الشيء الذي تكرهه بشدة؟ ولماذا؟',
'  هل من الممكن نسيان شخص ظلمك؟',
'  هل تقبل الزواج بشخص غني لكنه متعدد العلاقات؟',
'  شهر من أشهر العام له ذكرى جميلة معك؟',
'  لو خيروك بين البقاء ليوم كامل في بيت مهجور أو في غابة موحشة.',
'  ما هي الصفة التي تود تغييرها في الشخص الآخر؟ وهل حاولت ذلك من قبل؟ وما النتيجة التي حصلت عليها؟',
'  هل وقعت في حب شخص من مواقع التواصل الإجتماعي؟',
'  هل تملك صديق كأخ؟ أو هل تملك أخ كالصديق؟ وهل يعرف جميع أسرارك؟',
'  ما هو الشخص الذي لا تستطيع أن ترفض له أي طلب؟',
'  هل تشعر أن هنالك مَن يُحبك؟',
'  هل يمكنك أن تتولى أمر الأعمال المنزلية أم أنك سوف تفشل في ذلك؟',
'  هل كذبت على أحد والديك؟',
'  هل يمكنك أن تكون صريح تمامًا اتجاه حبيبك / حبيبتك؟ أم لا بد من الكثير من المجاملات؟',
'  متى اخر مره حدث خلاف بينكما؟ وعلى ماذا كان هذا الخلاف؟ وهل تم حله بشكل تام؟',
'  هل تُؤمن بضرب الأطفال في التربية؟',
'  هل تعتقد أن حبيبتك / حبيبك يفكر بك الآن؟ أم هل تظن أنه منشغل بأمر آخر  .ام انك سنكل؟',
'  كيف تُعبر عن فرحتك عندما تكون لوحدك؟',
'  إذا خيروك أن تُعيد تسمية نفسك فهل تقبل باسمك أم تقوم بتغييره؟',
'  هل حاربت من أجل شخص ما من قبل؟',
'  ما هي هوايتك في الحياة؟',
'  هل تقبل الارتباط بشخص فقير لكنه شديد الجمال؟',
'  كم من الوقت تستغرق قبل الخروج من المنزل ؟',
'  من هو الشخص الذي يُمثل نقطة ضعفك؟',
'  لماذا انتهت أول قصة حب في حياتك؟',
'  ‏ ماذا ستختار من الكلمات لتعبر لنا عن حياتك التي عشتها الى الآن؟',
'  متى كانت المرة الأخيرة التي كذبت فيها؟',
'  ما هي أجمل سنة عشتها بحياتك؟',
'  كنت السبب في أذى شخص ما؟',
'  هل رأي الآخرين مهم بالنسبة لك؟',
'  هل تملك صديق يتقن الغناء؟',
'  ما هي اللعبة المفضلة لديك؟',
'  ما هي مواصفات شريك حياتك؟',
'  هل يُمكن أن تكذب كذبة كبيرة للخروج من مأزق؟',
'  إذا جاء شريك حياتك وطلب الانفصال، فماذا يكون ردك وقتها؟',
'  هل أنت شخص غيور؟',
'  هل انت تدرس؟',
'  ‏ماذا ستختار من الكلمات لتعبر لنا عن حياتك التي عشتها الى الآن؟',
'  هل ما زلت تعتقد ان هنالك حب حقيقي؟',
'  هل أنت من الأشخاص المحظوظين أم أن سوء الحظ يرافقك؟',
"هل أنت محبوب من زملائك في العمل؟",
"هل يمكن لك التخلي عن حبك أمام كرامتك؟",
"إذا وجدت ورقة بيضاء فماذا ترسم لتعبر عن حالتك النفسية؟",
"لو تم وضعك أما ثلاث خيارات ( المال، الصحة، الرضا) أيهما تختار؟",
"هل شعرتي بالندم من قبل بسبب ثقتك في أحد الأشخاص؟",
"هل أنت مع الخطبة عن حب أم مع الخطبة عن طريق الأهل؟",
"من وجهة نظرك هل يأتي الحب بعد الزواج؟",
"ماذا لو كنت ستختار بين رحلة إلى الغابات والجبال أو رحلة إلى البحر؟",
"هل يمكنك الوقوع في الحب عبر الإنترنت؟,",
"هل سبق ورسبت في المدرسة؟ وكم عدد المرات؟",
"هل لديك فوبيا من شيء معين؟",
"إذا دخلت مُسابقة وكسبت 5 مليون جنيه ماذا تفعل بهم؟",
"هل يمكن أن تكره شخص كنت تحبه؟ أو تحب شخص كنت تكرهه؟",
"من هم أصدقائك المقربين منك؟",
"كم ساعة تنام في اليوم؟",
"لماذا تتمنى أن يعود الزمن؟ هل تفتقد أي شيء أو أي شخص هناك؟",
"هل يمكن لكي أن تكتفي قبل النزول من المنزل بغسيل الوجه فقط دون وضع الميكاب؟",
"هل كنت تخفي المعلومات المهمة عن زملائك في الدراسة؟",
"هل تستطيع أن تعيش بدون أصدقاء؟",
"ماذا تختار حبيبك أم صديقك؟",
"من هو الشخص الذي تستطيع أن تحكي له أي مشكلة بدون خجل؟",
"إذا تركك من تحب، هل تعود إليه مرة أخرى أم تتركهُ وتنتظر وقت عودته؟",
"هل سبق وأن تعرضت للسرقة من أحد قريب لك؟",
"هل من الممكن أن تضر شخصاً لمجرد أنك تكرهه؟",
"ما هو الحيوان الذي تحب العناية به؟,",
"اسم اغنية قريبة على قلبك؟",
"هل تستطيع اخبارنا معلومة هامة عنك لم يعرفها أحد من المتواجدين هنا؟",
"هل تستطيع التنازل عن شيء تفضله من أجل إسعاد الآخرين؟",
"أغمض عينيك ما هو المكان الذي تخيلت نفسك فيه؟",
"هل من الممكن أن ترتكب جريمة ضد شخص حتى لا يكشف سرك؟",
"هل يمكنك التخلي عن هدفك في سبيل شخص؟",
"ما هو البرج الخاص بك؟",
"لو كان هناك أمامك اختيارين أحدهما الزواج والإستقرار معي هنا والآخر السفر والعمل بالخارج، أيهما تختار؟",
"هل سبق وضربت أحدهم؟ ولماذا فعلت ذلك؟"
}
for k,v in pairs(list) do
Redis:sadd(MARCOS.."gamebot:List:Manager",v)
end
return send(msg_chat_id,msg_id,'\n* ✧ تم اضافه اسئله كت* ',"md",true)  
end
if text == "تفعيل الصوتيات العامه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'lock_geamsAudio'..msg.chat_id) then 
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ الصوتيات العامه بالتاكيد تم تفعيلها\nꪤ" )
else 
Redis:del(MARCOS..'lock_geamsAudio'..msg.chat_id) 
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ تم تفعيل الصوتيات العامه \nꪤ" )
end 
end
if text == "تعطيل الصوتيات العامه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'lock_geamsAudio'..msg.chat_id) then 
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ الصوتيات العامه بالتأكيد معطله\nꪤ" )
else
Redis:set(MARCOS..'lock_geamsAudio'..msg.chat_id,true)  
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ تم تعطيل الصوتيات العامه\nꪤ" )
end   
end

if text == "تفعيل الصوتيات" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'lock_geamsAudio1'..msg.chat_id) then 
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ الصوتيات بالتاكيد تم تفعيلها\nꪤ" )
else 
Redis:del(MARCOS..'lock_geamsAudio1'..msg.chat_id) 
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ تم تفعيل الصوتيات \nꪤ" )
end 
end
if text == "تعطيل الصوتيات" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'lock_geamsAudio1'..msg.chat_id) then 
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ الصوتيات بالتأكيد معطله\nꪤ" )
else
Redis:set(MARCOS..'lock_geamsAudio1'..msg.chat_id,true)  
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ تم تعطيل الصوتيات\nꪤ" )
end   
end

if text == "تفعيل تنبيه الاسماء" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'lock_chengname'..msg.chat_id) then 
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ تنبيه الاسماء بالتاكيد تم تفعيلها\nꪤ" )
else 
Redis:del(MARCOS..'lock_chengname'..msg.chat_id) 
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ تم تفعيل تنبيه الاسماء \nꪤ" )
end 
end
if text == "تعطيل تنبيه الاسماء" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'lock_chengname'..msg.chat_id) then 
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ تنبيه الاسماء بالتأكيد معطله\nꪤ" )
else
Redis:set(MARCOS..'lock_chengname'..msg.chat_id,true)  
return send(msg_chat_id,msg_id," ✧ أهلا عزيزي "..msg.Name_Controller.."\n ✧ تم تعطيل تنبيه الاسماء\nꪤ" )
end   
end

if text and text:match('^ذيع بالتثبيت (%d+)$') then
local Chatid = text:match('^ذيع بالتثبيت (%d+)$')
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."Chatid","-"..Chatid) 
Redis:setex(MARCOS.."Broadcasting:Groups:Pin" .. msg.chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
bot.sendText(msg.chat_id,msg.id,[[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, حسنا ارسل الان الاذاعه ،
, ملصق ، متحركه ، صوره ،
, فيديو بصمه ، الفيديو ، ملف ،
, بصمه ، صوت ، رساله ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
, ليتم نشرها للجروبات ،
, للخروج ارسل ( الغاء ) ،
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]],"md",true)  
return false
end

if text and text:match('^ذيع (-100%d+)$') and tonumber(msg.reply_to_message_id) ~= 0 then
local Chatid = text:match('^ذيع (-100%d+)$') 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end 
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local Get_Chat = bot.getChat(Chatid)
if not data.id then
send(msg_chat_id,msg_id,'✧ لا توجد جروب في البوت بهذا الايدي')
return false
end
send(Chatid,0,Message_Reply.content.text.text)
send(msg_chat_id,msg_id,'✧ تم الاذاعه الى  -> '..Get_Chat.title..'\n ')
end 

if text and text:match('^تفعيل الوضع المدفوع (-100%d+)$') then
local Chatid = text:match('^تفعيل الوضع المدفوع (-100%d+)$')
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
local Get_Chat = bot.getChat(Chatid)
if not data.id then
send(msg_chat_id,msg_id,'✧ لا توجد جروب في البوت بهذا الايدي')
return false
end
Redis:sadd(MARCOS.."BotFree:Group:",Chatid)
send(msg_chat_id,msg_id,'✧ تم تفعيل الوضع المدفوع بنجاح على -> ['..Get_Chat.title..']')
end 
if text and text:match('^الغاء الوضع المدفوع (-100%d+)$') then
local Chatid = text:match('^الغاء الوضع المدفوع (-100%d+)$')
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:srem(MARCOS.."BotFree:Group:",Chatid)
send(msg_chat_id,msg_id,'✧ تم الغاء الوضع المدفوع عن المجموعه ')
end 

if text and text:match('^حظر جروب (-100%d+)$') then
local Chatid = text:match('^حظر جروب (-100%d+)$')
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
local Get_Chat = bot.getChat(Chatid)
if not data.id then
send(msg_chat_id,msg_id,'✧ لا توجد جروب في البوت بهذا الايدي')
return false
end
bot.leaveChat(Chatid)
Redis:sadd(MARCOS.."Black:listBan:",Chatid)
send(msg_chat_id,msg_id,'✧ تم حظر المجموعه -> ['..Get_Chat.title..']\n ✧ وتم مغادره البوت من المجموعه')
end 
if text and text:match('^الغاء حظر جروب (-100%d+)$') then
local Chatid = text:match('^الغاء حظر جروب (-100%d+)$')
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
Redis:srem(MARCOS.."Black:listBan:",Chatid)
send(msg_chat_id,msg_id,'- تم الغاء حظر المجموعه ')
end 

if text == 'الروليت' then
if not Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
return false
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local xxffxx = 'اهلا بك في لعبه الروليت يجب انضمام 3 لاعبين فقط'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = ' ✧ اضغط للانضمام في اللعبه', data = '/joinerolet'},
},
}
}
Redis:del(MARCOS..'rolet:list'..msg.chat_id) 
send(msg_chat_id,msg_id,xxffxx,"md",false, false, false, false, reply_markup)
end
if text == "اضف سؤال" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,true)
return send(msg_chat_id,msg_id,"ارسل السؤال الان ")
end
if text == "مسح سؤال" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,'truedel')
return send(msg_chat_id,msg_id,"ارسل السؤال الان ")
end
if text == 'الاسئله المضافه' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
local list = Redis:smembers(MARCOS.."gamebot:new1")
t = " ✧ الاسئله المضافه ↑↓ \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
t = t..""..k.."- (["..v.."])\n"
end
if #list == 0 then
t = " ✧ لا يوجد اسئله"
end
return send(msg_chat_id,msg_id,t,"md")
end

if text == 'مسح الاسئله المضافه' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."gamebot:new1")
return send(msg_chat_id,msg_id,"تم مسح الاسئله","md")
end

if text == "تفعيل الاوامر" then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."Status:Games"..msg_chat_id,true) 
Redis:set(MARCOS..'tagallgroup'..msg.chat_id,'open') 
Redis:set(MARCOS..'takforall'..msg.chat_id,'open') 
Redis:del(MARCOS.."knele"..msg.chat_id)
Redis:set(MARCOS.."Status:Link"..msg_chat_id,true) 
Redis:set(MARCOS.."Status:Welcome"..msg_chat_id,true) 
Redis:set(MARCOS.."Status:BanId"..msg_chat_id,true) 
Redis:set(MARCOS.."Status:ReplySudo"..msg_chat_id,true) 
Redis:set(MARCOS.."Reply:Source"..msg_chat_id,true) 
Redis:set(MARCOS.."Status:Reply"..msg_chat_id,true) 
Redis:set(MARCOS.."Status:IdPhoto"..msg_chat_id,true) 
Redis:set(MARCOS.."Status:Id"..msg_chat_id,true) 
Redis:set(MARCOS.."Status:SetId"..msg_chat_id,true) 
Redis:set(MARCOS.."Status:KickMe"..msg_chat_id,true) 
Redis:set(MARCOS.."replayallbot"..msg.chat_id,true)
Redis:del(MARCOS.."amrthshesh"..msg.chat_id)
Redis:del(MARCOS.."spammkick"..msg.chat_id)
Redis:del(MARCOS.."intg"..msg.chat_id)
Redis:del(MARCOS.."kadmeat"..msg.chat_id)
Redis:del(MARCOS.."zhrfa"..msg.chat_id)
Redis:del(MARCOS.."brjj"..msg.chat_id)
Redis:del(MARCOS.."idnotmembio"..msg.chat_id)
Redis:del(MARCOS.."idnotmem"..msg.chat_id)
Redis:del(MARCOS..'lock_geamsAudio1'..msg.chat_id) 
Redis:del(MARCOS..'lock_geamsAudio'..msg.chat_id) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل جميع الاوامر\nꪤ" )
end

if text == 'اسالني' then
if not Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
return false
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(MARCOS..'lock_geams'..msg.chat_id) then
local list = Redis:smembers(MARCOS.."gamebot:new1")
if #list ~= 0 then
local quschen = list[math.random(#list)]
local ansar1 = Redis:get(MARCOS.."gamebot:newqus:as1"..quschen)
local ansar2 = Redis:get(MARCOS.."gamebot:newqus:as2"..quschen)
local ansar3 = Redis:get(MARCOS.."gamebot:newqus:as3"..quschen)
local ansar0 = Redis:get(MARCOS.."gamebot:newqus:as0"..quschen)
local ansar4 = Redis:get(MARCOS.."gamebot:newqus:as4"..quschen)
if ansar1 == ansar4 then
testt = 'ansar1'
elseif ansar2 == ansar4 then
testt = 'ansar2'
elseif ansar3 == ansar4 then
testt = 'ansar3'
elseif ansar0 == ansar4 then
testt = 'ansar0'
end
if testt == 'ansar1' then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'صحيح'},{text = ansar2, data = 'غلط'}, 
},
{
{text = ansar3, data = 'غلط'},{text = ansar0, data = 'غلط'}, 
},
}
}
send(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
elseif testt == 'ansar2' then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'غلط'},{text = ansar2, data = 'صحيح'}, 
},
{
{text = ansar3, data = 'غلط'},{text = ansar0, data = 'غلط'}, 
},
}
}
send(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
elseif testt == 'ansar3' then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'غلط'},{text = ansar2, data = 'غلط'}, 
},
{
{text = ansar3, data = 'صحيح'},{text = ansar0, data = 'غلط'}, 
},
}
}
send(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
elseif testt == 'ansar0' then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'غلط'},{text = ansar2, data = 'غلط'}, 
},
{
{text = ansar3, data = 'غلط'},{text = ansar0, data = 'صحيح'}, 
},
}
}
send(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
end
end
end
end
if text == "اضف لغز" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,true)
return send(msg_chat_id,msg_id,"ارسل اللغز الان ")
end
if text == "مسح لغز" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."lkz:gamebot:new"..msg.sender_id.user_id..":"..msg.chat_id,'truedel')
return send(msg_chat_id,msg_id,"ارسل اللغز الان ")
end
if text == 'الالغاز' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
local list = Redis:smembers(MARCOS.."lkz:gamebot:new1")
t = " ✧ الالغاز ↑↓ \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •"
for k,v in pairs(list) do
t = t..""..k.."- (["..v.."])\n"
end
if #list == 0 then
t = " ✧ لا يوجد الغازمضافه"
end
return send(msg_chat_id,msg_id,t)
end
if text == 'مسح الالغاز' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."lkz:gamebot:new1")
return send(msg_chat_id,msg_id,'تم مسح الالغاز جميعا ')
end

if text == 'لغز' then
if not Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
return false
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(MARCOS..'lock_geams'..msg.chat_id) then
local list = Redis:smembers(MARCOS.."lkz:gamebot:new1")
if #list ~= 0 then
local quschen = list[math.random(#list)]
local ansar1 = Redis:get(MARCOS.."lkz:gamebot:newqus:as1"..quschen)
local ansar2 = Redis:get(MARCOS.."lkz:gamebot:newqus:as2"..quschen)
local ansar3 = Redis:get(MARCOS.."lkz:gamebot:newqus:as3"..quschen)
local ansar4 = Redis:get(MARCOS.."lkz:gamebot:newqus:as4"..quschen)
if ansar1 == ansar4 then
tt = 'ansar1'
elseif ansar2 == ansar4 then
tt = 'ansar2'
elseif ansar3 == ansar4 then
tt = 'ansar3'
end
print(tt)
if tt == 'ansar1' then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'صحيح1'},
},
{
{text = ansar2, data = 'غلط1'},
},
{
{text = ansar3, data = 'غلط1'},
},
}
}
send(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
elseif tt == 'ansar2' then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'غلط1'},
},
{
{text = ansar2, data = 'صحيح1'},
},
{
{text = ansar3, data = 'غلط1'},
},
}
}
send(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
elseif tt == 'ansar3' then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = ansar1, data = 'غلط1'},
},
{
{text = ansar2, data = 'غلط1'},
},
{
{text = ansar3, data = 'صحيح1'},
},
}
}
send(msg_chat_id,msg_id,quschen,"md",false, false, false, false, reply_markup)
end

end
end
end

if text == 'اسئله كت' then
if not Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
return false
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
local list = Redis:smembers(MARCOS.."gamebot:List:Manager")
t = " ✧ الاسئله المضافه ↑↓ \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •"
for k,v in pairs(list) do
t = t..""..k.."- (["..v.."])\n"
end
if #list == 0 then
t = " ✧ لا يوجد اسئله"
end
return send(msg_chat_id,msg_id,t,'md')
end

if text == 'مسح اسئله كت' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
local list = Redis:smembers(MARCOS.."gamebot:List:Manager")
if #list == 0 then
send(msg_chat_id,msg_id," ✧ لا يوجد اسئله")
end
Redis:del(MARCOS.."gamebot:List:Manager")
send(msg_chat_id,msg_id,'تم مسح الاسئله')
end

if text == 'ملصق' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(MARCOS..'kadmeat'..msg.chat_id)   then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.photo then
if data.content.photo.sizes[1].photo.remote.id then
idPhoto = data.content.photo.sizes[1].photo.remote.id
elseif data.content.photo.sizes[2].photo.remote.id then
idPhoto = data.content.photo.sizes[2].photo.remote.id
elseif data.content.photo.sizes[3].photo.remote.id then
idPhoto = data.content.photo.sizes[3].photo.remote.id
end
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..idPhoto) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, './'..msg.id..'.webp') 
bot.sendSticker(msg.chat_id, msg.id, Name_File)
sleep(2)
os.execute('rm -rf '..Name_File) 
else
send(msg_chat_id,msg_id,'هذه ليست صوره')
end
end
if text == 'صوره' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(MARCOS..'kadmeat'..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.sticker then    
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..data.content.sticker.sticker.remote.id) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, './'..msg.id..'.jpg') 
bot.sendPhoto(msg.chat_id, msg.id, Name_File,'')
sleep(2)
os.execute('rm -rf '..Name_File) 
else
send(msg_chat_id,msg_id,'هذا ليس ملصق')
end
end
if text == 'بصمه' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(MARCOS..'kadmeat'..msg.chat_id)   then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.audio then    
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..data.content.audio.audio.remote.id) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, './'..msg.id..'.ogg') 
bot.sendVoiceNote(msg.chat_id, msg.id, Name_File, '', 'md')
sleep(2)
os.execute('rm -rf '..Name_File) 
else
send(msg_chat_id,msg_id,'هذا ليس ملف صوتي')
end
end
if text == 'صوت' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(MARCOS..'kadmeat'..msg.chat_id)   then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.voice_note then
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..data.content.voice_note.voice.remote.id) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, msg.id..'.mp3') 
bot.sendAudio(msg.chat_id, msg.id, Name_File, '', "md") 
sleep(2)
os.execute('rm -rf '..Name_File) 
else
send(msg_chat_id,msg_id,'هذا ليس بصمه')
end
end
if text == 'mp3' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(MARCOS..'kadmeat'..msg.chat_id)   then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.video then
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..data.content.video.video.remote.id) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, msg.id..'.mp3') 
bot.sendAudio(msg.chat_id, msg.id, Name_File, '', "md") 
sleep(2)
os.execute('rm -rf '..Name_File) 
else
send(msg_chat_id,msg_id,'هذا ليس فيديو')
end
end
if text == 'متحركه' and tonumber(msg.reply_to_message_id) > 0 and not Redis:get(MARCOS..'kadmeat'..msg.chat_id)   then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local data = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.video then
local File = json:decode(https.request('https://api.telegram.org/bot' .. Token .. '/getfile?file_id='..data.content.video.video.remote.id) ) 
local Name_File = download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path, msg.id..'.gif.mp4') 
bot.sendAnimation(msg.chat_id,msg.id, Name_File, '', 'md')
sleep(2)
os.execute('rm -rf '..Name_File) 
else
send(msg_chat_id,msg_id,'هذا ليس فيديو')
end
end

if text == "نسبه الحب" or text == "نسبه حب" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
Redis:set(MARCOS..":"..msg.sender_id.user_id..":lov_Bots"..msg.chat_id,"sendlove")
hggg = 'ارسل اسم الشخص الذي تريد قياس نسبه الحب\n مثال ماركوس و زاكس '
send(msg_chat_id,msg_id,hggg) 
return false
end
end
if text == "نسبه الغباء" or text == "نسبه الغباء" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
Redis:set(MARCOS..":"..msg.sender_id.user_id..":lov_Bottts"..msg.chat_id,"sendlove")
hggg = '✧ الان ارسل اسم الشخص '
send(msg_chat_id,msg_id,hggg) 
return false
end
end
if text == "نسبه الذكاء" or text == "نسبه الذكاء" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
Redis:set(MARCOS..":"..msg.sender_id.user_id..":lov_Botttuus"..msg.chat_id,"sendlove")
hggg = '✧ الان ارسل اسم الشخص '
send(msg_chat_id,msg_id,hggg) 
return false
end
end
if text == "نسبه الكره" or text == "نسبه كره" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
Redis:set(MARCOS..":"..msg.sender_id.user_id..":krh_Bots"..msg.chat_id,"sendkrhe")
hggg = 'ارسل اسم الشخص الذي تريد قياس نسبه الكره\n مثال ماركوس و زاكس '
send(msg_chat_id,msg_id,hggg) 
return false
end
end
if text == "نسبه الرجوله" or text == "نسبه الرجوله" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
Redis:set(MARCOS..":"..msg.sender_id.user_id..":rjo_Bots"..msg.chat_id,"sendrjoe")
hggg = '✧ الان ارسل اسم الشخص '
send(msg_chat_id,msg_id,hggg) 
return false
end
end
if text == "نسبه الانوثه" or text == "نسبه انوثه" and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
Redis:set(MARCOS..":"..msg.sender_id.user_id..":ano_Bots"..msg.chat_id,"sendanoe")
hggg = '✧ الان ارسل اسم الشخص '
send(msg_chat_id,msg_id,hggg) 
return false
end
end

if text and text:match("^برج (.*)$") and Redis:get(MARCOS.."brj_Bots"..msg.chat_id) == "open" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Textbrj = text:match("^برج (.*)$")
gk = https.request('https://apiabs.ml/brg.php?brg='..URL.escape(Textbrj)..'')
br = JSON.decode(gk)
send(msg_chat_id,msg_id, br.ok.hso)
end


if text == "تعطيل التحذير" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تعطيل التحذير مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."AlThther:Chat"..msg.chat_id)
return send(msg_chat_id,msg_id,' ✧ تم تعطيل التحذير\n ꪤ',"md")
end
end
if text == "تفعيل التحذير" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'AlThther:Chat'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تفعيل التحذير مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."AlThther:Chat"..msg.chat_id,"true")
return send(msg_chat_id,msg_id,' ✧ تم تفعيل التحذير\n ꪤ',"md")
end
end
if text == "تفعيل شعر" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n*✧هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local F333F = ' \n✧تم تفعيل شعر'
send(msg_chat_id,msg_id,F333F,"md")
Redis:del(MARCOS..'sh3ir:Abs'..msg.chat_id) 
end
if text == "تعطيل شعر" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n*✧ هذا الامر يخص { '..Controller_Num(6)..' }* ',"md",true)  
end
local F333F = ' \n✧ تم تعطيل شعر'
send(msg_chat_id,msg_id,F333F,"md")
Redis:set(MARCOS..'sh3ir:Abs'..msg.chat_id,true)  
end
if text and (text == "شعر" or text == "↫ شعر ✯") and not Redis:get(MARCOS..'sh3ir:Abs'..msg.chat_id) then
Abs = math.random(2,140); 
local Text ='*✧ تم اختيار الشعر لك فقط*'
keyboard = {} 
keyboard.inline_keyboard = {
{{text = '• قناة السورس •',url="t.me/"..chsource..""}},
}
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/L1BBBL/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard)) 
end

if text == "ثنائي اليوم" then
local Info_Members = bot.searchChatMembers(msg.chat_id, "*", 200)
local List_Members = Info_Members.members
local NumRand1 = math.random(1, #List_Members); 
local NumRand2 = math.random(1, #List_Members); 
local user1 = List_Members[NumRand1].member_id.user_id
local user2 = List_Members[NumRand2].member_id.user_id
local UserInfo = bot.getUser(user1)
local UserInfoo = bot.getUser(user2)
local listTow = "* ✧ ثنائي اليوم ↑↓ *\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserInfo.id..") \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n ["..UserInfoo.first_name.."](tg://user?id="..UserInfoo.id..")\n"
Redis:setex(MARCOS.."ThnaeeDay:ex"..msg.chat_id,43200,true)
return send(msg.chat_id,msg.id,listTow,"md",true)  
end
if tonumber(Redis:ttl(MARCOS.."ThnaeeDay:ex"..msg.chat_id)) <= 1 then
local Info_Members = bot.searchChatMembers(msg.chat_id, "*", 200)
local List_Members = Info_Members.members
local NumRand1 = math.random(1, #List_Members); 
local NumRand2 = math.random(1, #List_Members); 
local user1 = List_Members[NumRand1].member_id.user_id
local user2 = List_Members[NumRand2].member_id.user_id
local UserInfo = bot.getUser(user1)
local UserInfoo = bot.getUser(user2)
local listTow = "* ✧ ثنائي اليوم ↑↓ *\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserInfo.id..") \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n ["..UserInfoo.first_name.."](tg://user?id="..UserInfoo.id..")\n"
Redis:setex(MARCOS.."ThnaeeDay:ex"..msg.chat_id,43200,true)
return send(msg.chat_id,0,listTow,"md",true)
end

if text == "تعطيل التسليه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'amrthshesh'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تعطيل التسليه مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."amrthshesh"..msg.chat_id,"true")
return send(msg_chat_id,msg_id,' ✧ تم تعطيل التسليه\n ꪤ',"md")
end
end
if text == "تفعيل التسليه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'amrthshesh'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تفعيل التسليه مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."amrthshesh"..msg.chat_id)
return send(msg_chat_id,msg_id,' ✧ تم تفعيل التسليه\n ꪤ',"md")
end
end


if text == "تعطيل منع التصفيه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'spammkick'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تعطيل منع التصفيه مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."spammkick"..msg.chat_id,"true")
return send(msg_chat_id,msg_id,' ✧ تم تعطيل منع التصفيه\n ꪤ',"md")
end
end
if text == "تفعيل منع التصفيه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'spammkick'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تفعيل منع التصفيه مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."spammkick"..msg.chat_id)
return send(msg_chat_id,msg_id,' ✧ تم تفعيل منع التصفيه\n ꪤ',"md")
end
end

if text == "الساعه" or text == "الوقت" then
local ramsesj20 = "\n الساعه الان -> "..os.date("%I:%M%p")
send(msg_chat_id,msg_id,ramsesj20)
end

if text == "التاريخ" then
local ramsesj20 =  "\n التاريخ -> "..os.date("%Y/%m/%d")
send(msg_chat_id,msg_id,ramsesj20)
end
if text == 'مسح صوت' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'startdel')
return send(msg_chat_id,msg_id,' ✧ ارسل اسم الصوتيه',"md")
end
if text== 'اضف صوت' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'start')
return send(msg_chat_id,msg_id, ' ✧ ارسل اسم الصوت الان ...',"md")
end
if text== ("الصوتيات") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."text:Games:Bot"..msg.chat_id)
if #list == 0 then
send(msg_chat_id,msg_id, " ✧ لا توجد صوتيات")
return false
end
message = ' ✧ قائمه الصوتيات :\n     للتشغيل اختر اسم من الاتي:\nـــــــــــــــــــــــــــــــــــــــــــــــــــــــ\n'
for k,v in pairs(list) do
message = message..""..k.."- ("..v..")\n"
end
send(msg_chat_id,msg_id,message)
end
if text== ("مسح الصوتيات") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local list = Redis:smembers(MARCOS.."text:Games:Bot"..msg.chat_id)
if #list == 0 then
send(msg_chat_id,msg_id, " ✧ لا توجد صوتيات عامه")
return false
end
for k,v in pairs(list) do
Redis:srem(MARCOS.."text:Games:Bot"..msg.chat_id,v)
Redis:del(MARCOS.."audio:Games"..msg.chat_id..v)
end
send(msg_chat_id,msg_id, " ✧ تم مسح جميع الصوتيات")
end


if text == 'مسح صوت عام' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'startdel')
send(msg_chat_id,msg_id, ' ✧ ارسل اسم الصوتيه',"md")
end
if text== 'اضف صوت عام' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."All:Add:audio:Games"..msg.sender_id.user_id..":"..msg.chat_id,'start')
send(msg_chat_id,msg_id, ' ✧ ارسل اسم الصوت الان ...',"md")
end
if text== ("الصوتيات العامه") or text== ("الاغاني") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."All:text:Games:Bot")
if #list == 0 then
send(msg_chat_id,msg_id, " ✧ لا توجد صوتيات عامه")
return false
end
message = ' ✧ قائمه الصوتيات العامه:\n     للتشغيل اختر اسم من الاتي:\nـــــــــــــــــــــــــــــــــــــــــــــــــــــــ\n'
for k,v in pairs(list) do
message = message..""..k.."- ("..v..")\n"
end
send(msg_chat_id,msg_id,message)
end
if text== ("مسح الصوتيات العامه") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
local list = Redis:smembers(MARCOS.."All:text:Games:Bot")
if #list == 0 then
send(msg_chat_id,msg_id, " ✧ لا توجد صوتيات")
return false
end
for k,v in pairs(list) do
Redis:srem(MARCOS.."All:text:Games:Bot",v)
Redis:del(MARCOS.."All:audio:Games"..v)
end
send(msg_chat_id,msg_id, " ✧ تم مسح جميع الصوتيات")
end


if text == 'تفعيل @all' or text == 'تفعيل all' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end   
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if (Redis:get(MARCOS..'all:members'..msg.chat_id) == 'open') then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر @all مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS..'all:members'..msg.chat_id,'open') 
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر @all\n ꪤ',"md")
end
end
if text == 'تعطيل @all' or text == 'تعطيل all' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end   
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if (Redis:get(MARCOS..'all:members'..msg.chat_id) == 'close') then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر @all مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS..'all:members'..msg.chat_id,'close') 
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر @all\n ꪤ',"md")
end
end
if text == 'تفعيل التاك' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end   
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if (Redis:get(MARCOS..'tagallgroup'..msg.chat_id) == 'open') then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر التاك مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS..'tagallgroup'..msg.chat_id,'open') 
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر التاك\n ꪤ',"md")
end
end
if text == 'تعطيل التاك' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end   
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if (Redis:get(MARCOS..'tagallgroup'..msg.chat_id) == 'close') then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر التاك مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS..'tagallgroup'..msg.chat_id,'close') 
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر التاك\n ꪤ',"md")
end
end
if text == "تعطيل الصيغ" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'kadmeat'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل اوامر الصيغ مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."kadmeat"..msg.chat_id,"true")
send(msg_chat_id,msg_id, ' ✧ تم تعطيل اوامر الصيغ\n ꪤ',"md")
end
end
if text == "تفعيل الصيغ" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'kadmeat'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل اوامر التحويلات مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."kadmeat"..msg.chat_id)
send(msg_chat_id,msg_id, ' ✧ تم تفعيل اوامر الصيغ\n ꪤ',"md")
end
end
if text == "تعطيل انطق" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'intg'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر انطق مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."intg"..msg.chat_id,"true")
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر انطق\n ꪤ',"md")
end
end
if text == "تفعيل انطق" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'intg'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر انطق مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."intg"..msg.chat_id)
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر انطق\n ꪤ',"md")
end
end

if text and text:match('^كتم عام @(%S+)$') then
local UserName = text:match('^كتم عام @(%S+)$')
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end

local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if Controllerbanall(msg_chat_id,UserId_Info.id) == true then 
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
if Redis:sismember(MARCOS.."KtmAll:Groups",UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧تم كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."KtmAll:Groups",UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧تم كتمه عام من المجموعات ").Reply,"md",true)  
end
end
if text and text:match('^الغاء كتم عام @(%S+)$') then
local UserName = text:match('^الغاء كتم عام @(%S+)$')
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end

local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if not Redis:sismember(MARCOS.."KtmAll:Groups",UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧تم الغاء كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."KtmAll:Groups",UserId_Info.id) 
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1,1})
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧تم الغاء كتمه عام من المجموعات  ").Reply,"md",true)  
end
end

if text == ('كتم عام') and msg.reply_to_message_id ~= 0 then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end

local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if Controllerbanall(msg_chat_id,Message_Reply.sender_id.user_id) == true then 
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
if Redis:sismember(MARCOS.."KtmAll:Groups",Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧تم كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."KtmAll:Groups",Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧تم كتمه عام من المجموعات ").Reply,"md",true)  
end
end
if text == ('الغاء كتم عام') and msg.reply_to_message_id ~= 0 then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end

local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not Redis:sismember(MARCOS.."KtmAll:Groups",Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧تم الغاء كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."KtmAll:Groups",Message_Reply.sender_id.user_id) 
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧تم الغاء كتمه عام من المجموعات  ").Reply,"md",true)  
end
end
if text and text:match('^كتم عام (%d+)$') then
local UserId = text:match('^كتم عام (%d+)$')
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end

local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if Controllerbanall(msg_chat_id,UserId) == true then 
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
if Redis:sismember(MARCOS.."KtmAll:Groups",UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧تم كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."KtmAll:Groups",UserId) 
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧تم كتمه عام من المجموعات ").Reply,"md",true)  
end
end
if text and text:match('^الغاء كتم عام (%d+)$') then
local UserId = text:match('^الغاء كتم عام (%d+)$')
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end

local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if not Redis:sismember(MARCOS.."KtmAll:Groups",UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧تم الغاء كتمه عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."KtmAll:Groups",UserId) 
bot.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,1,1,1,1,1,1,1,1})
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧تم الغاء كتمه عام من المجموعات  ").Reply,"md",true)  
end
end

if text == 'مسح المكتومين عام' then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end

local Info_Members = Redis:smembers(MARCOS.."KtmAll:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧لا يوجد مكتومين عام حاليا , ","md",true)  
end
Redis:del(MARCOS.."KtmAll:Groups") 
return send(msg_chat_id,msg_id,"* ✧تم مسح {"..#Info_Members.."} من المكتومين عام *","md",true)
end

if text == 'المكتومين عام' or text == 'قائمه المكتومين عام' then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end

local Info_Members = Redis:smembers(MARCOS.."KtmAll:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧لا يوجد مكتومين عام حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المكتومين عام  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المكتومين عام', data = msg.sender_id.user_id..'/KtmAll'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end

if text and text:match('^رفع مطور اساسي @(%S+)$') then
local UserName = text:match('^رفع مطور اساسي @(%S+)$')
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(5438742764) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(1548499186) then
YouCan = true
elseif Redis:sismember("dev:all:source",msg.sender_id.user_id) then
YouCan = true

else
YouCan = false
end
if YouCan == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if Redis:sismember(MARCOS.."ControlAll:Groups",UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧تم رفعه مطور اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."ControlAll:Groups",UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧تم رفعه مطور اساسي ").Reply,"md",true)  
end
end
if text and text:match('^تنزيل مطور اساسي @(%S+)$') then
local UserName = text:match('^تنزيل مطور اساسي @(%S+)$')
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(5438742764) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(1548499186) then
YouCan = true
elseif Redis:sismember("dev:all:source",msg.sender_id.user_id) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if not Redis:sismember(MARCOS.."ControlAll:Groups",UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧تم تنزيله من المطورين الاساسيين مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."ControlAll:Groups",UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧تم تنزيله من المطوريين الاساسسين").Reply,"md",true)  
end
end
if text == ('رفع مطور اساسي') and msg.reply_to_message_id ~= 0 then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(5438742764) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(1548499186) then
YouCan = true
elseif Redis:sismember("dev:all:source",msg.sender_id.user_id) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if Redis:sismember(MARCOS.."ControlAll:Groups",Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧تم رفعه مطور اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."ControlAll:Groups",Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧تم رفعه مطور اساسي ").Reply,"md",true)  
end
end
if text == ('تنزيل مطور اساسي') and msg.reply_to_message_id ~= 0 then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(5438742764) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(1548499186) then
YouCan = true
elseif Redis:sismember("dev:all:source",msg.sender_id.user_id) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not Redis:sismember(MARCOS.."ControlAll:Groups",Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧تم تنزيله من المطورين الاساسسين مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."ControlAll:Groups",Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧تم تنزيله من المطوريين الاساسسين").Reply,"md",true)  
end
end
if text and text:match('^رفع مطور اساسي (%d+)$') then
local UserId = text:match('^رفع مطور اساسي (%d+)$')
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(5438742764) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(1548499186) then
YouCan = true
elseif Redis:sismember("dev:all:source",msg.sender_id.user_id) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if Redis:sismember(MARCOS.."ControlAll:Groups",UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧تم رفعه مطور اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."ControlAll:Groups",UserId) 
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧تم رفعه مطور اساسي ").Reply,"md",true)  
end
end
if text and text:match('^تنزيل مطور اساسي (%d+)$') then
local UserId = text:match('^تنزيل مطور اساسي (%d+)$')
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(5438742764) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(1548499186) then
YouCan = true
elseif Redis:sismember("dev:all:source",msg.sender_id.user_id) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if not Redis:sismember(MARCOS.."ControlAll:Groups",UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧تم تنزيله من المطوريين الاساسسين مسبقا").Reply,"md",true)  
else
Redis:srem(MARCOS.."ControlAll:Groups",UserId) 
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧تم تنزيله من المطوريين الاساسسين").Reply,"md",true)  
end
end
if text == 'مسح المطورين الاساسيين' then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(5438742764) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(1548499186) then
YouCan = true
elseif Redis:sismember("dev:all:source",msg.sender_id.user_id) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local Info_Members = Redis:smembers(MARCOS.."ControlAll:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧لا يوجد مطورين اساسيين حاليا , ","md",true)  
end
Redis:del(MARCOS.."ControlAll:Groups") 
return send(msg_chat_id,msg_id,"* ✧تم مسح {"..#Info_Members.."} من المطورين الاساسيين *","md",true)
end
if text == 'المطورين الاساسيين' then
if tonumber(msg.sender_id.user_id) == tonumber(Sudo_Id) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(5438742764) then
YouCan = true
elseif tonumber(msg.sender_id.user_id) == tonumber(1548499186) then
YouCan = true
elseif Redis:sismember("dev:all:source",msg.sender_id.user_id) then
YouCan = true
else
YouCan = false
end
if YouCan == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { مطور الاساسي }* ',"md",true)  
end
local Info_Members = Redis:smembers(MARCOS.."ControlAll:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧لا يوجد مطورين اساسيين حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المطورين الاساسيين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
return send(msg_chat_id, msg_id, ListMembers, 'md', true)
end


if text == "تعطيل غنيلي" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'knele'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر غنيلي مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."knele"..msg.chat_id,"true")
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر غنيلي\n ꪤ',"md")
end
end
if text == "تفعيل غنيلي" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'knele'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر غنيلي مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."knele"..msg.chat_id)
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر غنيلي\n ꪤ',"md")
end
end
if text == "تعطيل الابراج" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'brjj'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر الابراج مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."brjj"..msg.chat_id,"true")
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر الابراج\n ꪤ',"md")
end
end
if text == "تفعيل الابراج" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'brjj'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر الابراج مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."brjj"..msg.chat_id)
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر الابراج\n ꪤ',"md")
end
end
if text == "تعطيل الزخرفه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'zhrfa'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر الزخرفه مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."zhrfa"..msg.chat_id,"true")
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر الزخرفه\n ꪤ',"md")
end
end
if text == "تفعيل الزخرفه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'zhrfa'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر الزخرفه مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."zhrfa"..msg.chat_id)
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر الزخرفه\n ꪤ',"md")
end
end

if text == 'السيرفر' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
send(msg_chat_id,msg_id, io.popen([[
linux_version=`lsb_release -ds`
memUsedPrc=`free -m | awk 'NR==2{printf "%sMB/%sMB {%.2f%}\n", $3,$2,$3*100/$2 }'`
HardDisk=`df -lh | awk '{if ($6 == "/") { print $3"/"$2" ~ {"$5"}" }}'`
CPUPer=`top -b -n1 | grep "Cpu(s)" | awk '{print $2 + $4}'`
uptime=`uptime | awk -F'( |,|:)+' '{if ($7=="min") m=$6; else {if ($7~/^day/) {d=$6;h=$8;m=$9} else {h=$6;m=$7}}} {print d+0,"days,",h+0,"hours,",m+0,"minutes."}'`
echo ' ✧ ✧⊱ { نظام التشغيل } ⊰ ✧ \n*»» '"$linux_version"'*' 
echo '*------------------------------\n* ✧ ✧⊱ { الذاكره العشوائيه } ⊰ ✧ \n*»» '"$memUsedPrc"'*'
echo '*------------------------------\n* ✧ ✧⊱ { وحـده الـتـخـزيـن } ⊰ ✧ \n*»» '"$HardDisk"'*'
echo '*------------------------------\n* ✧ ✧⊱ { الـمــعــالــج } ⊰ ✧ \n*»» '"`grep -c processor /proc/cpuinfo`""Core ~ {$CPUPer%} "'*'
echo '*------------------------------\n* ✧ ✧⊱ { الــدخــول } ⊰ ✧ \n*»» '`whoami`'*'
echo '*------------------------------\n* ✧ ✧⊱ { مـده تـشغيـل الـسـيـرفـر } ⊰ ✧ \n*»» '"$uptime"'*'
]]):read('*all'),"md")
end


if text == 'صلاحياتي' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
return send(msg_chat_id,msg_id," ✧ الصلاحيات -> مالك المجموعه","md",true) 
elseif (StatusMember == "chatMemberStatusAdministrator") then
StatusMemberChat = 'مشرف المجموعه'
else
return send(msg_chat_id,msg_id," ✧ الصلاحيات -> عضو في المجموعه" ,"md",true) 
end
if StatusMember == "chatMemberStatusAdministrator" then 
local GetMemberStatus = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status
if GetMemberStatus.can_change_info then
change_info = '〘 ✅ 〙' else change_info = '〘 ❌ 〙'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '〘 ✅ 〙' else delete_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_invite_users then
invite_users = '〘 ✅ 〙' else invite_users = '〘 ❌ 〙'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '〘 ✅ 〙' else pin_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '〘 ✅ 〙' else restrict_members = '〘 ❌ 〙'
end
if GetMemberStatus.can_promote_members then
promote = '〘 ✅ 〙' else promote = '〘 ❌ 〙'
end
local PermissionsUserr = '*\n ✧ صلاحيات المستخدم :\n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • '..'\n ✧ تغيير المعلومات -> '..change_info..'\n ✧ تثبيت الرسائل -> '..pin_messages..'\n ✧ اضافه مستخدمين -> '..invite_users..'\n ✧ مسح الرسائل -> '..delete_messages..'\n ✧ حظر المستخدمين -> '..restrict_members..'\n ✧ اضافه المشرفين -> '..promote..'\n\n*'
return send(msg_chat_id,msg_id," ✧ الصلاحيات -> مشرف المجموعه"..(PermissionsUserr or '') ,"md",true) 
end
end
if text == 'صلاحياته' and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local StatusMember = bot.getChatMember(msg_chat_id,Message_Reply.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
return send(msg_chat_id,msg_id," ✧ الصلاحيات -> مالك المجموعه","md",true) 
elseif (StatusMember == "chatMemberStatusAdministrator") then
StatusMemberChat = 'مشرف المجموعه'
else
return send(msg_chat_id,msg_id," ✧ الصلاحيات -> عضو في المجموعه" ,"md",true) 
end
if StatusMember == "chatMemberStatusAdministrator" then 
local GetMemberStatus = bot.getChatMember(msg_chat_id,Message_Reply.sender_id.user_id).status
if GetMemberStatus.can_change_info then
change_info = '〘 ✅ 〙' else change_info = '〘 ❌ 〙'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '〘 ✅ 〙' else delete_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_invite_users then
invite_users = '〘 ✅ 〙' else invite_users = '〘 ❌ 〙'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '〘 ✅ 〙' else pin_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '〘 ✅ 〙' else restrict_members = '〘 ❌ 〙'
end
if GetMemberStatus.can_promote_members then
promote = '〘 ✅ 〙' else promote = '〘 ❌ 〙'
end
local PermissionsUserr = '*\n ✧ صلاحيات المستخدم :\n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • '..'\n ✧ تغيير المعلومات -> '..change_info..'\n ✧ تثبيت الرسائل -> '..pin_messages..'\n ✧ اضافه مستخدمين -> '..invite_users..'\n ✧ مسح الرسائل -> '..delete_messages..'\n ✧ حظر المستخدمين -> '..restrict_members..'\n ✧ اضافه المشرفين -> '..promote..'\n\n*'
return send(msg_chat_id,msg_id," ✧ الصلاحيات -> مشرف المجموعه"..(PermissionsUserr or '') ,"md",true) 
end
end


if text and text:match('^صلاحياته @(%S+)$') then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserName = text:match('^صلاحياته @(%S+)$') 
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local StatusMember = bot.getChatMember(msg_chat_id,UserId_Info.id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
return send(msg_chat_id,msg_id," ✧ الصلاحيات -> مالك المجموعه","md",true) 
elseif (StatusMember == "chatMemberStatusAdministrator") then
StatusMemberChat = 'مشرف المجموعه'
else
return send(msg_chat_id,msg_id," ✧ الصلاحيات -> عضو في المجموعه" ,"md",true) 
end
if StatusMember == "chatMemberStatusAdministrator" then 
local GetMemberStatus = bot.getChatMember(msg_chat_id,UserId_Info.id).status
if GetMemberStatus.can_change_info then
change_info = '〘 ✅ 〙' else change_info = '〘 ❌ 〙'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '〘 ✅ 〙' else delete_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_invite_users then
invite_users = '〘 ✅ 〙' else invite_users = '〘 ❌ 〙'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '〘 ✅ 〙' else pin_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '〘 ✅ 〙' else restrict_members = '〘 ❌ 〙'
end
if GetMemberStatus.can_promote_members then
promote = '〘 ✅ 〙' else promote = '〘 ❌ 〙'
end
local PermissionsUserr = '*\n ✧ صلاحيات المستخدم :\n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • '..'\n ✧ تغيير المعلومات -> '..change_info..'\n ✧ تثبيت الرسائل -> '..pin_messages..'\n ✧ اضافه مستخدمين -> '..invite_users..'\n ✧ مسح الرسائل -> '..delete_messages..'\n ✧ حظر المستخدمين -> '..restrict_members..'\n ✧ اضافه المشرفين -> '..promote..'\n\n*'
return send(msg_chat_id,msg_id," ✧ الصلاحيات -> مشرف المجموعه"..(PermissionsUserr or '') ,"md",true) 
end
end
if text and text:match('^التفاعل @(%S+)$') then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserName = text:match('^التفاعل @(%S+)$') 
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
TotalMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..UserId_Info.id) or 0
TotalMsgT = Total_message(TotalMsg) 
return send(msg_chat_id,msg_id," ✧ التفاعل -> "..TotalMsgT, "md")
end
if text == 'التفاعل' and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
TotalMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..Message_Reply.sender_id.user_id) or 0
TotalMsgT = Total_message(TotalMsg) 
return send(msg_chat_id,msg_id," ✧ التفاعل -> "..TotalMsgT, "md")
end

if text == "تعطيل اسمي" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'idnotmemname'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر اسمي مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."idnotmemname"..msg.chat_id,"true")
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر اسمي \n ꪤ',"md")
end
end

if text == 'رابط الحذف' or text == 'روابط الحذف' then
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = Redis:get(MARCOS..'ch:admin')},},{{text = 'سـورس ماركوس ', url = 't.me/'..chsource..''},},}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'Telegram', url = 'https://my.telegram.org/auth?to=delete'},{text = 'Instagram', url = 'https://www.instagram.com/accounts/login/?next=/accounts/remove/request/permanent/'}
},
{
{text = 'Facebook', url = 'https://www.facebook.com/help/deleteaccount'},{text = 'Snapchat', url = 'https://accounts.snapchat.com/accounts/login?continue=https%3A%2F%2Faccounts.snapchat.com%2Faccounts%2Fdeleteaccount'}
},
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
return send(msg_chat_id,msg_id,'* ✧ رابط الحذف في جميع مواقع التواصل*',"md",false, false, false, false, reply_markup)
end



if text == "تفعيل الاوامر الصوتيه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..msg_chat_id.."sound:cmd") then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل الاوامر الصوتيه مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS..msg_chat_id.."sound:cmd",true)
send(msg_chat_id,msg_id, ' ✧ تم تفعيل الاوامر الصوتيه \n ꪤ',"md")
end
end
if text == "تعطيل الاوامر الصوتيه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..msg_chat_id.."sound:cmd") then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل الاوامر الصوتيه مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS..msg_chat_id.."sound:cmd")
send(msg_chat_id,msg_id, ' ✧ تم تعطيل الاوامر الصوتيه \n ꪤ',"md")
end
end
if text == "تفعيل اسمي" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'idnotmemname'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر اسمي مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."idnotmemname"..msg.chat_id)
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر اسمي \n ꪤ',"md")
end
end
if text == 'اسمي' and not Redis:get(MARCOS..'idnotmemname'..msg.chat_id)  then
local UserInfo = bot.getUser(msg.sender_id.user_id)
return send(msg_chat_id,msg_id,'\n ✧ اسمك -> *'..FlterBio(UserInfo.first_name)..'*', "md")
end
if text =='رقمي' then
local UserInfo = bot.getUser(msg.sender_id.user_id)
local nump = UserInfo.phone_number
if #nump == 0 then
MyNumber = "✧ رقمك موضوع لجهات اتصالك فقط"
else
MyNumber = "*✧ رقمك ->*〘 `"..UserInfo.phone_number.."+` 〙"
end
return bot.sendText(msg_chat_id, msg_id,MyNumber,'md',true)
end
if text ==("رقمه") and msg.reply_to_message_id ~= 0 or text ==("رقمة") and msg.reply_to_message_id ~= 0 then 
local Message_Reply = bot.getMessage(msg_chat_id, msg.reply_to_message_id)
if Message_Reply.luatele == "error" then
return bot.sendText(msg_chat_id,msg_id,"\n✧ عذرا هذا المستخدم غير مدعوم ","md",true)  
end
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
local nump = UserInfo.phone_number
if #nump == 0 then
MyNumber = "رقمه موضوع لجهات اتصالة فقط"
else
MyNumber = "*✧ رقمه ->*〘 `"..UserInfo.phone_number.."+` 〙"
end
return bot.sendText(msg_chat_id, msg_id,MyNumber,'md',true)
end
if text and (text:match('^رقمه (%d+)$') or text:match('^رقمة (%d+)$')) then
local UserId = (text:match('^رقمه (%d+)$') or text:match('^رقمة (%d+)$'))
local UserInfo = bot.getUser(UserId)
local nump = UserInfo.phone_number
if #nump == 0 then
MyNumber = "رقمه موضوع لجهات اتصالة فقط"
else
MyNumber = "*✧ رقمه ->*〘 `"..UserInfo.phone_number.."+` 〙"
end
return bot.sendText(msg_chat_id, msg_id,MyNumber,'md',true)
end
if text and (text:match('^رقمه @(%S+)$') or text:match('^رقمة @(%S+)$')) then
local UserName = (text:match('^رقمه @(%S+)$') or text:match('^رقمة @(%S+)$'))
local UserId_Info = bot.searchPublicChat(UserName)
local UserInfo = bot.getUser(UserId_Info.id)
local nump = UserInfo.phone_number
if #nump == 0 then
MyNumber = "رقمه موضوع لجهات اتصالة فقط"
else
MyNumber = "*✧ رقمه ->*〘 `"..UserInfo.phone_number.."+` 〙"
end
return bot.sendText(msg_chat_id, msg_id,MyNumber,'md',true)
end
if text == "ايديي" then 
return send(msg_chat_id,msg_id,'\n*✧ ايديك ->*〘 `'..msg.sender_id.user_id..'` 〙', "md")
end
if text ==("ايدييه") and msg.reply_to_message_id ~= 0 or text ==("ايديه") and msg.reply_to_message_id ~= 0 then 
local Message_Reply = bot.getMessage(msg_chat_id, msg.reply_to_message_id)
if Message_Reply.luatele == "error" then
return bot.sendText(msg_chat_id,msg_id,"\n✧ عذرا هذا المستخدم غير مدعوم ","md",true)  
end
return send(msg_chat_id,msg_id,'\n*✧ ايدييه ->*〘 `'..Message_Reply.sender_id.user_id..'` 〙', "md")
end
if text and (text:match('^ايدييه @(%S+)$') or text:match('^ايديه @(%S+)$')) then
local UserName = (text:match('^ايدييه @(%S+)$') or text:match('^ايديه @(%S+)$'))
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n✧  عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
return send(msg_chat_id,msg_id,'\n*✧ ايديه ->*〘 `'..UserId_Info.id..'` 〙', "md")
end
if text == "معرفي" or text == "يوزري" then
local UserInfo = bot.getUser(msg.sender_id.user_id)
text ='✧ معرفك ->〘 User 〙'
local text = text:gsub('User',('@'..UserInfo.username or ''))
bot.sendText(msg_chat_id, msg_id, text, 'html',true)
end
if text ==("معرفه") and msg.reply_to_message_id ~= 0 or text ==("معرفة") and msg.reply_to_message_id ~= 0 then 
local Message_Reply = bot.getMessage(msg_chat_id, msg.reply_to_message_id)
if Message_Reply.luatele == "error" then
return bot.sendText(msg_chat_id,msg_id,"\n✧ عذرا هذا المستخدم غير مدعوم ","md",true)  
end
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.username then
UserInfousername = '@'..UserInfo.username..''
else
UserInfousername = 'لا يوجد'
end
return bot.sendText(msg_chat_id,msg_id,'*✧ معرفه ->〘 '..UserInfousername..' 〙*',"md",true) 
end
if text and (text:match('^معرفه (%d+)$') or text:match('^معرفة (%d+)$')) then
local UserId = (text:match('^معرفه (%d+)$') or text:match('^معرفة (%d+)$'))
local UserInfo = bot.getUser(UserId)
if UserInfo.username then
UserName = '@'..UserInfo.username..''
else
UserName = 'لا يوجد'
end
return bot.sendText(msg_chat_id,msg_id,'*✧ معرفه ->〘 '..UserName..' 〙*',"md",true) 
end
if text and text:match('^الرتبه @(%S+)$') then
local UserName = text:match('^الرتبه @(%S+)$') 
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local RinkBot = Controller(msg_chat_id,UserId_Info.id)
return send(msg_chat_id,msg_id," ✧ الرتبه -> "..RinkBot, "md")
end
if text == 'الرتبه' and msg.reply_to_message_id ~= 0 then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local RinkBot = Controller(msg_chat_id,Message_Reply.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ الرتبه -> "..RinkBot, "md")
end


if text == 'بايو' and not Redis:get(MARCOS..'idnotmembio'..msg.chat_id)  then
local InfoUser = bot.getUserFullInfo(msg.sender_id.user_id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = 'لا يوجد'
end

send(msg_chat_id, msg_id, ' ✧ البايو -> ['..FlterBio(Bio)..']', 'md')
end
if text == "تعطيل البايو" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'idnotmembio'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر البايو مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."idnotmembio"..msg.chat_id,"true")
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر البايو \n ꪤ',"md")
end
end
if text == "تفعيل البايو" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'idnotmembio'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر البايو مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."idnotmembio"..msg.chat_id)
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر البايو \n ꪤ',"md")
end
end
if text == "تعطيل ايدي العضو" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'idnotmem'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر ايدي العضو مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."idnotmem"..msg.chat_id,"true")
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر ايدي العضو\n ꪤ',"md")
end
end
if text == "تفعيل ايدي العضو" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'idnotmem'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر ايدي العضو مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."idnotmem"..msg.chat_id)
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر ايدي العضو\n ꪤ',"md")
end
end
if text == "ايدي" and msg.reply_to_message_id == 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Special and Redis:get(MARCOS..'idnotmem'..msg.chat_id) then
return send(msg.chat_id,msg.id,'*\n ✧ عذرآ ايدي العضو معطل*',"md")
end
if not Redis:get(MARCOS.."Status:Id"..msg_chat_id) then
return false
end
local UserInfo = bot.getUser(msg.sender_id.user_id)
local InfoUser = bot.getUserFullInfo(msg.sender_id.user_id)
if InfoUser.bio then
Bio = FlterBio(InfoUser.bio)
else
Bio = 'لا يوجد'
end
local nameuser = FlterBio(UserInfo.first_name)
local photo = bot.getUserProfilePhotos(msg.sender_id.user_id)
local UserId = msg.sender_id.user_id
local RinkBot = msg.Name_Controller
local TotalMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalPhoto = photo.total_count or 0
local TotalEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local TotalMsgT = Total_message(TotalMsg) 
local NumberGames = Redis:get(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id) or 0
local NumAdd = Redis:get(MARCOS.."Num:Add:Memp"..msg.chat_id..":"..msg.sender_id.user_id) or 0
local Texting = {'〈 جمالك ده طبيعي يولا 🙈💗 〉',"〈 غير بقاا صورتك يا قمر 😻🤍 〉 ","〈 يخرشي على العسل ده 🥺💔 〉","〈 صورتك ولا صورت القمر 🌙💕 〉","〈 صورتك عثل ينوحيي ??🌝 〉",}
local Description = Texting[math.random(#Texting)]
if UserInfo.username then
UserInfousername = '@'..UserInfo.username..''
else
UserInfousername = 'لا يوجد'
end
if UserInfo.first_name then
Name = " "..UserInfo.first_name.." "
else
Name = " لا يوجد"
end
Get_Is_Id = Redis:get(MARCOS.."Set:Id:Groups") or Redis:get(MARCOS.."Set:Id:Group"..msg_chat_id)
if Redis:get(MARCOS.."Status:IdPhoto"..msg_chat_id) then
if Get_Is_Id then
local Get_Is_Id = Get_Is_Id:gsub('#AddMem',NumAdd) 
local Get_Is_Id = Get_Is_Id:gsub('#id',msg.sender_id.user_id) 
local Get_Is_Id = Get_Is_Id:gsub('#username',UserInfousername) 
local Get_Is_Id = Get_Is_Id:gsub('#msgs',TotalMsg) 
local Get_Is_Id = Get_Is_Id:gsub('#edit',TotalEdit) 
local Get_Is_Id = Get_Is_Id:gsub('#stast',RinkBot) 
local Get_Is_Id = Get_Is_Id:gsub('#auto',TotalMsgT) 
local Get_Is_Id = Get_Is_Id:gsub('#Description',Description) 
local Get_Is_Id = Get_Is_Id:gsub('#game',NumberGames) 
local Get_Is_Id = Get_Is_Id:gsub('#photos',TotalPhoto) 
local Get_Is_Id = Get_Is_Id:gsub('#Bio',Bio) 
if photo.total_count > 0 then
return bot.sendPhoto(msg.chat_id, msg.id, photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id,Get_Is_Id)
else
return bot.sendText(msg_chat_id,msg_id,Get_Is_Id,"md",true) 
end
else
if photo.total_count > 0 then
local ban_ns ='\n*⟨•💖▸ 𝑵𝑨𝑴𝑬 •⟩ '..Name..'\n⟨•💖▸ 𝑼𝑺𝑬𝑹 •⟩ '..UserInfousername..'\n⟨•💖▸ 𝑰𝑫 •⟩ '..UserId..'\n⟨•💖▸ 𝑺𝑻𝑨 •⟩ '..RinkBot..'\n⟨•💖▸ 𝑷𝑯𝑶𝑻𝑶 •⟩ '..TotalPhoto..'\n⟨•💖▸ 𝑴𝑺𝑮 •⟩ '..TotalMsg..'\n⟨•💖▸ 𝑻𝑭𝑨𝑷𝑳𝑲 •⟩ '..TotalMsgT..'\n⟨•💖▸ 𝑩𝑰𝑶 •⟩ '..Bio..'*'
data = {} 
data.inline_keyboard = {
{
{text =Description,url = "https://t.me/"..UserInfo.username..""}, 
},
}
msgg = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id=" .. msg_chat_id .. "&photo="..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id.."&caption=".. URL.escape(ban_ns).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(data))
else
local ban_ns ='\n*⟨•💖▸ 𝑵𝑨𝑴𝑬 •⟩ '..Name..'\n⟨•💖▸ 𝑼𝑺𝑬𝑹 •⟩ '..UserInfousername..'\n⟨•💖▸ 𝑰𝑫 •⟩ '..UserId..'\n⟨•💖▸ 𝑺𝑻𝑨 •⟩ '..RinkBot..'\n⟨•💖▸ 𝑷𝑯𝑶𝑻𝑶 •⟩ '..TotalPhoto..'\n⟨•💖▸ 𝑴𝑺𝑮 •⟩ '..TotalMsg..'\n⟨•💖▸ 𝑻𝑭𝑨𝑷𝑳?? •⟩ '..TotalMsgT..'\n⟨•💖▸ 𝑩𝑰𝑶 •⟩ '..Bio..'*'
data = {} 
data.inline_keyboard = {
{
{text =Description,url = "https://t.me/"..UserInfo.username..""}, 
},
}
msgg = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendMessage?chat_id=" .. msg_chat_id .. "&text=".. URL.escape(ban_ns).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(data))
end
end
else
if Get_Is_Id then
local Get_Is_Id = Get_Is_Id:gsub('#AddMem',NumAdd) 
local Get_Is_Id = Get_Is_Id:gsub('#id',msg.sender_id.user_id) 
local Get_Is_Id = Get_Is_Id:gsub('#username',UserInfousername) 
local Get_Is_Id = Get_Is_Id:gsub('#msgs',TotalMsg) 
local Get_Is_Id = Get_Is_Id:gsub('#edit',TotalEdit) 
local Get_Is_Id = Get_Is_Id:gsub('#stast',RinkBot) 
local Get_Is_Id = Get_Is_Id:gsub('#auto',TotalMsgT) 
local Get_Is_Id = Get_Is_Id:gsub('#Description',Description) 
local Get_Is_Id = Get_Is_Id:gsub('#game',NumberGames) 
local Get_Is_Id = Get_Is_Id:gsub('#photos',TotalPhoto) 
local Get_Is_Id = Get_Is_Id:gsub('#Bio',Bio) 
return send(msg_chat_id,msg_id,'['..Get_Is_Id..']',"md",true) 
else
local ban_ns ='\n*⟨•💖▸ 𝑵𝑨𝑴𝑬 •⟩ '..Name..'\n⟨•💖▸ 𝑼𝑺𝑬𝑹 •⟩ '..UserInfousername..'\n⟨•💖▸ 𝑰𝑫 •⟩ '..UserId..'\n⟨•💖▸ 𝑺𝑻𝑨 •⟩ '..RinkBot..'\n⟨•💖▸ 𝑷𝑯𝑶𝑻𝑶 •⟩ '..TotalPhoto..'\n⟨•💖▸ 𝑴𝑺𝑮 •⟩ '..TotalMsg..'\n⟨•💖▸ 𝑻𝑭𝑨𝑷𝑳𝑲 •⟩ '..TotalMsgT..'\n⟨•💖▸ 𝑩𝑰𝑶 •⟩ '..Bio..'*'
data = {} 
data.inline_keyboard = {
{
{text =Description,url = "https://t.me/"..UserInfo.username..""}, 
},
}
msgg = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendMessage?chat_id=" .. msg_chat_id .. "&text=".. URL.escape(ban_ns).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(data))
end
end
end

if text and text:match('^تحكم @(%S+)$') then
local UserName = text:match('^تحكم @(%S+)$') 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return bot.sendText(msg_chat_id,msg_id,"\n ✧ عذرأ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return bot.sendText(msg_chat_id,msg_id,"\n ✧ عذرأ لا تستطيع استخدام معرف قناة او قروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return bot.sendText(msg_chat_id,msg_id,"\n ✧ عذرأ لا تستطيع استخدام معرف البوت ","md",true)  
end
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = '• تحكم الاشرف • ', data = msg.sender_id.user_id..'/groupNumseteng//'..UserId_Info.id},
},
{
{text = '• تحكم الرتبه • ', data = msg.sender_id.user_id..'/rankup//'..UserId_Info.id},
},
{
{text = '• تحكم الاذعاج • ', data = msg.sender_id.user_id..'/sting//'..UserId_Info.id},
},
}
}
return bot.sendText(msg.chat_id,msg.id,'*\n✧ الـيـك قـائـمـة الـتـحـكم عـلـي الـعـضـو*',"md",false, false, false, false, reply_markup)
end
if text == 'تحكم' and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return bot.sendText(msg_chat_id,msg_id,"\n✧ عذرأ لا تستطيع استخدام الامر على البوت ","md",true)  
end
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = '• تحكم الاشرف • ', data = msg.sender_id.user_id..'/groupNumseteng//'..Message_Reply.sender.user_id}, 
},
{
{text = '• تحكم الرتبه • ', data = msg.sender_id.user_id..'/rankup//'..Message_Reply.sender.user_id}, 
},
{
{text = '• تحكم الاذعاج • ', data = msg.sender_id.user_id..'/sting//'..Message_Reply.sender.user_id}, 
},
}
}
return bot.sendText(msg.chat_id,msg.id,'*\n✧ الـيـك قـائـمـة الـتـحـكم عـلـي الـعـضـو*',"md",false, false, false, false, reply_markup)
end
if text == 'ايدي' and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.username then
UserInfousername = '@'..UserInfo.username..''
else
UserInfousername = 'لا يوجد'
end
local InfoUser = bot.getUserFullInfo(Message_Reply.sender_id.user_id)
if InfoUser.bio then
Bio = FlterBio(InfoUser.bio)
else
Bio = 'لا يوجد'
end
local photo = bot.getUserProfilePhotos(Message_Reply.sender_id.user_id)
local UserId = Message_Reply.sender_id.user_id
local RinkBot = Controller(msg_chat_id,Message_Reply.sender_id.user_id)
local TotalMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..Message_Reply.sender_id.user_id) or 0
local TotalEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..Message_Reply.sender_id.user_id) or 0
local TotalMsgT = Total_message(TotalMsg) 
if Redis:get(MARCOS.."Status:IdPhoto"..msg_chat_id) then
if photo.total_count > 0 then
if not msg.Special and Redis:get(MARCOS..'idnotmem'..msg.chat_id)  then
return send(msg_chat_id,msg_id,
'\n* ✧ ايديك -> '..UserId..
'\n ✧ معرفك -> *['..UserInfousername..
']*\n ✧ رتبتك -> '..RinkBot..
'\n ✧ رسائلك -> '..TotalMsg..
'\n ✧ سحكاتك -> '..TotalEdit..
'\n ✧ تفاعلك -> '..TotalMsgT..
'\n ✧ البايو -> *['..Bio..
']**', "md")
end
return bot.sendPhoto(msg.chat_id, msg.id, photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id,
'\n* ✧ ايديه -> '..UserId..
'\n ✧ معرفه -> '..UserInfousername..
'\n ✧ رتبته -> '..RinkBot..
'\n ✧ رسائله -> '..TotalMsg..
'\n ✧ سحكاته -> '..TotalEdit..
'\n ✧ تفاعله -> '..TotalMsgT..
'*', "md")
else
return send(msg_chat_id,msg_id,
'\n* ✧ ايديه -> '..UserId..
'\n ✧ معرفه -> '..UserInfousername..
'\n ✧ رتبته -> '..RinkBot..
'\n ✧ رسائله -> '..TotalMsg..
'\n ✧ سحكاته -> '..TotalEdit..
'\n ✧ تفاعله -> '..TotalMsgT..
'*',"md",true) 
end
else
return send(msg_chat_id,msg_id,
'\n* ✧ ايديه -> '..UserId..
'\n ✧ معرفه -> '..UserInfousername..
'\n ✧ رتبته -> '..RinkBot..
'\n ✧ رسائله -> '..TotalMsg..
'\n ✧ سحكاته -> '..TotalEdit..
'\n ✧ تفاعله -> '..TotalMsgT..
'*',"md",true) 
end
end
if text == "تفعيل متحركه" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تفعيل المتحركه'
send(msg_chat_id,msg_id,F333F,"md")
Redis:del(MARCOS..'Abs:gif:Abs'..msg.chat_id) 
end
if text == "تعطيل متحركه" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تعطيل المتحركه'
send(msg_chat_id,msg_id,F333F,"md")
Redis:set(MARCOS..'Abs:gif:Abs'..msg.chat_id,true)  
end
if text and (text == "متحركه" or text == "↫ متحركه ✯") and not Redis:get(MARCOS..'Abs:gif:Abs'..msg.chat_id) then
Abs = math.random(2,1075); 
local Text ='* ✧ تم اختيار المتحركه لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendanimation?chat_id=' .. msg.chat_id .. '&animation=https://t.me/GifWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end
if text == "تفعيل ميمز" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تفعيل الميمز'
send(msg_chat_id,msg_id,F333F,"md")
Redis:del(MARCOS..'Abs:memz:Abs'..msg.chat_id) 
end
if text == "تعطيل ميمز" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تعطيل الميمز'
send(msg_chat_id,msg_id,F333F,"md")
Redis:set(MARCOS..'Abs:memz:Abs'..msg.chat_id,true)  
end
if text and (text == "ميمز" or text == "↫ ميمز ✯") and not Redis:get(MARCOS..'Abs:memz:Abs'..msg.chat_id) then
Abs = math.random(2,220); 
local Text ='* ✧ تم اختيار مقطع الميمز لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/MemzWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end
if text == "تفعيل ريمكس" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تفعيل الريمكس'
send(msg_chat_id,msg_id,F333F,"md")
Redis:del(MARCOS..'Abs:Remix:Abs'..msg.chat_id) 
end
if text == "تعطيل ريمكس" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تعطيل الريمكس'
send(msg_chat_id,msg_id,F333F,"md")
Redis:set(MARCOS..'Abs:Remix:Abs'..msg.chat_id,true)  
end
if text and (text == "ريمكس" or text == "↫ ريمكس ✯") and not Redis:get(MARCOS..'Abs:Remix:Abs'..msg.chat_id) then
Abs = math.random(2,400); 
local Text ='* ✧ تم اختيار الريمكس لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/RemixWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end

if text == "تفعيل صوره" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تفعيل الصوره'
send(msg_chat_id,msg_id,F333F,"md")
Redis:del(MARCOS..'Abs:Photo:Abs'..msg.chat_id) 
end
if text == "تعطيل صوره" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تعطيل الصوره'
send(msg_chat_id,msg_id,F333F,"md")
Redis:set(MARCOS..'Abs:Photo:Abs'..msg.chat_id,true)  
end
if text and (text == "صوره" or text == "↫ صوره ✯") and not Redis:get(MARCOS..'Abs:Photo:Abs'..msg.chat_id) then
Abs = math.random(4,1120); 
local Text ='* ✧ تم اختيار الصوره لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/PhotosWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end

if text == "تفعيل انمي" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تفعيل الانمي'
send(msg_chat_id,msg_id,F333F,"md")
Redis:del(MARCOS..'Abs:Anime:Abs'..msg.chat_id) 
end
if text == "تعطيل انمي" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تعطيل الانمي'
send(msg_chat_id,msg_id,F333F,"md")
Redis:set(MARCOS..'Abs:Anime:Abs'..msg.chat_id,true)  
end

if text == "اسم المجموعه"  then
local Get_Chat = bot.getChat(msg_chat_id)
local GetLink = Redis:get(MARCOS.."Group:Link"..msg_chat_id) 
if GetLink then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text =Get_Chat.title, url = GetLink}, },}}
return send(msg_chat_id, msg_id, " \n["..Get_Chat.title.. ']('..GetLink..')', 'md', true, false, false, false, reply_markup)
else 
local LinkGroup = bot.generateChatInviteLink(msg_chat_id,'Hussain',tonumber(msg.date+86400),0,true)
if LinkGroup.code == 3 then
return bot.sendText(msg_chat_id,msg_id," ✧ لا استطيع جلب اسم المجموعة بسبب ليس لدي صلاحيه دعوه مستخدمين من خلال اسم المجموعة ","md",true)
end
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text = Get_Chat.title, url = LinkGroup.invite_link},},}}
return bot.sendText(msg_chat_id, msg_id, " \n["..Get_Chat.title.. ']('..LinkGroup.invite_link..')', 'md', true, false, false, false, reply_markup)
end
end

if text == "قران" or text == "سوره" then
Abs = math.random(1,100); 
local Text ='*تم اختيار سورة الك عزيزي*'
keyboard = {} 
keyboard.inline_keyboard = {
{{text = '??• قناة السورس •',url="t.me/'..chsource..'"}},
}
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/sd99s/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard)) 
end

if text == 'انا منو' then
if not Redis:get(MARCOS.."Status:IdPhoto"..msg_chat_id) then
return false
end
local Jabwa = bot.getUser(msg.sender_id.user_id)
local photo = bot.getUserProfilePhotos(msg.sender_id.user_id)
local news = '🌝🖤 انت يا قلبي -› '..msg.Name_Controller
if photo.total_count > 0 then
data = {} 
data.inline_keyboard = {
{
{text =news,url = "https://t.me/"..Jabwa.username..""}, 
},
}
local msgg = msg_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id=" .. msg_chat_id .. "&photo="..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id.."&photo=".. URL.escape(news).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(data))
end
end


if text and (text == "انمي" or text == "↫ انمي ✯") and not Redis:get(MARCOS..'Abs:Anime:Abs'..msg.chat_id) then
Abs = math.random(3,998); 
local Text ='* ✧ تم اختيار صورة الانمي لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/AnimeWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end

if text == "تفعيل فلم" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تفعيل الافلام'
send(msg_chat_id,msg_id,F333F,"md")
Redis:del(MARCOS..'Abs:Movies:Abs'..msg.chat_id) 
end
if text == "تعطيل فلم" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تعطيل الافلام'
send(msg_chat_id,msg_id,F333F,"md")
Redis:set(MARCOS..'Abs:Movies:Abs'..msg.chat_id,true)  
end
if text and (text == "فلم" or text == "↫ فلم ✯") and not Redis:get(MARCOS..'Abs:Movies:Abs'..msg.chat_id) then
Abs = math.random(4,80); 
local Text ='* ✧ تم اختيار الفلم لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/MoviesWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end
if text == "تفعيل مسلسل" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تفعيل المسلسلات'
send(msg_chat_id,msg_id,F333F,"md")
Redis:del(MARCOS..'Abs:Series:Abs'..msg.chat_id) 
end
if text == "تعطيل مسلسل" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local F333F = ' \n ✧ تم تعطيل المسلسلات'
send(msg_chat_id,msg_id,F333F,"md")
Redis:set(MARCOS..'Abs:Series:Abs'..msg.chat_id,true)  
end
if text and (text == "مسلسل" or text == "↫ مسلسل ✯") and not Redis:get(MARCOS..'Abs:Series:Abs'..msg.chat_id) then
Abs = math.random(2,54); 
local Text ='* ✧ تم اختيار المسلسل لك*'
local msg_id = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/SeriesWaTaN/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown") 
end
if text and text:match('^كشف (%d+)$') then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserId = text:match('^كشف (%d+)$')
local UserInfo = bot.getUser(UserId)
if UserInfo.username then
UserName = '@'..UserInfo.username..''
else
UserName = 'لا يوجد'
end
local Name_User = FlterBio(UserInfo.first_name)
local RinkBot = Controller(msg_chat_id,UserId)
local TotalMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..UserId) or 0
local TotalEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..UserId) or 0
local TotalMsgT = Total_message(TotalMsg) 
local NumAdd = Redis:get(MARCOS.."Num:Add:Memp"..msg.chat_id..":"..UserId) or 0
local NumberGames = Redis:get(MARCOS.."Num:Add:Games"..msg.chat_id..UserId) or 0
if UserInfo.MARCOSbots  == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end 
return send(msg_chat_id,msg_id,
'\n* ✧ اسمه -> '..Name_User..
'\n ✧ ايديه -> '..UserId..
'\n ✧ معرفه -> ['..UserName..']'..
'\n ✧ رتبته -> '..RinkBot..
'\n ✧ عدد رسايله -> '..TotalMsg..
'\n ✧ عدد تعديلاته -> '..TotalEdit..
'\n ✧ تفاعله -> '..TotalMsgT..
'\n ✧ البايو -> *'..FlterBio(getbio(UserId))..
'*', "md")
end
if text == 'كشف'  and msg.reply_to_message_id ~= 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.username then
UserInfousername = '@'..UserInfo.username..''
else
UserInfousername = 'لا يوجد'
end
local photo = bot.getUserProfilePhotos(Message_Reply.sender_id.user_id)
local UserId = Message_Reply.sender_id.user_id
local RinkBot = Controller(msg_chat_id,Message_Reply.sender_id.user_id)
local TotalMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..Message_Reply.sender_id.user_id) or 0
local TotalEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..Message_Reply.sender_id.user_id) or 0
local TotalMsgT = Total_message(TotalMsg) 
return send(msg_chat_id,msg_id,
'\n* ✧ ايديه -> '..UserId..
'\n ✧ معرفه -> '..UserInfousername..
'\n ✧ رتبته -> '..RinkBot..
'\n ✧ رسائله -> '..TotalMsg..
'\n ✧ تعديلاته -> '..TotalEdit..
'\n ✧ تفاعله -> '..TotalMsgT..
'*',"md",true) 
end
if text and text:match('^ايدي @(%S+)$') or text and text:match('^كشف @(%S+)$') then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserName = text:match('^ايدي @(%S+)$') or text:match('^كشف @(%S+)$')
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local UserId = UserId_Info.id
local RinkBot = Controller(msg_chat_id,UserId_Info.id)
local TotalMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..UserId_Info.id) or 0
local TotalEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..UserId_Info.id) or 0
local TotalMsgT = Total_message(TotalMsg) 
return send(msg_chat_id,msg_id,
'\n* ✧ ايديه -> '..UserId..
'\n ✧ معرفه -> @'..UserName..
'\n ✧ رتبته -> '..RinkBot..
'\n ✧ رسائله -> '..TotalMsg..
'\n ✧ تعديلاته -> '..TotalEdit..
'\n ✧ تفاعله -> '..TotalMsgT..
'*',"md",true) 
end
if text == 'رتبتي' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local ban = bot.getUser(msg.sender_id.user_id)
local Name = '['..ban.first_name..'](tg://user?id='..ban.id..')' or 'لا يوجد اسم'
local news = ' 🌚❤️ رتبتك في البوت ⤌ '..msg.Name_Controller
local Jabwa = '*✧ اهلا عزيزي ⤌* '..Name
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text =news,url = "https://t.me/"..ban.username..""}, },}}
return bot.sendText(msg_chat_id, msg_id, Jabwa, 'md', false, false, false, false, reply_markup)
end
if text == 'معلوماتي' or text == 'موقعي' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserInfo = bot.getUser(msg.sender_id.user_id)
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
StatusMemberChat = 'مالك المجموعه'
elseif (StatusMember == "chatMemberStatusAdministrator") then
StatusMemberChat = 'مشرف المجموعه'
else
StatusMemberChat = 'عضو في المجموعه'
end
local UserId = msg.sender_id.user_id
local RinkBot = msg.Name_Controller
local TotalMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local TotalMsgT = Total_message(TotalMsg) 
if UserInfo.username then
UserInfousername = '@'..UserInfo.username..''
else
UserInfousername = 'لا يوجد'
end
if StatusMemberChat == 'مشرف المجموعه' then 
local GetMemberStatus = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status
if GetMemberStatus.can_change_info then
change_info = '〘 ✅ 〙' else change_info = '〘 ❌ 〙'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '〘 ✅ 〙' else delete_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_invite_users then
invite_users = '〘 ✅ 〙' else invite_users = '〘 ❌ 〙'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '〘 ✅ 〙' else pin_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '〘 ✅ 〙' else restrict_members = '〘 ❌ 〙'
end
if GetMemberStatus.can_promote_members then
promote = '〘 ✅ 〙' else promote = '〘 ❌ 〙'
end
PermissionsUser = '*\n ✧ صلاحيات المستخدم :\n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • '..'\n ✧ تغيير المعلومات -> '..change_info..'\n ✧ تثبيت الرسائل -> '..pin_messages..'\n ✧ اضافه مستخدمين -> '..invite_users..'\n ✧ مسح الرسائل -> '..delete_messages..'\n ✧ حظر المستخدمين -> '..restrict_members..'\n ✧ اضافه المشرفين -> '..promote..'\n\n*'
end
return send(msg_chat_id,msg_id,
'\n* ✧ ايديك -> '..UserId..
'\n ✧ معرفك -> '..UserInfousername..
'\n ✧ رتبتك -> '..RinkBot..
'\n ✧ رتبته المجموعه: '..StatusMemberChat..
'\n ✧ رسائلك -> '..TotalMsg..
'\n ✧ سحكاتك -> '..TotalEdit..
'\n ✧ تفاعلك -> '..TotalMsgT..
'*'..(PermissionsUser or '') ,"md",true) 
end
if text == 'لقبي' then
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id)
if StatusMember.status.custom_title ~= "" then
Lakb = StatusMember.status.custom_title
else
Lakb = 'مشرف'
end
if (StatusMember.status.MARCOSbots == "chatMemberStatusCreator") then
return send(msg_chat_id,msg_id,'\n* ✧ لقبك { '..Lakb..' }* ',"md",true)  
elseif (StatusMember.status.MARCOSbots == "chatMemberStatusAdministrator") then
return send(msg_chat_id,msg_id,'\n* ✧ لقبك { '..Lakb..' }* ',"md",true)  
else
return send(msg_chat_id,msg_id,'\n* ✧ انت عضو في المجموعه* ',"md",true)  
end
end
if text == "تفاعلي" then
local TotalMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalMsgT = Total_message(TotalMsg) 
return send(msg_chat_id,msg_id,'\n* ✧ تفاعلك -> '..TotalMsgT..'* ',"md",true)  
end
if text == 'فحص البوت' then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local StatusMember = bot.getChatMember(msg_chat_id,MARCOS).status.MARCOSbots
if (StatusMember ~= "chatMemberStatusAdministrator") then
return send(msg_chat_id,msg_id,' ✧ البوت عضو في المجموعه ',"md",true) 
end
local GetMemberStatus = bot.getChatMember(msg_chat_id,MARCOS).status
if GetMemberStatus.can_change_info then
change_info = '〘 ✅ 〙' else change_info = '〘 ❌ 〙'
end
if GetMemberStatus.can_delete_messages then
delete_messages = '〘 ✅ 〙' else delete_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_invite_users then
invite_users = '〘 ✅ 〙' else invite_users = '〘 ❌ 〙'
end
if GetMemberStatus.can_pin_messages then
pin_messages = '〘 ✅ 〙' else pin_messages = '〘 ❌ 〙'
end
if GetMemberStatus.can_restrict_members then
restrict_members = '〘 ✅ 〙' else restrict_members = '〘 ❌ 〙'
end
if GetMemberStatus.can_promote_members then
promote = '〘 ✅ 〙' else promote = '〘 ❌ 〙'
end
PermissionsUser = '*\n ✧ صلاحيات البوت -> مشرف في المجموعه :\n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • '..'\n ✧ تغيير المعلومات -> '..change_info..'\n ✧ تثبيت الرسائل -> '..pin_messages..'\n ✧ اضافه مستخدمين -> '..invite_users..'\n ✧ مسح الرسائل -> '..delete_messages..'\n ✧ حظر المستخدمين -> '..restrict_members..'\n ✧ اضافه المشرفين -> '..promote..'\n\n*'
return send(msg_chat_id,msg_id,PermissionsUser,"md",true) 
end

if text and text:match('^مسح (%d+)$') then
local NumMessage = text:match('^مسح (%d+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).Delmsg == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه مسح الرسائل* ',"md",true)  
end
if tonumber(NumMessage) > 1000 then
return send(msg_chat_id,msg_id,'\n* ✧ العدد اكثر من 1000 لا تستطيع المسح',"md",true)  
end
local Message = msg.id
for i=1,tonumber(NumMessage) do
local deleteMessages = bot.deleteMessages(msg.chat_id,{[1]= Message})
var(deleteMessages)
Message = Message - 1048576
end
send(msg_chat_id, msg_id, " ✧ تم مسح - "..NumMessage.. ' رساله', 'md')
end

if text == ('رفع مدير عام') and msg.reply_to_message_id ~= 0 then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:sadd(MARCOS.."Specialall:Group",Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم رفعه مدير عام ").Reply,"md",true)  
end
if text and text:match('^رفع مدير عام @(%S+)$') then
local UserName = text:match('^رفع مدير عام @(%S+)$')
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
Redis:sadd(MARCOS.."Specialall:Group",UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم رفعه مدير عام ").Reply,"md",true)  
end 
if text == ('تنزيل مدير عام') and msg.reply_to_message_id ~= 0 then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:srem(MARCOS.."Specialall:Group",Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله مدير عام ").Reply,"md",true)  
end
if text and text:match('^تنزيل مدير عام @(%S+)$') then
local UserName = text:match('^تنزيل مدير عام @(%S+)$')
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
Redis:srem(MARCOS.."Specialall:Group",UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله مدير عام ").Reply,"md",true)  
end 


if text and text:match('^تنزيل (.*) @(%S+)$') then
local UserName = {text:match('^تنزيل (.*) @(%S+)$')}
local UserId_Info = bot.searchPublicChat(UserName[2])
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName[2]:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if UserName[1] == "مطور ثانوي" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Devss:Groups",UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Devss:Groups",UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله مطور ثانوي").Reply,"md",true)  
end
end
if UserName[1] == "مطور" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Dev:Groups",UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله مطور مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Dev:Groups",UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله مطور ").Reply,"md",true)  
end
end
if UserName[1] == "مالك" then
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.Dev then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if not Redis:sismember(MARCOS.."Ownerss:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله مالك مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Ownerss:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله مالك ").Reply,"md",true)  
end
end
if UserName[1] == "منشئ اساسي" then
if not msg.Ownerss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(8)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."SuperCreator:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."SuperCreator:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله منشئ اساسي ").Reply,"md",true)  
end
end
if UserName[1] == "منشئ" then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Creator:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله من المنشئين مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله من المنشئين ").Reply,"md",true)  
end
end
if UserName[1] == "مدير" then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Manger:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله من المدراء مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله من المدراء ").Reply,"md",true)  
end
end
if UserName[1] == "ادمن" then
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Manger then
testmod = true
else
testmod = false
end
if testmod == false then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Admin:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله من الادمنيه مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله من الادمنيه ").Reply,"md",true)  
end
end
if UserName[1] == "مميز" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Special:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله من المميزين مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Special:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله من المميزبن ").Reply,"md",true)  
end
end
end
if text and text:match("^تنزيل (.*)$") and msg.reply_to_message_id ~= 0 then
local TextMsg = text:match("^تنزيل (.*)$")
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if TextMsg == 'مطور ثانوي' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Devss:Groups",Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Devss:Groups",Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله مطور ثانوي").Reply,"md",true)  
end
end
if TextMsg == 'مطور' then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Dev:Groups",Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله مطور مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Dev:Groups",Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله مطور ").Reply,"md",true)  
end
end
if TextMsg == "مالك" then
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.Dev then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if not Redis:sismember(MARCOS.."Ownerss:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله مالك مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Ownerss:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله مالك ").Reply,"md",true)  
end
end
if TextMsg == "منشئ اساسي" then
if not msg.Ownerss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(8)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."SuperCreator:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."SuperCreator:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله منشئ اساسي ").Reply,"md",true)  
end
end
if TextMsg == "منشئ" then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Creator:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من المنشئين مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من المنشئين ").Reply,"md",true)  
end
end
if TextMsg == "مدير" then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Manger:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من المدراء مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من المدراء ").Reply,"md",true)  
end
end
if TextMsg == "ادمن" then
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Manger then
testmod = true
else
testmod = false
end
if testmod == false then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Admin:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من الادمنيه مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من الادمنيه ").Reply,"md",true)  
end
end
if TextMsg == "مميز" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Special:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من المميزين مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Special:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من المميزبن ").Reply,"md",true)  
end
end
if TextMsg == "خول" then
if not Redis:sismember(MARCOS.."kholat:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من الخولات قبل كدة 🙃 ").Reply,"md",true)  
else
Redis:srem(MARCOS.."kholat:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من الخولات لازم ياخد دروس رجوله😂🌚 ").Reply,"md",true)  
end
end
if TextMsg == "وتكه" then
if not Redis:sismember(MARCOS.."wtka:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من الوتكات قبل كدة 🙃 ").Reply,"md",true)  
else
Redis:srem(MARCOS.."wtka:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيلها من الوتكات بعد معرفنا انها فلاتر😂🌚 ").Reply,"md",true)  
end
end
if TextMsg == "متوحد" then
if not Redis:sismember(MARCOS.."twhd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ اتعالج خلاص 🙃 ").Reply,"md",true)  
else
Redis:srem(MARCOS.."twhd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من المتوحدين بعد ما اتعالج😂🌚 ").Reply,"md",true)  
end
end
if TextMsg == "متوحده" then
if not Redis:sismember(MARCOS.."twhd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ اتعالج خلاص 🙃 ").Reply,"md",true)  
else
Redis:srem(MARCOS.."twhd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من المتوحدين بعد ما اتعالج😂?? ").Reply,"md",true)  
end
end
if TextMsg == "كلب" then
if not Redis:sismember(MARCOS.."klb:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ الكلب دا بطل هوهوه ونزلناه  🙃 ").Reply,"md",true)  
else
Redis:srem(MARCOS.."klb:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من الكلاب خليه يرجع العضمه😂🌚 ").Reply,"md",true)  
end
end
if TextMsg == "حمار" then
if not Redis:sismember(MARCOS.."mar:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ الحمار دا عقل من زمان   🙃 ").Reply,"md",true)  
else
Redis:srem(MARCOS.."mar:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من الحمير تعال نفك الكارو منك😂🌚 ").Reply,"md",true)  
end
end
if TextMsg == "سمب" then
if not Redis:sismember(MARCOS.."smb:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ بطل يمشي ورا الحريم 😂   🙃 ").Reply,"md",true)  
else
Redis:srem(MARCOS.."smb:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من السمب لازم ياخد دروس رجوله😂🌚 ").Reply,"md",true)  
end
end
if TextMsg == "قرد" then
if not Redis:sismember(MARCOS.."2rd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ بطل يطنط على شجر 😂   🙃 ").Reply,"md",true)  
else
Redis:srem(MARCOS.."2rd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من قايمه القرود تعال نزلو من الشجره😂🌚 ").Reply,"md",true)  
end
end
if TextMsg == "عره" then
if not Redis:sismember(MARCOS.."3ra:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ اعقل بقا 😂   🙃 ").Reply,"md",true)  
else
Redis:srem(MARCOS.."3ra:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ مش عارف الناس هتحترمك تاني بعد منزلناك ولا لا😂🌚 ").Reply,"md",true)  
end
end
if TextMsg == "غبي" then
if not Redis:sismember(MARCOS.."8by:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ يارب تعقل وتبقا ذكي 😂   🙃 ").Reply,"md",true)  
else
Redis:srem(MARCOS.."8by:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ خير اهو شغل مخك اهو نزلناك من الاغبياء🌚 ").Reply,"md",true)  
end
end
end


if text and text:match('^تنزيل (.*) (%d+)$') then
local UserId = {text:match('^تنزيل (.*) (%d+)$')}
local UserInfo = bot.getUser(UserId[2])
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if UserId[1] == 'مطور ثانوي' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Devss:Groups",UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم تنزيله مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Devss:Groups",UserId) 
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم تنزيله مطور ثانوي").Reply,"md",true)  
end
end
if UserId[1] == 'مطور' then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Dev:Groups",UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم تنزيله مطور مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Dev:Groups",UserId) 
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم تنزيله مطور ").Reply,"md",true)  
end
end
if UserId[1] == "مالك" then
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.Dev then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if not Redis:sismember(MARCOS.."Ownerss:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله مالك مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Ownerss:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله مالك ").Reply,"md",true)  
end
end
if UserId[1] == "منشئ اساسي" then
if not msg.Ownerss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(8)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."SuperCreator:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."SuperCreator:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله منشئ اساسي ").Reply,"md",true)  
end
end
if UserId[1] == "منشئ" then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Creator:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله من المنشئين مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله من المنشئين ").Reply,"md",true)  
end
end
if UserId[1] == "مدير" then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Manger:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله من المدراء مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله من المدراء ").Reply,"md",true)  
end
end
if UserId[1] == "ادمن" then
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Manger then
testmod = true
else
testmod = false
end
if testmod == false then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Admin:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله من الادمنيه مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله من الادمنيه ").Reply,"md",true)  
end
end
if UserId[1] == "مميز" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:sismember(MARCOS.."Special:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله من المميزين مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."Special:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم تنزيله من المميزبن ").Reply,"md",true)  
end
end
end
if text and text:match('^رفع (.*) @(%S+)$') then
local UserName = {text:match('^رفع (.*) @(%S+)$')}
local UserId_Info = bot.searchPublicChat(UserName[2])
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName[2]:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if UserName[1] == "مطور ثانوي" then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Devss:Groups",UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Devss:Groups",UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته مطور ثانوي").Reply,"md",true)  
end
end
if UserName[1] == "مطور" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Dev:Groups",UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته مطور مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Dev:Groups",UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته مطور ").Reply,"md",true)  
end
end
if UserName[1] == "مالك" then
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.Dev then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if Redis:sismember(MARCOS.."Ownerss:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته مالك مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Ownerss:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته مالك ").Reply,"md",true)  
end
end
if UserName[1] == "منشئ اساسي" then
if not msg.Ownerss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(8)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."SuperCreator:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."SuperCreator:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته منشئ اساسي ").Reply,"md",true)  
end
end
if UserName[1] == "منشئ" then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Creator:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته منشئ  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Creator:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته منشئ  ").Reply,"md",true)  
end
end
if UserName[1] == "مدير" then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Manger:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته مدير  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Manger:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته مدير  ").Reply,"md",true)  
end
end
if UserName[1] == "ادمن" then
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Manger then
testmod = true
else
testmod = false
end
if testmod == false then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator and not Redis:get(MARCOS.."Status:SetId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(MARCOS.."Admin:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته ادمن  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Admin:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته ادمن  ").Reply,"md",true)  
end
end
if UserName[1] == "مميز" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator and not Redis:get(MARCOS.."Status:SetId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(MARCOS.."Special:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته مميز  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Special:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم ترقيته مميز  ").Reply,"md",true)  
end
end
end
if text and text:match("^رفع (.*)$") and msg.reply_to_message_id ~= 0 then
local TextMsg = text:match("^رفع (.*)$")
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if TextMsg == 'مطور ثانوي' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Devss:Groups",Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Devss:Groups",Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته مطور ثانوي").Reply,"md",true)  
end
end
if TextMsg == 'مطور' then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Dev:Groups",Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته مطور مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Dev:Groups",Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته مطور ").Reply,"md",true)  
end
end
if TextMsg == "مالك" then
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.Dev then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if Redis:sismember(MARCOS.."Ownerss:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته مالك مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Ownerss:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته مالك ").Reply,"md",true)  
end
end
if TextMsg == "منشئ اساسي" then
if not msg.Ownerss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(8)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."SuperCreator:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."SuperCreator:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته منشئ اساسي ").Reply,"md",true)  
end
end
if TextMsg == "منشئ" then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Creator:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته منشئ  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Creator:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته منشئ  ").Reply,"md",true)  
end
end
if TextMsg == "مدير" then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Manger:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته مدير  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Manger:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته مدير  ").Reply,"md",true)  
end
end
if TextMsg == "ادمن" then
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Manger then
testmod = true
else
testmod = false
end
if testmod == false then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator and not Redis:get(MARCOS.."Status:SetId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(MARCOS.."Admin:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته ادمن  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Admin:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته ادمن  ").Reply,"md",true)  
end
end
if TextMsg == "مميز" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator and not Redis:get(MARCOS.."Status:SetId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(MARCOS.."Special:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته مميز  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Special:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته مميز  ").Reply,"md",true)  
end
end
if TextMsg == "خول" then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."kholat:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ محطوط ف قايمة الخولات من  بدري 😂 ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."kholat:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم ترقيته خول بالمجموعة لما يسترجل هننزلو 😂  ").Reply,"md",true)  
end
end
if TextMsg == "وتكه" then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."wtka:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ دي اجمد بنوته هنا ف القايمة من بدري يباشه 😂 ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."wtka:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ جامدة وتستاهل بصراحة تترفع وتكه 😂  ").Reply,"md",true)  
end
end
if TextMsg == "متوحد" then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."twhd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ دا مولود كده ومحطوط عندنا من زمان 😂 😂 ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."twhd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم رفعه متوحد  كنت شاكك فيه انو سايكو😂  ").Reply,"md",true)  
end
end
if TextMsg == "متوحده" then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."twhd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ دا مولود كده ومحطوط عندنا من زمان 😂 😂 ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."twhd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم رفعه متوحد  كنت شاكك فيه انو سايكو😂  ").Reply,"md",true)  
end
end
if TextMsg == "كلب" then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."klb:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ دا مولود كده ومحطوط عندنا من زمان بيشمشم على اي بنت 😂 😂 ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."klb:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم رفعه كلب خليه يجي ياخد عضمه😂  ").Reply,"md",true)  
end
end
if TextMsg == "حمار" then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."mar:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ نزلناه من زمان وفكينا الكارو 😂 😂 ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."mar:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم رفعه حمار خليه يجي نركبلو عربية كرو😂  ").Reply,"md",true)  
end
end
if TextMsg == "سمب" then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."smb:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ نزلناه من زمان واخد كورسات رجوله 😂 😂 ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."smb:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم رفعه سمب في المجموعه عقبال ميبقا زي النسوان الي تعبينو 😂  ").Reply,"md",true)  
end
end
if TextMsg == "قرد" then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."2rd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ نزلناه من زمان من ع الشجره 😂 😂 ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."2rd:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم رفعه قرد في المجموعه تعال خدلك موزه  😂  ").Reply,"md",true)  
end
end
if TextMsg == "عره" then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."3ra:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ محدش محترمه كده كده  😂 😂 ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."3ra:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم رفعه عره في المجموعه قولو عيب كده 😂  ").Reply,"md",true)  
end
end
if TextMsg == "غبي" then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."8by:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ هو كده كده محطوط ف قايمة الاغبية  😂 😂 ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."8by:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم رفعه غبي المجموعة  😂  ").Reply,"md",true)  
end
end
end
if text and text:match('^رفع (.*) (%d+)$') then
local UserId = {text:match('^رفع (.*) (%d+)$')}
local UserInfo = bot.getUser(UserId[2])
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if UserId[1] == 'مطور ثانوي' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Devss:Groups",UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم ترقيته مطور ثانوي مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Devss:Groups",UserId) 
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم ترقيته مطور ثانوي").Reply,"md",true)  
end
end
if UserId[1] == 'مطور' then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Dev:Groups",UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم ترقيته مطور مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Dev:Groups",UserId) 
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم ترقيته مطور ").Reply,"md",true)  
end
end
if UserId[1] == "مالك" then
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.Dev then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Ownerss:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته مالك مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Ownerss:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته مالك ").Reply,"md",true)  
end
end
if UserId[1] == "منشئ اساسي" then
if not msg.Ownerss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(8)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."SuperCreator:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته منشئ اساسي مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."SuperCreator:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته منشئ اساسي ").Reply,"md",true)  
end
end
if UserId[1] == "منشئ" then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Creator:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته منشئ  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Creator:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته منشئ  ").Reply,"md",true)  
end
end
if UserId[1] == "مدير" then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:sismember(MARCOS.."Manger:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته مدير  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Manger:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته مدير  ").Reply,"md",true)  
end
end
if UserId[1] == "ادمن" then
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Manger then
testmod = true
else
testmod = false
end
if testmod == false then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator and not Redis:get(MARCOS.."Status:SetId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(MARCOS.."Admin:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته ادمن  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Admin:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته ادمن  ").Reply,"md",true)  
end
end
if UserId[1] == "مميز" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator and not Redis:get(MARCOS.."Status:SetId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الرفع) من قبل المنشئين","md",true)
end 
if Redis:sismember(MARCOS.."Special:Group"..msg_chat_id,UserId[2]) then
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته مميز  مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."Special:Group"..msg_chat_id,UserId[2]) 
return send(msg_chat_id,msg_id,Reply_Status(UserId[2]," ✧ تم ترقيته مميز  ").Reply,"md",true)  
end
end
end
if text and text:match("^تغيير رد المطور (.*)$") then
local Teext = text:match("^تغيير رد المطور (.*)$") 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."Developer:Bot:Reply"..msg.chat_id,Teext)
return send(msg_chat_id,msg_id," ✧ تم تغيير رد المطور الى :"..Teext)
elseif text and text:match("^تغيير رد المالك (.*)$") then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local Teext = text:match("^تغيير رد المالك (.*)$") 
Redis:set(MARCOS.."PresidentQ:Group:Reply"..msg.chat_id,Teext)
return send(msg_chat_id,msg_id," ✧ تم تغيير رد المالك الى :"..Teext)
elseif text and text:match("^تغيير رد المنشئ الاساسي (.*)$") then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local Teext = text:match("^تغيير رد المنشئ الاساسي (.*)$") 
Redis:set(MARCOS.."President:Group:Reply"..msg.chat_id,Teext)
return send(msg_chat_id,msg_id," ✧ تم تغيير رد المنشئ الاساسي الى :"..Teext)
elseif text and text:match("^تغيير رد المنشئ (.*)$") then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local Teext = text:match("^تغيير رد المنشئ (.*)$") 
Redis:set(MARCOS.."Constructor:Group:Reply"..msg.chat_id,Teext)
return send(msg_chat_id,msg_id," ✧ تم تغيير رد المنشئ الى :"..Teext)
elseif text and text:match("^تغيير رد المدير (.*)$") then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local Teext = text:match("^تغيير رد المدير (.*)$") 
Redis:set(MARCOS.."Manager:Group:Reply"..msg.chat_id,Teext) 
return send(msg_chat_id,msg_id," ✧ تم تغيير رد المدير الى :"..Teext)
elseif text and text:match("^تغيير رد الادمن (.*)$") then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local Teext = text:match("^تغيير رد الادمن (.*)$") 
Redis:set(MARCOS.."Admin:Group:Reply"..msg.chat_id,Teext)
return send(msg_chat_id,msg_id," ✧ تم تغيير رد الادمن الى :"..Teext)
elseif text and text:match("^تغيير رد المميز (.*)$") then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local Teext = text:match("^تغيير رد المميز (.*)$") 
Redis:set(MARCOS.."Vip:Group:Reply"..msg.chat_id,Teext)
return send(msg_chat_id,msg_id," ✧ تم تغيير رد المميز الى :"..Teext)
elseif text and text:match("^تغيير رد العضو (.*)$") then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local Teext = text:match("^تغيير رد العضو (.*)$") 
Redis:set(MARCOS.."Mempar:Group:Reply"..msg.chat_id,Teext)
return send(msg_chat_id,msg_id," ✧ تم تغيير رد العضو الى :"..Teext)
elseif text == 'مسح رد المطور' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."Developer:Bot:Reply"..msg.chat_id)
return send(msg_chat_id,msg_id," ✧ تم حدف رد المطور")
elseif text == 'مسح رد المنشئ الاساسي' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."President:Group:Reply"..msg.chat_id)
return send(msg_chat_id,msg_id," ✧ تم مسح رد المنشئ الاساسي ")
elseif text == 'مسح رد المالك' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."PresidentQ:Group:Reply"..msg.chat_id)
return send(msg_chat_id,msg_id," ✧ تم مسح رد المالك ")
elseif text == 'مسح رد المنشئ' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."Constructor:Group:Reply"..msg.chat_id)
return send(msg_chat_id,msg_id," ✧ تم مسح رد المنشئ ")
elseif text == 'مسح رد المدير' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."Manager:Group:Reply"..msg.chat_id) 
return send(msg_chat_id,msg_id," ✧ تم مسح رد المدير ")
elseif text == 'مسح رد الادمن' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."Admin:Group:Reply"..msg.chat_id)
return send(msg_chat_id,msg_id," ✧ تم مسح رد الادمن ")
elseif text == 'مسح رد المميز' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."Vip:Group:Reply"..msg.chat_id)
return send(msg_chat_id,msg_id," ✧ تم مسح رد المميز")
elseif text == 'مسح رد العضو' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."Mempar:Group:Reply"..msg.chat_id)
return send(msg_chat_id,msg_id," ✧ تم مسح رد العضو")
end 
if text and text:match('^ضع رتبه @(%S+) (.*)$') and not Redis:get(MARCOS..'Redis:setRt'..msg.chat_id) then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserName = {text:match('^ضع رتبه @(%S+) (.*)$')}
local UserId_Info = bot.searchPublicChat(UserName[1])
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName[1] and UserName[1]:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
Redis:set(MARCOS..'SetRt'..msg_chat_id..':'..UserId_Info.id,UserName[2])
return send(msg_chat_id,msg_id,"\n ✧ تم وضع رتبه له -> "..UserName[2],"md",true)  
end
if text and text:match('^ضع رتبه (.*)$') and msg.reply_to_message_id ~= 0 and not Redis:get(MARCOS..'Redis:setRt'..msg.chat_id) then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:set(MARCOS..'SetRt'..msg_chat_id..':'..Message_Reply.sender_id.user_id,text:match('^ضع رتبه (.*)$'))
return send(msg_chat_id,msg_id,"\n ✧ تم وضع رتبه له -> "..text:match('^ضع رتبه (.*)$'),"md",true)  
end
if text and text:match('^مسح رتبه @(%S+)$') and not Redis:get(MARCOS..'Redis:setRt'..msg.chat_id) then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserName = text:match('^مسح رتبه @(%S+)$')
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
Redis:del(MARCOS..'SetRt'..msg_chat_id..':'..UserId_Info.id)
return send(msg_chat_id,msg_id,"\n ✧ تم مسح رتبه  التي وضعتها","md",true)  
end
if text and text:match('^مسح رتبه$') and msg.reply_to_message_id ~= 0 and not Redis:get(MARCOS..'Redis:setRt'..msg.chat_id) then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:del(MARCOS..'SetRt'..msg_chat_id..':'..Message_Reply.sender_id.user_id)
return send(msg_chat_id,msg_id,"\n ✧ تم مسح رتبه التي وضعتها ","md",true)  
end

if text == "تعطيل ضع رتبه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'Redis:setRt'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر وضع الرتبه مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."Redis:setRt"..msg.chat_id,"true")
send(msg_chat_id,msg_id, ' ✧ تم تعطيل امر وضع الرتبه \n ꪤ',"md")
end
end
if text == "تفعيل ضع رتبه" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'Redis:setRt'..msg.chat_id)  then
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر وضع الرتبه مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."Redis:setRt"..msg.chat_id)
send(msg_chat_id,msg_id, ' ✧ تم تفعيل امر وضع الرتبه \n ꪤ',"md")
end
end


if text == 'تاك عام' and (Redis:get(MARCOS..'tagallgroup'..msg.chat_id) == "open") then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end

local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].status.MARCOSbots == "chatMemberStatusCreator" then
local UserInfo = bot.getUser(v.member_id.user_id)
if FlterBio(UserInfo.first_name) ~= "" then
if UserInfo.username then
Creator = "* ✧ مالك المجموعه -> @"..UserInfo.username.."*\n"
else
Creator = " ✧ مالك المجموعه -> *["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserInfo.id..")\n"
end
send(msg_chat_id,msg_id,Creator,"md",true)  
end
end
end

local Info_Members = Redis:smembers(MARCOS.."Ownerss:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n* ✧ قائمه المالكين \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
send(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = Redis:smembers(MARCOS.."SuperCreator:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n* ✧ قائمه المنشئين الاساسيين \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
send(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = Redis:smembers(MARCOS.."Creator:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n* ✧ قائمه المنشئين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
send(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = Redis:smembers(MARCOS.."Manger:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n* ✧ قائمه المدراء  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
send(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = Redis:smembers(MARCOS.."Admin:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n* ✧ قائمه الادمنيه  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
send(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = Redis:smembers(MARCOS.."Special:Group"..msg_chat_id) 
if #Info_Members ~= 0 then
local ListMembers = '\n* ✧ قائمه المميزين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
send(msg_chat_id, msg_id, ListMembers, 'md')
end
local Info_Members = bot.searchChatMembers(msg_chat_id, "*", 200)
local List_Members = Info_Members.members
listall = '\n* ✧ قائمه الاعضاء \n  ꔹ━━━━━ꔹ𝙈𝘼ꔹ━━━━━ꔹ *\n'
for k, v in pairs(List_Members) do
local UserInfo = bot.getUser(v.member_id.user_id)
if UserInfo.username ~= "" then
listall = listall.."*"..k.." - @"..UserInfo.username.."*\n"
else
listall = listall.."*"..k.." ->* ["..UserInfo.id.."](tg://user?id="..UserInfo.id..")\n"
end
end
send(msg_chat_id,msg_id,listall,"md",true)  
end

if text == 'الثانوين' or text == 'المطورين الثانويين' or text == 'المطورين الثانوين' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Devss:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id,"*✧ لا يوجد ثانوين في البوت*","md",true)  
end
local datar = {data = {{text = "✧ مسح الثانوين" , data = msg.sender_id.user_id..'/Devss'}}}
for i = 1,#Info_Members do
infoo = bot.getUser(Info_Members[i])
datar[i] = {{text = infoo.first_name , data =msg.sender_id.user_id..'/Survey/'..Info_Members[i]}}
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = datar
}
bot.sendText(msg.chat_id,msg.id,'*✧ قائمه الثانوين البوت*',"md",false, false, false, false, reply_markup)
end
if text == 'المطورين' then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Dev:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id,"*✧ لا يوجد مطورين في البوت*","md",true)  
end
local datar = {data = {{text = "✧ مسح المطورين" , data = msg.sender_id.user_id..'/Dev'}}}
for i = 1,#Info_Members do
infoo = bot.getUser(Info_Members[i])
datar[i] = {{text = infoo.first_name , data =msg.sender_id.user_id..'/deldev/'..Info_Members[i]}}
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = datar
}
bot.sendText(msg.chat_id,msg.id,'*✧ قائمه مطورين البوت*',"md",false, false, false, false, reply_markup)
end
if text == 'المالكين' then
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.Creator then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(5)..' , مالك المجموعه }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Ownerss:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد منشئين اساسيين حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المالكين \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المالكين', data = msg.sender_id.user_id..'/Ownerss'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'المنشئين الاساسيين' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."SuperCreator:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد منشئين اساسيين حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المنشئين الاساسيين \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المنشئين الاساسيين', data = msg.sender_id.user_id..'/SuperCreator'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'المنشئين' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Creator:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد منشئين حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المنشئين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المنشئين', data = msg.sender_id.user_id..'/Creator'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'المدراء' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Manger:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مدراء حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المدراء  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المدراء', data = msg.sender_id.user_id..'/Manger'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'الادمنيه' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Admin:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد ادمنيه حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه الادمنيه  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح الادمنيه', data = msg.sender_id.user_id..'/Admin'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'المميزين' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Special:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مميزين حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المميزين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المميزين', data = msg.sender_id.user_id..'/DelSpecial'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md')
end
if text == 'الخولات' then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."kholat:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد خولات حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه الخولات  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح الخولات', data = msg.sender_id.user_id..'/Delkholat'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'الوتكات' then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."wtka:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد وتكات ناشفة زي المستشفي , ","md",true)  
end
ListMembers = '\n* ✧ قائمه الوتكات  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح الوتكات', data = msg.sender_id.user_id..'/Delwtk'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'المتوحدين' then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."twhd:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ مفيش متوحدين هنا كلهم اتعالجو 😂😂 , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المتوحدين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المتوحدين', data = msg.sender_id.user_id..'/Deltwhd'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'الكلاب' then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."klb:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ مفيش كلاب هنا ارفعلنل شويه نضيهم عضم 😂😂 , ","md",true)  
end
ListMembers = '\n* ✧ قائمه الكلاب  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح الكلاب', data = msg.sender_id.user_id..'/Delklb'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'الحمير' then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."mar:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ مفيش حمير هنا 😂😂 , ","md",true)  
end
ListMembers = '\n* ✧ قائمه الحمير  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح الحمير', data = msg.sender_id.user_id..'/Delmar'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'العرر' then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."3ra:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ مفيش عرر هنا 😂😂 , ","md",true)  
end
ListMembers = '\n* ✧ قائمه العرر  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح العرر', data = msg.sender_id.user_id..'/Del3ra'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'السمب' then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."smb:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ مفيش سمباويه هنا 😂😂 , ","md",true)  
end
ListMembers = '\n* ✧ قائمه السمب  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح السمب', data = msg.sender_id.user_id..'/Delsmb'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'القرود' then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."2rd:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ مفيش قرود هنا يصحبي 😂😂 , ","md",true)  
end
ListMembers = '\n* ✧ قائمه القرود  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح القرود', data = msg.sender_id.user_id..'/Del2rd'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'الاغبياء' then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."8by:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ مفيش اغبيه هنا يصحبي 😂😂 , ","md",true)  
end
ListMembers = '\n* ✧ قائمه الاغبيه  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح الاغبياء', data = msg.sender_id.user_id..'/Del8by'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'المحظورين عام' or text == 'قائمه العام' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."BanAll:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد محظورين عام حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المحظورين عام  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المحظورين عام', data = msg.sender_id.user_id..'/BanAll'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'المحظورين' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."BanGroup:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد محظورين حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المحظورين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المحظورين', data = msg.sender_id.user_id..'/BanGroup'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'المكتومين' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."SilentGroup:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مكتومين حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المكتومين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المكتومين', data = msg.sender_id.user_id..'/SilentGroupGroup'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text and text:match("^تفعيل (.*)$") and msg.reply_to_message_id == 0 then
local TextMsg = text:match("^تفعيل (.*)$")
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if TextMsg == 'الرابط' then
Redis:set(MARCOS.."Status:Link"..msg_chat_id,true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل الرابط ","md",true)
end
if TextMsg == 'الرسائل اليوميه' then
Redis:set(MARCOS.."msg:match:"..msg_chat_id,true) 
return send(msg_chat_id,msg_id,"* ✧ تم تفعيل الرسائل اليوميه بنجاح * ","md",true)
end
if TextMsg == 'الترحيب' then
Redis:set(MARCOS.."Status:Welcome"..msg_chat_id,true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل الترحيب ","md",true)
end
if TextMsg == 'الايدي' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Status:Id"..msg_chat_id,true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل الايدي ","md",true)
end
if TextMsg == 'الايدي بالصوره' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Status:IdPhoto"..msg_chat_id,true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل الايدي بالصوره ","md",true)
end
if TextMsg == 'الردود' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Status:Reply"..msg_chat_id,true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل الردود ","md",true)
end
if TextMsg == 'الردود العامه' then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Status:ReplySudo"..msg_chat_id,true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل الردود العامه ","md",true)
end
if TextMsg == 'الحظر' or TextMsg == 'الطرد' or TextMsg == 'التقييد' then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Status:BanId"..msg_chat_id,true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل الحظر , الطرد , التقييد","md",true)
end
if TextMsg == 'الرفع' then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Status:SetId"..msg_chat_id,true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل الرفع ","md",true)
end
if TextMsg == 'الالعاب' then
Redis:set(MARCOS.."Status:Games"..msg_chat_id,true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل الالعاب ","md",true)
end
if TextMsg == 'اطردني' then
Redis:set(MARCOS.."Status:KickMe"..msg_chat_id,true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل اطردني ","md",true)
end
if TextMsg == 'البوت الخدمي' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."BotFree",true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل البوت الخدمي ","md",true)
end
if TextMsg == 'التواصل' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."TwaslBot",true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل التواصل داخل البوت ","md",true)
end

end

if msg.content.video_note or msg.content.document or msg.content.audio or msg.content.video or msg.content.voice_note or msg.content.sticker or msg.content.animation or msg.content.photo then      
Redis:sadd(MARCOS.."allM"..msg.chat_id, msg.id)
if Redis:get(MARCOS.."Status:Del:Media"..msg.chat_id) then    
local Numbardel = Redis:get(MARCOS.."allM:numdel"..msg.chat_id) or 200
local gmedia = Redis:scard(MARCOS.."allM"..msg.chat_id)  
if tonumber(gmedia) >= tonumber(Numbardel) then
local liste = Redis:smembers(MARCOS.."allM"..msg.chat_id)
for k,v in pairs(liste) do
local Mesge = v
if Mesge then
t = " ✧ تم مسح "..k.." من الوسائط تلقائيا\n ✧ يمكنك تعطيل الميزه باستخدام الامر ( `تعطيل المسح التلقائي` )"
bot.deleteMessages(msg.chat_id,{[1]= Mesge})
end
end
send(msg_chat_id,msg_id, t)
Redis:del(MARCOS.."allM"..msg.chat_id)
end
end
end
if text and text:match("^ضع عدد المسح (%d+)$") then  
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
local Numbardel = text:match("^ضع عدد المسح (%d+)$")
Redis:set(MARCOS.."allM:numdel"..msg.chat_id,Numbardel) 
send(msg_chat_id,msg_id, 'تم تعيين العدد  الى -> '..Numbardel)
end
if text == "امسح" or text == "مسح الميديا" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local list = Redis:smembers(MARCOS.."allM"..msg.chat_id)
for k,v in pairs(list) do
local Message = v
if Message then
t = " ✧ تم مسح "..k.." من الوسائط الموجوده"
bot.deleteMessages(msg.chat_id,{[1]= Message})
Redis:del(MARCOS.."allM"..msg.chat_id)
end
end
if #list == 0 then
t = " ✧ لا يوجد ميديا في المجموعه"
end
 send(msg_chat_id,msg_id, t)
end
if text == ("الميديا") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local gmria = Redis:scard(MARCOS.."allM"..msg.chat_id)  
 send(msg_chat_id,msg_id," ✧ عدد الميديا الموجود هو (* "..gmria.." *)","md")
end
if text == "تعطيل المسح التلقائي" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end        
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."Status:Del:Media"..msg.chat_id)
 send(msg_chat_id,msg_id,' ✧ تم تعطيل المسح التلقائي للميديا')
return false
end 
if text == "تفعيل المسح التلقائي" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end        
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."Status:Del:Media"..msg.chat_id,true)
send(msg_chat_id,msg_id,' ✧ تم تفعيل المسح التلقائي للميديا')
return false
end 
if text and text:match("^برج (.*)$") and not Redis:get(MARCOS.."brjj"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Textbrj = text:match("^برج (.*)$")
gk = io.popen('curl -s "https://apiabs.ml/brg.php?brg='..URL.escape(Textbrj)..'"'):read('*a')
br = JSON.decode(gk)
send(msg_chat_id,msg_id, br.ok.abs)
end

if text == "غنيلي" or text == "غني" then 
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(MARCOS.."knele"..msg.chat_id) then
Abs = math.random(2,140); 
local Text ='* ✧ تم اختيار الاغنيه لك*'
keyboard = {} 
keyboard.inline_keyboard = {
{{text = '• قناة السورس •', url = "https://t.me/"..chsource..""}},
}
local MsgId = msg.id/2097152/0.5
local MSGID = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/TEAMSUL/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MSGID.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard)) 
end
end

if text and text:match("^تعطيل (.*)$") and msg.reply_to_message_id == 0 then
local TextMsg = text:match("^تعطيل (.*)$")
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if TextMsg == 'الرابط' then
Redis:del(MARCOS.."Status:Link"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم تعطيل الرابط ","md",true)
end
if TextMsg == 'الرسائل اليوميه' then
Redis:del(MARCOS.."msg:match:"..msg_chat_id)  
return send(msg_chat_id,msg_id,"* ✧ تم تعطيل الرسائل اليوميه بنجاح * ","md",true)
end
if TextMsg == 'الترحيب' then
Redis:del(MARCOS.."Status:Welcome"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم تعطيل الترحيب ","md",true)
end
if TextMsg == 'الايدي' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Status:Id"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم تعطيل الايدي ","md",true)
end
if TextMsg == 'الايدي بالصوره' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Status:IdPhoto"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم تعطيل الايدي بالصوره ","md",true)
end
if TextMsg == 'الردود' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Status:Reply"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم تعطيل الردود ","md",true)
end
if TextMsg == 'الردود العامه' then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Status:ReplySudo"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم تعطيل الردود العامه ","md",true)
end
if TextMsg == 'الحظر' or TextMsg == 'الطرد' or TextMsg == 'التقييد' then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Status:BanId"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم تعطيل الحظر , الطرد , التقييد","md",true)
end
if TextMsg == 'الرفع' then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Status:SetId"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم تعطيل الرفع ","md",true)
end
if TextMsg == 'الالعاب' then
Redis:del(MARCOS.."Status:Games"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم تعطيل الالعاب ","md",true)
end
if TextMsg == 'اطردني' then
Redis:del(MARCOS.."Status:KickMe"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم تعطيل اطردني ","md",true)
end
if TextMsg == 'البوت الخدمي' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."BotFree") 
return send(msg_chat_id,msg_id," ✧ تم تعطيل البوت الخدمي ","md",true)
end
if TextMsg == 'التواصل' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."TwaslBot") 
return send(msg_chat_id,msg_id," ✧ تم تعطيل التواصل داخل البوت ","md",true)
end

end

if text and text:match('^حظر عام @(%S+)$') then
local UserName = text:match('^حظر عام @(%S+)$')
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if Controllerbanall(msg_chat_id,UserId_Info.id) == true then 
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
if Redis:sismember(MARCOS.."BanAll:Groups",UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."BanAll:Groups",UserId_Info.id) 
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'banned',0)
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم حظره عام من المجموعات ").Reply,"md",true)  
end
end
if text and text:match('^الغاء العام @(%S+)$') then
local UserName = text:match('^الغاء العام @(%S+)$')
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if not Redis:sismember(MARCOS.."BanAll:Groups",UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم الغاء حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."BanAll:Groups",UserId_Info.id) 
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1,1})
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم الغاء حظره عام من المجموعات  ").Reply,"md",true)  
end
end
if text and text:match('^حظر @(%S+)$') then
local UserName = text:match('^حظر @(%S+)$')
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Admin then
testmod = true
else
testmod = false
end
if testmod == false then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
if Redis:sismember(MARCOS.."BanGroup:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."BanGroup:Group"..msg_chat_id,UserId_Info.id) 
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'banned',0)
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم حظره من المجموعه ").Reply,"md",true)  
end
end
if text and text:match('^الغاء حظر @(%S+)$') then
local UserName = text:match('^الغاء حظر @(%S+)$')
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Admin then
testmod = true
else
testmod = false
end
if testmod == false then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if not Redis:sismember(MARCOS.."BanGroup:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم الغاء حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."BanGroup:Group"..msg_chat_id,UserId_Info.id) 
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1,1})
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم الغاء حظره من المجموعه  ").Reply,"md",true)  
end
end

if text and text:match('^كتم @(%S+)$') then
local UserName = text:match('^كتم @(%S+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).Delmsg == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه مسح الرسائل* ',"md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if StatusSilent(msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
if Redis:sismember(MARCOS.."SilentGroup:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم كتمه في المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."SilentGroup:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم كتمه في المجموعه  ").Reply,"md",true)  
end
end
if text and text:match('^الغاء كتم @(%S+)$') then
local UserName = text:match('^الغاء كتم @(%S+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if not Redis:sismember(MARCOS.."SilentGroup:Group"..msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم الغاء كتمه من المجموعه ").Reply,"md",true)  
else
Redis:srem(MARCOS.."SilentGroup:Group"..msg_chat_id,UserId_Info.id) 
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم الغاء كتمه من المجموعه ").Reply,"md",true)  
end
end
if text and text:match('^تقييد (%d+) (.*) @(%S+)$') then
local UserName = {text:match('^تقييد (%d+) (.*) @(%S+)$') }
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local UserId_Info = bot.searchPublicChat(UserName[3])
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName[3] and UserName[3]:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
if UserName[2] == 'يوم' then
Time_Restrict = UserName[1]:match('(%d+)')
Time = Time_Restrict * 86400
end
if UserName[2] == 'ساعه' then
Time_Restrict = UserName[1]:match('(%d+)')
Time = Time_Restrict * 3600
end
if UserName[2] == 'دقيقه' then
Time_Restrict = UserName[1]:match('(%d+)')
Time = Time_Restrict * 60
end
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,0,0,0,0,0,0,0,0,tonumber(msg.date+Time)})
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تقييده في المجموعه \n ✧ لمدة -> "..UserName[1]..' '..UserName[2]).Reply,"md",true)  
end

if text and text:match('^تقييد (%d+) (.*)$') and msg.reply_to_message_id ~= 0 then
local TimeKed = {text:match('^تقييد (%d+) (.*)$') }
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
if TimeKed[2] == 'يوم' then
Time_Restrict = TimeKed[1]:match('(%d+)')
Time = Time_Restrict * 86400
end
if TimeKed[2] == 'ساعه' then
Time_Restrict = TimeKed[1]:match('(%d+)')
Time = Time_Restrict * 3600
end
if TimeKed[2] == 'دقيقه' then
Time_Restrict = TimeKed[1]:match('(%d+)')
Time = Time_Restrict * 60
end
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0,tonumber(msg.date+Time)})
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تقييده في المجموعه \n ✧ لمدة -> "..TimeKed[1]..' '..TimeKed[2]).Reply,"md",true)  
end

if text and text:match('^تقييد (%d+) (.*) (%d+)$') then
local UserId = {text:match('^تقييد (%d+) (.*) (%d+)$') }
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local UserInfo = bot.getUser(UserId[3])
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId[3]) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId[3]).." } *","md",true)  
end
if UserId[2] == 'يوم' then
Time_Restrict = UserId[1]:match('(%d+)')
Time = Time_Restrict * 86400
end
if UserId[2] == 'ساعه' then
Time_Restrict = UserId[1]:match('(%d+)')
Time = Time_Restrict * 3600
end
if UserId[2] == 'دقيقه' then
Time_Restrict = UserId[1]:match('(%d+)')
Time = Time_Restrict * 60
end
bot.setChatMemberStatus(msg.chat_id,UserId[3],'restricted',{1,0,0,0,0,0,0,0,0,tonumber(msg.date+Time)})
return send(msg_chat_id,msg_id,Reply_Status(UserId[3],"\n ✧ تم تقييده في المجموعه \n ✧ لمدة -> "..UserId[1]..' ' ..UserId[2]).Reply,"md",true)  
end
if text and text:match('^تقييد @(%S+)$') then
local UserName = text:match('^تقييد @(%S+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,0,0,0,0,0,0,0,0})
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تقييده في المجموعه ").Reply,"md",true)  
end

if text and text:match('^الغاء التقييد @(%S+)$') then
local UserName = text:match('^الغاء التقييد @(%S+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1})
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم الغاء تقييده من المجموعه").Reply,"md",true)  
end

if text and text:match('^طرد @(%S+)$') then
local UserName = text:match('^طرد @(%S+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId_Info.id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId_Info.id).." } *","md",true)  
end 
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'banned',0)
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم طرده من المجموعه ").Reply,"md",true)  
end
if text == ('حظر عام') and msg.reply_to_message_id ~= 0 then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if Controllerbanall(msg_chat_id,Message_Reply.sender_id.user_id) == true then 
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
if Redis:sismember(MARCOS.."BanAll:Groups",Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."BanAll:Groups",Message_Reply.sender_id.user_id) 
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'banned',0)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم حظره عام من المجموعات ").Reply,"md",true)  
end
end
if text == ('الغاء العام') and msg.reply_to_message_id ~= 0 then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not Redis:sismember(MARCOS.."BanAll:Groups",Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم الغاء حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."BanAll:Groups",Message_Reply.sender_id.user_id) 
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم الغاء حظره عام من المجموعات  ").Reply,"md",true)  
end
end
if text == ('حظر') and msg.reply_to_message_id ~= 0 then
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Admin then
testmod = true
else
testmod = false
end
if testmod == false then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
if Redis:sismember(MARCOS.."BanGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."BanGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'banned',0)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم حظره من المجموعه ").Reply,"md",true)  
end
end
if text == ('الغاء حظر') or text == ('الغاء الحظر') and   msg.reply_to_message_id ~= 0 then
if Redis:sismember(MARCOS.."Specialall:Group",msg.sender_id.user_id) then
testmod = true
elseif msg.Admin then
testmod = true
else
testmod = false
end
if testmod == false then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
if not Redis:sismember(MARCOS.."BanGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم الغاء حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."BanGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم الغاء حظره من المجموعه  ").Reply,"md",true)  
end
end

if text == ('كتم') and msg.reply_to_message_id ~= 0 then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).Delmsg == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه مسح الرسائل* ',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if StatusSilent(msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
if Redis:sismember(MARCOS.."SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم كتمه في المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم كتمه في المجموعه  ").Reply,"md",true)  
end
end
if text == ('الغاء كتم') or text == ('الغاء الكتم') and msg.reply_to_message_id ~= 0 then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not Redis:sismember(MARCOS.."SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم الغاء كتمه من المجموعه ").Reply,"md",true)  
else
Redis:srem(MARCOS.."SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم الغاء كتمه من المجموعه ").Reply,"md",true)  
end
end

if text == ('تقييد') and msg.reply_to_message_id ~= 0 then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,0,0,0,0,0,0,0,0})
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تقييده في المجموعه ").Reply,"md",true)  
end

if text == ('الغاء التقييد') or text == ('الغاء تقييد') and msg.reply_to_message_id ~= 0 then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1})
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم الغاء تقييده من المجموعه").Reply,"md",true)  
end

if text == ('طرد') and msg.reply_to_message_id ~= 0 then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,Message_Reply.sender_id.user_id).." } *","md",true)  
end
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'banned',0)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم طرده من المجموعه ").Reply,"md",true)  
end

if text and text:match('^حظر عام (%d+)$') then
local UserId = text:match('^حظر عام (%d+)$')
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if Controllerbanall(msg_chat_id,UserId) == true then 
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
if Redis:sismember(MARCOS.."BanAll:Groups",UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."BanAll:Groups",UserId) 
bot.setChatMemberStatus(msg.chat_id,UserId,'banned',0)
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم حظره عام من المجموعات ").Reply,"md",true)  
end
end
if text and text:match('^الغاء العام (%d+)$') then
local UserId = text:match('^الغاء العام (%d+)$')
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
bot.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,1,1,1,1,1,1,1,1})
if not Redis:sismember(MARCOS.."BanAll:Groups",UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم الغاء حظره عام من المجموعات مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."BanAll:Groups",UserId) 
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم الغاء حظره عام من المجموعات  ").Reply,"md",true)  
end
end
if text and text:match('^حظر (%d+)$') then
local UserId = text:match('^حظر (%d+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
if Redis:sismember(MARCOS.."BanGroup:Group"..msg_chat_id,UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."BanGroup:Group"..msg_chat_id,UserId) 
bot.setChatMemberStatus(msg.chat_id,UserId,'banned',0)
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم حظره من المجموعه ").Reply,"md",true)  
end
end
if text and text:match('^الغاء حظر (%d+)$') then
local UserId = text:match('^الغاء حظر (%d+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
bot.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,1,1,1,1,1,1,1,1})
if not Redis:sismember(MARCOS.."BanGroup:Group"..msg_chat_id,UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم الغاء حظره من المجموعه مسبقا ").Reply,"md",true)  
else
Redis:srem(MARCOS.."BanGroup:Group"..msg_chat_id,UserId) 
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم الغاء حظره من المجموعه  ").Reply,"md",true)  
end
end

if text and text:match('^كتم (%d+)$') then
local UserId = text:match('^كتم (%d+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).Delmsg == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه مسح الرسائل* ',"md",true)  
end
local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if StatusSilent(msg_chat_id,UserId) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
if Redis:sismember(MARCOS.."SilentGroup:Group"..msg_chat_id,UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم كتمه في المجموعه مسبقا ").Reply,"md",true)  
else
Redis:sadd(MARCOS.."SilentGroup:Group"..msg_chat_id,UserId) 
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم كتمه في المجموعه  ").Reply,"md",true)  
end
end
if text and text:match('^الغاء كتم (%d+)$') then
local UserId = text:match('^الغاء كتم (%d+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if not Redis:sismember(MARCOS.."SilentGroup:Group"..msg_chat_id,UserId) then
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم الغاء كتمه من المجموعه ").Reply,"md",true)  
else
Redis:srem(MARCOS.."SilentGroup:Group"..msg_chat_id,UserId) 
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم الغاء كتمه من المجموعه ").Reply,"md",true)  
end
end

if text and text:match('^تقييد (%d+)$') then
local UserId = text:match('^تقييد (%d+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
bot.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,0,0,0,0,0,0,0,0})
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم تقييده في المجموعه ").Reply,"md",true)  
end

if text and text:match('^الغاء التقييد (%d+)$') then
local UserId = text:match('^الغاء التقييد (%d+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
bot.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,1,1,1,1,1,1,1})
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم الغاء تقييده من المجموعه").Reply,"md",true)  
end

if text and text:match('^طرد (%d+)$') then
local UserId = text:match('^طرد (%d+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if not msg.Creator and not Redis:get(MARCOS.."Status:BanId"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل (الحظر -> الطرد -> التقييد) من قبل المنشئين","md",true)
end 
local UserInfo = bot.getUser(UserId)
if UserInfo.MARCOSbots == "error" and UserInfo.code == 6 then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام ايدي خطأ ","md",true)  
end
if StatusCanOrNotCan(msg_chat_id,UserId) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,UserId).." } *","md",true)  
end
bot.setChatMemberStatus(msg.chat_id,UserId,'restricted',{1,1,1,1,1,1,1,1,1})
return send(msg_chat_id,msg_id,Reply_Status(UserId," ✧ تم طرده من المجموعه ").Reply,"md",true)  
end

if text == "اطردني" or text == "طردني" then
if not Redis:get(MARCOS.."Status:KickMe"..msg_chat_id) then
return send(msg_chat_id,msg_id,"* ✧ امر اطردني تم تعطيله من قبل المدراء *","md",true)  
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if StatusCanOrNotCan(msg_chat_id,msg.sender_id.user_id) then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(msg_chat_id,msg.sender_id.user_id).." } *","md",true)  
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '🩹 تأكيد', url = 't.me/'..UserBot..'?start=st'..msg_chat_id..'u'..msg.sender_id.user_id..''}, 
},
}
}
return send(msg_chat_id,msg_id, [[*
✧ اصغط لتأكيد طردك 🚶
*]],"md",true, false, false, true, reply_markup)
end

if text == 'المشرفين' or text == 'ادمنيه المجموعة' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص ↱ '..Controller_Num(6)..' ↲* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في الكروب يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Chats = bot.getSupergroupFullInfo(msg_chat_id)
local Get_Chat = bot.getChat(msg_chat_id)
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Administrators", "", 0, 200)
listAdmin = '\n* ✧ مشرفين جروب ->* ['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n'
lislMARCOS = '\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •'
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].status.luatele == "chatMemberStatusCreator" then
Creator = ' ->〘 المالك 〙'
else
Creator = ""
end
local UserInfo = bot.getUser(v.member_id.user_id)
if UserInfo.username ~= "" then
listAdmin = listAdmin.."*"..k.." -> @"..UserInfo.username.."* "..Creator.."\n"
else
listAdmin = listAdmin.."*"..k.." -> *["..UserInfo.id.."](tg://user?id="..UserInfo.id..") "..Creator.."\n"
end
end
zh = https.request('http://api.telegram.org/bot'..Token..'/getchat?chat_id='..msg_chat_id..'')
zx = JSON.decode(zh)
local tt = ' ✧ قائمه المشرفين'
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = Get_Chat.title, url="https://t.me/"..zx.result.username..""},
},
}
local msg_group = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id="..msg.chat_id.."&reply_to_message_id="..msg_group.."&photo=t.me/"..zx.result.username.."&caption="..URL.escape(lislMARCOS..listAdmin).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end

if text == 'رفع الادمنيه' or text == 'ترقيه الادمنيه' or text == 'رفع المالك' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
y = 0
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.MARCOSbots == "chatMemberStatusCreator" then
Redis:sadd(MARCOS.."Ownerss:Group"..msg_chat_id,v.member_id.user_id) 
x = x + 1
else
Redis:sadd(MARCOS.."Admin:Group"..msg_chat_id,v.member_id.user_id) 
y = y + 1
end
end
end
send(msg_chat_id,msg_id,'\n* ✧ تم ترقيه〘 '..y..' 〙ادمنيه *',"md",true)  
end

if text == 'المالك' or text == 'المنشئ' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].status.MARCOSbots == "chatMemberStatusCreator" then
local UserInfo = bot.getUser(v.member_id.user_id)
if FlterBio(UserInfo.first_name) == "" then
send(msg_chat_id,msg_id,"* ✧ اوبس , المالك حسابه محذوف *","md",true)  
return false
end 
local photo = bot.getUserProfilePhotos(UserInfo.id)
local InfoUser = bot.getUserFullInfo(UserInfo.id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = ''
end
if photo.total_count > 0 then
local TestText = "*↪️ ᴏᴡɴᴇʀ ɢʀᴏᴜᴘ ♯\n▷ɴᴀᴍᴇ ᴏᴡɴᴇʀ ->* ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserInfo.id..")\n*▷ʙɪᴏ ᴏᴡɴᴇʀ -> "..Bio.." *"
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(TestText)..'&photo='..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id..'&reply_to_message_id='..msg_id..'&parse_mode=markdown')  
else
local TestText = "*↪️ ᴏᴡɴᴇʀ ɢʀᴏᴜᴘ ♯\n▷ɴᴀᴍᴇ ᴏᴡɴᴇʀ ->* ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserInfo.id..")\n*▷ʙɪᴏ ᴏᴡɴᴇʀ -> "..Bio.." *"
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(TestText).."&reply_to_message_id="..msg_id.."&parse_mode=markdown")
end

end
end
end

if text == 'كشف البوتات' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Bots", "*", 0, 200)
local List_Members = Info_Members.members
listBots = '\n ✧ قائمه البوتات المجموعه \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • \n'
x = 0
for k, v in pairs(List_Members) do
local UserInfo = bot.getUser(v.member_id.user_id)
if Info_Members.members[k].status.MARCOSbots == "chatMemberStatusAdministrator" then
x = x + 1
Admin = ' -›〘  ادمن 〙'
else
Admin = " -›〘  عضو 〙"
end
listBots = listBots..""..k.." -> @"..UserInfo.username.." "..Admin.."\n"
end
local s = '*• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*\n*✧ قائمة البوتات الموجوده '..#List_Members..'\n*'
local t = '*✧ عدد البوتات التي هي ادمن〘 '..x..' 〙*'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• طرد البوتات •', data = 'kickBot'}, 
},
}
}
bot.sendText(msg_chat_id,msg_id,"["..listBots.."]"..s..t,"md", false, false, false, false, reply_markup)  
end

if text == 'المقيدين' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Recent", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
local y = false
restricted = '\n* ✧ قائمه المقيديين \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(List_Members) do
if Info_Members.members[k].status.is_member == true and Info_Members.members[k].status.MARCOSbots == "chatMemberStatusRestricted" then
y = true
x = x + 1
local UserInfo = bot.getUser(v.member_id.user_id)
if UserInfo.username ~= "" then
restricted = restricted.."*"..x.." - @"..UserInfo.username.."*\n"
else
restricted = restricted.."*"..x.." - *["..UserInfo.id.."](tg://user?id="..UserInfo.id..") \n"
end
end
end
if y == true then
send(msg_chat_id,msg_id,restricted,"md",true)  
else
send(msg_chat_id,msg_id,' ✧ لا يوجد مقيدين ',"md",true)  
end
end

if not Redis:get(MARCOS.."AutoTagTime"..msg_chat_id) and Redis:get(MARCOS.."AutoTag"..msg_chat_id) then
local Info_Chats = bot.getSupergroupFullInfo(msg_chat_id)
local chat_Members = bot.searchChatMembers(msg_chat_id, "*", Info_Chats.member_count).members
local rand_members = math.random(#chat_Members)
local member_id = chat_Members[rand_members].member_id.user_id
local member_name = bot.getUser(chat_Members[rand_members].member_id.user_id).first_name
local mem_tag = "["..member_name.."](tg://user?id="..member_id..")"
local rdod = {'منورنا ي عثل 😻✨','القميل منور المجموعة 💕.','ليش م تتكلم مع اصدقائك 😝','ليش العثل غايب عنا 🎀','القمر مشغول فين 🌝','وينك يا قمر ❤️‍🔥','من وين جايب كل هاد الجمال 💖','اجمل واحد في التلي 💘','منور يا قلبي ♥'}
local rd = rdod[math.random(#rdod)]
send(msg_chat_id,false,rd.." "..mem_tag,"md")
Redis:setex(MARCOS.."AutoTagTime"..msg_chat_id,30,true) 
end
if text == "تفعيل التاك التلقائي" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:set(MARCOS.."AutoTag"..msg_chat_id,"on") 
Redis:setex(MARCOS.."AutoTagTime"..msg_chat_id,30,true) 
return send(msg_chat_id,msg_id,'\n* ✧ تم تفعيل التاك التلقائي* ',"md",true)  
end
if text == "تعطيل التاك التلقائي" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
Redis:del(MARCOS.."AutoTag"..msg_chat_id,true) 
return send(msg_chat_id,msg_id,'\n* ✧ تم تعطيل التاك التلقائي* ',"md",true)  
end
if text == 'تاك ايموجي' or text == 'منشن ايموجي' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
local Info = bot.searchChatMembers(msg.chat_id, "*", 100)
local members = Info.members
ls = '\n*\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(members) do
local Textingt = {"❤️", "🧡", "💛", "💚", "💙", "💜", "🖤", "🤍", "🤎", "🙂", "🙃", "😉", "😌", "😍", "🥰", "😘", "😗", "😙", "😚", "😋", "😛", "😝", "😜", "🤪", "🤨", "🧐", "🤓", "😎", "🤩", "🥳", "😏", "😒", "😞", "😟", "😕", "🙁", "😣", "😖", "😫", "😩", "🥺", "😢", "😭", "😤", "😠", "😡", "🤯", "😳", "🥵", "🥶", "😱", "😨", "😰", "😥", "😓", "🤗", "🤔", "🤭", "🤫", "🤥", "😶", "😐", "😑", "😬", "🙄", "😯", "😦", "😧", "😮", "😲", "🥱", "😴", "🤤", "😪", "😵", "🤐", "🥴", "🤢", "🤮", "🤧", "😷", "🤒", "🤕", "🤑", "🤠", "😈", "👹", "👺", "🤡",}
local Descriptiont = Textingt[math.random(#Textingt)]
ls = ls..' ['..Descriptiont..'](tg://user?id='..v.member_id.user_id..')\n'
end
bot.sendText(msg.chat_id,msg.id,ls,"md",true)  
end
if text == "تاك للكل" or text == "تاك لكل" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."takforall"..msg_chat_id) == "open" then
local Info_Members = bot.searchChatMembers(msg_chat_id, "*", 2000)
x = 0
tags = 0
local list = Info_Members.members
for k, v in pairs(list) do
local UserInfo = bot.getUser(v.member_id.user_id)
if x == 20 or x == tags or k == 0 then
tags = x + 20
listall = ""
end
x = x + 1
if FlterBio(UserInfo.first_name) ~= '' then
listall = listall.." ▹ ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserInfo.id..")"
end
if x == 20 or x == tags or k == 0 then
send(msg_chat_id,msg_id,listall,"md",true)  
end
end
end
end 
if text and text:match("^all (.*)$") or text:match("^@all (.*)$") or text == "@all" or text == "all" then 
local ttag = text:match("^all (.*)$") or text:match("^@all (.*)$") 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."all:members"..msg_chat_id) == "open" then
local Info_Members = bot.searchChatMembers(msg_chat_id, "*", 2000)
x = 0
tags = 0
local list = Info_Members.members
for k, v in pairs(list) do
local UserInfo = bot.getUser(v.member_id.user_id)
if x == 20 or x == tags or k == 0 then
tags = x + 20
if ttag then
listall = "#all "..ttag.."" 
else
listall = "#all "
end
end
x = x + 1
if FlterBio(UserInfo.first_name) ~= '' then
listall = listall.." ▹ ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserInfo.id..") "
end
if x == 20 or x == tags or k == 0 then
send(msg_chat_id,msg_id,listall,"md",true)  
end
end
end
end 
if text == 'تاك' and (Redis:get(MARCOS..'tagallgroup'..msg.chat_id) == "open") then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = bot.searchChatMembers(msg_chat_id, "*", 200)
local List_Members = Info_Members.members
listall = '\n* ✧ قائمه الاعضاء \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(List_Members) do
local UserInfo = bot.getUser(v.member_id.user_id)
if UserInfo.username ~= "" then
listall = listall.."*"..k.." - @"..UserInfo.username.."*\n"
else
listall = listall.."*"..k.." ->* ["..UserInfo.id.."](tg://user?id="..UserInfo.id..")\n"
end
end
send(msg_chat_id,msg_id,listall,"md",true)  
end

if text == "قفل القناه" or text == "قفل قناه" or text == "قفل القنوات" or text == "قفل القناة" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:SenderChat"..msg_chat_id,true) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل ارسال القناة").Lock,"md",true)  
return false
end 
if text == "فتح القناه" or text == "فتح قناه" or text == "فتح القنوات" or text == "فتح القناة" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:SenderChat"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح ارسال القناة").unLock,"md",true)  
return false
end 
if text == "قفل السب" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:phshar"..msg_chat_id,true) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل السب").Lock,"md",true)  
return false
end 
if text == "فتح السب" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:phshar"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح السب").unLock,"md",true)  
return false
end 
if text == "قفل الشتايم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:alkfr"..msg_chat_id,true) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الشتايم").Lock,"md",true)  
return false
end 
if text == "فتح الشتايم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:alkfr"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الشتايم").unLock,"md",true)  
return false
end 
if text == "قفل الانكليزيه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:english"..msg_chat_id,true) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الانكليزيه").Lock,"md",true)  
return false
end 
if text == "فتح الانكليزيه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:english"..msg_chat_id) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الانكليزيه").unLock,"md",true)  
return false
end 
if text == "تفعيل نزلني" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
send(msg_chat_id,msg_id,' \n ✧ تم تفعيل نزلني',"md")
Redis:del(MARCOS..'Nzlne:Abs'..msg.chat_id) 
end
if text == "تعطيل نزلني" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
send(msg_chat_id,msg_id,' \n ✧ تم تعطيل نزلني',"md")
Redis:set(MARCOS..'Nzlne:Abs'..msg.chat_id,true)  
end

if text == 'نزلني' and not Redis:get(MARCOS..'Nzlne:Abs'..msg.chat_id) then
if Controllerbanall(msg_chat_id,msg.sender_id.user_id) == true then 
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ لا يمكنني تنزيل { "..Controller(msg_chat_id,msg.sender_id.user_id).." } *","md",true)  
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '❇️ نعم', data = msg.sender_id.user_id..'/Nzlne'},{text = '☁ لا', data = msg.sender_id.user_id..'/noNzlne'},
},
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
return send(msg_chat_id,msg_id,' ✧عليك الاجابه اذا كمت تريد استمرار الامر',"md",false, false, false, false, reply_markup)
end

if text == "صورتي" then
if Redis:get(MARCOS.."myphoto"..msg_chat_id) == "off" then
send(msg_chat_id,msg_id,'* ✧ الصوره معطله*',"md",true) 
else
local photo = bot.getUserProfilePhotos(msg.sender_id.user_id)
if photo.total_count > 0 then
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'صورتك التاليه', callback_data=msg.sender_id.user_id.."/sorty2"},
},
}
local rep = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id="..msg.chat_id.."&reply_to_message_id="..rep.."&photo="..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id.."&caption="..URL.escape("٭ عدد صورك هو "..photo.total_count.." صوره").."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
else
return send(msg_chat_id,msg_id,'* ✧ لا توجد صوره ف حسابك*',"md",true) 
end
end
end
if text and text:match("^معنى (.*)$") then 
local TextMean = text:match("^معنى (.*)$") or text:match("^معنى اسم (.*)$") 
if not Redis:get(MARCOS..'mynames'..msg.chat_id)  then
UrlMean = io.popen('curl -s "https://apiabs.ml/Mean.php?Abs='..URL.escape(TextMean)..'"'):read('*a')
Mean = JSON.decode(UrlMean) 
send(msg_chat_id,msg_id, Mean.ok.abs)
end
end
if text == "تعطيل معاني الاسماء" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'mynames'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تعطيل معنى اسم مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."mynames"..msg.chat_id,"true")
return send(msg_chat_id,msg_id,' ✧ تم تعطيل معنى اسم\n ꪤ',"md")
end
end
if text == "تفعيل معاني الاسماء" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'mynames'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تفعيل معنى اسم مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."mynames"..msg.chat_id)
return send(msg_chat_id,msg_id,' ✧ تم تفعيل معنى اسم\n ꪤ',"md")
end
end
if text == "تعطيل قول" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'kolklma'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تعطيل قول مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."kolklma"..msg.chat_id)
return send(msg_chat_id,msg_id,' ✧ تم تعطيل قول\n ꪤ',"md")
end
end
if text == "تفعيل قول" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'kolklma'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تفعيل قول مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."kolklma"..msg.chat_id,"true")
return send(msg_chat_id,msg_id,' ✧ تم تفعيل قول\n ꪤ',"md")
end
end

if text and text:match("^قول (.*)$") and Redis:get(MARCOS..'kolklma'..msg.chat_id) then
local txt = {string.match(text, "^(قول) (.*)$")}
return send(msg_chat_id,msg_id, txt[2], 'md')
end

if text == "تعطيل اغنيه" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if Redis:get(MARCOS..'myniknea'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تعطيل اغنيه مسبقا\n ꪤ',"md")
else
Redis:set(MARCOS.."myniknea"..msg.chat_id,"true")
return send(msg_chat_id,msg_id,' ✧ تم تعطيل اغنيه\n ꪤ',"md")
end
end
if text == "تفعيل اغنيه" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if not Redis:get(MARCOS..'myniknea'..msg.chat_id)  then
return send(msg_chat_id,msg_id,' ✧ تم تفعيل اغنيه مسبقا\n ꪤ',"md")
else
Redis:del(MARCOS.."myniknea"..msg.chat_id)
return send(msg_chat_id,msg_id,' ✧ تم تفعيل اغنيه\n ꪤ',"md")
end
end
if text == "تفعيل نسبه جمالي" or text == "تفعيل جمالي" then
if not msg.Admin then
send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص  '..Controller_Num(7)..' * ',"md",true)  
end
Redis:del(MARCOS.."mybuti"..msg_chat_id)
send(msg_chat_id,msg_id,'\n* ✧ تم تفعيل امر جمالي * ',"md",true)  
end
if text == "تعطيل جمالي" or text == "تعطيل نسبه جمالي" then
if not msg.Admin then
send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص  '..Controller_Num(7)..' * ',"md",true)  
end
Redis:set(MARCOS.."mybuti"..msg_chat_id,"off")
send(msg_chat_id,msg_id,'\n* ✧ تم تعطيل امر جمالي * ',"md",true)  
end
if text == "تفعيل شخصيه" or text == "تفعيل شخصيتي" then
if not msg.Admin then
send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص  '..Controller_Num(7)..' * ',"md",true)  
end
Redis:del(MARCOS.."shakse"..msg_chat_id)
send(msg_chat_id,msg_id,'\n* ✧ تم تفعيل امر شخصيتي * ',"md",true)  
end
if text == "تعطيل شخصيتي" or text == "تعطيل شخصيه" then
if not msg.Admin then
send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص  '..Controller_Num(7)..' * ',"md",true)  
end
Redis:set(MARCOS.."shakse"..msg_chat_id,"off")
send(msg_chat_id,msg_id,'\n* ✧ تم تعطيل امر شخصيتي * ',"md",true)  
end
if (text == 'جمالي' or text == 'نسبه جمالي') and not Redis:get(MARCOS.."mybuti"..msg_chat_id) then
local Jabwa = bot.getUser(msg.sender_id.user_id)
local photo = bot.getUserProfilePhotos(msg.sender_id.user_id)
local nspp = {"10","20","30","35","75","34","66","82","23","19","55","80","63","32","27","89","99","98","79","100","8","3","6","0",}
local rdbhoto = nspp[math.random(#nspp)]
if photo.total_count > 0 then
data = {} 
data.inline_keyboard = {
{
{text = 'نسبه جمالك يا قمر '..rdbhoto..' 🥺♥️',url = "https://t.me/"..Jabwa.username..""}, 
},
}
local msgg = msg_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id=" .. msg_chat_id .. "&photo="..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id.."&photo=".. URL.escape(rdbhoto).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(data))
end
end
if (text == 'شخصيتي' or text == 'حدد شخصيتي' or text == 'حددي شخصيتي') and not Redis:get(MARCOS.."shakse"..msg_chat_id) then
local texting = {"عنيده", 
"متردده  ",
"خبيثة  ", 
"ايجابية ", 
"غامضة  ", 
"ضعيفة ", 
"كلاسيكية  ", 
"مسالمة  ", 
"حماسية ", 
"قيادية  ", 
"شكاك  ", 
"رومنسية  ",
"محفزة  ",
"متعاونة  ",
"اجتماعية  ",
"عصبية ",
"نرجسية  ",
"انطوائية  ",
"مظلومة  ",
} 
zezee = texting[math.random(#texting)]
local Jabwa = bot.getUser(msg.sender_id.user_id)
local photo = bot.getUserProfilePhotos(msg.sender_id.user_id)
local news = '🥺♥️ شخصيتك -> '..zezee
if photo.total_count > 0 then
data = {} 
data.inline_keyboard = {
{
{text =news,url = "https://t.me/"..Jabwa.username..""}, 
},
}
local msgg = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id=" .. msg.chat_id .. "&photo="..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id.."&photo=".. URL.escape(news).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(data))
end
end
if (text == 'مهنتي' or text == 'المهنه' or text == 'المهنة') and not Redis:get(MARCOS.."shakse"..msg_chat_id) then
local texting = {"نقاش", 
"دكتور  ",
"دكتوره  ", 
"طيار ", 
"طياره  ", 
"مدرس ", 
"مدير  ", 
"مديره  ", 
"محاسب ", 
"محسابه  ", 
"نقاشه  ", 
"مدير بنك  ",
"مديرة بنك  ",
"وزير  ",
"وزيره  ",
"ظابط ",
"ظابطه  ",
"شيخه  ",
"شيخ  ",
} 
zezee = texting[math.random(#texting)]
local Jabwa = bot.getUser(msg.sender_id.user_id)
local TotalMsgT = Total_message(TotalMsg) 
local age = "انسان"
local Noun = "عايش بقالك زمان"
local photo = bot.getUserProfilePhotos(msg.sender_id.user_id)
local profession1 = '🎀 اسمك -> '..age
local profession2 = '✨ سنك -> '..Noun
local profession3 = '♥ مهنتك -> '..zezee
local profession4 = '❇️ حالتك -> '..zezee
local profession5 = '💖 تفاعلك -> '..TotalMsgT
if photo.total_count > 0 then
data = {} 
data.inline_keyboard = {
{
{text =profession1,url = "https://t.me/"..Jabwa.username..""}, 
},
{
{text =profession2,url = "https://t.me/"..Jabwa.username..""}, 
},
{
{text =profession3,url = "https://t.me/"..Jabwa.username..""}, 
},
{
{text =profession4,url = "https://t.me/"..Jabwa.username..""}, 
},
{
{text =profession5,url = "https://t.me/"..Jabwa.username..""}, 
},
}
local msgg = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id=" .. msg.chat_id .. "&photo="..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id.."&photo=".. URL.escape(profession1).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(data))
end
end

if text == "اذكار" or text == "ذكر" then
local texting = {"اللَّهُمَّ أَعِنِّي عَلَى ذِكْرِكَ , وَشُكْرِكَ , وَحُسْنِ عِبَادَتِكَ🎈💞", 
"االلَّهُمَّ أَعِنِّي عَلَى ذِكْرِكَ , وَشُكْرِكَ , وَحُسْنِ عِبَادَتِكَ🎈💞 ",
"اا6-قول -> سبحان الله وبحمده سبحان العظيم مئة مرة في اليوم قارئها غفرت له ذنوبه وأن كانت مثل زبد البحر .",
"من الأدعية النبوية المأثورة:اللهمَّ زَيِّنا بزينة الإيمان",
"اااللهم يا من رويت الأرض مطرا أمطر قلوبنا فرحا.🍂",
"اا‏اللَّهُـمَّ لَڪَ الحَمْـدُ مِنْ قَـا؏ِ الفُـؤَادِ إلىٰ ؏َـرشِڪَ المُقـدَّس حَمْـدَاً يُوَافِي نِـ؏ـمَڪ 💙??",
"﴿وَاذْكُرِ اسْمَ رَبِّكَ وَتَبَتَّلْ إِلَيْهِ تَبْتِيلًا﴾🌿✨",
"﴿وَمَن يَتَّقِ اللهَ يُكَفِّرْ عَنْهُ سَيِّئَاتِهِ وَيُعْظِمْ لَهُ أَجْرًا﴾«",
"«سُبْحَانَ اللهِ ، وَالحَمْدُ للهِ ، وَلَا إلَهَ إلَّا اللهُ ، وَاللهُ أكْبَرُ ، وَلَا حَوْلَ وَلَا قُوَّةَ إلَّا بِاللهِ»🍃",
"وذُنُوبًا شوَّهتْ طُهْرَ قُلوبِنا؛ اغفِرها يا ربّ واعفُ عنَّا ❤️",
"«اللَّهُمَّ آتِ نُفُوسَنَا تَقْوَاهَا ، وَزَكِّهَا أنْتَ خَيْرُ مَنْ زَكَّاهَا ، أنْتَ وَلِيُّهَا وَمَوْلَاهَا»🌹",
"۝‏﷽إن اللَّه وملائكته يُصلُّون على النبي ياأيُّها الذين آمنوا صلُّوا عليه وسلِّموا تسليما۝",
"فُسِبًحً بًحًمًدٍ ربًکْ وٌکْنِ مًنِ آلَسِآجّدٍيَنِ 🌿✨",
"اأقُمً آلَصّلَآةّ لَدٍلَوٌکْ آلَشُمًسِ إلَيَ غُسِقُ آلَلَيَلَ🥀🌺",
"نِسِتٌغُفُرکْ ربًيَ حًيَتٌ تٌلَهّيَنِآ آلَدٍنِيَآ عٌنِ ذِکْرکْ🥺😢",
"وٌمًنِ أعٌرض عٌنِ ذِکْريَ فُإنِ لَهّ مًعٌيَشُةّ ضنِکْآ 😢",
"وٌقُرأنِ آلَفُجّر إنِ قُرآنِ آلَفُجّر کْآنِ مًشُهّوٌدٍآ🎀🌲",
"اأّذّأّ أّلَدِنِيِّأّ نِّستّګوِ أّصٌلَګوِ زِّوِروِ أّلَمَقِأّبِر💔",
"حًتٌيَ لَوٌ لَمًتٌتٌقُنِ آلَخِفُظُ فُمًصّآحًبًتٌ لَلَقُرآنِ تٌجّعٌلَکْ مًنِ آهّلَ آلَلَهّ وٌخِآصّتٌهّ❤️🌱",
"وٌإذِآ رضيَتٌ وٌصّبًرتٌ فُهّوٌ إرتٌقُآء وٌنِعٌمًةّ✨🌺",
"«ربً آجّعٌلَنِيَ مًقُيَمً آلَصّلَآةّ وٌمًنِ ذِريَتٌيَ ربًنِآ وٌتٌقُبًلَ دٍعٌآء 🤲",
"اآعٌلَمً آنِ رحًلَةّ صّبًرکْ لَهّآ نِهّآيَهّ عٌظُيَمًهّ مًحًمًلَهّ بًجّوٌآئزٍ ربًآنِيَهّ مًدٍهّشُهّ🌚☺️",
"اإيَآکْ وٌدٍعٌوٌةّ آلَمًظُلَوٌمً فُ إنِهّآ تٌصّعٌدٍ آلَيَ آلَلَهّ کْأنِهّآ شُرآرهّ مًنِ نِآر 🔥🥺",
"اآلَلَهّمً آنِقُذِ صّدٍوٌرنِآ مًنِ هّيَمًنِهّ آلَقُلَقُ وٌصّبً عٌلَيَهّآ فُيَضآ مًنِ آلَطِمًأنِيَنِهّ✨🌺",
"يَآبًنِيَ إنِ صّلَآح آلَحًيَآةّ فُ أتٌجّآهّ آلَقُبًلَهّ 🥀🌿",
"«آلَلَهّمً ردٍنِآ إلَيَکْ ردٍآ جّمًيَلَآ💔🥺",
} 
return send(msg_chat_id,msg_id,texting[math.random(#texting)],'md')
end



if text == "كتابات" or text == "حكمه" or text == "قصيده" then 
local texting = {"‏من ترك أمرهُ لله، أعطاه الله فوق ما يتمنَّاه💙 ", 
"‏من علامات جمال المرأة .. بختها المايل ! ",
"‏ انك الجميع و كل من احتل قلبي🫀🤍",
"‏ ‏ لقد تْعَمقتُ بكَ كَثيراً والمِيمُ لام .♥️",
"‏ ‏ممكن اكون اختارت غلط بس والله حبيت بجد🖇️",
"‏ علينا إحياء زَمن الرّسائل الورقيّة وسط هذه الفوضى الالكترونية العَارمة. ︙ 💜",
"‏ يجي اي الصاروخ الصيني ده جمب الصاروخ المصري لما بيلبس العبايه السوده.🤩♥️",
"‏ كُنت أرقّ من أن أتحمّل كُل تلك القَسوة من عَينيك .🍍",
"‏أَكَان عَلَيَّ أَنْ أغْرَس انيابي فِي قَلْبِك لتشعر بِي ؟.",
"‏ -> كُلما أتبع قلبي يدلني إليك .",
"‏ -> أيا ليت من تَهواه العينُ تلقاهُ .",
"‏ ‏: رغبتي في مُعانقتك عميقة جداً .",
"ويُرهقني أنّي مليء بما لا أستطيع قوله.✨",
"‏ من مراتب التعاسه إطالة الندم ع شيء إنتهى. ︙ ",
"‏ ‏كل العالم يهون بس الدنيا بينا تصفي 💙",
"‏ بعض الاِعتذارات يجب أن تُرفَضّ.",
"‏ ‏تبدأ حياتك محاولاً فهم كل شيء، وتنهيها محاولاً النجاة من كل ما فهمت.",
"‏ إن الأمر ينتهي بِنا إلى أعتياد أي شيء.",
"‏ هل كانت كل الطرق تؤدي إليكِ، أم أنني كنتُ أجعلها كذلك.",
"‏ ‏هَتفضل تواسيهُم واحد ورا التاني لكن أنتَ هتتنسي ومحدِش هَيواسيك.",
"‏ جَبَرَ الله قلوبِكُم ، وقَلبِي .🍫",
"‏ بس لما أنا ببقى فايق، ببقى أبكم له ودان.💖",
"‏ ‏مقدرش عالنسيان ولو طال الزمن 🖤",
"‏ أنا لستُ لأحد ولا احد لي ، أنا إنسان غريب أساعد من يحتاجني واختفي.",
"‏ ‏أحببتك وأنا منطفئ، فما بالك وأنا في كامل توهجي ؟",
"‏ لا تعودني على دفء شمسك، إذا كان في نيتك الغروب .َ",
"‏ وانتهت صداقة الخمس سنوات بموقف.",
"‏ ‏لا تحب أحداً لِدرجة أن تتقبّل أذاه.",
"‏ إنعدام الرّغبة أمام الشّيء الّذي أدمنته ، انتصار.",
"‏مش جايز , ده اكيد التأخير وارهاق القلب ده وراه عوضاً عظيماً ! ",
" مش جايز , ده اكيد التأخير وارهاق القلب ده وراه عوضاً عظيماً !💙",
"فـ بالله صبر  وبالله يسر وبالله عون وبالله كل شيئ ♥️. ",
"أنا بعتز بنفسي جداً كصاحب وشايف اللي بيخسرني ، بيخسر أنضف وأجدع شخص ممكن يشوفه . ",
"فجأه جاتلى قافله ‏خلتنى مستعد أخسر أي حد من غير ما أندم عليه . ",
"‏اللهُم قوني بك حين يقِل صبري... ",
"‏يارب سهِل لنا كُل حاجة شايلين هَمها 💙‏ ",
"انا محتاج ايام حلوه بقي عشان مش نافع كدا ! ",
"المشكله مش اني باخد قررات غلط المشكله اني بفكر كويس فيها قبل ما اخدها .. ",
"تخيل وانت قاعد مخنوق كدا بتفكر فالمزاكره اللي مزكرتهاش تلاقي قرار الغاء الدراسه .. ",
" مكانوش يستحقوا المعافرة بأمانه.",
"‏جمل فترة في حياتي، كانت مع اكثر الناس الذين أذتني نفسيًا. ",
" ‏إحنا ليه مبنتحبش يعني فينا اي وحش!",
"أيام مُمله ومستقبل مجهول ونومٌ غير منتظموالأيامُ تمرُ ولا شيَ يتغير ", 
"عندما تهب ريح المصلحه سوف ياتي الجميع رتكدون تحت قدمك ❤️. ",
"عادي مهما تعادي اختك قد الدنيا ف عادي ❤. ",
"بقيت لوحدي بمعنا اي انا اصلا من زمان لوحدي.❤️ ",
"- ‏تجري حياتنا بما لاتشتهي أحلامنا ! ",
"تحملين كل هذا الجمال، ‏ألا تتعبين؟",
"البدايات للكل ، والثبات للصادقين ",
"مُؤخرًا اقتنعت بالجملة دي جدا -> Private life always wins. ",
" الافراط في التسامح بيخللي الناس تستهين بيك🍍",
"مهما كنت كويس فـَ إنت معرض لـِ الاستبدال.. ",
"فخوره بنفسي جدًا رغم اني معملتش حاجه فـ حياتي تستحق الذكر والله . ",
"‏إسمها ليلة القدر لأنها تُغير الأقدار ,اللهُمَّ غير قدري لحالٍ تُحبه وعوضني خير .. ",
"فى احتمال كبير انها ليلة القدر ادعوا لنفسكم كتير وأدعو ربنا يشفى كل مريض. 💙 ",
"أنِر ظُلمتي، وامحُ خطيئتي، واقبل توبتي وأعتِق رقبتي يا اللّٰه. إنكَ عفوٌّ تُحِبُّ العفوَ؛ فاعفُ عني 💛 ",
} 
return send(msg_chat_id,msg_id,texting[math.random(#texting)],'md')
end

if text == "نكته" or text == "قولي نكته" or text == "عايز اضحك" then 
local texting = {" مرة واحد مصري دخل سوبر ماركت في الكويت عشان يشتري ولاعة راح عشان يحاسب بيقوله الولاعة ديه بكام قاله دينار قاله منا عارف ان هي نار بس بكام 😂",
"بنت حبت تشتغل مع رئيس عصابة شغلها في غسيل الأموال 😂",
"واحد بيشتكي لصاحبه بيقوله أنا مافيش حد بيحبني ولا يفتكرني أبدًا، ومش عارف أعمل إيه قاله سهلة استلف من الناس فلوس هيسألوا عليك كل يوم 😂",
"ﻣﺮه واﺣﺪ ﻣﺴﻄﻮل ﻣﺎﺷﻰ ﻓﻰ اﻟﺸﺎرع ﻟﻘﻰ مذﻳﻌﻪ ﺑﺘﻘﻮﻟﻪ ﻟﻮ ﺳﻤﺤﺖ ﻓﻴﻦ اﻟﻘﻤﺮ؟ ﻗﺎﻟﻬﺎ اﻫﻮه ﻗﺎﻟﺘﻠﻮ ﻣﺒﺮوك ﻛﺴﺒﺖ ﻋﺸﺮﻳﻦ ﺟﻨﻴﻪ ﻗﺎﻟﻬﺎ ﻓﻰ واﺣﺪ ﺗﺎﻧﻰ ﻫﻨﺎك اﻫﻮه 😂",
"واحده ست سايقه على الجي بي اي قالها انحرفي قليلًا قلعت الطرحة 😂",
"مرة واحد غبي معاه عربية قديمة جدًا وبيحاول يبيعها وماحدش راضي يشتريها.. راح لصاحبه حكاله المشكلة صاحبه قاله عندي لك فكرة جهنمية هاتخليها تتباع الصبح أنت تجيب علامة مرسيدس وتحطها عليها. بعد أسبوعين صاحبه شافه صدفة قاله بعت العربية ولا لاء؟ قاله انت  مجنون حد يبيع مرسيدس ",
"مره واحد بلديتنا كان بيدق مسمار فى الحائط فالمسمار وقع منه فقال له :تعالى ف مجاش, فقال له: تعالي ف مجاش. فراح بلديتنا رامي على المسمار شوية مسمامير وقال: هاتوه 😂",
"واحدة عملت حساب وهمي ودخلت تكلم جوزها منه ومبسوطة أوي وبتضحك سألوها بتضحكي على إيه قالت لهم أول مرة يقول لي كلام حلو من ساعة ما اتجوزنا 😂",
"بنت حبت تشتغل مع رئيس عصابة شغلها في غسيل الأموال 😂",
"مره واحد اشترى فراخ علشان يربيها فى قفص صدره 😂",
"مرة واحد من الفيوم مات اهله صوصوا عليه 😂",
"ﻣﺮه واﺣﺪ ﻣﺴﻄﻮل ﻣﺎﺷﻰ ﻓﻰ اﻟﺸﺎرع ﻟﻘﻰ مذﻳﻌﻪ ﺑﺘﻘﻮﻟﻪ ﻟﻮ ﺳﻤﺤﺖ ﻓﻴﻦ اﻟﻘﻤﺮ ﻗﺎﻟﻬﺎ اﻫﻮه ﻗﺎﻟﺘﻠﻮ ﻣﺒﺮوك ﻛﺴﺒﺖ ﻋﺸﺮﻳﻦ ﺟﻨﻴﻪ ﻗﺎﻟﻬﺎ ﻓﻰ واﺣﺪ ﺗﺎﻧﻰ ﻫﻨﺎك اﻫﻮه 😂",
"مره واحد شاط كرة فى المقص اتخرمت. 😂",
"مرة واحد رايح لواحد صاحبهفا البواب وقفه بيقول له انت طالع لمين قاله طالع أسمر شوية لبابايا قاله يا أستاذ طالع لمين في العماره 😂",
} 
return send(msg_chat_id,msg_id,texting[math.random(#texting)],'md')
end



if text == "اغنية" or text == "اغنيه" then 
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(MARCOS..'myniknea'..msg.chat_id) then
Abs = math.random(3,205); 
print(Abs)
local Text ='* ✧ تم اختيار الاغنيه لك*'
keyboard = {} 
keyboard.inline_keyboard = {
{{text = '• قناة السورس •',url="t.me/"..chsource..""}},
}
local MsgId = msg.id/2097152/0.5
local MSGID = 0
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/meromp3/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MSGID.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard)) 
end
end 

if text == "قفل التفليش" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:tphlesh"..msg_chat_id,true) 
Redis:del(MARCOS.."Status:IdPhoto"..msg_chat_id) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"⇜ ابشر قفلت التفليش").Lock,"md",true)  
return false
end 
if text == "فتح التفليش" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:tphlesh"..msg_chat_id)  
Redis:set(MARCOS.."Status:IdPhoto"..msg_chat_id,true) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"⇜ ابشر فتحت التفليش").unLock,"md",true)  
return false
end 
if text == "قفل الفارسيه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:farsia"..msg_chat_id,true) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ⇜ ابشر قفلت الفارسيه").Lock,"md",true)  
return false
end 
if text == "فتح الفارسيه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:farsia"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ⇜ ابشر فتح الفارسيه").unLock,"md",true)  
return false
end 

if text == "قفل الدردشه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:text"..msg_chat_id,true) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id,"⇜ ابشر قفلت الدردشه").Lock,"md",true)  
return false
end 
if text == "قفل الاضافه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(MARCOS.."Lock:AddMempar"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل اضافة الاعضاء").Lock,"md",true)  
return false
end 
if text == "قفل الدخول" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(MARCOS.."Lock:Join"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل دخول الاعضاء").Lock,"md",true)  
return false
end 
if text == "قفل البوتات" then  
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(MARCOS.."Lock:Bot:kick"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل البوتات").Lock,"md",true)  
return false
end 
if text == "قفل البوتات بالطرد" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(MARCOS.."Lock:Bot:kick"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل البوتات").lockKick,"md",true)  
return false
end 
if text == "قفل الاشعارات" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:set(MARCOS.."Lock:tagservr"..msg_chat_id,true)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الاشعارات").Lock,"md",true)  
return false
end
if text == "قفل التثبيت" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:set(MARCOS.."lockpin"..msg_chat_id,(bot.getChatPinnedMessage(msg_chat_id).id or true)) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التثبيت هنا").Lock,"md",true)  
return false
end 
if text == "قفل التعديل" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(MARCOS.."Lock:edit"..msg_chat_id,true) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل تعديل").Lock,"md",true)  
return false
end 
if text == "قفل تعديل الميديا" then 
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:set(MARCOS.."Lock:edit"..msg_chat_id,true) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل تعديل").Lock,"md",true)  
return false
end 
if text == "قفل الكل" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:set(MARCOS.."Lock:tagservrbot"..msg_chat_id,true)   
list ={"Lock:Bot:kick","Lock:User:Name","Lock:hashtak","Lock:Cmd","Lock:Link","Lock:forward","Lock:Keyboard","Lock:geam","Lock:Photo","Lock:Animation","Lock:Video","Lock:Audio","Lock:vico","Lock:Sticker","Lock:Document","Lock:Unsupported","Lock:Markdaun","Lock:Contact","Lock:Spam"}
for i,lock in pairs(list) do 
Redis:set(MARCOS..''..lock..msg_chat_id,"del")    
end
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل جميع الاوامر").Lock,"md",true)  
return false
end 

if text == "قفل وسائط المميزين" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:set(MARCOS.."Lock:AlUasat"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل جميع الوسائط المميزين").Lock,"md",true)  
return false
end 
if text == "فتح وسائط المميزين" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:AlUasat"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فـتح جميع الوسائط المميزين").unLock,"md",true)  
return false
end 

if text == "قفل الوسائط" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:set(MARCOS.."Lock:Animation"..msg_chat_id,"del")  
Redis:set(MARCOS.."Lock:Photo"..msg_chat_id,"del")  
Redis:set(MARCOS.."Lock:vico"..msg_chat_id,"del")  
Redis:set(MARCOS.."Lock:Audio"..msg_chat_id,"del")  
Redis:set(MARCOS.."Lock:Sticker"..msg_chat_id,"del")  
Redis:set(MARCOS.."Lock:Video"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل جميع الوسائط").Lock,"md",true)  
return false
end 
if text == "فتح الوسائط" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:Animation"..msg_chat_id)  
Redis:del(MARCOS.."Lock:Photo"..msg_chat_id)  
Redis:del(MARCOS.."Lock:vico"..msg_chat_id)  
Redis:del(MARCOS.."Lock:Audio"..msg_chat_id)  
Redis:del(MARCOS.."Lock:Sticker"..msg_chat_id)  
Redis:del(MARCOS.."Lock:Video"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فـتح جميع الوسائط").unLock,"md",true)  
return false
end 
--------------------------------------------------------------------------------------------------------------
if text == "فتح الاضافه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:AddMempar"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح اضافة الاعضاء").unLock,"md",true)  
return false
end 
if text == "فتح الدردشه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:text"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الدردشه").unLock,"md",true)  
return false
end 
if text == "فتح الدخول" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:Join"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح دخول الاعضاء").unLock,"md",true)  
return false
end 
if text == "فتح البوتات" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:Bot:kick"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فـتح البوتات").unLock,"md",true)  
return false
end 
if text == "فتح البوتات " then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:Bot:kick"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فـتح البوتات").unLock,"md",true)  
return false
end 
if text == "فتح الاشعارات" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end  
Redis:del(MARCOS.."Lock:tagservr"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فـتح الاشعارات").unLock,"md",true)  
return false
end 
if text == "فتح التثبيت" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."lockpin"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فـتح التثبيت هنا").unLock,"md",true)  
return false
end 
if text == "فتح التعديل" or text == "فتح تعديل الميديا" then 
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:edit"..msg_chat_id) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فـتح تعديل").unLock,"md",true)  
return false
end 
if text == "فتح التعديل الميديا" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:edit"..msg_chat_id) 
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فـتح تعديل").unLock,"md",true)  
return false
end 
if text == "فتح الكل" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end 
Redis:del(MARCOS.."Lock:tagservrbot"..msg_chat_id)   
list ={"Lock:Bot:kick","Lock:User:Name","Lock:hashtak","Lock:Cmd","Lock:Link","Lock:forward","Lock:Keyboard","Lock:geam","Lock:Photo","Lock:Animation","Lock:Video","Lock:Audio","Lock:vico","Lock:Sticker","Lock:Document","Lock:Unsupported","Lock:Markdaun","Lock:Contact","Lock:Spam"}
for i,lock in pairs(list) do 
Redis:del(MARCOS..''..lock..msg_chat_id)    
end
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فـتح جميع الاوامر").unLock,"md",true)  
return false
end 
--------------------------------------------------------------------------------------------------------------
if text == "قفل التكرار" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:hset(MARCOS.."Spam:Group:User"..msg_chat_id ,"Spam:User","del")  
return send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التكرار").Lock,"md",true)  
elseif text == "قفل التكرار بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:hset(MARCOS.."Spam:Group:User"..msg_chat_id ,"Spam:User","keed")  
return send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التكرار").lockKid,"md",true)  
elseif text == "قفل التكرار بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:hset(MARCOS.."Spam:Group:User"..msg_chat_id ,"Spam:User","mute")  
return send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التكرار").lockKtm,"md",true)  
elseif text == "قفل التكرار بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:hset(MARCOS.."Spam:Group:User"..msg_chat_id ,"Spam:User","kick")  
return send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التكرار").lockKick,"md",true)  
elseif text == "فتح التكرار" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:hdel(MARCOS.."Spam:Group:User"..msg_chat_id ,"Spam:User")  
return send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح التكرار").unLock,"md",true)  
end
if text == "قفل الروابط" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Link"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الروابط").Lock,"md",true)  
return false
end 
if text == "قفل الروابط بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Link"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الروابط").lockKid,"md",true)  
return false
end 
if text == "قفل الروابط بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Link"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الروابط").lockKtm,"md",true)  
return false
end 
if text == "قفل الروابط بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Link"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الروابط").lockKick,"md",true)  
return false
end 
if text == "فتح الروابط" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Link"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الروابط").unLock,"md",true)  
return false
end 
if text == "قفل المعرفات" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:User:Name"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل المعرفات").Lock,"md",true)  
return false
end 
if text == "قفل المعرفات بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:User:Name"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل المعرفات").lockKid,"md",true)  
return false
end 
if text == "قفل المعرفات بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:User:Name"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل المعرفات").lockKtm,"md",true)  
return false
end 
if text == "قفل المعرفات بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:User:Name"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل المعرفات").lockKick,"md",true)  
return false
end 
if text == "فتح المعرفات" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:User:Name"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح المعرفات").unLock,"md",true)  
return false
end 
if text == "قفل التاك" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:hashtak"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التاك").Lock,"md",true)  
return false
end 
if text == "قفل التاك بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:hashtak"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التاك").lockKid,"md",true)  
return false
end 
if text == "قفل التاك بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:hashtak"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التاك").lockKtm,"md",true)  
return false
end 
if text == "قفل التاك بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:hashtak"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التاك").lockKick,"md",true)  
return false
end 
if text == "فتح التاك" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:hashtak"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح التاك").unLock,"md",true)  
return false
end 
if text == "قفل الشارحه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Cmd"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الشارحه").Lock,"md",true)  
return false
end 
if text == "قفل الشارحه بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Cmd"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الشارحه").lockKid,"md",true)  
return false
end 
if text == "قفل الشارحه بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Cmd"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الشارحه").lockKtm,"md",true)  
return false
end 
if text == "قفل الشارحه بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Cmd"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الشارحه").lockKick,"md",true)  
return false
end 
if text == "فتح الشارحه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Cmd"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الشارحه").unLock,"md",true)  
return false
end 
if text == "قفل الصور"then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Photo"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الصور").Lock,"md",true)  
return false
end 
if text == "قفل الصور بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Photo"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الصور").lockKid,"md",true)  
return false
end 
if text == "قفل الصور بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Photo"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الصور").lockKtm,"md",true)  
return false
end 
if text == "قفل الصور بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Photo"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الصور").lockKick,"md",true)  
return false
end 
if text == "فتح الصور" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Photo"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الصور").unLock,"md",true)  
return false
end 
if text == "قفل الفيديو" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Video"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الفيديو").Lock,"md",true)  
return false
end 
if text == "قفل الفيديو بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Video"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الفيديو").lockKid,"md",true)  
return false
end 
if text == "قفل الفيديو بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Video"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الفيديو").lockKtm,"md",true)  
return false
end 
if text == "قفل الفيديو بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Video"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الفيديو").lockKick,"md",true)  
return false
end 
if text == "فتح الفيديو" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Video"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الفيديو").unLock,"md",true)  
return false
end 
if text == "قفل المتحركه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Animation"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل المتحركه").Lock,"md",true)  
return false
end 
if text == "قفل المتحركه بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Animation"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل المتحركه").lockKid,"md",true)  
return false
end 
if text == "قفل المتحركه بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Animation"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل المتحركه").lockKtm,"md",true)  
return false
end 
if text == "قفل المتحركه بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Animation"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل المتحركه").lockKick,"md",true)  
return false
end 
if text == "فتح المتحركه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Animation"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح المتحركه").unLock,"md",true)  
return false
end 
if text == "قفل الالعاب" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:geam"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الالعاب").Lock,"md",true)  
return false
end 
if text == "قفل الالعاب بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:geam"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الالعاب").lockKid,"md",true)  
return false
end 
if text == "قفل الالعاب بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:geam"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الالعاب").lockKtm,"md",true)  
return false
end 
if text == "قفل الالعاب بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:geam"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الالعاب").lockKick,"md",true)  
return false
end 
if text == "فتح الالعاب" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:geam"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الالعاب").unLock,"md",true)  
return false
end 
if text == "قفل الاغاني" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Audio"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الاغاني").Lock,"md",true)  
return false
end 
if text == "قفل الاغاني بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Audio"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الاغاني").lockKid,"md",true)  
return false
end 
if text == "قفل الاغاني بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Audio"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الاغاني").lockKtm,"md",true)  
return false
end 
if text == "قفل الاغاني بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Audio"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الاغاني").lockKick,"md",true)  
return false
end 
if text == "فتح الاغاني" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Audio"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الاغاني").unLock,"md",true)  
return false
end 
if text == "قفل الصوت" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:vico"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الصوت").Lock,"md",true)  
return false
end 
if text == "قفل الصوت بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:vico"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الصوت").lockKid,"md",true)  
return false
end 
if text == "قفل الصوت بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:vico"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الصوت").lockKtm,"md",true)  
return false
end 
if text == "قفل الصوت بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:vico"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الصوت").lockKick,"md",true)  
return false
end 
if text == "فتح الصوت" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:vico"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الصوت").unLock,"md",true)  
return false
end 
if text == "قفل الكيبورد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Keyboard"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الكيبورد").Lock,"md",true)  
return false
end 
if text == "قفل الكيبورد بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Keyboard"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الكيبورد").lockKid,"md",true)  
return false
end 
if text == "قفل الكيبورد بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Keyboard"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الكيبورد").lockKtm,"md",true)  
return false
end 
if text == "قفل الكيبورد بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Keyboard"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الكيبورد").lockKick,"md",true)  
return false
end 
if text == "فتح الكيبورد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Keyboard"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الكيبورد").unLock,"md",true)  
return false
end 
if text == "قفل الملصقات" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Sticker"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الملصقات").Lock,"md",true)  
return false
end 
if text == "قفل الملصقات بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Sticker"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الملصقات").lockKid,"md",true)  
return false
end 
if text == "قفل الملصقات بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Sticker"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الملصقات").lockKtm,"md",true)  
return false
end 
if text == "قفل الملصقات بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Sticker"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الملصقات").lockKick,"md",true)  
return false
end 
if text == "فتح الملصقات" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Sticker"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الملصقات").unLock,"md",true)  
return false
end 
if text == "قفل التوجيه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:forward"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التوجيه").Lock,"md",true)  
return false
end 
if text == "قفل التوجيه بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:forward"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التوجيه").lockKid,"md",true)  
return false
end 
if text == "قفل التوجيه بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:forward"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التوجيه").lockKtm,"md",true)  
return false
end 
if text == "قفل التوجيه بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:forward"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل التوجيه").lockKick,"md",true)  
return false
end 
if text == "فتح التوجيه" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:forward"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح التوجيه").unLock,"md",true)  
return false
end 
if text == "قفل الملفات" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Document"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الملفات").Lock,"md",true)  
return false
end 
if text == "قفل الملفات بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Document"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الملفات").lockKid,"md",true)  
return false
end 
if text == "قفل الملفات بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Document"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الملفات").lockKtm,"md",true)  
return false
end 
if text == "قفل الملفات بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Document"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الملفات").lockKick,"md",true)  
return false
end 
if text == "فتح الملفات" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Document"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الملفات").unLock,"md",true)  
return false
end 
if text == "قفل السيلفي" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Unsupported"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل السيلفي").Lock,"md",true)  
return false
end 
if text == "قفل السيلفي بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Unsupported"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل السيلفي").lockKid,"md",true)  
return false
end 
if text == "قفل السيلفي بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Unsupported"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل السيلفي").lockKtm,"md",true)  
return false
end 
if text == "قفل السيلفي بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Unsupported"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل السيلفي").lockKick,"md",true)  
return false
end 
if text == "فتح السيلفي" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Unsupported"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح السيلفي").unLock,"md",true)  
return false
end 
if text == "قفل الماركداون" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Markdaun"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الماركداون").Lock,"md",true)  
return false
end 
if text == "قفل الماركداون بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Markdaun"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الماركداون").lockKid,"md",true)  
return false
end 
if text == "قفل الماركداون بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Markdaun"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الماركداون").lockKtm,"md",true)  
return false
end 
if text == "قفل الماركداون بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Markdaun"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الماركداون").lockKick,"md",true)  
return false
end 
if text == "فتح الماركداون" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Markdaun"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الماركداون").unLock,"md",true)  
return false
end 
if text == "قفل الجهات" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Contact"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الجهات").Lock,"md",true)  
return false
end 
if text == "قفل الجهات بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Contact"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الجهات").lockKid,"md",true)  
return false
end 
if text == "قفل الجهات بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Contact"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الجهات").lockKtm,"md",true)  
return false
end 
if text == "قفل الجهات بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Contact"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الجهات").lockKick,"md",true)  
return false
end 
if text == "فتح الجهات" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Contact"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الجهات").unLock,"md",true)  
return false
end 
if text == "قفل الكلايش" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Spam"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الكلايش").Lock,"md",true)  
return false
end 
if text == "قفل الكلايش بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Spam"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الكلايش").lockKid,"md",true)  
return false
end 
if text == "قفل الكلايش بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Spam"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الكلايش").lockKtm,"md",true)  
return false
end 
if text == "قفل الكلايش بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Spam"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الكلايش").lockKick,"md",true)  
return false
end 
if text == "فتح الكلايش" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Spam"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الكلايش").unLock,"md",true)  
return false
end 
if text == "قفل الانلاين" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Inlen"..msg_chat_id,"del")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الانلاين").Lock,"md",true)  
return false
end 
if text == "قفل الانلاين بالتقييد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Inlen"..msg_chat_id,"ked")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الانلاين").lockKid,"md",true)  
return false
end 
if text == "قفل الانلاين بالكتم" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Inlen"..msg_chat_id,"ktm")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الانلاين").lockKtm,"md",true)  
return false
end 
if text == "قفل الانلاين بالطرد" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Lock:Inlen"..msg_chat_id,"kick")  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم قفـل الانلاين").lockKick,"md",true)  
return false
end 
if text == "فتح الانلاين" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Lock:Inlen"..msg_chat_id)  
send(msg_chat_id,msg_id,Reply_Status(msg.sender_id.user_id," ✧ تم فتح الانلاين").unLock,"md",true)  
return false
end 
if text == "ضع رابط" or text == "وضع رابط" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Set:Link"..msg_chat_id..""..msg.sender_id.user_id,120,true) 
return send(msg_chat_id,msg_id," ✧ ارسل رابط المجموعه او رابط قناة المجموعه","md",true)  
end
if text == "مسح الرابط" or text == "مسح الرابط" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Group:Link"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم مسح الرابط ","md",true)             
end
if text == "الرابط" then
if not Redis:get(MARCOS.."Status:Link"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل الرابط من قبل الادارة","md",true)
end 
local Get_Chat = bot.getChat(msg_chat_id)
local GetLink = Redis:get(MARCOS.."Group:Link"..msg_chat_id) 
if GetLink then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text =Get_Chat.title, url = GetLink}, },}}
return send(msg_chat_id, msg_id, " ✧ Link Group -> \n["..GetLink.."]", 'md', true, false, false, false, reply_markup)
else
return send(msg_chat_id, msg_id, " ✧ لا يوجد رابط ارسل انشاء رابط", 'md', true, false, false, false, reply_markup)
end
end
if text == "انشاء رابط" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
local Get_Chat = bot.getChat(msg_chat_id)
local LinkGroup = bot.generateChatInviteLink(msg_chat_id,'abbas',tonumber(msg.date+864000),100,false)
if LinkGroup.code == 3 then
return send(msg_chat_id,msg_id," ✧ لا استطيع جلب الرابط بسبب ليس لدي صلاحيه دعوه مستخدمين من خلال الرابط ","md",true)
end
Redis:set(MARCOS.."Group:Link"..msg_chat_id,LinkGroup.invite_link) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text = Get_Chat.title, url = LinkGroup.invite_link},},}}
return send(msg_chat_id, msg_id, " ✧ Link Group -> \n["..LinkGroup.invite_link.. "]", 'md', true, false, false, false, reply_markup)
end

if text == "ضع الترحيب عام" or text == "وضع الترحيب عام" then  
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Welcome:Group:Set" .. msg_chat_id .. "" .. msg.sender_id.user_id, 120, true)  
local textett =[[
 ✧ ارسل لي الترحيب عام الان
 ✧ تستطيع اضافة مايلي !
يمكنك استخدام الدوال الاتيه 

- عرض اسم الشخص -> `{الاسم}`
- عرض يوزر الشخص -> `{المعرف}`
- عرض اسم المجموعه -> `{المجموعه}`
- عرض عدد الاعضاء -> `{الاعضاء}`
- عرض عدد الادمنيه -> `{الادمنيه}`
- عرض الوقت -> `{الوقت}`
- عرض التاريخ -> `{التاريخ}`
]]
return send(msg_chat_id,msg_id,textett,"md",true)   
end
if text == "الترحيب عام" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Welcome = Redis:get(MARCOS.."Welcome:Groups")
if Welcome then 
return send(msg_chat_id,msg_id,Welcome,"md",true)   
else 
return send(msg_chat_id,msg_id," ✧ لم يتم تعيين ترحيب عام","md",true)   
end 
end
if text == "مسح الترحيب عام" or text == "مسح الترحيب عام" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Welcome:Groups") 
return send(msg_chat_id,msg_id," ✧ تم ازالة الترحيب العام في المجموعات","md",true)   
end

if Redis:get(MARCOS.."Welcome:Group:Set" .. msg_chat_id .. "" .. msg.sender_id.user_id) then 
if text == "الغاء" then 
Redis:del(MARCOS.."Welcome:Group:Set" .. msg_chat_id .. "" .. msg.sender_id.user_id)  
return send(msg_chat_id,msg_id," ✧ تم الغاء حفظ الترحيب عام","md",true)   
end 
Redis:del(MARCOS.."Welcome:Group:Set" .. msg_chat_id .. "" .. msg.sender_id.user_id)  
Redis:set(MARCOS.."Welcome:Groups",text) 
return send(msg_chat_id,msg_id," ✧ تم حفظ الترحيب العام للمجموعات","md",true)     
end

if text == "ضع الترحيب" or text == "وضع الترحيب" then  
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Tshake:Welcome:Group" .. msg_chat_id .. "" .. msg.sender_id.user_id, 120, true)  
local textett =[[
 ✧ ارسل لي الترحيب عام الان
 ✧ تستطيع اضافة مايلي !
يمكنك استخدام الدوال الاتيه 

- عرض اسم الشخص -> `{الاسم}`
- عرض يوزر الشخص -> `{المعرف}`
- عرض اسم المجموعه -> `{المجموعه}`
- عرض عدد الاعضاء -> `{الاعضاء}`
- عرض عدد الادمنيه -> `{الادمنيه}`
- عرض الوقت -> `{الوقت}`
- عرض التاريخ -> `{التاريخ}`
]]
return send(msg_chat_id,msg_id,textett,"md",true)   
end
if text == "الترحيب" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not Redis:get(MARCOS.."Status:Welcome"..msg_chat_id) then
return send(msg_chat_id,msg_id," ✧ تم تعطيل الترحيب من قبل الادمنيه","md",true)
end 
local Welcome = Redis:get(MARCOS.."Welcome:Group"..msg_chat_id)
if Welcome then 
return send(msg_chat_id,msg_id,Welcome,"md",true)   
else 
return send(msg_chat_id,msg_id," ✧ لم يتم تعيين ترحيب للجروب","md",true)   
end 
end
if text == "مسح الترحيب" or text == "مسح الترحيب" then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Welcome:Group"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم ازالة ترحيب المجموعه","md",true)   
end
if text == "ضع قوانين" or text == "وضع قوانين" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Set:Rules:" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
return send(msg_chat_id,msg_id," ✧ ارسل لي القوانين الان","md",true)  
end
if text == "مسح القوانين" or text == "مسح القوانين" then  
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Group:Rules"..msg_chat_id) 
return send(msg_chat_id,msg_id," ✧ تم ازالة قوانين المجموعه","md",true)    
end
if text == "القوانين" then 
local Rules = Redis:get(MARCOS.."Group:Rules" .. msg_chat_id)   
if Rules then     
return send(msg_chat_id,msg_id,Rules,"md",true)     
else      
return send(msg_chat_id,msg_id," ✧ لا توجد قوانين هنا","md",true)     
end    
end
if text == "ضع وصف" or text == "وضع وصف" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).Info == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه تغيير المعلومات* ',"md",true)  
end
Redis:setex(MARCOS.."Set:Description:" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
return send(msg_chat_id,msg_id," ✧ ارسل لي وصف المجموعه الان","md",true)  
end
if text == "مسح الوصف" or text == "مسح الوصف" then  
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).Info == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه تغيير المعلومات* ',"md",true)  
end
bot.setChatDescription(msg_chat_id, '') 
return send(msg_chat_id,msg_id," ✧ تم ازالة قوانين المجموعه","md",true)    
end

if text and text:match("^ضع اسم (.*)") or text and text:match("^وضع اسم (.*)") then 
local NameChat = text:match("^ضع اسم (.*)") or text:match("^وضع اسم (.*)") 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).Info == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه تغيير المعلومات* ',"md",true)  
end
bot.setChatTitle(msg_chat_id,NameChat)
return send(msg_chat_id,msg_id," ✧ تم تغيير اسم المجموعه الى -> "..NameChat,"md",true)    
end

if text == ("ضع صوره") or text == ("وضع صوره") then  
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).Info == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه تغيير المعلومات* ',"md",true)  
end
Redis:set(MARCOS.."Chat:Photo"..msg_chat_id..":"..msg.sender_id.user_id,true) 
return send(msg_chat_id,msg_id," ✧ ارسل الصوره لوضعها للجروب","md",true)    
end

if text == "مسح قائمه المنع" then   
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Filter"..msg_chat_id)  
if #list == 0 then  
return send(msg_chat_id,msg_id,"* ✧ لا يوجد كلمات ممنوعه هنا *","md",true)   
end  
for k,v in pairs(list) do  
v = v:gsub('photo:',"") 
v = v:gsub('sticker:',"") 
v = v:gsub('animation:',"") 
v = v:gsub('text:',"") 
Redis:del(MARCOS.."Filter:Group:"..v..msg_chat_id)  
Redis:srem(MARCOS.."List:Filter"..msg_chat_id,v)  
end  
return send(msg_chat_id,msg_id,"* ✧ تم مسح ("..#list..") كلمات ممنوعه *","md",true)   
end
if text == "قائمه المنع" then   
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Filter"..msg_chat_id)  
if #list == 0 then  
return send(msg_chat_id,msg_id,"* ✧ لا يوجد كلمات ممنوعه هنا *","md",true)   
end  
Filter = '\n* ✧ قائمه المنع \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k,v in pairs(list) do  
print(v)
if v:match('photo:(.*)') then
ver = 'صوره'
elseif v:match('animation:(.*)') then
ver = 'متحركه'
elseif v:match('sticker:(.*)') then
ver = 'ملصق'
elseif v:match('text:(.*)') then
ver = v:gsub('text:',"") 
end
v = v:gsub('photo:',"") 
v = v:gsub('sticker:',"") 
v = v:gsub('animation:',"") 
v = v:gsub('text:',"") 
local Text_Filter = Redis:get(MARCOS.."Filter:Group:"..v..msg_chat_id)   
Filter = Filter.."*"..k.."- "..ver.." » { "..Text_Filter.." }*\n"    
end  
send(msg_chat_id,msg_id,Filter,"md",true)  
end  
if text == "منع" then       
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS..'FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'true')
return send(msg_chat_id,msg_id,'\n* ✧ ارسل الان { ملصق ,متحركه ,صوره ,رساله } *',"md",true)  
end    
if text == "الغاء منع" then    
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS..'FilterText'..msg_chat_id..':'..msg.sender_id.user_id,'DelFilter')
return send(msg_chat_id,msg_id,'\n* ✧ ارسل الان { ملصق ,متحركه ,صوره ,رساله } *',"md",true)  
end

if text == "اضف امر" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Command:Reids:Group"..msg_chat_id..":"..msg.sender_id.user_id,"true") 
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return send(msg_chat_id,msg_id," ✧ الان ارسل لي الامر القديم ...", 'md', false, false, false, false, reply_markup)
end
if text == "مسح امر" or text == "مسح امر" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Command:Reids:Group:Del"..msg_chat_id..":"..msg.sender_id.user_id,"true") 
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان الامر الذي قمت بوضعه مكان الامر القديم", 'md', false, false, false, false, reply_markup)
end
if text == "مسح الاوامر المضافه" or text == "مسح الاوامر المضافه" then 
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."Command:List:Group"..msg_chat_id)
for k,v in pairs(list) do
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..v)
Redis:del(MARCOS.."Command:List:Group"..msg_chat_id)
end
return send(msg_chat_id,msg_id," ✧ تم مسح جميع الاوامر التي تم اضافتها","md",true)
end
if text == "الاوامر المضافه" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."Command:List:Group"..msg_chat_id.."")
Command = " ✧ قائمه الاوامر المضافه  \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • \n"
for k,v in pairs(list) do
Commands = Redis:get(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..v)
if Commands then 
Command = Command..""..k..": ("..v..")  {"..Commands.."}\n"
else
Command = Command..""..k..": ("..v..") \n"
end
end
if #list == 0 then
Command = " ✧ لا توجد اوامر مضافه"
end
return send(msg_chat_id,msg_id,Command,"md",true)
end

if text == "تثبيت" and msg.reply_to_message_id ~= 0 then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).PinMsg == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه تثبيت الرسائل* ',"md",true)  
end
send(msg_chat_id,msg_id,"\n ✧ تم تثبيت الرساله","md",true)
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local PinMsg = bot.pinChatMessage(msg_chat_id,Message_Reply.id,true)
end
if text == 'الغاء التثبيت' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).PinMsg == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه تثبيت الرسائل* ',"md",true)  
end
send(msg_chat_id,msg_id,"\n ✧ تم الغاء تثبيت الرساله","md",true)
bot.unpinChatMessage(msg_chat_id) 
end
if text == 'الغاء تثبيت الكل' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).PinMsg == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه تثبيت الرسائل* ',"md",true)  
end
bot.unpinAllChatMessages(msg_chat_id) 
send(msg_chat_id,msg_id,"\n ✧ تم الغاء تثبيت جميع الرسائل","md",true)
end
if text == "الحمايه" then    
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'تعطيل الرابط', data = msg.sender_id.user_id..'/'.. 'unmute_link'},{text = 'تفعيل الرابط', data = msg.sender_id.user_id..'/'.. 'mute_link'},
},
{
{text = 'تعطيل الترحيب', data = msg.sender_id.user_id..'/'.. 'unmute_welcome'},{text = 'تفعيل الترحيب', data = msg.sender_id.user_id..'/'.. 'mute_welcome'},
},
{
{text = 'اتعطيل الايدي', data = msg.sender_id.user_id..'/'.. 'unmute_Id'},{text = 'اتفعيل الايدي', data = msg.sender_id.user_id..'/'.. 'mute_Id'},
},
{
{text = 'تعطيل الايدي بالصوره', data = msg.sender_id.user_id..'/'.. 'unmute_IdPhoto'},{text = 'تفعيل الايدي بالصوره', data = msg.sender_id.user_id..'/'.. 'mute_IdPhoto'},
},
{
{text = 'تعطيل الردود', data = msg.sender_id.user_id..'/'.. 'unmute_ryple'},{text = 'تفعيل الردود', data = msg.sender_id.user_id..'/'.. 'mute_ryple'},
},
{
{text = 'تعطيل الردود العامه', data = msg.sender_id.user_id..'/'.. 'unmute_ryplesudo'},{text = 'تفعيل الردود العامه', data = msg.sender_id.user_id..'/'.. 'mute_ryplesudo'},
},
{
{text = 'تعطيل الرفع', data = msg.sender_id.user_id..'/'.. 'unmute_setadmib'},{text = 'تفعيل الرفع', data = msg.sender_id.user_id..'/'.. 'mute_setadmib'},
},
{
{text = 'تعطيل الطرد', data = msg.sender_id.user_id..'/'.. 'unmute_kickmembars'},{text = 'تفعيل الطرد', data = msg.sender_id.user_id..'/'.. 'mute_kickmembars'},
},
{
{text = 'تعطيل الالعاب', data = msg.sender_id.user_id..'/'.. 'unmute_games'},{text = 'تفعيل الالعاب', data = msg.sender_id.user_id..'/'.. 'mute_games'},
},
{
{text = 'تعطيل اطردني', data = msg.sender_id.user_id..'/'.. 'unmute_kickme'},{text = 'تفعيل اطردني', data = msg.sender_id.user_id..'/'.. 'mute_kickme'},
},
{
{text = 'تعطيل التسليه', data = msg.sender_id.user_id..'/'.. 'unmute_thshesh'},{text = 'تفعيل التسليه', data = msg.sender_id.user_id..'/'.. 'mute_thshesh'},
},
{
{text = 'تعطيل منع التصفيه', data = msg.sender_id.user_id..'/'.. 'unmute_kicknum'},{text = 'تفعيل منع التصفيه', data = msg.sender_id.user_id..'/'.. 'mute_kicknum'},
},
{
{text = 'تعطيل الصيغ', data = msg.sender_id.user_id..'/'.. 'unmute_seck'},{text = 'تفعيل الصيغ', data = msg.sender_id.user_id..'/'.. 'mute_seck'},
},
{
{text = 'تعطيل غنيلي', data = msg.sender_id.user_id..'/'.. 'unmute_knile'},{text = 'تفعيل غنيلي', data = msg.sender_id.user_id..'/'.. 'mute_knile'},
},
{
{text = 'تعطيل الابراح', data = msg.sender_id.user_id..'/'.. 'unmute_brj'},{text = 'تفعيل الابراج', data = msg.sender_id.user_id..'/'.. 'mute_brj'},
},
{
{text = 'تعطيل الصوتيات', data = msg.sender_id.user_id..'/'.. 'unmute_audio'},{text = 'تفعيل الصوتيات', data = msg.sender_id.user_id..'/'.. 'mute_audio'},
},
{
{text = 'تعطيل الصوتيات العامه', data = msg.sender_id.user_id..'/'.. 'unmute_audioall'},{text = 'تفعيل الصوتيات العامه', data = msg.sender_id.user_id..'/'.. 'mute_audioall'},
},
{
{text = 'تعطيل تاك للكل', data = msg.sender_id.user_id..'/'.. 'unmute_takall'},{text = 'تفعيل تاك للكل', data = msg.sender_id.user_id..'/'.. 'mute_takall'},
},
{
{text = 'تعطيل تنبيه الاسماء', data = msg.sender_id.user_id..'/'.. 'unmute_namemy'},{text = 'تفعيل تنبيه الاسماء', data = msg.sender_id.user_id..'/'.. 'mute_namemy'},
},
{
{text = 'اخفاء الامر 🔰 ', data ='/delAmr'}
},
}
}
return send(msg_chat_id, msg_id, ' ✧ اوامر التفعيل والتعطيل ', 'md', false, false, false, false, reply_markup)
end  
if text == 'اعدادات الحمايه' then 
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."Status:Link"..msg.chat_id) then
Statuslink = '〘 ✅ 〙' else Statuslink = '〘 ❌ 〙'
end
if Redis:get(MARCOS.."Status:Welcome"..msg.chat_id) then
StatusWelcome = '〘 ✅ 〙' else StatusWelcome = '〘 ❌ 〙'
end
if Redis:get(MARCOS.."Status:Id"..msg.chat_id) then
StatusId = '〘 ✅ 〙' else StatusId = '〘 ❌ 〙'
end
if Redis:get(MARCOS.."Status:IdPhoto"..msg.chat_id) then
StatusIdPhoto = '〘 ✅ 〙' else StatusIdPhoto = '〘 ❌ 〙'
end
if Redis:get(MARCOS.."Status:Reply"..msg.chat_id) then
StatusReply = '〘 ✅ 〙' else StatusReply = '〘 ❌ 〙'
end
if Redis:get(MARCOS.."Status:ReplySudo"..msg.chat_id) then
StatusReplySudo = '〘 ✅ 〙' else StatusReplySudo = '〘 ❌ 〙'
end
if Redis:get(MARCOS.."Status:BanId"..msg.chat_id)  then
StatusBanId = '〘 ✅ 〙' else StatusBanId = '〘 ❌ 〙'
end
if Redis:get(MARCOS.."Status:SetId"..msg.chat_id) then
StatusSetId = '〘 ✅ 〙' else StatusSetId = '〘 ❌ 〙'
end
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
StatusGames = '〘 ✅ 〙' else StatusGames = '〘 ❌ 〙'
end
if Redis:get(MARCOS.."Status:KickMe"..msg.chat_id) then
Statuskickme = '〘 ✅ 〙' else Statuskickme = '〘 ❌ 〙'
end
if Redis:get(MARCOS.."Status:AddMe"..msg.chat_id) then
StatusAddme = '〘 ✅ 〙' else StatusAddme = '〘 ❌ 〙'
end
local protectionGroup = '\n* ✧ اعدادات حمايه المجموعه\n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n'
..'\n ✧ جلب الرابط ➻ '..Statuslink
..'\n ✧ جلب الترحيب ➻ '..StatusWelcome
..'\n ✧ الايدي ➻ '..StatusId
..'\n ✧ الايدي بالصوره ➻ '..StatusIdPhoto
..'\n ✧ الردود ➻ '..StatusReply
..'\n ✧ الردود العامه ➻ '..StatusReplySudo
..'\n ✧ الرفع ➻ '..StatusSetId
..'\n ✧ الحظر - الطرد ➻ '..StatusBanId
..'\n ✧ الالعاب ➻ '..StatusGames
..'\n ✧ امر اطردني ➻ '..Statuskickme..'*\n\n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • '
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
return send(msg_chat_id, msg_id,protectionGroup,'md', false, false, false, false, reply_markup)
end
if text == "الاعدادات" then    
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Text = "*\n ✧ اعدادات المجموعة ⇧⇩".."\n✅ علامة صح تعني مفتوح".."\n❌ علامة غلط تعني مقفول*"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = GetSetieng(msg_chat_id).lock_links, data = '&'},{text = 'الروابط -> ', data =msg.sender_id.user_id..'/'.. 'Status_link'},
},
{
{text = GetSetieng(msg_chat_id).lock_spam, data = '&'},{text = 'الكلايش -> ', data =msg.sender_id.user_id..'/'.. 'Status_spam'},
},
{
{text = GetSetieng(msg_chat_id).lock_inlin, data = '&'},{text = 'الكيبورد -> ', data =msg.sender_id.user_id..'/'.. 'Status_keypord'},
},
{
{text = GetSetieng(msg_chat_id).lock_vico, data = '&'},{text = 'الاغاني -> ', data =msg.sender_id.user_id..'/'.. 'Status_voice'},
},
{
{text = GetSetieng(msg_chat_id).lock_gif, data = '&'},{text = 'المتحركه -> ', data =msg.sender_id.user_id..'/'.. 'Status_gif'},
},
{
{text = GetSetieng(msg_chat_id).lock_file, data = '&'},{text = 'الملفات -> ', data =msg.sender_id.user_id..'/'.. 'Status_files'},
},
{
{text = GetSetieng(msg_chat_id).lock_text, data = '&'},{text = 'الدردشه -> ', data =msg.sender_id.user_id..'/'.. 'Status_text'},
},
{
{text = GetSetieng(msg_chat_id).lock_ved, data = '&'},{text = 'الفيديو -> ', data =msg.sender_id.user_id..'/'.. 'Status_video'},
},
{
{text = GetSetieng(msg_chat_id).lock_photo, data = '&'},{text = 'الصور -> ', data =msg.sender_id.user_id..'/'.. 'Status_photo'},
},
{
{text = GetSetieng(msg_chat_id).lock_user, data = '&'},{text = 'المعرفات -> ', data =msg.sender_id.user_id..'/'.. 'Status_username'},
},
{
{text = GetSetieng(msg_chat_id).lock_hash, data = '&'},{text = 'التاك -> ', data =msg.sender_id.user_id..'/'.. 'Status_tags'},
},
{
{text = GetSetieng(msg_chat_id).lock_bots, data = '&'},{text = 'البوتات -> ', data =msg.sender_id.user_id..'/'.. 'Status_bots'},
},
{
{text = GetSetieng(msg_chat_id).farsia, data = '&'},{text = 'الفارسيه -> ', data =msg.sender_id.user_id..'/'.. 'Status_farsia'},
},
{
{text = GetSetieng(msg_chat_id).tphlesh, data = '&'},{text = 'التفليش -> ', data =msg.sender_id.user_id..'/'.. 'Status_tphlesh'},
},
{
{text = GetSetieng(msg_chat_id).alkfr, data = '&'},{text = 'الشتايم -> ', data =msg.sender_id.user_id..'/'.. 'Status_alkfr'},
},
{
{text = GetSetieng(msg_chat_id).alphsar, data = '&'},{text = 'السب -> ', data =msg.sender_id.user_id..'/'.. 'Status_alphsar'},
},
{
{text = 'التالي ↪️', data =msg.sender_id.user_id..'/'.. 'NextSeting'}
},
{
{text = 'اخفاء الامر 🔰 ', data ='/delAmr'}
},
}
}
return send(msg_chat_id, msg_id, Text, 'md', false, false, false, false, reply_markup)
end  


if text == 'المجموعه' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Chats = bot.getSupergroupFullInfo(msg_chat_id)
local Get_Chat = bot.getChat(msg_chat_id)
if Get_Chat.permissions.can_add_web_page_previews then
web = '〘 ✅ 〙' else web = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_change_info then
info = '〘 ✅ 〙' else info = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_invite_users then
invite = '〘 ✅ 〙' else invite = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_pin_messages then
pin = '〘 ✅ 〙' else pin = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_media_messages then
media = '〘 ✅ 〙' else media = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_messages then
messges = '〘 ✅ 〙' else messges = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_other_messages then
other = '〘 ✅ 〙' else other = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_polls then
polls = '〘 ✅ 〙' else polls = '〘 ❌ 〙'
end
local permissions = '*\n ✧ صلاحيات المجموعه :\n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • '..'\n ✧ ارسال الويب -> '..web..'\n ✧ تغيير معلومات المجموعه -> '..info..'\n ✧ اضافه مستخدمين -> '..invite..'\n ✧ تثبيت الرسائل -> '..pin..'\n ✧ ارسال الميديا -> '..media..'\n ✧ ارسال الرسائل -> '..messges..'\n ✧ اضافه البوتات -> '..other..'\n ✧ ارسال استفتاء -> '..polls..'*\n\n'
local TextChat = '*\n ✧ معلومات المجموعه :\n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • '..' \n ✧ اسم المجموعه -> ❬* ['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')* ❭\n ✧ عدد الادمنيه -> ❬ '..Info_Chats.administrator_count..' ❭\n ✧ عدد المحظورين -> ❬ '..Info_Chats.banned_count..' ❭\n ✧ عدد الاعضاء -> ❬ '..Info_Chats.member_count..' ❭\n ✧ عدد المقيديين -> ❬ '..Info_Chats.restricted_count..' ❭\n ✧ الايدي -> ❬ *`'..msg.chat_id..'`* ❭*\n'
if Info_Chats.photo then
bot.sendPhoto(msg.chat_id, msg.id, Info_Chats.photo.sizes[1].photo.remote.id,TextChat..permissions, "md")
else
return send(msg_chat_id,msg_id, TextChat..permissions,"md",true)
end
end


if text == 'صلاحيات المجموعه' then 
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Get_Chat = bot.getChat(msg_chat_id)
if Get_Chat.permissions.can_add_web_page_previews then
web = '〘 ✅ 〙' else web = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_change_info then
info = '〘 ✅ 〙' else info = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_invite_users then
invite = '〘 ✅ 〙' else invite = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_pin_messages then
pin = '〘 ✅ 〙' else pin = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_media_messages then
media = '〘 ✅ 〙' else media = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_messages then
messges = '〘 ✅ 〙' else messges = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_other_messages then
other = '〘 ✅ 〙' else other = '〘 ❌ 〙'
end
if Get_Chat.permissions.can_send_polls then
polls = '〘 ✅ 〙' else polls = '〘 ❌ 〙'
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '- ارسال الويب -> '..web, data = msg.sender_id.user_id..'/web'}, 
},
{
{text = '- تغيير معلومات المجموعه -> '..info, data =msg.sender_id.user_id..  '/info'}, 
},
{
{text = '- اضافه مستخدمين -> '..invite, data =msg.sender_id.user_id..  '/invite'}, 
},
{
{text = '- تثبيت الرسائل -> '..pin, data =msg.sender_id.user_id..  '/pin'}, 
},
{
{text = '- ارسال الميديا -> '..media, data =msg.sender_id.user_id..  '/media'}, 
},
{
{text = '- ارسال الرسائل -> .'..messges, data =msg.sender_id.user_id..  '/messges'}, 
},
{
{text = '- اضافه البوتات -> '..other, data =msg.sender_id.user_id..  '/other'}, 
},
{
{text = '- ارسال استفتاء -> '..polls, data =msg.sender_id.user_id.. '/polls'}, 
},
{
{text = 'اخفاء الامر 🔰 ', data ='/delAmr'}
},
}
}
return send(msg_chat_id, msg_id, " ✧ الصلاحيات - ", 'md', false, false, false, false, reply_markup)
end
if text == 'تنزيل الكل' and msg.reply_to_message_id ~= 0 then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if Redis:sismember(MARCOS.."Devss:Groups",Message_Reply.sender_id.user_id) then
devQ = "المطور الثانوي ،" 
else 
devQ = "" 
end
if Redis:sismember(MARCOS.."Dev:Groups",Message_Reply.sender_id.user_id) then
dev = "المطور ،" 
else 
dev = "" 
end
if Redis:sismember(MARCOS.."Ownerss:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
crrQ = "المالك ،" 
else 
crrQ = "" 
end
if Redis:sismember(MARCOS.."SuperCreator:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
crr = "منشئ اساسي ،" 
else 
crr = "" 
end
if Redis:sismember(MARCOS..'Creator:Group'..msg_chat_id, Message_Reply.sender_id.user_id) then
cr = "منشئ ،" 
else 
cr = "" 
end
if Redis:sismember(MARCOS..'Manger:Group'..msg_chat_id, Message_Reply.sender_id.user_id) then
own = "مدير ،" 
else 
own = "" 
end
if Redis:sismember(MARCOS..'Admin:Group'..msg_chat_id, Message_Reply.sender_id.user_id) then
mod = "ادمن ،" 
else 
mod = "" 
end
if Redis:sismember(MARCOS..'Special:Group'..msg_chat_id, Message_Reply.sender_id.user_id) then
vip = "مميز ،" 
else 
vip = ""
end
if The_ControllerAll(Message_Reply.sender_id.user_id) == true then
Rink = 1
elseif Redis:sismember(MARCOS.."Devss:Groups",Message_Reply.sender_id.user_id)  then
Rink = 2
elseif Redis:sismember(MARCOS.."Dev:Groups",Message_Reply.sender_id.user_id)  then
Rink = 3
elseif Redis:sismember(MARCOS.."Ownerss:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 4
elseif Redis:sismember(MARCOS.."SuperCreator:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 5
elseif Redis:sismember(MARCOS.."Creator:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 6
elseif Redis:sismember(MARCOS.."Manger:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 7
elseif Redis:sismember(MARCOS.."Admin:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 8
elseif Redis:sismember(MARCOS.."Special:Group"..msg_chat_id, Message_Reply.sender_id.user_id) then
Rink = 9
else
Rink = 10
end
if StatusCanOrNotCan(msg_chat_id,Message_Reply.sender_id.user_id) == false then
return send(msg_chat_id,msg_id,"\n* ✧ ليس لديه اي رتبه هنا *","md",true)  
end
if msg.Asasy then
if Rink == 1 or Rink < 1 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Devss:Groups",Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Dev:Groups",Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Ownerss:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."SuperCreator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.Devss then
if Rink == 2 or Rink < 2 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Dev:Groups",Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Ownerss:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."SuperCreator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.Dev then
if Rink == 3 or Rink < 3 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Ownerss:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."SuperCreator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.Ownerss then
if Rink == 4 or Rink < 4 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."SuperCreator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.SuperCreator then
if Rink == 5 or Rink < 5 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.Creator then
if Rink == 6 or Rink < 6 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.Manger then
if Rink == 7 or Rink < 7 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
elseif msg.Admin then
if Rink == 8 or Rink < 8 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, Message_Reply.sender_id.user_id)
end
return send(msg_chat_id,msg_id,"\n* ✧ تم تنزيل المستخدم من الرتب التاليه { "..devQ..""..dev..""..crrQ..""..crr..""..cr..""..own..""..mod..""..vip.." *}","md",true)  
end

if text and text:match('^تنزيل الكل @(%S+)$') then
local UserName = text:match('^تنزيل الكل @(%S+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
if Redis:sismember(MARCOS.."Devss:Groups",UserId_Info.id) then
devQ = "المطور الثانوي ،" 
else 
devQ = "" 
end
if Redis:sismember(MARCOS.."Dev:Groups",UserId_Info.id) then
dev = "المطور ،" 
else 
dev = "" 
end
if Redis:sismember(MARCOS.."Ownerss:Group"..msg_chat_id, UserId_Info.id) then
crrQ = "المالك ،" 
else 
crrQ = "" 
end
if Redis:sismember(MARCOS.."SuperCreator:Group"..msg_chat_id, UserId_Info.id) then
crr = "منشئ اساسي ،" 
else 
crr = "" 
end
if Redis:sismember(MARCOS..'Creator:Group'..msg_chat_id, UserId_Info.id) then
cr = "منشئ ،" 
else 
cr = "" 
end
if Redis:sismember(MARCOS..'Manger:Group'..msg_chat_id, UserId_Info.id) then
own = "مدير ،" 
else 
own = "" 
end
if Redis:sismember(MARCOS..'Admin:Group'..msg_chat_id, UserId_Info.id) then
mod = "ادمن ،" 
else 
mod = "" 
end
if Redis:sismember(MARCOS..'Special:Group'..msg_chat_id, UserId_Info.id) then
vip = "مميز ،" 
else 
vip = ""
end
if The_ControllerAll(UserId_Info.id) == true then
Rink = 1
elseif Redis:sismember(MARCOS.."Devss:Groups",UserId_Info.id)  then
Rink = 2
elseif Redis:sismember(MARCOS.."Dev:Groups",UserId_Info.id)  then
Rink = 3
elseif Redis:sismember(MARCOS.."Ownerss:Group"..msg_chat_id, UserId_Info.id) then
Rink = 4
elseif Redis:sismember(MARCOS.."SuperCreator:Group"..msg_chat_id, UserId_Info.id) then
Rink = 5
elseif Redis:sismember(MARCOS.."Creator:Group"..msg_chat_id, UserId_Info.id) then
Rink = 6
elseif Redis:sismember(MARCOS.."Manger:Group"..msg_chat_id, UserId_Info.id) then
Rink = 7
elseif Redis:sismember(MARCOS.."Admin:Group"..msg_chat_id, UserId_Info.id) then
Rink = 8
elseif Redis:sismember(MARCOS.."Special:Group"..msg_chat_id, UserId_Info.id) then
Rink = 9
else
Rink = 10
end
if StatusCanOrNotCan(msg_chat_id,UserId_Info.id) == false then
return send(msg_chat_id,msg_id,"\n* ✧ ليس لديه اي رتبه هنا *","md",true)  
end
if msg.Asasy then
if Rink == 1 or Rink < 1 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Devss:Groups",UserId_Info.id)
Redis:srem(MARCOS.."Dev:Groups",UserId_Info.id)
Redis:srem(MARCOS.."Ownerss:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."SuperCreator:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, UserId_Info.id)
elseif msg.Devss then
if Rink == 2 or Rink < 2 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Dev:Groups",UserId_Info.id)
Redis:srem(MARCOS.."Ownerss:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."SuperCreator:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, UserId_Info.id)
elseif msg.Dev then
if Rink == 3 or Rink < 3 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Ownerss:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."SuperCreator:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, UserId_Info.id)
elseif msg.Ownerss then
if Rink == 4 or Rink < 4 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."SuperCreator:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, UserId_Info.id)
elseif msg.SuperCreator then
if Rink == 5 or Rink < 5 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Creator:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, UserId_Info.id)
elseif msg.Creator then
if Rink == 6 or Rink < 6 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Manger:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, UserId_Info.id)
elseif msg.Manger then
if Rink == 7 or Rink < 7 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Admin:Group"..msg_chat_id, UserId_Info.id)
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, UserId_Info.id)
elseif msg.Admin then
if Rink == 8 or Rink < 8 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكن تنزيل رتبه نفس رتبتك ولا اعلى من رتبتك *","md",true)  
end
Redis:srem(MARCOS.."Special:Group"..msg_chat_id, UserId_Info.id)
end
return send(msg_chat_id,msg_id,"\n* ✧ تم تنزيل المستخدم من الرتب التاليه { "..devQ..""..dev..""..crrQ..""..crr..""..cr..""..own..""..mod..""..vip.." *}","md",true)  
end
if text == "تنزيل جميع الرتب" then
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.Ownerss then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(8)..' , مالك المجموعه }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."SuperCreator:Group"..msg_chat_id)
Redis:del(MARCOS.."Creator:Group"..msg_chat_id)
Redis:del(MARCOS.."Manger:Group"..msg_chat_id)
Redis:del(MARCOS.."Admin:Group"..msg_chat_id)
--Redis:del(MARCOS.."Special:Group"..msg_chat_id)
return send(msg_chat_id,msg_id,'\n* ✧ تم تنزيل جميع رتب المجموعه { المنشئين الاساسسين , المنشئين , المدراء , الادمنيه  }* ',"md",true)  
end

if text and text:match('ضع لقب (.*)') and msg.reply_to_message_id ~= 0 then
local CustomTitle = text:match('ضع لقب (.*)')
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن او ليست لدي جميع الصلاحيات *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..Message_Reply.sender_id.user_id.."&can_invite_users=True")
sleep(1)
local SetCustomTitle = https.request("https://api.telegram.org/bot"..Token.."/setChatAdministratorCustomTitle?chat_id="..msg_chat_id.."&user_id="..Message_Reply.sender_id.user_id.."&custom_title="..CustomTitle)
local SetCustomTitle_ = JSON.decode(SetCustomTitle)
var(SetCustomTitle_)
if SetCustomTitle_.result == true then
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم وضع له لقب -> "..CustomTitle).Reply,"md",true)  
else
return send(msg_chat_id,msg_id,"\n ✧ عذرآ هناك خطا تاكد من البوت ومن الشخص","md",true)  
end 
end
if text and text:match('^ضع لقب @(%S+) (.*)$') then
local UserName = {text:match('^ضع لقب @(%S+) (.*)$')}
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن او ليست لدي جميع الصلاحيات *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName[1])
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName[1]:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..UserId_Info.id.."&can_invite_users=True")
sleep(1)
local SetCustomTitle = https.request("https://api.telegram.org/bot"..Token.."/setChatAdministratorCustomTitle?chat_id="..msg_chat_id.."&user_id="..UserId_Info.id.."&custom_title="..UserName[2])
local SetCustomTitle_ = JSON.decode(SetCustomTitle)
if SetCustomTitle_.result == true then
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم وضع له لقب -> "..UserName[2]).Reply,"md",true)  
else
return send(msg_chat_id,msg_id,"\n ✧ عذرآ هناك خطا تاكد من البوت ومن الشخص","md",true)  
end 
end 
if text and text:match("^ضع التكرار (%d+)$") then  
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
local Numbardel = text:match("^ضع التكرار (%d+)$")
Redis:hset(MARCOS.."Spam:Group:User"..msg_chat_id ,"Num:Spam",Numbardel)  
send(msg_chat_id,msg_id, 'تم تعيين عدد التكرار الى  -> '..Numbardel)
end
if text == ('رفع مشرف') and msg.reply_to_message_id ~= 0 then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
local rep_info = bot.getUser(Message_Reply.sender_id.user_id)
local rep_tag = "["..rep_info.first_name.."](tg://user?id="..Message_Reply.sender_id.user_id..")"
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
local SetAdmin = bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'administrator',{1 ,1, 0, 0, 0, 0, 0 , 0, 0, 0, 0, 0, ''})
if SetAdmin.code == 3 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكنني رفعه ليس لدي صلاحيات *","md",true)  
end
https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..Message_Reply.sender_id.user_id.."&&can_manage_voice_chats=true")
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'تعديل صلاحياته ✨', data = msg.sender_id.user_id..'give'..UserInfo.id}, 
},
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''},
},
}
}
return send(msg_chat_id, msg_id, "*✧ تم رفع العضو -> *"..rep_tag.." \n* ✧ مشرف في المجموعة بنجاح ✅ *", 'md', false, false, false, false, reply_markup)
end
if text and text:match('^رفع مشرف @(%S+)$') then
local UserName = text:match('^رفع مشرف @(%S+)$')
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local SetAdmin = bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'administrator',{1 ,1, 0, 0, 0, 0, 0 , 0, 0, 0, 0, 0, ''})
if SetAdmin.code == 3 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكنني رفعه ليس لدي صلاحيات *","md",true)  
end
https.request("https://api.telegram.org/bot" .. Token .. "/promoteChatMember?chat_id=" .. msg.chat_id .. "&user_id=" ..UserId_Info.id.."&&can_manage_voice_chats=true")
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '- تعديل الصلاحيات ', data = msg.sender_id.user_id..'/groupNumseteng//'..UserId_Info.id}, 
},
}
}
return send(msg_chat_id, msg_id, " ✧ صلاحيات المستخدم - ", 'md', false, false, false, false, reply_markup)
end 
if text == ('تنزيل مشرف') and msg.reply_to_message_id ~= 0 then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
local SetAdmin = bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'administrator',{0 ,0, 0, 0, 0, 0, 0 ,0, 0})
if SetAdmin.code == 400 then
return send(msg_chat_id,msg_id,"\n* ✧ لست انا من قام برفعه *","md",true)  
end
if SetAdmin.code == 3 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكنني تنزيله ليس لدي صلاحيات *","md",true)  
end
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم تنزيله من المشرفين ").Reply,"md",true)  
end
if text and text:match('^تنزيل مشرف @(%S+)$') then
local UserName = text:match('^تنزيل مشرف @(%S+)$')
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).SetAdmin == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه اضافة مشرفين* ',"md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local SetAdmin = bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'administrator',{0 ,0, 0, 0, 0, 0, 0 ,0, 0})
if SetAdmin.code == 400 then
return send(msg_chat_id,msg_id,"\n* ✧ لست انا من قام برفعه *","md",true)  
end
if SetAdmin.code == 3 then
return send(msg_chat_id,msg_id,"\n* ✧ لا يمكنني تنزيله ليس لدي صلاحيات *","md",true)  
end
return send(msg_chat_id,msg_id,Reply_Status(UserId_Info.id," ✧ تم تنزيله من المشرفين ").Reply,"md",true)  
end 
if text == 'مسح رسائلي' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS..'Num:Message:User'..msg.chat_id..':'..msg.sender_id.user_id)
send(msg_chat_id,msg_id,' ✧ تم مسح جميع رسائلك ',"md",true)  
elseif text == 'مسح سحكاتي' or text == 'مسح سحكاتي' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS..'Num:Message:Edit'..msg.chat_id..msg.sender_id.user_id)
send(msg_chat_id,msg_id,' ✧ تم مسح جميع سحكاتك ',"md",true)  
elseif text == 'مسح جهاتي' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS..'Num:Add:Memp'..msg.chat_id..':'..msg.sender_id.user_id)
send(msg_chat_id,msg_id,' ✧ تم مسح جميع جهاتك المضافه ',"md",true)  
elseif text == 'رسائلي' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
send(msg_chat_id,msg_id,' ✧ عدد رسائلك هنا *~ '..(Redis:get(MARCOS..'Num:Message:User'..msg.chat_id..':'..msg.sender_id.user_id) or 1)..'*',"md",true)  
elseif text == 'سحكاتي' or text == 'سحكاتي' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
send(msg_chat_id,msg_id,' ✧ عدد السحكات هنا *~ '..(Redis:get(MARCOS..'Num:Message:Edit'..msg.chat_id..msg.sender_id.user_id) or 0)..'*',"md",true)  
elseif text == 'جهاتي' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
send(msg_chat_id,msg_id,' ✧ عدد جهاتك المضافه هنا *~ '..(Redis:get(MARCOS.."Num:Add:Memp"..msg.chat_id..":"..msg.sender_id.user_id) or 0)..'*',"md",true)  
elseif text == 'مسح' and msg.reply_to_message_id ~= 0 and msg.Admin then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).Delmsg == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه مسح الرسائل* ',"md",true)  
end
bot.deleteMessages(msg.chat_id,{[1]= msg.reply_to_message_id})
bot.deleteMessages(msg.chat_id,{[1]= msg_id})
end

if text == 'تفاعل المجموعه' and msg.reply_to_message_id == 0 then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message = msg.id/2097152/0.5
local MsgText = ''  
print(Message)
if tonumber(Message) < 200 then 
MsgText = 'سايق مخده 😹' 
elseif tonumber(Message) < 400 then 
MsgText = 'الله بالخير 👋'
elseif tonumber(Message) < 600 then 
MsgText = 'عفيه اتفاعل 😽' 
elseif tonumber(Message) < 800 then 
MsgText = 'بدأ يتحسن 😐' 
elseif tonumber(Message) < 1000 then 
MsgText = 'شكد تحجي 😒' 
elseif tonumber(Message) < 1300 then 
MsgText = 'استمر بطل 😍' 
elseif tonumber(Message) < 1600 then 
MsgText = 'تفاعل غنبله 🙂'  
elseif tonumber(Message) < 1800 then 
MsgText = 'استمر يعسل 🥳' 
elseif tonumber(Message) < 2200 then 
MsgText = 'جيد جدا ♥️' 
elseif tonumber(Message) < 2600 then 
MsgText = 'ممتاز جدا 🥰' 
elseif tonumber(Message) < 3000 then 
MsgText = 'مــلــک 💯😻' 
elseif tonumber(Message) < 3600 then 
MsgText = 'اسطورة التفاعل❤️' 
elseif tonumber(Message) < 10000000000 then 
MsgText = 'ملك التلكرام 💖'  
end 

return send(msg_chat_id,msg_id," ✧ تفاعل المجموعه -> "..MsgText, "md")
end
if text == 'تعيين الايدي' then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Redis:Id:Group"..msg.chat_id..""..msg.sender_id.user_id,240,true)  
return send(msg_chat_id,msg_id,[[
 ✧ ارسل الان النص
 ✧ يمكنك اضافه :
 ✧ `#username` » اسم المستخدم
 ✧ `#msgs` » عدد الرسائل
 ✧ `#photos` » عدد الصور
 ✧ `#id` » ايدي المستخدم
 ✧ `#auto` » نسبة التفاعل
 ✧ `#stast` » رتبة المستخدم 
 ✧ `#edit` » عدد السحكات
 ✧ `#game` » عدد النقاط
 ✧ `#AddMem` » عدد الجهات
 ✧ `#Description` » تعليق الصوره
 ✧ `#bio` » البايو.
]],"md",true)    
end 
if text == 'مسح الايدي' or text == 'مسح الايدي' then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Set:Id:Group"..msg.chat_id)
return send(msg_chat_id,msg_id, ' ✧ تم ازالة كليشة الايدي ',"md",true)  
end
if text == 'تغيير الايدي' or text == 'تغير الايدي' then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local List = { 
[[
↫ #Description
 ℘︙معرفك ~⪼ #username
 ℘︙ايديك ~⪼ #id
 ℘︙رتبتك ~⪼ #stast  
 ℘︙تفاعلك ~⪼ #auto
 ℘︙رسائلك ~⪼ #msgs
 ℘︙سحكاتك ~⪼ #edit
 ℘︙نقاطك ~⪼ #game
 ℘︙البايو ~⪼ #bio
]],[[
↫ #Description
⌁︙ايديك↫ #id
⌁︙معرفك↫ #username
⌁︙رتبتك↫ #stast
⌁︙تفاعلك↫ #auto
⌁︙رسائلك↫ #msgs 
⌁︙سحكاتك↫ #edit
⌁︙نقاطك↫ #game
]],
[[
↫ #Description
⌁︙ايديك↫ #id
⌁︙معرفك↫ #username
⌁︙رتبتك↫ #stast
⌁︙تفاعلك↫ #auto
⌁︙رسائلك↫ #msgs 
⌁︙سحكاتك↫ #edit
⌁︙نقاطك↫ #game
⌁︙البايو↫ #bio
]],
[[
 ✧ #Description
 ✧ ايديـك  #id 
 ✧ معرفـك  #username 
 ✧ رتبتـك  #stast 
 ✧ تفاعلك  #auto  
 ✧ رسائلك  #msgs 
 ✧ سحكاتـك  #edit 
 ✧ نقاطك  #game 
]],
[[ 
゠𝚄𝚂𝙴?? 𖨈 #username 𖥲 . 
゠𝙼𝚂𝙶 𖨈 #msgs 𖥲 . 
゠𝚂𝚃𝙰 𖨈 #stast 𖥲 . 
゠𝙸𝙳 𖨈 #id 𖥲 . 
]], 
[[ ✧ ᴜѕᴇʀɴᴀᴍᴇ ➥ ✧ #username . 
 ✧ ᴍѕɢѕ ➥ ✧ #msgs . 
 ✧ ѕᴛᴀᴛѕ ➥ ✧ #stast . 
 ✧ ʏᴏᴜʀ ɪᴅ ➥ ✧ #id  . 
 ✧ ᴇᴅɪᴛ ᴍsɢ ➥ ✧ #edit . 
 ✧ ᴅᴇᴛᴀɪʟs ➥ ✧ #auto .  
 ✧ ɢᴀᴍᴇ ➥ ✧ #game .]], 
[[ 
➭- 𝒔𝒕𝒂𓂅 #stast 𓍯. 💕 
➮- 𝒖𝒔𝒆𝒓𓂅 #username 𓍯. 💕 
➭- ??𝒔𝒈𝒆𓂅 #msgs 𓍯. ?? 
➭- ??𝒅 𓂅 #id 𓍯. 💕 
]], 
[[ 
⚕ 𓆰 𝑾𝒆𝒍𝒄𝒐𝒎𝒆 𝑻𝒐 𝑮𝒓𝒐𝒖𝒑 ✧
 ✧ 🖤 | 𝑼𝑬𝑺 -> #username ‌‌‏⚚ 
 ✧ 🖤 | 𝑺𝑻𝑨 -> #stast 🧙🏻‍♂ 
 ✧ 🖤 | 𝑰𝑫 -> #id ‌‌‏♕ 
 ✧ 🖤 | 𝑴𝑺𝑮 -> #msgs 𓆊 
]], 
[[ 
┌ 𝐔𝐒𝐄𝐑 𖤱 #username 𖦴 . 
├ 𝐌??𝐆 𖤱 #msgs 𖦴 . 
├ 𝐒𝐓𝐀 𖤱 #stast 𖦴 . 
└ 𝐈𝐃 𖤱 #id 𖦴 . 
]], 
[[ 
🇮🇶 𝑼𝒔𝒆𝒓𝑵𝒂𝒎𝒆 :#username  
??🇶 𝑺𝒕𝒂𝒔𝒕 :#stast  
🇮🇶 𝒊𝒅 :#id  
🇮🇶 𝑮𝒂𝒎𝒆𝑺 :#game  
🇮🇶 𝑴𝒔𝒈𝒔 :#msgs 
]], 
[[ 
➞: 𝒔𝒕𝒂𓂅 #stast 𓍯➸💞. 
➞: 𝒖𝒔𝒆𝒓𓂅 #username 𓍯➸💞. 
➞: 𝒎𝒔𝒈𝒆𓂅 #msgs 𓍯➸💞. 
➞: 𝒊𝒅 𓂅 #id 𓍯➸💞. 
]], 
[[ 
 ✧ ✧ 𝐮𝐬𝐞𝐫 -> #username 𖣬   
 ✧ ✧ 𝐦𝐬𝐠  -> #msgs 𖣬  
 ✧ ✧ 𝐬𝐭𝐚 -> #stast 𖣬  
 ✧ ✧ 𝐢𝐝  -> #id 𖣬 
]], 
[[ 
- 𓏬 𝐔??𝐄𝐫 -> #username 𓂅 . 
- 𓏬 𝐌𝐬𝐆  -> #msgs 𓂅 . 
- 𓏬 𝐒𝐭𝐀 -> #stast 𓂅 . 
- 𓏬 𝐈𝐃 -> #id 𓂅 . 
]], 
[[ 
.𖣂 𝙪??????𝙣𝙖𝙢𝙚 , #username   
.𖣂 𝙨𝙩𝙖𝙨𝙩 , #stast   
.𖣂 𝙡𝘿 , #id   
.𖣂 𝙂𝙖𝙢𝙨 , #game  
.𖣂 𝙢𝙨𝙂𝙨 , #msgs 
]]} 
local Text_Rand = List[math.random(#List)] 
Redis:set(MARCOS.."Set:Id:Group"..msg.chat_id,Text_Rand)
return send(msg_chat_id,msg_id, ' ✧ تم التغيير ارسل ايدي لعرض الايدي الجديد',"md",true)  
end
if text == 'مسح الايدي عام' or text == 'مسح الايدي عام' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Set:Id:Groups")
return send(msg_chat_id,msg_id, ' ✧ تم ازالة كليشة الايدي ',"md",true)  
end
if text == 'تعيين الايدي عام' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Redis:Id:Groups"..msg.chat_id..""..msg.sender_id.user_id,240,true)  
return send(msg_chat_id,msg_id,[[
 ✧ ارسل الان النص
 ✧ يمكنك اضافه :
 ✧ `#username` » اسم المستخدم
 ✧ `#msgs` » عدد الرسائل
 ✧ `#photos` » عدد الصور
 ✧ `#id` » ايدي المستخدم
 ✧ `#auto` » نسبة التفاعل
 ✧ `#stast` » رتبة المستخدم 
 ✧ `#edit` » عدد السحكات
 ✧ `#game` » عدد النقاط
 ✧ `#AddMem` » عدد الجهات
 ✧ `#Description` » تعليق الصوره
 ✧ `#bio` » البايو.
]],"md",true)    
end 

if text and text:match("^مسح (.*)$") and msg.reply_to_message_id == 0 then
local TextMsg = text:match("^مسح (.*)$")
if TextMsg == 'المطورين الثانوين' or TextMsg == 'المطورين الثانويين' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Devss:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مطورين ثانوين حاليا , ","md",true)  
end
Redis:del(MARCOS.."Devss:Groups") 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المطورين الثانويين*","md",true)
end
if TextMsg == 'المطورين' then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Dev:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مطورين حاليا , ","md",true)  
end
Redis:del(MARCOS.."Dev:Groups") 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المطورين *","md",true)
end
if TextMsg == 'المالكين' then
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
statusvar = true
elseif msg.Dev then
statusvar = true
else
statusvar = false
end
if statusvar == false then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(3)..' , مالك المجموعه }* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Memberss = Redis:smembers(MARCOS.."Ownerss:Group"..msg_chat_id) 
if #Info_Memberss == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد المالكين حاليا , ","md",true)  
end
Redis:del(MARCOS.."Ownerss:Group"..msg_chat_id) 
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.MARCOSbots == "chatMemberStatusCreator" then
Redis:sadd(MARCOS.."Ownerss:Group"..msg_chat_id,v.member_id.user_id) 
end
end
end
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Memberss.."} من مالكين *","md",true)
end
if TextMsg == 'المنشئين الاساسيين' then
if not msg.Ownerss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(8)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."SuperCreator:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد منشئين اساسيين حاليا , ","md",true)  
end
Redis:del(MARCOS.."SuperCreator:Group"..msg_chat_id) 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المنشؤين الاساسيين *","md",true)
end
if TextMsg == 'المنشئين' then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Creator:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد منشئين حاليا , ","md",true)  
end
Redis:del(MARCOS.."Creator:Group"..msg_chat_id) 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المنشئين *","md",true)
end
if TextMsg == 'المدراء' then
if not msg.Creator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(5)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Manger:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مدراء حاليا , ","md",true)  
end
Redis:del(MARCOS.."Manger:Group"..msg_chat_id) 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المدراء *","md",true)
end
if TextMsg == 'الادمنيه' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Admin:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد ادمنيه حاليا , ","md",true)  
end
Redis:del(MARCOS.."Admin:Group"..msg_chat_id) 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من الادمنيه *","md",true)
end
if TextMsg == 'المميزين' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Special:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مميزين حاليا , ","md",true)  
end
Redis:del(MARCOS.."Special:Group"..msg_chat_id) 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المميزين *","md",true)
end
if TextMsg == 'المحظورين عام' or TextMsg == 'قائمه العام' then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."BanAll:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد محظورين عام حاليا , ","md",true)  
end
Redis:del(MARCOS.."BanAll:Groups") 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المحظورين عام *","md",true)
end
if TextMsg == 'المحظورين' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."BanGroup:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد محظورين حاليا , ","md",true)  
end
Redis:del(MARCOS.."BanGroup:Group"..msg_chat_id) 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المحظورين *","md",true)
end
if TextMsg == 'المكتومين' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."SilentGroup:Group"..msg_chat_id) 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مكتومين حاليا , ","md",true)  
end
Redis:del(MARCOS.."SilentGroup:Group"..msg_chat_id) 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المكتومين *","md",true)
end
if TextMsg == 'المقيدين' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Recent", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
local y = false
for k, v in pairs(List_Members) do
if Info_Members.members[k].status.is_member == true and Info_Members.members[k].status.MARCOSbots == "chatMemberStatusRestricted" then
bot.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'restricted',{1,1,1,1,1,1,1,1})
x = x + 1
y = true
end
end
if y == true then
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..x.."} من المقيديين *","md",true)
else
send(msg_chat_id,msg_id,' ✧ لا يوجد مقيدين ',"md",true)  
end
end
if TextMsg == 'البوتات' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Bots", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
for k, v in pairs(List_Members) do
local Ban_Bots = bot.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'banned',0)
if Ban_Bots.MARCOSbots == "ok" then
x = x + 1
end
end
return send(msg_chat_id,msg_id,"\n* ✧ عدد البوتات الموجوده -> "..#List_Members.."\n ✧ تم طرد ( "..x.." ) بوت من المجموعه *","md",true)  
end
if TextMsg == 'المطرودين' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Banned", "*", 0, 200)
x = 0
local y = false
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
UNBan_Bots = bot.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
if UNBan_Bots.MARCOSbots == "ok" then
x = x + 1
y = true
end
end
if y == true then
return send(msg_chat_id,msg_id,"\n* ✧ عدد المطرودين في الموجوده -> "..#List_Members.."\n ✧ تم الغاء الحظر عن ( "..x.." ) من الاشخاص*","md",true)  
else
send(msg_chat_id,msg_id,' ✧ لا يوجد مطرودين ',"md",true)  
end
end
if TextMsg == 'المحذوفين' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Info_Members = bot.searchChatMembers(msg_chat_id, "*", 200)
local List_Members = Info_Members.members
x = 0
local y = false
for k, v in pairs(List_Members) do
local UserInfo = bot.getUser(v.member_id.user_id)
if UserInfo.type.MARCOSbots == "userTypeDeleted" then
local userTypeDeleted = bot.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'banned',0)
if userTypeDeleted.MARCOSbots == "ok" then
x = x + 1
y = true
end
end
end
if y == true then
return send(msg_chat_id,msg_id,"\n* ✧ تم طرد ( "..x.." ) حساب محذوف *","md",true)  
else
send(msg_chat_id,msg_id,' ✧ لا يوجد محذوفين ',"md",true)  
end
end
end
if text == 'طرد المحذوفين' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Info_Members = bot.searchChatMembers(msg_chat_id, "*", 200)
local List_Members = Info_Members.members
x = 0
local y = false
for k, v in pairs(List_Members) do
local UserInfo = bot.getUser(v.member_id.user_id)
if UserInfo.type.MARCOSbots == "userTypeDeleted" then
local userTypeDeleted = bot.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'banned',0)
if userTypeDeleted.MARCOSbots == "ok" then
x = x + 1
y = true
end
end
end
if y == true then
return send(msg_chat_id,msg_id,"\n* ✧ تم طرد ( "..x.." ) حساب محذوف *","md",true)  
else
send(msg_chat_id,msg_id,' ✧ لا يوجد محذوفين ',"md",true)  
end
end
if text == 'طرد البوتات' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
if GetInfoBot(msg).BanUser == false then
return send(msg_chat_id,msg_id,'\n* ✧ البوت ليس لديه صلاحيه حظر المستخدمين* ',"md",true)  
end
local Info_Members = bot.getSupergroupMembers(msg_chat_id, "Bots", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
for k, v in pairs(List_Members) do
local Ban_Bots = bot.setChatMemberStatus(msg.chat_id,v.member_id.user_id,'banned',0)
if Ban_Bots.MARCOSbots == "ok" then
x = x + 1
end
end
return send(msg_chat_id,msg_id,"\n* ✧ عدد البوتات الموجوده -> "..#List_Members.."\n ✧ تم طرد ( "..x.." ) بوت من المجموعه *","md",true)  
end
if text == ("مسح الردود") then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Manager"..msg_chat_id.."")
for k,v in pairs(list) do
Redis:del(MARCOS.."Add:Rd:Manager:Gif"..v..msg_chat_id)   
Redis:del(MARCOS.."Add:Rd:Manager:Vico"..v..msg_chat_id)   
Redis:del(MARCOS.."Add:Rd:Manager:Stekrs"..v..msg_chat_id)     
Redis:del(MARCOS.."Add:Rd:Manager:Text"..v..msg_chat_id)   
Redis:del(MARCOS.."Add:Rd:Manager:Photo"..v..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Video"..v..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:File"..v..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:video_note"..v..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Audio"..v..msg_chat_id)
Redis:del(MARCOS.."List:Manager"..msg_chat_id)
end
return send(msg_chat_id,msg_id," ✧ تم مسح قائمه الردود","md",true)  
end
if text == ("الردود") then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Manager"..msg_chat_id.."")
text = " ✧ قائمه الردود \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • \n"
for k,v in pairs(list) do
if Redis:get(MARCOS.."Add:Rd:Manager:Gif"..v..msg_chat_id) then
db = "متحركه 🎭"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Vico"..v..msg_chat_id) then
db = "بصمه 📢"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Stekrs"..v..msg_chat_id) then
db = "ملصق 🃏"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Text"..v..msg_chat_id) then
db = "رساله ✉"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Photo"..v..msg_chat_id) then
db = "صوره 🎇"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Video"..v..msg_chat_id) then
db = "فيديو 🎬"
elseif Redis:get(MARCOS.."Add:Rd:Manager:File"..v..msg_chat_id) then
db = "ملف ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Audio"..v..msg_chat_id) then
db = "اغنيه 🎵"
elseif Redis:get(MARCOS.."Add:Rd:Manager:video_note"..v..msg_chat_id) then
db = "بصمه فيديو 🎥"
end
text = text..""..k.." » {"..v.."} » {"..db.."}\n"
end
if #list == 0 then
text = " ✧ عذرا لا يوجد ردود مضافه في المجموعه"
end
return send(msg_chat_id,msg_id,"["..text.."]","md",true)  
end
if text == "اضف رد" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان اسم الرد لاضافته في الردود ", 'md', false, false, false, false, reply_markup)
end
if text == "مسح رد" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Set:Manager:rd"..msg.sender_id.user_id..":"..msg_chat_id,"true2")
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان اسم الرد لمسحه من الردود", 'md', false, false, false, false, reply_markup)
end
if text == ("مسح الردود العامه") then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Rd:Sudo")
for k,v in pairs(list) do
Redis:del(MARCOS.."Add:Rd:Sudo:Gif"..v)   
Redis:del(MARCOS.."Add:Rd:Sudo:vico"..v)   
Redis:del(MARCOS.."Add:Rd:Sudo:stekr"..v)     
Redis:del(MARCOS.."Add:Rd:Sudo:Text"..v)   
Redis:del(MARCOS.."Add:Rd:Sudo:Photo"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:Video"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:File"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:Audio"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:video_note"..v)
Redis:del(MARCOS.."List:Rd:Sudo")
end
return send(msg_chat_id,msg_id," ✧ تم مسح الردود العامه","md",true)  
end
if text == ("الردود العامه") then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Rd:Sudo")
text = "\n✧ قائمة الردود العامه ⇧⇩\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
if Redis:get(MARCOS.."Add:Rd:Sudo:Gif"..v) then
db = "متحركه 🎭"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:vico"..v) then
db = "بصمه 📢"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:stekr"..v) then
db = "ملصق 🃏"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:Text"..v) then
db = "رساله ✉"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:Photo"..v) then
db = "صوره 🎇"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:Video"..v) then
db = "فيديو 📹"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:File"..v) then
db = "ملف ✧"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:Audio"..v) then
db = "اغنيه 🎵"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:video_note"..v) then
db = "بصمه فيديو 🎥"
end
text = text..""..k.." ->〘 "..v.." 〙✧〘 "..db.." 〙\n"
end
if #list == 0 then
text = " ✧ لا توجد ردود للمطور"
end
return send(msg_chat_id,msg_id,"["..text.."]","md",true)  
end
if text == "اضف رد عام" then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان اسم الرد لاضافته في الردود العامه ", 'md', false, false, false, false, reply_markup)
end
if text == "مسح رد عام" then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(2)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Set:On"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data =msg.sender_id.user_id..'/cancelamr'}
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان الكلمه لمسحها من الردود العامه", 'md', false, false, false, false, reply_markup)
end
if text=="اذاعه" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Broadcasting:Groups" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
send(msg_chat_id,msg_id,[[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, حسنا ارسل الان الاذاعه ،
, ملصق ، متحركه ، صوره ،
, فيديو بصمه ، الفيديو ، ملف ،
, بصمه ، صوت ، رساله ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
, ليتم نشرها للجروبات ،
, للخروج ارسل ( الغاء ) ،
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]],"md",true)  
return false
end

if text=="اذاعه خاص" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Broadcasting:Users" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
send(msg_chat_id,msg_id,[[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, حسنا ارسل الان الاذاعه ،
, ملصق ، متحركه ، صوره ،
, فيديو بصمه ، الفيديو ، ملف ،
, بصمه ، صوت ، رساله ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
, ليتم نشرها للمشتركين ،
, للخروج ارسل ( الغاء ) ،
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]],"md",true)  
return false
end

if text=="اذاعه بالتثبيت" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Broadcasting:Groups:Pin" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
send(msg_chat_id,msg_id,[[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, حسنا ارسل الان الاذاعه ،
, ملصق ، متحركه ، صوره ،
, فيديو بصمه ، الفيديو ، ملف ،
, بصمه ، صوت ، رساله ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
, ليتم نشرها للجروبات ،
, للخروج ارسل ( الغاء ) ،
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]],"md",true)  
return false
end

if text=="اذاعه بالتوجيه" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Broadcasting:Groups:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
send(msg_chat_id,msg_id,"*✧ ارسل لي التوجيه الان*\n*✧ ليتم نشره في المجموعات*\n*✧ للخروج من الامر ارسل〘الغاء〙*","md",true)  
return false
end

if text=="اذاعه خاص بالتوجيه" or text == "اذاعه بالتوجيه خاص" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Broadcasting:Users:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
send(msg_chat_id,msg_id,"*✧ ارسل لي التوجيه الان*\n*✧ ليتم نشره الى اعضاء خاص البوت*\n*✧ للخروج من الامر ارسل〘الغاء〙*","md",true)  
return false
end
if text == 'كشف القيود' and msg.reply_to_message_id ~= 0 then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local GetMemberStatus = bot.getChatMember(msg_chat_id,Message_Reply.sender_id.user_id).status
if GetMemberStatus.MARCOSbots == "chatMemberStatusRestricted" then
Restricted = 'مقيد'
else
Restricted = 'غير مقيد'
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).BanAll == true then
BanAll = 'محظور عام'
else
BanAll = 'غير محظور عام'
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).BanGroup == true then
BanGroup = 'محظور'
else
BanGroup = 'غير محظور'
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).SilentGroup == true then
SilentGroup = 'مكتوم'
else
SilentGroup = 'غير مكتوم'
end
send(msg_chat_id,msg_id,"\n* ✧ معلومات الكشف \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • "..'\n ✧ الحظر العام -> '..BanAll..'\n ✧ الحظر -> '..BanGroup..'\n ✧ الكتم -> '..SilentGroup..'\n ✧ التقييد -> '..Restricted..'*',"md",true)  
end
if text and text:match('^كشف القيود @(%S+)$') then
local UserName = text:match('^كشف القيود @(%S+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local GetMemberStatus = bot.getChatMember(msg_chat_id,UserId_Info.id).status
if GetMemberStatus.MARCOSbots == "chatMemberStatusRestricted" then
Restricted = 'مقيد'
else
Restricted = 'غير مقيد'
end
if Statusrestricted(msg_chat_id,UserId_Info.id).BanAll == true then
BanAll = 'محظور عام'
else
BanAll = 'غير محظور عام'
end
if Statusrestricted(msg_chat_id,UserId_Info.id).BanGroup == true then
BanGroup = 'محظور'
else
BanGroup = 'غير محظور'
end
if Statusrestricted(msg_chat_id,UserId_Info.id).SilentGroup == true then
SilentGroup = 'مكتوم'
else
SilentGroup = 'غير مكتوم'
end
send(msg_chat_id,msg_id,"\n* ✧ معلومات الكشف \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • "..'\n ✧ الحظر العام -> '..BanAll..'\n ✧ الحظر -> '..BanGroup..'\n ✧ الكتم -> '..SilentGroup..'\n ✧ التقييد -> '..Restricted..'*',"md",true)  
end
if text == 'رفع القيود' and msg.reply_to_message_id ~= 0 then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local GetMemberStatus = bot.getChatMember(msg_chat_id,Message_Reply.sender_id.user_id).status
if GetMemberStatus.MARCOSbots == "chatMemberStatusRestricted" then
Restricted = 'مقيد'
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1})
else
Restricted = ''
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).BanAll == true and msg.Asasy then
BanAll = 'محظور عام ,'
Redis:srem(MARCOS.."BanAll:Groups",Message_Reply.sender_id.user_id) 
else
BanAll = ''
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).BanGroup == true then
BanGroup = 'محظور ,'
Redis:srem(MARCOS.."BanGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
else
BanGroup = ''
end
if Statusrestricted(msg_chat_id,Message_Reply.sender_id.user_id).SilentGroup == true then
SilentGroup = 'مكتوم ,'
Redis:srem(MARCOS.."SilentGroup:Group"..msg_chat_id,Message_Reply.sender_id.user_id) 
else
SilentGroup = ''
end
bot.setChatMemberStatus(msg.chat_id,Message_Reply.sender_id.user_id,'restricted',{1,1,1,1,1,1,1,1,1})
send(msg_chat_id,msg_id,"\n* ✧ تم رفع القيود عنه -> {"..BanAll..BanGroup..SilentGroup..Restricted..'}*',"md",true)  
end
if text and text:match('^رفع القيود @(%S+)$') then
local UserName = text:match('^رفع القيود @(%S+)$')
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if msg.can_be_deleted_for_all_users == false then
return send(msg_chat_id,msg_id,"\n* ✧ عذرآ البوت ليس ادمن في المجموعه يرجى ترقيته وتفعيل الصلاحيات له *","md",true)  
end
local UserId_Info = bot.searchPublicChat(UserName)
if not UserId_Info.id then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا يوجد حساب بهذا المعرف ","md",true)  
end
if UserId_Info.type.is_channel == true then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف قناة او جروب ","md",true)  
end
if UserName and UserName:match('(%S+)[Bb][Oo][Tt]') then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام معرف البوت ","md",true)  
end
local GetMemberStatus = bot.getChatMember(msg_chat_id,UserId_Info.id).status
if GetMemberStatus.MARCOSbots == "chatMemberStatusRestricted" then
Restricted = 'مقيد'
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1})
else
Restricted = ''
end
if Statusrestricted(msg_chat_id,UserId_Info.id).BanAll == true and msg.Asasy then
BanAll = 'محظور عام ,'
Redis:srem(MARCOS.."BanAll:Groups",UserId_Info.id) 
else
BanAll = ''
end
if Statusrestricted(msg_chat_id,UserId_Info.id).BanGroup == true then
BanGroup = 'محظور ,'
Redis:srem(MARCOS.."BanGroup:Group"..msg_chat_id,UserId_Info.id) 
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1,1})
else
BanGroup = ''
end
if Statusrestricted(msg_chat_id,UserId_Info.id).SilentGroup == true then
SilentGroup = 'مكتوم ,'
Redis:srem(MARCOS.."SilentGroup:Group"..msg_chat_id,UserId_Info.id) 
else
SilentGroup = ''
end
bot.setChatMemberStatus(msg.chat_id,UserId_Info.id,'restricted',{1,1,1,1,1,1,1,1,1})
send(msg_chat_id,msg_id,"\n* ✧ تم رفع القيود عنه -> {"..BanAll..BanGroup..SilentGroup..Restricted..'}*',"md",true)  
end

if text == 'ضع كليشه المطور' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS..'GetTexting:DevMARCOS'..msg_chat_id..':'..msg.sender_id.user_id,true)
return send(msg_chat_id,msg_id,' ✧ ارسل لي الكليشه الان\n✧ {`#user`} تعني معرف المطور \n✧ {`#id`} تعني ايدي المطور \n✧ {`#name`} تعني اسم المطور\n✧ {`#bio`} تعني نبذه المطور',"md")
end
if text == 'مسح كليشه المطور' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS..'Texting:DevMARCOS')
return send(msg_chat_id,msg_id,' ✧ تم مسح كليشه المطور')
end
if text == 'نادي المطور' or text == 'نادي مطور' or text == 'بدي مساعدة' or text == 'بدي مساعده' then  
bot.sendText(msg.chat_id,msg.id,"✧ تم إرسال طلبك للمطور سيتم الرد عليك قريبا")
local Get_Chat = bot.getChat(msg.chat_id)
local Info_Chats = bot.getSupergroupFullInfo(msg.chat_id)
local bains = bot.getUser(msg.sender_id.user_id)
if bains.first_name then
klajq = ' ['..bains.first_name..'](tg://user?id='..bains.id..') '
else
klajq = 'لا يوجد'
end
if bains.username then
basgk = ''..bains.username..' '
else
basgk = 'لا يوجد'
end
local czczh = ''..bains.first_name..''
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = czczh, url = "https://t.me/"..bains.username..""},
},
{
{text = Get_Chat.title, url = Info_Chats.invite_link.invite_link}, 
},
}
}
bot.sendText(Sudo_Id,0,'*\n✧ مرحبا سيدي المطور \nشخص ما يحتاج مساعدتك\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n✧ اسمه ->* '..klajq..' \n*✧ ايديه -> '..msg.sender_id.user_id..'\n✧ يوزره -> @'..basgk..'\n✧ الوقت -> '..os.date("%I:%M %p")..'\n✧ التاريخ -> '..os.date("%Y/%m/%d")..'*',"md",false, false, false, false, reply_markup)
end
---استبدال كلمه--
if text == "استبدال كلمه" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص  '..Controller_Num(2)..' * ',"md",true)  
end
Redis:set(MARCOS..msg.chat_id..msg.sender_id.user_id.."replace",true)
return bot.sendText(msg_chat_id,msg_id,'\n ✧ ارسل الكلمه القديمه ليتم استبدالها',"md",true)  
end
if text == "مسح الكلمات المستبدله" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص  '..Controller_Num(2)..' * ',"md",true)  
end
local list = Redis:smembers(MARCOS.."Words:r")
for k,v in pairs(list) do
Redis:del(MARCOS.."Word:Replace"..v)
end
Redis:del(MARCOS.."Words:r")
send(msg_chat_id,msg_id," ✧ تم مسح الكلمات المستبدله")
end
if text == "الكلمات المستبدله" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص  '..Controller_Num(2)..' * ',"md",true)  
end
local list = Redis:smembers(MARCOS.."Words:r")
if #list == 0 then
return send(msg.chat_id,msg.id," ✧ لا توجد كلمات مستبدله")
end
local txx = " قائمه الكلمات المستبدله \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •"
for k,v in pairs(list) do 
cmdd = Redis:get(MARCOS.."Word:Replace"..v)
txx = txx..k.." -> "..v.." ✧ "..cmdd.."\n"
end
bot.sendText(msg_chat_id,msg_id,txx)
end
-------زواج
if text == "زواج" or text == "رفع زوجتي" or text == "رفع زوجي" and msg.reply_to_message_id ~= 0 then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if tonumber(Message_Reply.sender_id.user_id) == tonumber(msg.sender_id.user_id) then
return send(msg_chat_id,msg_id,"انت اهبل يبني عاوز تتجوز نفسك ؟ هتتكاثر ازاي طيب ؟!!","md",true)
end
if tonumber(Message_Reply.sender_id.user_id) == tonumber(MARCOS) then
return send(msg_chat_id,msg_id,"ابعد عني يحيحان ملكقتش غيري","md",true)
end
if Redis:sismember(MARCOS..msg_chat_id.."zwgat:",Message_Reply.sender_id.user_id) then
local rd_mtzwga = {
"اسف يصحبي متجوزه",
"متجوزه يبن عمي شفلك واحده تانيه",
"يبني متجوزه اجوزهاشلك ازاي انا",
"للاسف متجوزه بس لو العمليه جايبه اخرها شوف واحده تانيه",
"يادي الكسفه طلعت متجوزه قبلك"
}
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,rd_mtzwga[math.random(#rd_mtzwga)]).Reply,"md",true)
else
local rd_zwag = {
"تم زواجك منه وبارك الله لكم وعليكم",
"لولولولويي تم الزواج عقبال العيال بقا",
"مبروك اتجوزتها عاوز اتغدا بقا في الفرح",
"تم زواجكم... ودا رقمي عشان لو العريس معرفش يسد 012345..",
"الزواج تم اتفضلو اعملو احلا واحد بقا هيهيهي"
}
if Redis:sismember(MARCOS..msg_chat_id.."mutlqat:",Message_Reply.sender_id.user_id) then 
Redis:srem(MARCOS..msg_chat_id.."mutlqat:",Message_Reply.sender_id.user_id)
end
Redis:sadd(MARCOS..msg_chat_id.."zwgat:",Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,rd_zwag[math.random(#rd_zwag)]).Reply,"md",true)
end
end
if text == "تاك للزوجات" or text == "الزوجات" then
local zwgat_list = Redis:smembers(MARCOS..msg_chat_id.."zwgat:")
if #zwgat_list == 0 then 
return send(msg_chat_id,msg_id,' ✧ لايوجد زوجات',"md",true) 
end 
local zwga_list = " ✧ عدد الزوجات -> "..#zwgat_list.."\n ✧ الزوجات :\n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • \n"
for k, v in pairs(zwgat_list) do
local UserInfo = bot.getUser(v)
local zwga_name = FlterBio(UserInfo.first_name)
local zwga_tag = '['..zwga_name..'](tg://user?id='..v..')'
zwga_list = zwga_list.."- "..zwga_tag.."\n"
end
return send(msg_chat_id,msg_id,zwga_list,"md",true) 
end
-- tlaq
if text == "طلاق" or text == "تنزيل زوجتي" or text == "تزيل زوجي" and msg.reply_to_message_id ~= 0 then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if tonumber(Message_Reply.sender_id.user_id) == tonumber(msg.sender_id.user_id) then
return send(msg_chat_id,msg_id,"احا هو انت كنت اتجوزت نفسك عشان تطلق","md",true)
end
if tonumber(Message_Reply.sender_id.user_id) == tonumber(MARCOS) then
return send(msg_chat_id,msg_id,"هو احنا كنا اتجوزنا يروح خالتك عشان نطلق","md",true)
end
if Redis:sismember(MARCOS..msg_chat_id.."zwgat:",Message_Reply.sender_id.user_id) then
Redis:srem(MARCOS..msg_chat_id.."zwgat:",Message_Reply.sender_id.user_id)
Redis:sadd(MARCOS..msg_chat_id.."mutlqat:",Message_Reply.sender_id.user_id) 
local rd_tmtlaq = {
"تم طلاقكم للاسف",
"تم الطلاق بلص ام عبير عاوزه تعرف اتطلقتو لي ؟",
"تم الطلاق عشان المعلم مبيعرفش",
"تم الطلاق عشان في سوسه دخلت وسطهم",
"تم الطلاق بلص دا رقمي عشان لو حبيتي نتكلم باحترام 01234..."
}
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,rd_tmtlaq[math.random(#rd_tmtlaq)]).Reply,"md",true)
else
local rd_tlaq = {
"مكنتش اتجوزت عشان تطلق اصلا",
"بايره محدش اتجوزها",
"محدش عبرها قبل كدا اسسن"
}
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,rd_tlaq[math.random(#rd_tlaq)]).Reply,"md",true)
end
end
if text == "تاك للمطلقات" or text == "المطلقات" then
local mutlqat_list = Redis:smembers(MARCOS..msg_chat_id.."mutlqat:")
if #mutlqat_list == 0 then 
return send(msg_chat_id,msg_id,' ✧ لايوجد مطلقات',"md",true) 
end 
local mutlqa_list = " ✧ عدد المطلقات -> "..#mutlqat_list.."\n ✧ المطلقات :\n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • \n"
for k, v in pairs(mutlqat_list) do
local UserInfo = bot.getUser(v)
local mutlqa_name = FlterBio(UserInfo.first_name)
local mutlqa_tag = '['..mutlqa_name..'](tg://user?id='..v..')'
mutlqa_list = mutlqa_list.."- "..mutlqa_tag.."\n"
end
return send(msg_chat_id,msg_id,mutlqa_list,"md",true) 
end
if text == "رفع بقلبي" then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if tonumber(Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."in_heart:")) == tonumber(msg.sender_id.user_id) then
return send(msg_chat_id,msg_id,"مهو فقلبك ولا هي شغلانه","md")
elseif tonumber(Message_Reply.sender_id.user_id) == tonumber(msg.sender_id.user_id) then
return send(msg_chat_id,msg_id,"انت اهبل يبني عاوز ترفع نفسك فقلبك ؟؟","md")
elseif tonumber(Message_Reply.sender_id.user_id) == tonumber(MARCOS) then
return send(msg_chat_id,msg_id,"ابعد عني يبن الهبله","md")
elseif Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."in_heart:") then
return send(msg_chat_id,msg_id,"للاسف العضو فقلب حد تاني","md")
elseif tonumber(Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."in_heart:")) ~= tonumber(msg.sender_id.user_id) and not Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."in_heart:") then
Redis:set(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."in_heart:", msg.sender_id.user_id)
Redis:sadd(MARCOS..msg_chat_id..msg.sender_id.user_id.."my_heart:", Message_Reply.sender_id.user_id)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"تم رفعو فقلبك").Reply,"md",true)
end
end
if text == "تنزيل من قلبي" then 
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if tonumber(Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."in_heart:")) == tonumber(msg.sender_id.user_id) then
Redis:del(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."in_heart:")
Redis:srem(MARCOS..msg_chat_id..msg.sender_id.user_id.."my_heart:", msg_chat_id..Message_Reply.sender_id.user_id)
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id,"تم تنزيلو من قلبك").Reply,"md",true) 
elseif tonumber(Message_Reply.sender_id.user_id) == tonumber(msg.sender_id.user_id) then
return send(msg_chat_id,msg_id,"انت اهبل يبني عاوز تنزل نفسك من قلبك ؟؟","md")
elseif tonumber(Message_Reply.sender_id.user_id) == tonumber(MARCOS) then
return send(msg_chat_id,msg_id,"ابعد عني يبن الهبله","md")
elseif tonumber(Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."in_heart:")) ~= tonumber(msg.sender_id.user_id)then
return send(msg_chat_id,msg_id,"هو فقلبك اصلا عشان تنزلو ؟؟","md")
end
end
if text == "انا فقلب مين" then
if not Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."in_heart:") then
return send(msg_chat_id,msg_id,"انته منو ترضه بيك حديقه","md")
elseif Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."in_heart:") then
local in_heart_id = Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."in_heart:")
local heart_name = bot.getUser(in_heart_id).first_name
return send(msg_chat_id,msg_id,"انت فقلب ["..heart_name.."](tg://user?id="..in_heart_id..")","md")
end
end
if text == "تاك للي بقلبي" or text == "تاك للي فقلبي" or text == "تاك للناس الي فقلبي" then
local heart_list = Redis:smembers(MARCOS..msg_chat_id..msg.sender_id.user_id.."my_heart:")
if #heart_list == 0 then
return send(msg_chat_id,msg_id,"قلبك فاضي محدش فيه","md")
elseif #heart_list > 0 then
your_heart = "الناس الي فقلبك \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • \n"
for k,v in pairs(heart_list) do
local user_info = bot.getUser(v)
local name = user_info.first_name
your_heart = your_heart..k.." - ["..name.."](tg://user?id="..v..")\n"
end
return send(msg_chat_id,msg_id,your_heart,"md")
end
end
if text == "مسح للبقلبي" or text == "مسح للي فقلبي" then 
local list = Redis:smembers(MARCOS..msg_chat_id..msg.sender_id.user_id.."my_heart:")
for k,v in pairs(list) do
Redis:del(MARCOS..msg_chat_id..v.."in_heart:")
end
Redis:del(MARCOS..msg_chat_id..msg.sender_id.user_id.."my_heart:")
return send(msg_chat_id,msg_id,"تم مسح الي فقلبك","md")
end
-------
-- ttgwzine
if text == "تعطيل جوزني" or text == "تعطيل زوجني" then
if not msg.Manger then
return bot.sendText(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙* ',"md",true)  
end
Redis:set(MARCOS..'zwgnyy'..msg.chat_id,true)
send(msg_chat_id,msg_id,'\n ✧ تم تعطيل امر جوزني')
end
if text == "تفعيل جوزني" or text == "تفعيل زوجني" then
if not msg.Manger then
return bot.sendText(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙* ',"md",true)  
end
Redis:del(MARCOS..'zwgnyy'..msg.chat_id)
send(msg_chat_id,msg_id,'\n ✧ تم تفعيل امر جوزني')
end
local nnbot = (Redis:get(MARCOS.."Name:Bot") or "ماركوس")
if text == "جوزني" or text == "زوجني" or text == nnbot.." زوجني" or text == nnbot.." جوزني" or text == "جوزوني" or text == "زوجوني"  then
if not Redis:get(MARCOS..'zwgnyy'..msg.chat_id) then 
local Info_Chats = bot.getSupergroupFullInfo(msg_chat_id)
local chat_Members = bot.searchChatMembers(msg_chat_id, "*", Info_Chats.member_count).members
local rand_members = math.random(#chat_Members)
local member_id = chat_Members[rand_members].member_id.user_id
local member_name = bot.getUser(chat_Members[rand_members].member_id.user_id).first_name
local mem_tag = "["..member_name.."](tg://user?id="..member_id..")"
if tonumber(member_id) == tonumber(msg.sender_id.user_id) or tonumber(member_id) == tonumber(MARCOS) or bot.getUser(member_id).type.bot == "userTypeBot" then 
return send(msg_chat_id,msg_id,"* ✧ معندناش حد للجواز شطبنا بقا*","md")
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'موافء 😉', data = msg.sender_id.user_id..'/yes_zw/'..member_id},
{text = 'مش موافء 😢', data = msg.sender_id.user_id..'/no_zw/'..member_id},
},
}
}
return send(msg_chat_id,msg_id,"* ✧ اخترتلك موزه قامده* "..mem_tag.." *🌝💖\n ✧ هل موافق على العروسه *","md",false, false, false, false, reply_markup)
end
end
if text == "تتجوزيني" or text == "تتزوجيني" or text == "تتجوزني" or text == "ممكن نتزوج" and msg.reply_to_message_id ~= 0 then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if tonumber(Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."mtzwga:")) == tonumber(msg.sender_id.user_id) or tonumber(Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")) == tonumber(Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,"*الجوز مره وحده بلا قلة ادب 😒*","md")
elseif tonumber(Message_Reply.sender_id.user_id) == tonumber(msg.sender_id.user_id) then
return send(msg_chat_id,msg_id,"*انت عاوز تتجوز نفسك يعبيط 😹*","md")
elseif tonumber(Message_Reply.sender_id.user_id) == tonumber(MARCOS) then
return send(msg_chat_id,msg_id,"*البوت مش للجوز ينجم 🚶*","md")
elseif Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."mtzwga:") then
local zwg_id = Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."mtzwga:")
local zwg_info = bot.getUser(zwg_id)
return send(msg_chat_id,msg_id,"*رايح اصيح لزوجها 😜*\n["..zwg_info.first_name.."](tg://user?id="..zwg_id..")\n*تعال يا سيد الرجاله مراتك بتتسرق منك 👻😹*","md")
elseif Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:") then
local zwg_id = Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")
local zwg_info = bot.getUser(zwg_id)
return send(msg_chat_id,msg_id,"*رايح اصيح لمراتك 😜*\n["..zwg_info.first_name.."](tg://user?id="..zwg_id..")\n*تعالي يا مدام الحج ريح يخون العشره 😂*","md")
elseif not Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."mtzwga:") then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local rep_info = bot.getUser(Message_Reply.sender_id.user_id)
local rep_tag = "["..rep_info.first_name.."](tg://user?id="..Message_Reply.sender_id.user_id..")"
local user_info = bot.getUser(msg.sender_id.user_id)
local user_tag = "["..user_info.first_name.."](tg://user?id="..msg.sender_id.user_id..")"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'موافقه 💍', data = Message_Reply.sender_id.user_id..'/yes_z/'..msg.sender_id.user_id},
{text = 'مش موافقه 💃', data = Message_Reply.sender_id.user_id..'/no_z/'..msg.sender_id.user_id},
},
}
}
return send(msg_chat_id,msg.reply_to_message_id,"*🧖‍♀ يا عروسه ->* "..rep_tag.."\n*🧖 العريس ->* "..user_tag.."\n*طلب القرب منك للجواز ✨🎀*","md",false, false, false, false, reply_markup)
end
end
if text == "زوجتي" or text == "مراتي" then
if Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:") then
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
Name = ' ['..ban.first_name..'](tg://user?id='..ban.id..') '
else
Name = 'لا يوجد اسم'
end
local zwga_id = Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")
local zwga_name = bot.getUser(zwga_id).first_name
return send(msg_chat_id,msg_id,"*🙈 يا مدام ->* ["..zwga_name.."](tg://user?id="..zwga_id..") * ✧ كلمي جوزكي*","md")
elseif not Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:") then
return send(msg_chat_id,msg_id,"*انت ->* "..Name.." \n*مش متجوز يا مسكين 😔💔*","md")
end
end
if text == "زوجي" or text == "جوزي" then
if Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:") then
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
Name = ' ['..ban.first_name..'](tg://user?id='..ban.id..') '
else
Name = 'لا يوجد اسم'
end
local zwga_id = Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")
local zwga_name = bot.getUser(zwga_id).first_name
return send(msg_chat_id,msg_id,"*👳 كلم يا حج ->* ["..zwga_name.."](tg://user?id="..zwga_id..") * ✧ مراتك عوزاك*","md")
elseif not Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:") then
return send(msg_chat_id,msg_id,"*انتي ->* "..Name.." \n*مش متجوزه يا موكوسه 😿 *","md")
end
end
if text == "انتي طالق" and msg.reply_to_message_id ~= 0 then 
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if tonumber(Message_Reply.sender_id.user_id) == tonumber(msg.sender_id.user_id) then
return send(msg_chat_id,msg_id,"*لول هطلق نفسك ازاي 👻😹*","md")
elseif tonumber(Message_Reply.sender_id.user_id) == tonumber(MARCOS) then
return send(msg_chat_id,msg_id,"*البوت مش انسان يبشا 😂*","md")
elseif tonumber(Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."mtzwga:")) ~= tonumber(msg.sender_id.user_id) or tonumber(Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")) ~= tonumber(Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,"*مش مراتك عشان تطلقها يستاا 😹*","md")
elseif tonumber(Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."mtzwga:")) == tonumber(msg.sender_id.user_id) or tonumber(Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")) == tonumber(Message_Reply.sender_id.user_id) then
Redis:del(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."mtzwga:")
Redis:del(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")
return send(msg_chat_id,msg_id,"*تم الطلاق وخربان  البيوت 😳😢*","md")
end
end
if text == "انت طالق" and msg.reply_to_message_id ~= 0 then 
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if tonumber(Message_Reply.sender_id.user_id) == tonumber(msg.sender_id.user_id) then
return send(msg_chat_id,msg_id,"*لول يبنتي عاوزه تطلقي نفسك 😳*","md")
elseif tonumber(Message_Reply.sender_id.user_id) == tonumber(MARCOS) then
return send(msg_chat_id,msg_id,"*انا مش انسان يا جزمه 😒*","md")
elseif tonumber(Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."mtzwga:")) ~= tonumber(msg.sender_id.user_id) or tonumber(Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")) ~= tonumber(Message_Reply.sender_id.user_id) then
return send(msg_chat_id,msg_id,"*مش جوزك يبنتي عشان تطلقي منو 😜*","md")
elseif tonumber(Redis:get(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."mtzwga:")) == tonumber(msg.sender_id.user_id) or tonumber(Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")) == tonumber(Message_Reply.sender_id.user_id) then
Redis:del(MARCOS..msg_chat_id..Message_Reply.sender_id.user_id.."mtzwga:")
Redis:del(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")
return send(msg_chat_id,msg_id,"*تم طلاقكم ودا الشطان 👻😹*","md")
end
end
local nnbot = (Redis:get(MARCOS.."Name:Bot") or "ماركوس")
if text == "بوت طلقني" or text == "طلكني" or text == 'بوت طلكني' or text == nnbot.." طلقني" or text == nnbot.." طلكني" then
if not Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:") then 
return send(msg_chat_id,msg_id,"انت لا متزوج ولا متصخم  علمود اطلقك","md")
elseif Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:") then
local zwg_id = Redis:get(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")
local zwg_name = bot.getUser(zwg_id).first_name
Redis:del(MARCOS..msg_chat_id..msg.sender_id.user_id.."mtzwga:")
Redis:del(MARCOS..msg_chat_id..zwg_id.."mtzwga:")
return send(msg_chat_id,msg_id,"*تم طلاقك من ->* ["..zwg_name.."](tg://user?id="..zwg_id..")\n*خربتي البيت على نفسكي اهوا 😢*","md")
end
end
----------
if text == "زخرفه" or text == "زخرفة" then
local ban = bot.getUser(msg.sender_id.user_id)
local Name = '['..ban.first_name..'](tg://user?id='..ban.id..')' or 'لا يوجد اسم'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = '↰ زخرفه عادي 🖌', data = msg.sender_id.user_id..'/normal_zk'},},
{{text = '↰ زخرفه انلاين 🐣', data = msg.sender_id.user_id..'/inline_zk'},},
}
}
return send(msg_chat_id,msg_id,"*مرحبا ->* "..Name.." 👋\n* ✧ اختار نوع الزخرفه الان*","md",false ,false ,false ,false ,reply_markup) 
end

if text == "خيرني" or text == "لو خيروك" or text == "خيروك" then 
local texting = {"لو خيروك |  بين الإبحار لمدة أسبوع كامل أو السفر على متن طائرة لـ 3 أيام متواصلة؟ ",
"لو خيروك |  بين شراء منزل صغير أو استئجار فيلا كبيرة بمبلغ معقول؟ ",
"لو خيروك |  أن تعيش قصة فيلم هل تختار الأكشن أو الكوميديا؟ ",
"لو خيروك |  بين تناول البيتزا وبين الايس كريم وذلك بشكل دائم؟ ",
"لو خيروك |  بين إمكانية تواجدك في الفضاء وبين إمكانية تواجدك في البحر؟ ",
"لو خيروك |  بين تغيير وظيفتك كل سنة أو البقاء بوظيفة واحدة طوال حياتك؟ ",
"لو خيروك |  أسئلة محرجة أسئلة صراحة ماذا ستختار؟ ",
"لو خيروك |  بين الذهاب إلى الماضي والعيش مع جدك أو بين الذهاب إلى المستقبل والعيش مع أحفادك؟ ",
"لو كنت شخص اخر هل تفضل البقاء معك أم أنك ستبتعد عن نفسك؟ ",
"لو خيروك |  بين الحصول على الأموال في عيد ميلادك أو على الهدايا؟ ",
"لو خيروك |  بين القفز بمظلة من طائرة أو الغوص في أعماق البحر؟ ",
"لو خيروك |  بين الاستماع إلى الأخبار الجيدة أولًا أو الاستماع إلى الأخبار السيئة أولًا؟ ",
"لو خيروك |  بين أن تكون رئيس لشركة فاشلة أو أن تكون موظف في شركة ناجحة؟ ",
"لو خيروك |  بين أن يكون لديك جيران صاخبون أو أن يكون لديك جيران فضوليون؟ ",
"لو خيروك |  بين أن تكون شخص مشغول دائمًا أو أن تكون شخص يشعر بالملل دائمًا؟ ",
"لو خيروك |  بين قضاء يوم كامل مع الرياضي الذي تشجعه أو نجم السينما الذي تحبه؟ ",
"لو خيروك |  بين استمرار فصل الشتاء دائمًا أو بقاء فصل الصيف؟ ",
"لو خيروك |  بين العيش في القارة القطبية أو العيش في الصحراء؟ ",
"لو خيروك |  بين أن تكون لديك القدرة على حفظ كل ما تسمع أو تقوله وبين القدرة على حفظ كل ما تراه أمامك؟ ",
"لو خيروك |  بين أن يكون طولك 150 سنتي متر أو أن يكون 190 سنتي متر؟ ",
"لو خيروك |  بين إلغاء رحلتك تمامًا أو بقائها ولكن فقدان الأمتعة والأشياء الخاص بك خلالها؟ ",
"لو خيروك |  بين أن تكون اللاعب الأفضل في فريق كرة فاشل أو أن تكون لاعب عادي في فريق كرة ناجح؟ ",
"لو خيروك |  بين ارتداء ملابس البيت لمدة أسبوع كامل أو ارتداء البدلة الرسمية لنفس المدة؟ ",
"لو خيروك |  بين امتلاك أفضل وأجمل منزل ولكن في حي سيء أو امتلاك أسوأ منزل ولكن في حي جيد وجميل؟ ",
"لو خيروك |  بين أن تكون غني وتعيش قبل 500 سنة، أو أن تكون فقير وتعيش في عصرنا الحالي؟ ",
"لو خيروك |  بين ارتداء ملابس الغوص ليوم كامل والذهاب إلى العمل أو ارتداء ملابس جدك/جدتك؟ ",
"لو خيروك |  بين قص شعرك بشكل قصير جدًا أو صبغه باللون الوردي؟ ",
"لو خيروك |  بين أن تضع الكثير من الملح على كل الطعام بدون علم أحد، أو أن تقوم بتناول شطيرة معجون أسنان؟ ",
"لو خيروك |  بين قول الحقيقة والصراحة الكاملة مدة 24 ساعة أو الكذب بشكل كامل مدة 3 أيام؟ ",
"لو خيروك |  بين تناول الشوكولا التي تفضلها لكن مع إضافة رشة من الملح والقليل من عصير الليمون إليها أو تناول ليمونة كاملة كبيرة الحجم؟ ",
"لو خيروك |  بين وضع أحمر الشفاه على وجهك ما عدا شفتين أو وضع ماسكارا على شفتين فقط؟ ",
"لو خيروك |  بين الرقص على سطح منزلك أو الغناء على نافذتك؟ ",
"لو خيروك |  بين تلوين شعرك كل خصلة بلون وبين ارتداء ملابس غير متناسقة لمدة أسبوع؟ ",
"لو خيروك |  بين تناول مياه غازية مجمدة وبين تناولها ساخنة؟ ",
"لو خيروك |  بين تنظيف شعرك بسائل غسيل الأطباق وبين استخدام كريم الأساس لغسيل الأطباق؟ ",
"لو خيروك |  بين تزيين طبق السلطة بالبرتقال وبين إضافة البطاطا لطبق الفاكهة؟ ",
"لو خيروك |  بين اللعب مع الأطفال لمدة 7 ساعات أو الجلوس دون فعل أي شيء لمدة 24 ساعة؟ ",
"لو خيروك |  بين شرب كوب من الحليب أو شرب كوب من شراب عرق السوس؟ ",
"لو خيروك |  بين الشخص الذي تحبه وصديق الطفولة؟ ",
"لو خيروك |  بين أمك وأبيك؟ ",
"لو خيروك |  بين أختك وأخيك؟ ",
"لو خيروك |  بين نفسك وأمك؟ ",
"لو خيروك |  بين صديق قام بغدرك وعدوك؟ ",
"لو خيروك |  بين خسارة حبيبك/حبيبتك أو خسارة أخيك/أختك؟ ",
"لو خيروك |  بإنقاذ شخص واحد مع نفسك بين أمك أو ابنك؟ ",
"لو خيروك |  بين ابنك وابنتك؟ ",
"لو خيروك |  بين زوجتك وابنك/ابنتك؟ ",
"لو خيروك |  بين جدك أو جدتك؟ ",
"لو خيروك |  بين زميل ناجح وحده أو زميل يعمل كفريق؟ ",
"لو خيروك |  بين لاعب كرة قدم مشهور أو موسيقي مفضل بالنسبة لك؟ ",
"لو خيروك |  بين مصور فوتوغرافي جيد وبين مصور سيء ولكنه عبقري فوتوشوب؟ ",
"لو خيروك |  بين سائق سيارة يقودها ببطء وبين سائق يقودها بسرعة كبيرة؟ ",
"لو خيروك |  بين أستاذ اللغة العربية أو أستاذ الرياضيات؟ ",
"لو خيروك |  بين أخيك البعيد أو جارك القريب؟ ",
"لو خيروك |  يبن صديقك البعيد وبين زميلك القريب؟ ",
"لو خيروك |  بين رجل أعمال أو أمير؟ ",
"لو خيروك |  بين نجار أو حداد؟ ",
"لو خيروك |  بين طباخ أو خياط؟ ",
"لو خيروك |  بين أن تكون كل ملابس بمقاس واحد كبير الحجم أو أن تكون جميعها باللون الأصفر؟ ",
"لو خيروك |  بين أن تتكلم بالهمس فقط طوال الوقت أو أن تصرخ فقط طوال الوقت؟ ",
"لو خيروك |  بين أن تمتلك زر إيقاف موقت للوقت أو أن تمتلك أزرار للعودة والذهاب عبر الوقت؟ ",
"لو خيروك |  بين أن تعيش بدون موسيقى أبدًا أو أن تعيش بدون تلفاز أبدًا؟ ",
"لو خيروك |  بين أن تعرف متى سوف تموت أو أن تعرف كيف سوف تموت؟ ",
"لو خيروك |  بين العمل الذي تحلم به أو بين إيجاد شريك حياتك وحبك الحقيقي؟ ",
"لو خيروك |  بين معاركة دب أو بين مصارعة تمساح؟ ",
"لو خيروك |  بين إما الحصول على المال أو على المزيد من الوقت؟ ",
"لو خيروك |  بين امتلاك قدرة التحدث بكل لغات العالم أو التحدث إلى الحيوانات؟ ",
"لو خيروك |  بين أن تفوز في اليانصيب وبين أن تعيش مرة ثانية؟ ",
"لو خيروك |  بأن لا يحضر أحد إما لحفل زفافك أو إلى جنازتك؟ ",
"لو خيروك |  بين البقاء بدون هاتف لمدة شهر أو بدون إنترنت لمدة أسبوع؟ ",
"لو خيروك |  بين العمل لأيام أقل في الأسبوع مع زيادة ساعات العمل أو العمل لساعات أقل في اليوم مع أيام أكثر؟ ",
"لو خيروك |  بين مشاهدة الدراما في أيام السبعينيات أو مشاهدة الأعمال الدرامية للوقت الحالي؟ ",
"لو خيروك |  بين التحدث عن كل شيء يدور في عقلك وبين عدم التحدث إطلاقًا؟ ",
"لو خيروك |  بين مشاهدة فيلم بمفردك أو الذهاب إلى مطعم وتناول العشاء بمفردك؟ ",
"لو خيروك |  بين قراءة رواية مميزة فقط أو مشاهدتها بشكل فيلم بدون القدرة على قراءتها؟ ",
"لو خيروك |  بين أن تكون الشخص الأكثر شعبية في العمل أو المدرسة وبين أن تكون الشخص الأكثر ذكاءً؟ ",
"لو خيروك |  بين إجراء المكالمات الهاتفية فقط أو إرسال الرسائل النصية فقط؟ ",
"لو خيروك |  بين إنهاء الحروب في العالم أو إنهاء الجوع في العالم؟ ",
"لو خيروك |  بين تغيير لون عينيك أو لون شعرك؟ ",
"لو خيروك |  بين امتلاك كل عين لون وبين امتلاك نمش على خديك؟ ",
"لو خيروك |  بين الخروج بالمكياج بشكل مستمر وبين الحصول على بشرة صحية ولكن لا يمكن لك تطبيق أي نوع من المكياج؟ ",
"لو خيروك |  بين أن تصبحي عارضة أزياء وبين ميك اب أرتيست؟ ",
"لو خيروك |  بين مشاهدة كرة القدم أو متابعة الأخبار؟ ",
"لو خيروك |  بين موت شخصية بطل الدراما التي تتابعينها أو أن يبقى ولكن يكون العمل الدرامي سيء جدًا؟ ",
"لو خيروك |  بين العيش في دراما قد سبق وشاهدتها ماذا تختارين بين الكوميديا والتاريخي؟ ",
"لو خيروك |  بين امتلاك القدرة على تغيير لون شعرك متى تريدين وبين الحصول على مكياج من قبل خبير تجميل وذلك بشكل يومي؟ ",
"لو خيروك |  بين نشر تفاصيل حياتك المالية وبين نشر تفاصيل حياتك العاطفية؟ ",
"لو خيروك |  بين البكاء والحزن وبين اكتساب الوزن؟ ",
"لو خيروك |  بين تنظيف الأطباق كل يوم وبين تحضير الطعام؟ ",
"لو خيروك |  بين أن تتعطل سيارتك في نصف الطريق أو ألا تتمكنين من ركنها بطريقة صحيحة؟ ",
"لو خيروك |  بين إعادة كل الحقائب التي تملكينها أو إعادة الأحذية الجميلة الخاصة بك؟ ",
"لو خيروك |  بين قتل حشرة أو متابعة فيلم رعب؟ ",
"لو خيروك |  بين امتلاك قطة أو كلب؟ ",
"لو خيروك |  بين الصداقة والحب ",
"لو خيروك |  بين تناول الشوكولا التي تحبين طوال حياتك ولكن لا يمكنك الاستماع إلى الموسيقى وبين الاستماع إلى الموسيقى ولكن لا يمكن لك تناول الشوكولا أبدًا؟ ",
"لو خيروك |  بين مشاركة المنزل مع عائلة من الفئران أو عائلة من الأشخاص المزعجين الفضوليين الذين يتدخلون في كل كبيرة وصغيرة؟ ",
} 
return send(msg_chat_id,msg_id,texting[math.random(#texting)],'md')
end



-----------
function time_to_sec(time)
    local sec = 0
    local time_table = {}
    for i in string.gmatch(time, "%d+") do
        table.insert(time_table, i)
    end
    local hour = tonumber(time_table[1])
    local min = tonumber(time_table[2])
    local sec = tonumber(time_table[3])
    return hour*3600 + min*60 + sec
end

if text == "البنك" or text == "بنك" or text == "اوامر البنك" then
local m = "https://t.me/S_a_i_d_i/2448"
local Jabwa = bot.getUser(Sudo_Id) 
local ban = bot.getUser(msg.sender_id.user_id)
if ban.first_name then
Jabwaiusername = '* ✧ اختار لغتك لعرض اوامر لعبه البنك* \n ['..ban.first_name..'](tg://user?id='..ban.id..') '
else
Jabwaiusername = " لا يوجد"
end
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '⟨•💖▸ عــربــي •⟩', callback_data=msg.sender_id.user_id.."/nsnsks"},
},
{
{text = '⟨•💖▸ 𝙀𝙄𝙉𝙂𝙇𝙄𝙎𝙃 •⟩', callback_data=msg.sender_id.user_id.."/fghbdn"},
},
{
{text = '✧ مـطـور الـبـوت 🤖', url = "https://t.me/"..Jabwa.username..""},
},
}
local rep = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id="..msg_chat_id.."&caption="..URL.escape(Jabwaiusername).."&photo="..m.."&reply_to_message_id="..rep.."&parse_mode=Markdown&reply_markup="..JSON.encode(keyboard))
end
if text == 'الالعاب' or text == 'الالعاب التسليه' or text == 'الاضافات' or text == 'الالعاب الالكترونيه' then
if ChannelJoin(msg) == false then
local chinfo = Redis:get(MARCOS.."ch:admin")
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = chinfo}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
local t = "* ✧ اليك قسم الالعاب من سورس ماركوس"
local m = "https://t.me/ugfdu/2"
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '✧ الالعاب التسليه ✧', callback_data=msg.sender_id.user_id.."/normgm"},
},
{
{text = '✧ الالعاب الالكترونيه ✧', callback_data=msg.sender_id.user_id.."/dejgm"},
},
{
{text = '✧ اوامر لعبة البنك ✧', callback_data=msg.sender_id.user_id.."/bank"},
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
local rep = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id="..msg_chat_id.."&caption="..URL.escape(t).."&photo="..m.."&reply_to_message_id="..rep.."&parse_mode=Markdown&reply_markup="..JSON.encode(keyboard))
end
------الردود--- 
if text == ("مسح الردود الانلاين") then
if not msg.Manger then
return bot.sendText(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Manager:inline"..msg_chat_id.."")
for k,v in pairs(list) do
Redis:del(MARCOS.."Add:Rd:Manager:Gif:inline"..v..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Vico:inline"..v..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Stekrs:inline"..v..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Text:inline"..v..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Photo:inline"..v..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Photoc:inline"..v..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Video:inline"..v..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Videoc:inline"..v..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:File:inline"..v..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:video_note:inline"..v..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Audio:inline"..v..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Audioc:inline"..v..msg_chat_id)
Redis:del(MARCOS.."Rd:Manager:inline:v"..v..msg_chat_id)
Redis:del(MARCOS.."Rd:Manager:inline:link"..v..msg_chat_id)
Redis:del(MARCOS.."List:Manager:inline"..msg_chat_id)
end
return send(msg_chat_id,msg_id," ✧ تم مسح قائمه الانلاين","md",true)
end
if text == "اضف رد انلاين" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص '..Controller_Num(7)..' * ',"md",true)
end
Redis:set(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data = msg.sender_id.user_id..'/cancelrdd'},
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان الكلمه لاضافتها في الردود ","md",false, false, false, false, reply_markup)
end
if text and text:match("^(.*)$") and tonumber(msg.sender_id.user_id) ~= tonumber(MARCOS) then
if Redis:get(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
Redis:set(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id,"true1")
Redis:set(MARCOS.."Text:Manager:inline"..msg.sender_id.user_id..":"..msg_chat_id, text)
Redis:del(MARCOS.."Add:Rd:Manager:Gif:inline"..text..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Vico:inline"..text..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Stekrs:inline"..text..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Text:inline"..text..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Photo:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Photoc:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Video:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Videoc:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:File:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:video_note:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Audio:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Audioc:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Rd:Manager:inline:text"..text..msg_chat_id)
Redis:del(MARCOS.."Rd:Manager:inline:link"..text..msg_chat_id)
Redis:sadd(MARCOS.."List:Manager:inline"..msg_chat_id.."", text)
send(msg_chat_id,msg_id,[[
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, يمكنك الان ارسل لي الرد للضافه ،
, ملصق ، متحركه ، صوره ،
, فيديو ، بصمه الفيديو ،
, بصمه ، صوت ، رساله ،
, يمكنك اضافة الى النص ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*
`#username` *-> معرف المستخدم*
 `#msgs` *-> عدد الرسائل*
 `#name` *-> اسم المستخدم*
 `#id` *-> ايدي المستخدم*
 `#stast`* -> رتبة المستخدم*
 `#edit` *-> عدد التعديلات*
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*
]],"md",true)
return false
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id.."") == "true2" then
Redis:del(MARCOS.."Add:Rd:Manager:Gif:inline"..text..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Vico:inline"..text..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Stekrs:inline"..text..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Text:inline"..text..msg_chat_id) 
Redis:del(MARCOS.."Add:Rd:Manager:Photo:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Photoc:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Video:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Videoc:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:File:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:video_note:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Audio:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Add:Rd:Manager:Audioc:inline"..text..msg_chat_id)
Redis:del(MARCOS.."Rd:Manager:inline:text"..text..msg_chat_id)
Redis:del(MARCOS.."Rd:Manager:inline:link"..text..msg_chat_id)
Redis:del(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id.."")
Redis:srem(MARCOS.."List:Manager:inline"..msg_chat_id.."", text)
send(msg_chat_id,msg_id," ✧ تم حذف الرد من الردود الانلاين ","md",true)
return false
end
end
if Redis:get(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id) == "true1" and tonumber(msg.sender_id.user_id) ~= tonumber(MARCOS) then
Redis:del(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:set(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id,"set_inline")
if text or msg.content.video_note or msg.content.document or msg.content.audio or msg.content.video or msg.content.voice_note or msg.content.sticker or msg.content.animation or msg.content.photo then
local anubis = Redis:get(MARCOS.."Text:Manager:inline"..msg.sender_id.user_id..":"..msg_chat_id)
if msg.content.text then 
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(MARCOS.."Add:Rd:Manager:Text:inline"..anubis..msg_chat_id, text)
elseif msg.content.sticker then 
Redis:set(MARCOS.."Add:Rd:Manager:Stekrs:inline"..anubis..msg_chat_id, msg.content.sticker.sticker.remote.id)
elseif msg.content.voice_note then
Redis:set(MARCOS.."Add:Rd:Manager:Vico:inline"..anubis..msg_chat_id, msg.content.voice_note.voice.remote.id)
elseif msg.content.audio then
Redis:set(MARCOS.."Add:Rd:Manager:Audio:inline"..anubis..msg_chat_id, msg.content.audio.audio.remote.id)
Redis:set(MARCOS.."Add:Rd:Manager:Audioc:inline"..anubis..msg_chat_id, msg.content.caption.text)
elseif msg.content.document then
Redis:set(MARCOS.."Add:Rd:Manager:File:inline"..anubis..msg_chat_id, msg.content.document.document.remote.id)
elseif msg.content.animation then
Redis:set(MARCOS.."Add:Rd:Manager:Gif:inline"..anubis..msg_chat_id, msg.content.animation.animation.remote.id)
elseif msg.content.video_note then
Redis:set(MARCOS.."Add:Rd:Manager:video_note:inline"..anubis..msg_chat_id, msg.content.video_note.video.remote.id)
elseif msg.content.video then
Redis:set(MARCOS.."Add:Rd:Manager:Video:inline"..anubis..msg_chat_id, msg.content.video.video.remote.id)
Redis:set(MARCOS.."Add:Rd:Manager:Videoc:inline"..anubis..msg_chat_id, msg.content.caption.text)
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(MARCOS.."Add:Rd:Manager:Photo:inline"..anubis..msg_chat_id, idPhoto)
Redis:set(MARCOS.."Add:Rd:Manager:Photoc:inline"..anubis..msg_chat_id, msg.content.caption.text)
end
send(msg_chat_id,msg_id," ✧ الان ارسل الكلام داخل الزر","md",true)
return false
end
end
if text and Redis:get(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id) == "set_inline" then
Redis:set(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id, "set_link")
local anubis = Redis:get(MARCOS.."Text:Manager:inline"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:set(MARCOS.."Rd:Manager:inline:text"..anubis..msg_chat_id, text)
send(msg_chat_id,msg_id," ✧ الان ارسل الرابط","md",true)
return false
end
if text and Redis:get(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id) == "set_link" then
Redis:del(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id)
local anubis = Redis:get(MARCOS.."Text:Manager:inline"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:set(MARCOS.."Rd:Manager:inline:link"..anubis..msg_chat_id, text)
send(msg_chat_id,msg_id," ✧ تم اضافه الرد بنجاح","md",true)
return false
end
if text and not Redis:get(MARCOS.."Status:Reply:inline"..msg_chat_id) then
local btext = Redis:get(MARCOS.."Rd:Manager:inline:text"..text..msg_chat_id)
local blink = Redis:get(MARCOS.."Rd:Manager:inline:link"..text..msg_chat_id)
local anemi = Redis:get(MARCOS.."Add:Rd:Manager:Gif:inline"..text..msg_chat_id) 
local veico = Redis:get(MARCOS.."Add:Rd:Manager:Vico:inline"..text..msg_chat_id) 
local stekr = Redis:get(MARCOS.."Add:Rd:Manager:Stekrs:inline"..text..msg_chat_id) 
local Texingt = Redis:get(MARCOS.."Add:Rd:Manager:Text:inline"..text..msg_chat_id) 
local photo = Redis:get(MARCOS.."Add:Rd:Manager:Photo:inline"..text..msg_chat_id)
local photoc = Redis:get(MARCOS.."Add:Rd:Manager:Photoc:inline"..text..msg_chat_id)
local video = Redis:get(MARCOS.."Add:Rd:Manager:Video:inline"..text..msg_chat_id)
local videoc = Redis:get(MARCOS.."Add:Rd:Manager:Videoc:inline"..text..msg_chat_id)
local document = Redis:get(MARCOS.."Add:Rd:Manager:File:inline"..text..msg_chat_id)
local audio = Redis:get(MARCOS.."Add:Rd:Manager:Audio:inline"..text..msg_chat_id)
local audioc = Redis:get(MARCOS.."Add:Rd:Manager:Audioc:inline"..text..msg_chat_id)
local video_note = Redis:get(MARCOS.."Add:Rd:Manager:video_note:inline"..text..msg_chat_id)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = btext , url = blink},
},
}
}
if Texingt then 
local UserInfo = bot.getUser(msg.sender_id.user_id)
local NumMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalMsg = Total_message(NumMsg) 
local Status_Gps = msg.Name_Controller
local NumMessageEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local Texingt = Texingt:gsub('#username',(UserInfo.username or 'لا يوجد')) 
local Texingt = Texingt:gsub('#name',FlterBio(UserInfo.first_name))
local Texingt = Texingt:gsub('#id',msg.sender_id.user_id)
local Texingt = Texingt:gsub('#edit',NumMessageEdit)
local Texingt = Texingt:gsub('#msgs',NumMsg)
local Texingt = Texingt:gsub('#stast',Status_Gps)
send(msg_chat_id,msg_id,'['..Texingt..']',"md",false, false, false, false, reply_markup)
end
if video_note then
bot.sendVideoNote(msg_chat_id, msg.id, video_note, nil, nil, nil, nil, nil, nil, nil, reply_markup)
end
if photo then
bot.sendPhoto(msg.chat_id, msg.id, photo,photoc,"md", true, nil, nil, nil, nil, nil, nil, nil, nil, reply_markup )
end
if stekr then 
bot.sendSticker(msg_chat_id, msg.id, stekr,nil,nil,nil,nil,nil,nil,nil,reply_markup)
end
if veico then 
bot.sendVoiceNote(msg_chat_id, msg.id, veico, '', 'md',nil, nil, nil, nil, reply_markup)
end
if video then 
bot.sendVideo(msg_chat_id, msg.id, video, videoc, "md", true, nil, nil, nil, nil, nil, nil, nil, nil, nil, reply_markup)
end
if anemi then 
bot.sendAnimation(msg_chat_id,msg.id, anemi, '', 'md', nil, nil, nil, nil, nil, nil, nil, nil,reply_markup)
end
if document then
bot.sendDocument(msg_chat_id, msg.id, document, '', 'md',nil, nil, nil, nil,nil, reply_markup)
end
if audio then
bot.sendAudio(msg_chat_id, msg.id, audio, audioc, "md", nil, nil, nil, nil, nil, nil, nil, nil,reply_markup) 
end
end
if text == "حذف رد انلاين" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص '..Controller_Num(7)..' * ',"md",true)
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data = msg.sender_id.user_id..'/cancelrdd'},
},
}
}
Redis:set(MARCOS.."Set:Manager:rd:inline"..msg.sender_id.user_id..":"..msg_chat_id,"true2")
return send(msg_chat_id,msg_id," ✧ ارسل الان الكلمه لحذفها من الردود الانلاين","md",false, false, false, false, reply_markup)
end 

if text == ("الردود الانلاين") then
if not msg.Manger then
return bot.sendText(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Manager:inline"..msg_chat_id.."")
text = " ✧ قائمه الردود الانلاين \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • \n"
for k,v in pairs(list) do
if Redis:get(MARCOS.."Add:Rd:Manager:Gif:inline"..v..msg_chat_id) then
db = "متحركه ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Vico:inline"..v..msg_chat_id) then
db = "بصمه ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Stekrs:inline"..v..msg_chat_id) then
db = "ملصق ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Text:inline"..v..msg_chat_id) then
db = "رساله ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Photo:inline"..v..msg_chat_id) then
db = "صوره ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Video:inline"..v..msg_chat_id) then
db = "فيديو ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:File:inline"..v..msg_chat_id) then
db = "ملف ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Audio:inline"..v..msg_chat_id) then
db = "اغنيه ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:video_note:inline"..v..msg_chat_id) then
db = "بصمه فيديو ✧"
end
text = text..""..k.." » {"..v.."} » {"..db.."}\n"
end
if #list == 0 then
text = " ✧ عذرا لا يوجد ردود انلاين في المجموعه"
end
return send(msg_chat_id,msg_id,"["..text.."]","md",true)
end
---------
if text == ("مسح الردود الانلاين العامه") then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص المطور الثانوي * ',"md",true)
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Manager:inline3am")
for k,v in pairs(list) do
Redis:del(MARCOS.."Add:Rd:Manager:Gif:inline3am"..v) 
Redis:del(MARCOS.."Add:Rd:Manager:Vico:inline3am"..v) 
Redis:del(MARCOS.."Add:Rd:Manager:Stekrs:inline3am"..v) 
Redis:del(MARCOS.."Add:Rd:Manager:Text:inline3am"..v) 
Redis:del(MARCOS.."Add:Rd:Manager:Photo:inline3am"..v)
Redis:del(MARCOS.."Add:Rd:Manager:Photoc:inline3am"..v)
Redis:del(MARCOS.."Add:Rd:Manager:Video:inline3am"..v)
Redis:del(MARCOS.."Add:Rd:Manager:Videoc:inline3am"..v)
Redis:del(MARCOS.."Add:Rd:Manager:File:inline3am"..v)
Redis:del(MARCOS.."Add:Rd:Manager:video_note:inline3am"..v)
Redis:del(MARCOS.."Add:Rd:Manager:Audio:inline3am"..v)
Redis:del(MARCOS.."Add:Rd:Manager:Audioc:inline3am"..v)
Redis:del(MARCOS.."Rd:Manager:inline3am:v"..v)
Redis:del(MARCOS.."Rd:Manager:inline3am:link"..v)
Redis:del(MARCOS.."List:Manager:inline3am")
end
return send(msg_chat_id,msg_id," ✧ تم مسح قائمه الانلاين","md",true)
end
if text and Redis:get(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id) == "set_link" then
Redis:del(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id)
local anubis = Redis:get(MARCOS.."Text:Manager:inline3am"..msg.sender_id.user_id..":")
Redis:set(MARCOS.."Rd:Manager:inline3am:link"..anubis, text)
send(msg_chat_id,msg_id," ✧ تم اضافه الرد بنجاح","md",true)
return false
end
if text and Redis:get(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id) == "set_inline" then
Redis:set(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id, "set_link")
local anubis = Redis:get(MARCOS.."Text:Manager:inline3am"..msg.sender_id.user_id..":")
Redis:set(MARCOS.."Rd:Manager:inline3am:text"..anubis, text)
send(msg_chat_id,msg_id," ✧ الان ارسل الرابط","md",true)
return false
end
if Redis:get(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id) == "true1" and tonumber(msg.sender_id.user_id) ~= tonumber(MARCOS) then
Redis:del(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:set(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id,"set_inline")
if text or msg.content.video_note or msg.content.document or msg.content.audio or msg.content.video or msg.content.voice_note or msg.content.sticker or msg.content.animation or msg.content.photo then
local anubis = Redis:get(MARCOS.."Text:Manager:inline3am"..msg.sender_id.user_id..":")
if msg.content.text then 
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(MARCOS.."Add:Rd:Manager:Text:inline3am"..anubis, text)
elseif msg.content.sticker then 
Redis:set(MARCOS.."Add:Rd:Manager:Stekrs:inline3am"..anubis, msg.content.sticker.sticker.remote.id)
elseif msg.content.voice_note then
Redis:set(MARCOS.."Add:Rd:Manager:Vico:inline3am"..anubis, msg.content.voice_note.voice.remote.id)
elseif msg.content.audio then
Redis:set(MARCOS.."Add:Rd:Manager:Audio:inline3am"..anubis, msg.content.audio.audio.remote.id)
Redis:set(MARCOS.."Add:Rd:Manager:Audioc:inline3am"..anubis, msg.content.caption.text)
elseif msg.content.document then
Redis:set(MARCOS.."Add:Rd:Manager:File:inline3am"..anubis, msg.content.document.document.remote.id)
elseif msg.content.animation then
Redis:set(MARCOS.."Add:Rd:Manager:Gif:inline3am"..anubis, msg.content.animation.animation.remote.id)
elseif msg.content.video_note then
Redis:set(MARCOS.."Add:Rd:Manager:video_note:inline3am"..anubis, msg.content.video_note.video.remote.id)
elseif msg.content.video then
Redis:set(MARCOS.."Add:Rd:Manager:Video:inline3am"..anubis, msg.content.video.video.remote.id)
Redis:set(MARCOS.."Add:Rd:Manager:Videoc:inline3am"..anubis, msg.content.caption.text)
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(MARCOS.."Add:Rd:Manager:Photo:inline3am"..anubis, idPhoto)
Redis:set(MARCOS.."Add:Rd:Manager:Photoc:inline3am"..anubis, msg.content.caption.text)
end
send(msg_chat_id,msg_id," ✧ الان ارسل الكلام داخل الزر","md",true)
return false
end
end

if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id.."") == "true2" then
if not Redis:sismember(MARCOS.."List:Manager:inline3am", text) then
 Redis:del(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id.."")
 return send(msg_chat_id,msg_id," ✧ لا يوجد رد لهذه الكلمه","md",true)
end
Redis:del(MARCOS.."Add:Rd:Manager:Gif:inline3am"..text) 
Redis:del(MARCOS.."Add:Rd:Manager:Vico:inline3am"..text) 
Redis:del(MARCOS.."Add:Rd:Manager:Stekrs:inline3am"..text) 
Redis:del(MARCOS.."Add:Rd:Manager:Text:inline3am"..text) 
Redis:del(MARCOS.."Add:Rd:Manager:Photo:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:Photoc:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:Video:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:Videoc:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:File:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:video_note:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:Audio:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:Audioc:inline3am"..text)
Redis:del(MARCOS.."Rd:Manager:inline3am:text"..text)
Redis:del(MARCOS.."Rd:Manager:inline3am:link"..text)
Redis:del(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id.."")
Redis:srem(MARCOS.."List:Manager:inline3am", text)
send(msg_chat_id,msg_id," ✧ تم حذف الرد من الردود الانلاين العامه","md",true)
return false
end
end
if text and text:match("^(.*)$") and tonumber(msg.sender_id.user_id) ~= tonumber(MARCOS) then
if Redis:get(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
Redis:set(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id,"true1")
Redis:set(MARCOS.."Text:Manager:inline3am"..msg.sender_id.user_id..":", text)
Redis:del(MARCOS.."Add:Rd:Manager:Gif:inline3am"..text) 
Redis:del(MARCOS.."Add:Rd:Manager:Vico:inline3am"..text) 
Redis:del(MARCOS.."Add:Rd:Manager:Stekrs:inline3am"..text) 
Redis:del(MARCOS.."Add:Rd:Manager:Text:inline3am"..text) 
Redis:del(MARCOS.."Add:Rd:Manager:Photo:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:Photoc:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:Video:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:Videoc:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:File:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:video_note:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:Audio:inline3am"..text)
Redis:del(MARCOS.."Add:Rd:Manager:Audioc:inline3am"..text)
Redis:del(MARCOS.."Rd:Manager:inline3am:text"..text)
Redis:del(MARCOS.."Rd:Manager:inline3am:link"..text)
Redis:sadd(MARCOS.."List:Manager:inline3am", text)
send(msg_chat_id,msg_id,[[
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, يمكنك الان ارسل لي الرد للضافه ،
, ملصق ، متحركه ، صوره ،
, فيديو ، بصمه الفيديو ،
, بصمه ، صوت ، رساله ،
, يمكنك اضافة الى النص ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*
`#username` *-> معرف المستخدم*
 `#msgs` *-> عدد الرسائل*
 `#name` *-> اسم المستخدم*
 `#id` *-> ايدي المستخدم*
 `#stast`* -> رتبة المستخدم*
 `#edit` *-> عدد التعديلات*
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*
]],"md",true)
return false
end
end
if text == "اضف رد انلاين عام" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص المطور الثانوي * ',"md",true)
end
Redis:set(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data = msg.sender_id.user_id..'/cancelrdd'},
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان الكلمه لاضافتها في الردود ","md",false, false, false, false, reply_markup)
end


if text and not Redis:get(MARCOS.."Status:Reply:inline3am"..msg_chat_id) then
local btext = Redis:get(MARCOS.."Rd:Manager:inline3am:text"..text)
local blink = Redis:get(MARCOS.."Rd:Manager:inline3am:link"..text)
local anemi = Redis:get(MARCOS.."Add:Rd:Manager:Gif:inline3am"..text) 
local veico = Redis:get(MARCOS.."Add:Rd:Manager:Vico:inline3am"..text) 
local stekr = Redis:get(MARCOS.."Add:Rd:Manager:Stekrs:inline3am"..text) 
local Texingt = Redis:get(MARCOS.."Add:Rd:Manager:Text:inline3am"..text) 
local photo = Redis:get(MARCOS.."Add:Rd:Manager:Photo:inline3am"..text)
local photoc = Redis:get(MARCOS.."Add:Rd:Manager:Photoc:inline3am"..text)
local video = Redis:get(MARCOS.."Add:Rd:Manager:Video:inline3am"..text)
local videoc = Redis:get(MARCOS.."Add:Rd:Manager:Videoc:inline3am"..text)
local document = Redis:get(MARCOS.."Add:Rd:Manager:File:inline3am"..text)
local audio = Redis:get(MARCOS.."Add:Rd:Manager:Audio:inline3am"..text)
local audioc = Redis:get(MARCOS.."Add:Rd:Manager:Audioc:inline3am"..text)
local video_note = Redis:get(MARCOS.."Add:Rd:Manager:video_note:inline3am"..text)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = btext , url = blink},
},
}
}
if Texingt then 
local UserInfo = bot.getUser(msg.sender_id.user_id)
local NumMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalMsg = Total_message(NumMsg) 
local Status_Gps = msg.Name_Controller
local NumMessageEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local Texingt = Texingt:gsub('#username',(UserInfo.username or 'لا يوجد')) 
local Texingt = Texingt:gsub('#name',FlterBio(UserInfo.first_name))
local Texingt = Texingt:gsub('#id',msg.sender_id.user_id)
local Texingt = Texingt:gsub('#edit',NumMessageEdit)
local Texingt = Texingt:gsub('#msgs',NumMsg)
local Texingt = Texingt:gsub('#stast',Status_Gps)
send(msg_chat_id,msg_id,'['..Texingt..']',"md",false, false, false, false, reply_markup)
end
if video_note then
bot.sendVideoNote(msg_chat_id, msg.id, video_note, nil, nil, nil, nil, nil, nil, nil, reply_markup)
end
if photo then
bot.sendPhoto(msg.chat_id, msg.id, photo,photoc,"md", true, nil, nil, nil, nil, nil, nil, nil, nil, reply_markup )
end
if stekr then 
bot.sendSticker(msg_chat_id, msg.id, stekr,nil,nil,nil,nil,nil,nil,nil,reply_markup)
end
if veico then 
bot.sendVoiceNote(msg_chat_id, msg.id, veico, '', 'md',nil, nil, nil, nil, reply_markup)
end
if video then 
bot.sendVideo(msg_chat_id, msg.id, video, videoc, "md", true, nil, nil, nil, nil, nil, nil, nil, nil, nil, reply_markup)
end
if anemi then 
bot.sendAnimation(msg_chat_id,msg.id, anemi, '', 'md', nil, nil, nil, nil, nil, nil, nil, nil,reply_markup)
end
if document then
bot.sendDocument(msg_chat_id, msg.id, document, '', 'md',nil, nil, nil, nil,nil, reply_markup)
end
if audio then
bot.sendAudio(msg_chat_id, msg.id, audio, audioc, "md", nil, nil, nil, nil, nil, nil, nil, nil,reply_markup) 
end
end
if text == "حذف رد انلاين عام" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص المطور الثانوي * ',"md",true)
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data = msg.sender_id.user_id..'/cancelrdd'},
},
}
}
Redis:set(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id,"true2")
return send(msg_chat_id,msg_id," ✧ ارسل الان الكلمه لحذفها من الردود الانلاين","md",false, false, false, false, reply_markup)
end 

if text == ("الردود الانلاين العامه") then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص المطور الثانوي * ',"md",true)
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Manager:inline3am")
text = " ✧ قائمه الردود الانلاين \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • \n"
for k,v in pairs(list) do
if Redis:get(MARCOS.."Add:Rd:Manager:Gif:inline3am"..v) then
db = "متحركه ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Vico:inline3am"..v) then
db = "بصمه ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Stekrs:inline3am"..v) then
db = "ملصق ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Text:inline3am"..v) then
db = "رساله ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Photo:inline3am"..v) then
db = "صوره ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Video:inline3am"..v) then
db = "فيديو ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:File:inline3am"..v) then
db = "ملف ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:Audio:inline3am"..v) then
db = "اغنيه ✧"
elseif Redis:get(MARCOS.."Add:Rd:Manager:video_note:inline3am"..v) then
db = "بصمه فيديو ✧"
end
text = text..""..k.." » {"..v.."} » {"..db.."}\n"
end
if #list == 0 then
text = " ✧ عذرا لا يوجد ردود انلاين عامه"
end
return send(msg_chat_id,msg_id,"["..text.."]","md",true)
end
--------------

if text or msg.content.video_note or msg.content.document or msg.content.audio or msg.content.video or msg.content.voice_note or msg.content.sticker or msg.content.animation or msg.content.photo and msg.sender_id.user_id ~= MARCOS then
local test = Redis:get(MARCOS.."Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg_chat_id)
if Redis:get(MARCOS.."Set:Rd:mz"..msg.sender_id.user_id..":"..msg_chat_id) == "true1" then
Redis:del(MARCOS.."Set:Rd:mz"..msg.sender_id.user_id..":"..msg_chat_id)
if msg.content.text then   
text = text:gsub('"',"") 
text = text:gsub('"',"") 
text = text:gsub("`","") 
text = text:gsub("*","") 
Redis:set(MARCOS.."Add:Rd:Sudo:mz:Text"..test, text)  
elseif msg.content.sticker then   
Redis:set(MARCOS.."Add:Rd:Sudo:mz:stekr"..test, msg.content.sticker.sticker.remote.id)  
elseif msg.content.voice_note then  
Redis:set(MARCOS.."Add:Rd:Sudo:mz:vico"..test, msg.content.voice_note.voice.remote.id)  
elseif msg.content.animation then   
Redis:set(MARCOS.."Add:Rd:Sudo:mz:Gif"..test, msg.content.animation.animation.remote.id)  
elseif msg.content.audio then
Redis:set(MARCOS.."Add:Rd:Sudo:mz:Audio"..test, msg.content.audio.audio.remote.id)  
Redis:set(MARCOS.."Add:Rd:Sudo:mz:Audioc"..test, msg.content.caption.text)  
elseif msg.content.document then
Redis:set(MARCOS.."Add:Rd:Sudo:mz:File"..test, msg.content.document.document.remote.id)  
elseif msg.content.video then
Redis:set(MARCOS.."Add:Rd:Sudo:mz:Video"..test, msg.content.video.video.remote.id)  
Redis:set(MARCOS.."Add:Rd:Sudo:mz:Videoc"..test, msg.content.caption.text)  
elseif msg.content.video_note then
Redis:set(MARCOS.."Add:Rd:Sudo:mz:video_note"..test..msg_chat_id, msg.content.video_note.video.remote.id)  
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
Redis:set(MARCOS.."Add:Rd:Sudo:mz:Photo"..test, idPhoto)  
Redis:set(MARCOS.."Add:Rd:Sudo:mz:Photoc"..test, msg.content.caption.text)  
end
send(msg_chat_id,msg_id," ✧ تم حفظ الرد \n ✧ ارسل ( "..test.." ) لرئية الرد","md",true)  
return false
end  
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."Set:Rd:mz"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
Redis:set(MARCOS.."Set:Rd:mz"..msg.sender_id.user_id..":"..msg_chat_id, "true1")
Redis:set(MARCOS.."Text:Sudo:Bot"..msg.sender_id.user_id..":"..msg_chat_id, text)
Redis:sadd(MARCOS.."List:Rd:Sudo:mz", text)
send(msg_chat_id,msg_id,[[
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, يمكنك الان ارسل لي الرد للضافه ،
, ملصق ، متحركه ، صوره ،
, فيديو ، بصمه الفيديو ،
, بصمه ، صوت ، رساله ،
, يمكنك اضافة الى النص ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*
`#username` *-> معرف المستخدم*
 `#msgs` *-> عدد الرسائل*
 `#name` *-> اسم المستخدم*
 `#id` *-> ايدي المستخدم*
 `#stast`* -> رتبة المستخدم*
 `#edit` *-> عدد التعديلات*
*▱▰▱▰▱▰▱▰▱▰▱▰▱▰*
]],"md",true)  
return false
end
end
if text and text:match("^(.*)$") then
if Redis:get(MARCOS.."Set:On:mz"..msg.sender_id.user_id..":"..msg_chat_id) == "true" then
list = {"Add:Rd:Sudo:mz:video_note","Add:Rd:Sudo:mz:Audio","Add:Rd:Sudo:mz:Audioc","Add:Rd:Sudo:mz:File","Add:Rd:Sudo:mz:Video","Add:Rd:Sudo:mz:Videoc","Add:Rd:Sudo:mz:Photo","Add:Rd:Sudo:mz:Photoc","Add:Rd:Sudo:mz:Text","Add:Rd:Sudo:mz:stekr","Add:Rd:Sudo:mz:vico","Add:Rd:Sudo:mz:Gif"}
for k,v in pairs(list) do
Redis:del(MARCOS..''..v..text)
end
Redis:del(MARCOS.."Set:On:mz"..msg.sender_id.user_id..":"..msg_chat_id)
Redis:srem(MARCOS.."List:Rd:Sudo:mz", text)
return send(msg_chat_id,msg_id," ✧ تم حذف الرد من الردود العامه","md",true)  
end
end

if text and text ~= "حذف رد مميز" and text ~= "اضف رد مميز" and text ~= "مسح الردود المميزه" then
local listmz = Redis:smembers(MARCOS.."List:Rd:Sudo:mz")
for k,v in pairs(listmz) do
i ,j  = string.find(text, v)
if j and i then
local x = string.sub(text, i,j)
print(x)
if x then
local anemi = Redis:get(MARCOS.."Add:Rd:Sudo:mz:Gif"..x)   
local veico = Redis:get(MARCOS.."Add:Rd:Sudo:mz:vico"..x)   
local stekr = Redis:get(MARCOS.."Add:Rd:Sudo:mz:stekr"..x)     
local Text = Redis:get(MARCOS.."Add:Rd:Sudo:mz:Text"..x)   
local photo = Redis:get(MARCOS.."Add:Rd:Sudo:mz:Photo"..x)
local photoc = Redis:get(MARCOS.."Add:Rd:Sudo:mz:Photoc"..x)
local video = Redis:get(MARCOS.."Add:Rd:Sudo:mz:Video"..x)
local videoc = Redis:get(MARCOS.."Add:Rd:Sudo:mz:Videoc"..x)
local document = Redis:get(MARCOS.."Add:Rd:Sudo:mz:File"..x)
local audio = Redis:get(MARCOS.."Add:Rd:Sudo:mz:Audio"..x)
local audioc = Redis:get(MARCOS.."Add:Rd:Sudo:mz:Audioc"..x)
local video_note = Redis:get(MARCOS.."Add:Rd:Sudo:mz:video_note"..x)
if Text then 
local UserInfo = bot.getUser(msg.sender_id.user_id)
local NumMsg = Redis:get(MARCOS..'Num:Message:User'..msg_chat_id..':'..msg.sender_id.user_id) or 0
local TotalMsg = Total_message(NumMsg)
local Status_Gps = msg.Name_Controller
local NumMessageEdit = Redis:get(MARCOS..'Num:Message:Edit'..msg_chat_id..msg.sender_id.user_id) or 0
local Text = Text:gsub('#username',(UserInfo.username or 'لا يوجد')) 
local Text = Text:gsub('#name',FlterBio(UserInfo.first_name))
local Text = Text:gsub('#id',msg.sender_id.user_id)
local Text = Text:gsub('#edit',NumMessageEdit)
local Text = Text:gsub('#msgs',NumMsg)
local Text = Text:gsub('#stast',Status_Gps)
send(msg_chat_id,msg_id,'['..Text..']',"md",true)  
end
if video_note then
bot.sendVideoNote(msg_chat_id, msg.id, video_note)
Redis:sadd(MARCOS.."Spam:Group"..msg.sender_id.user_id,text) 
end
if photo then
bot.sendPhoto(msg.chat_id, msg.id, photo,photoc)
Redis:sadd(MARCOS.."Spam:Group"..msg.sender_id.user_id,text) 
end  
if stekr then 
bot.sendSticker(msg_chat_id, msg.id, stekr)
Redis:sadd(MARCOS.."Spam:Group"..msg.sender_id.user_id,text) 
end
if veico then 
bot.sendVoiceNote(msg_chat_id, msg.id, veico, '', 'md')
Redis:sadd(MARCOS.."Spam:Group"..msg.sender_id.user_id,text) 
end
if video then 
bot.sendVideo(msg_chat_id, msg.id, video, videoc, "md")
Redis:sadd(MARCOS.."Spam:Group"..msg.sender_id.user_id,text) 
end
if anemi then 
bot.sendAnimation(msg_chat_id,msg.id, anemi, '', 'md')
Redis:sadd(MARCOS.."Spam:Group"..msg.sender_id.user_id,text) 
end
if document then
bot.sendDocument(msg_chat_id, msg.id, document, '', 'md')
Redis:sadd(MARCOS.."Spam:Group"..msg.sender_id.user_id,text) 
end  
if audio then
bot.sendAudio(msg_chat_id, msg.id, audio, audioc, "md") 
Redis:sadd(MARCOS.."Spam:Group"..msg.sender_id.user_id,text) 
end
end
end
end
end
if text == "اضف رد مميز" then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص  '..Controller_Num(1)..' * ',"md",true)  
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = 't.me/uui9u'}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Set:Rd:mz"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data = msg.sender_id.user_id..'/cancelrdd'},
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان الكلمه لاضافتها في الردود المميزه ","md",false, false, false, false, reply_markup)
end 
if text == "حذف رد مميز" then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص  '..Controller_Num(1)..' * ',"md",true)  
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'اضغط للاشتراك', url = 't.me/uui9u'}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لاستخذام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Set:On:mz"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data = msg.sender_id.user_id..'/cancelrdd'},
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان الكلمه لحذفها من الردود المميزه","md",false, false, false, false, reply_markup)
end 
if text and not Redis:sismember(MARCOS.."Spam:Group"..msg.sender_id.user_id,text) then
Redis:del(MARCOS.."Spam:Group"..msg.sender_id.user_id) 
end
if text == "مسح الردود المميزه" then
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص  '..Controller_Num(1)..' * ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Rd:Sudo:mz")
for k,v in pairs(list) do
Redis:del(MARCOS.."Add:Rd:Sudo:mz:Gif"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:mz:vico"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:mz:stekr"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:mz:Text"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:mz:Photo"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:mz:Photoc"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:mz:Video"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:mz:Videoc"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:mz:File"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:mz:Audio"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:mz:Audioc"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:mz:video_note"..v)
Redis:del(MARCOS.."List:Rd:Sudo:mz")
end
send(msg_chat_id,msg_id," ✧ تم مسح قائمه الردود المميزه","md",true)  
end
if text == ("الردود المميزه") then 
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص  '..Controller_Num(1)..' * ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Rd:Sudo:mz")
text = "\n ✧ قائمة الردود المميزه \n • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • \n"
for k,v in pairs(list) do
if Redis:get(MARCOS.."Add:Rd:Sudo:mz:Gif"..v) then
db = "متحركه ✧"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:mz:vico"..v) then
db = "بصمه ✧"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:mz:stekr"..v) then
db = "ملصق ✧"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:mz:Text"..v) then
db = "رساله ✧"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:mz:Photo"..v) then
db = "صوره ✧"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:mz:Video"..v) then
db = "فيديو ✧"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:mz:File"..v) then
db = "ملف ✧"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:mz:Audio"..v) then
db = "اغنيه ✧"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:mz:video_note"..v) then
db = "بصمه فيديو ✧"
end
text = text..""..k.." » {"..v.."} » {"..db.."}\n"
end
if #list == 0 then
text = " ✧ لا توجد ردود مميزه"
end
return send(msg_chat_id,msg_id,"["..text.."]","md",true)  
end
---------
if text == 'شنو يقول' or text == "بيقول اي" or text == "??" or text == "؟؟" then 
if tonumber(msg.reply_to_message_id) > 0 then
local result = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if result.content.voice_note then 
local mr = result.content.voice_note.voice.remote.id
local url = http.request("http://159.223.13.231/oda/voiceRecognise?token="..Token.."&file_id="..mr)
local json = JSON.decode(url)
if json and json.msg then
return send(msg.chat_id,msg.id," ✧ "..json.msg)
else
return send(msg.chat_id,msg.id," ✧ تعذر التعرف على الصوت")
end
end
end
end
if text == "تقطيع" then
if tonumber(msg.reply_to_message_id) > 0 then
local result = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if result.content.text then 
local line = result.content.text.text
for t in string.gmatch(line, "[^%s]+") do
send(msg_chat_id,msg_id,t,"md",true)  
end 
end
end
end
---
if text and text:match("^احسب (.*)$") then
local Textage = text:match("^احسب (.*)$")
ge = https.request('https://apiabs.ml/age.php?age='..URL.escape(Textage)..'')
ag = JSON.decode(ge)
i = 0
for k,v in pairs(ag.ok) do
i = i + 1
t = v.."\n"
end
send(msg_chat_id,msg_id,t,"md",true) 
end 
-----تحميل-ساوند-كلاود---
if text and text:match("^تحميل ساوند (.*)$") then
local url = text:match("^تحميل ساوند (.*)$")
q = bot.sendText(msg_chat_id,msg_id,"جاري التحميل","md",true) 
api = https.request("https://devdeiveddev.ml/api/soundcloud/soundcloud_api.php?url="..url)
info = JSON.decode(api)
title = info.title
photo = info.photo
id = msg_chat_id..msg_id
link = info.link
os.execute("wget -O "..id..".mp3 "..link)
bot.sendText(msg_chat_id,msg_id,"جاري الرفع","md",true) 
os.execute("wget -O "..id..".png "..photo)
bot.sendAudio(msg_chat_id, msg_id, "./"..id..".mp3", '['..title..']'..'('..url..')', 'md', false, title, "@ZAXY00", "./"..id..".png")
end
---زخرفة ----
if Redis:get(MARCOS.."zhrfa"..msg.sender_id.user_id) == "sendzh" then
zh = https.request('https://apiabs.ml/zrf.php?abs='..URL.escape(text)..'')
zx = JSON.decode(zh)
t = "\n* ✧ قائمه الزخرفه ⇧⇩*\n*ꔹ━━━━━ꔹ𝙈𝘼ꔹ━━━━━ꔹ*\n* أضغط على الاسم لا يتم النسخ ✧ *\n"
i = 0
for k,v in pairs(zx.ok) do
i = i + 1
t = t..i.." -> `"..v.."` \n"
end
bot.sendText(msg_chat_id,msg_id,t,"md",true) 
Redis:del(MARCOS.."zhrfa"..msg.sender_id.user_id) 
end
if Redis:get(MARCOS.."jabwa"..msg.sender_id.user_id) == "jeka" then
zh = https.request('https://sofiplusahmed.ml/api/zkrfa.php?text='..URL.escape(text)..'')
zx = JSON.decode(zh)
t = "\n* ✧ قائمه الزخرفه ⇧⇩*\n*• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*\n* أضغط على الاسم لا يتم النسخ ✧ *\n"
i = 0
for k,v in pairs(zx.ok) do
i = i + 1
t = t..i.." -> `"..v.."` \n"
end
bot.sendText(msg_chat_id,msg_id,t,"md",true) 
Redis:del(MARCOS.."jabwa"..msg.sender_id.user_id) 
end
if text == "الحاسبه" or text == "اله حاسبه" or text == "الاله الحاسبه" then
Redis:del(MARCOS..msg.sender_id.user_id..msg.chat_id.."num")
start_mrkup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'ON', data = msg.sender_id.user_id..'ON'},{text = 'DEL', data = msg.sender_id.user_id..'DEL'},{text = 'AC', data = msg.sender_id.user_id..'rest'},{text = 'OFF', data = msg.sender_id.user_id..'OFF'},
},
{
{text = '^', data = msg.sender_id.user_id..'calc&^'},{text = '√', data = msg.sender_id.user_id..'calc&√'},{text = '(', data = msg.sender_id.user_id..'calc&('},{text = ')', data = msg.sender_id.user_id..'calc&)'},
},
{
{text = '7', data = msg.sender_id.user_id..'calc&7'},{text = '8', data = msg.sender_id.user_id..'calc&8'},{text = '9', data = msg.sender_id.user_id..'calc&9'},{text = '÷', data = msg.sender_id.user_id..'calc&/'},
},
{
{text = '4', data = msg.sender_id.user_id..'calc&4'},{text = '5', data = msg.sender_id.user_id..'calc&5'},{text = '6', data = msg.sender_id.user_id..'calc&6'},{text = 'x', data = msg.sender_id.user_id..'calc&*'},
},
{
{text = '1', data = msg.sender_id.user_id..'calc&1'},{text = '2', data = msg.sender_id.user_id..'calc&2'},{text = '3', data = msg.sender_id.user_id..'calc&3'},{text = '-', data = msg.sender_id.user_id..'calc&-'},
},
{
{text = '0', data = msg.sender_id.user_id..'calc&0'},{text = '.', data = msg.sender_id.user_id..'calc&.'},{text = '+', data = msg.sender_id.user_id..'calc&+'},{text = '=', data = msg.sender_id.user_id..'equal'},
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
send(msg.chat_id,msg.id," ✧ اهلا بك في بوت الحاسبه\n ✧ welcome to calculator","md",true, false, false, true, start_mrkup)
return false 
end

if text == "تست" then
local inf = bot.getUser(msg.sender_id.user_id)


var(inf)
end
if text and text:match("^play (.*)$") then
local q = text:match("^play (.*)$")
if q:match("%a") then
local url = https.request("https://xnxx.MARCOSbots.ml/apies/playstore.php?q="..URL.escape(q))
local json = JSON.decode(url)
if url == "null" or #json <= 1 then
return send(msg.chat_id,msg.id,' ✧ لم استطيع العثور على نتيجه في google play ')
end
local datar = {data = {{text = "• قناة السورس •" , url = 'http://t.me/'..chsource..''}}}
if #json < 5 then
for i = 1,#json do
title = json[i].title
link = "https://play.google.com"..json[i].url
datar[i] = {{text = title , url = link}}
end
else
for i = 1,5 do
title = json[i].title
link = "https://play.google.com"..json[i].url
datar[i] = {{text = title , url = link}}
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = datar
}
send(msg.chat_id,msg.id,' ✧ نتائج بحثك عن *'..q..'* في play store',"md",false, false, false, false, reply_markup)
else
send(msg.chat_id,msg.id," ✧ البحث باللغه الانجليزيه فقط")
end
end

if text then
if text:match("^انطق (.*)$") or text:match("^انطقي (.*)$") then
if Redis:get(MARCOS.."intg"..msg.chat_id) then
return false 
end
local inoi = text:match("^انطق (.*)$") or text:match("^انطقي (.*)$")
local intk = inoi:gsub(" ","-")
if intk:match("%a") then
lan = "en"
else
lan = "ar"
end
local rand = math.random(1,999)
os.execute("gtts-cli "..intk.." -l '"..lan.."' -o 'intk"..rand..".mp3'")
bot.sendAudio(msg_chat_id,msg_id,'./intk'..rand..'.mp3',tostring(inoi),"html",nil,tostring(inoi),"@'..chsource..'")
sleep(1)
os.remove("intk"..rand..".mp3")
end
end
--------------
if text== "رفع اثول"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end    
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:tahaath"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم رفع العضو اثول الگروب🤪بنجاح\n ✧ تمت إضافته إلى قائمه الثولان😹\nꪤ️")
elseif text== "تنزيل اثول"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:tahaath"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم تنزيل العضو من ثولان الكروب\n ✧ تمت الزاله من قامة الثولان😹\nꪤ️")
elseif text== "رفع جلب"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:klp"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم رفع المتهم إلى جلب 🐕 بنجاح\n ✧ تمت إضافته إلى قائمه الجلاب😹\nꪤ️")
elseif text== "رفع مطي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:donke"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم رفع المتهم إلى مطي ??بنجاح\n ✧ تمت إضافته إلى قائمه المطايه😹\nꪤ️")
elseif text== "تنزيل مطي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:donke"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم تنزيل المتهم مطي بنجاح\n ✧ تمت ازالته من قائمه المطايه 🦓😹\nꪤ️")
elseif text== "رفع بقره"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:bkra"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم رفع المتهم بقره بنجاح\n ✧ الان اصبح بقرة مقدسه 🐄😹\nꪤ️")
elseif text== "تنزيل بقره"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:bkra"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم تنزيل المتهم بقره بنجاح\n ✧ تمت ٳزالته من قائمة البقرات 🐄😺\nꪤ️")
elseif text== "رفع ملك"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:kink"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهـلا عزيزي\n ✧ تم رفع صديقك ملـ👑ـك بنجاح\n ✧ اصبح ملك الكروب 👨‍🎨😍❗️ \nꪤ️")
elseif text== "تنزيل ملك"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:kink"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهـلا عزيزي\n ✧ تم تنزيل العضو المهتلف\n ✧ من قائمة ألملـ👑ـوك بنجاح 😹\nꪤ️")
elseif text== "رفع ملكه"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:Quean"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهـلا عزيزي\n ✧ تم رفع صديقتك ملكـ🥰ــه بنجاح\n ✧ اصبحت ملكة الكروب 💆‍♀😍❗️ \nꪤ️")
elseif text== "تنزيل ملكه"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:Quean"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهـلا عزيزي\n ✧ تم تنزيل الجكمه🤵‍♀\n ✧ من قائمة ألملكـ👑ـات بنجاح 😹??\nꪤ️")
elseif text== "تنزيل جلب"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:klp"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي \n ✧ تم تنزيل المتهم جلب 🐶بنجاح\n ✧ تمت إزالته من قائمه الجلاب🐕😹\nꪤ️")
elseif text== "تنزيل زاحف"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:zahf"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم تنزيل المتهم زاحف بنجاح\n ✧ تم ازالته من قائمه الزواحف🐊😹\nꪤ️")
elseif text== "رفع زاحف"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:zahf"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم رفعه زاحف😹 بنجاح\n ✧ تم اضافته الى قائمه الزواحف🐊😹\nꪤ️")
elseif text== "رفع صخل"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:sakl"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم رفع المتهم صخل بنجاح\n ✧ الان اصبح صخل الكروب 🐐😹\nꪤ️")
elseif text== "تنزيل صخل"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:sakl"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم تنزيل المتهم صخل بنجاح\n ✧ تمت ٳزالته من قائمة الصخوله🐐😺\nꪤ️")
elseif text== "رفع بكلبي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:klpe"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم رفع العضو داخل كلبك❤️\n ✧ تمت ترقيته بنجاح 😻\nꪤ️")
elseif text== "تنزيل من كلبي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then  
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:klpe"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم تنزيل من داخل قلبك❤️\n ✧ تمت ازالته من قائمه القلوب😹💔\nꪤ️")
elseif text== "رفع تاج"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:tagge"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهـلا عزيزي\n ✧ تم رفع صديقك تـ👑ـاج بنجاح  \n ✧ اصبح خط احمر ❗️ \nꪤ️")
elseif text== "تنزيل تاج"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:tagge"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهـلا عزيزي\n ✧ تم تنزيل العضو المهتلف\n ✧ من قائمة ألتـ👑ـاج بنجاح 😹💔\nꪤ️")
elseif text== "رفع مرتي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:mrtee"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم رفع العضو مرتك👫 بنجاح\nالآن يمكنكم أخذ راحتكم🤤😉\nꪤ️")
elseif text== "تنزيل مرتي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:mrtee"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم تنزيل الجكمه👩‍⚕️مرتك بنجاح\nالآن انتم مفترقان☹️💔\nꪤ️")
elseif text== "رفع لوكي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:loke"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم رفعه ضمن اللوكيه👨‍🦯😹\nꪤ️")
elseif text== "تنزيل لوكي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:loke"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم تنزيله من اللوكيه😹\nꪤ️")
elseif text== "رفع غبي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:stope"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم رفعه بنجاح اصبح غبي الان🧛‍♀️😺\nꪤ️")
elseif text== "تنزيل غبي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then  
  if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:stope"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم تنزيله من الاغبياء👏😹\nꪤ️")
elseif text== "رفع طلي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:sadd(MARCOS.."mero:tele"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهلا عزيزي\n ✧ تم رفع المتهم طلي الكروب\n ✧ اطلع برا ابو البعرور الوصخ 🤢😂")
elseif text== "تنزيل طلي"  and msg.reply_to_message_id and not Redis:get(MARCOS.."amrthshesh"..msg.chat_id) then    
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:srem(MARCOS.."mero:tele"..msg.chat_id, Message_Reply.sender_id.user_id)
return bot.sendText(msg_chat_id,msg_id," ✧ اهــلا عزيزي\n ✧ تم تنزيله من الطليان👏😹\nꪤ️")
elseif text == ("الملوك") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:kink"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد ملوك") end
t = "\n ✧ قائمة الملوك\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("البقرات") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:bkra"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد بقرات") end
t = "\n ✧ قائمة البقرات\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الملكات") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:Quean"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد ملكات") end
t = "\n ✧ قائمة الملكات\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("مسح الملوك") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return bot.sendText(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙* ',"md",true)  
end
Redis:del(MARCOS.."mero:kink"..msg.chat_id)
bot.sendText(msg_chat_id,msg_id,'تم مسح الملوك ')
elseif text == ("مسح البقرات") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return bot.sendText(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙* ',"md",true)  
end
Redis:del(MARCOS.."mero:bkra"..msg.chat_id)
bot.sendText(msg_chat_id,msg_id,'تم مسح البقرات ')
elseif text == ("مسح الملكات")  then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return bot.sendText(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙* ',"md",true)  
end
Redis:del(MARCOS.."mero:Quean"..msg.chat_id)
bot.sendText(msg_chat_id,msg_id,'تم مسح الملكات ')
elseif text == ("الثولان") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:tahaath"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد ثولان") end
t = "\n ✧ قائمة الثولان\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("مسح الطليان")  then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return bot.sendText(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙* ',"md",true)  
end
Redis:del(MARCOS.."mero:tele"..msg.chat_id)
bot.sendText(msg_chat_id,msg_id,'تم مسح الطليان ')
elseif text == ("الطليان") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:tele"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد طليان") end
t = "\n ✧ قائمة الطليان\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الطلاك") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:taha1"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد مطلقين") end
t = "\n ✧ قائمة الطلاك\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '[@'..UserInfo.username..']'
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الجلاب") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:klp"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد جلاب") end
t = "\n ✧ قائمة الكلاب\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("المطايه") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:donke"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد مطايه") end
t = "\n ✧ قائمة المطايه\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الزواحف") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:zahf"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد زواحف") end
t = "\n ✧ قائمة الزواحف\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الصخول") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:sakl"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد صخول") end
t = "\n ✧ قائمة الصخول\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("قائمه كلبي") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:klpe"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد اعضاء بكلبي") end
t = "\n ✧ قائمة كلبي\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("قائمه التاج") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:tagge"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد قائمه تاج") end
t = "\n ✧ قائمة التاج\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الزوجات") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:mrtee"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد زوجات") end
t = "\n ✧ قائمة الزوجات\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("اللوكيه") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:loke"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد لوكيه") end
t = "\n ✧ قائمة اللوكيه\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
elseif text == ("الاغبياء") then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Mero:Chat:Channel:Join'..msg.chat_id)}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Mero:Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Mero:Channel:Join')}, },}}
return bot.sendText(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."mero:stope"..msg.chat_id)
if #list == 0 then return bot.sendText(msg_chat_id,msg_id, " ✧ لا يوجد اغبياء") end
t = "\n ✧ قائمة الاغبياء\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
username = '@'..UserInfo.username..''
else
username = v 
end
t = t..""..k.." -> "..username.."\n"
if #list == k then
return bot.sendText(msg_chat_id,msg_id, t)
end
end
end
if text then
if text:match("(.*)(مين ضافني)(.*)") or text:match("(.*)(ضافني)(.*)") then
local StatusMember = bot.getChatMember(msg_chat_id,msg.sender_id.user_id).status.MARCOSbots
if (StatusMember == "chatMemberStatusCreator") then
return send(msg_chat_id,msg_id," ✧ انت منشئ المجموعه","md",true) 
end
local Added_Me = Redis:get(MARCOS.."Who:Added:Me"..msg_chat_id..':'..msg.sender_id.user_id)
if Added_Me then 
UserInfo = bot.getUser(Added_Me)
local Name = '['..UserInfo.first_name..'](tg://user?id='..Added_Me..')'
Text = ' ❤️‍🔥 القمر اللي ضافك هنا -> '..Name
return send(msg_chat_id,msg_id,Text,"md",true) 
else
return send(msg_chat_id,msg_id,"* ✧ انت دخلت عبر الرابط يقميل 💕.*","md",true) 
end
end
end
if text == 'تحويل' then 
if tonumber(msg.reply_to_message_id) > 0 then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if Message_Reply.content.photo then
if Message_Reply.content.photo.sizes[1].photo.remote.id then
idPhoto = Message_Reply.content.photo.sizes[1].photo.remote.id
elseif Message_Reply.content.photo.sizes[2].photo.remote.id then
idPhoto = Message_Reply.content.photo.sizes[2].photo.remote.id
elseif Message_Reply.content.photo.sizes[3].photo.remote.id then
idPhoto = Message_Reply.content.photo.sizes[3].photo.remote.id
end
local File = json:decode(https.request('https://api.telegram.org/bot'..Token..'/getfile?file_id='..idPhoto)) 
download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path,'photo.png') 
bot.sendSticker(msg_chat_id, msg.id,'./photo.png')
os.remove('photo.png')
end 
end
end
if text == 'تحويل' then 
if tonumber(msg.reply_to_message_id) > 0 then
local result = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if result.content.voice_note then 
local mr = result.content.voice_note.voice.remote.id
local File = json:decode(https.request('https://api.telegram.org/bot'..Token..'/getfile?file_id='..mr)) 
download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path,'voice.mp3') 
bot.sendAudio(msg_chat_id, msg.id,'./voice.mp3', ' ✧ تم تحويل البصمه الي صوت بواسطه @'..UserBot..'', 'html',nil,"audio")
sleep(3)
os.remove('voice.mp3')
end
end
end
if text == 'تحويل' then 
if tonumber(msg.reply_to_message_id) > 0 then
local result = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if result.content.audio then 
local mr = result.content.audio.audio.remote.id
local File = json:decode(https.request('https://api.telegram.org/bot'..Token..'/getfile?file_id='..mr)) 
download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path,'audio.ogg') 
bot.sendVoiceNote(msg_chat_id, msg.id,'./audio.ogg', ' ✧ تم تحويل الصوت الي بصمه بواسطه @'..UserBot..'', 'html')
sleep(3)
os.remove('audio.ogg')
end 
end
end
if text == 'تحويل' then 
if tonumber(msg.reply_to_message_id) > 0 then
local result = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if result.content.sticker then 
local mr = result.content.sticker.sticker.remote.id
local File = json:decode(https.request('https://api.telegram.org/bot'..Token..'/getfile?file_id='..mr)) 
download('https://api.telegram.org/file/bot'..Token..'/'..File.result.file_path,'stick.jpg') 
bot.sendPhoto(msg.chat_id, msg.id, './stick.jpg'," ✧ تم تحويل الملصق الي صوره بواسطه @"..UserBot.."","html")
os.remove('stick.jpg')
end 
end
end

if text == "تفعيل القفل التلقائي" then
if not msg.Manger then
return send(msg.chat_id,msg.id,"✧ هذا الامر يخص المدير")
end
Redis:del(MARCOS..msg.chat_id..'chat_lock:lock')
send(msg.chat_id,msg.id,"✧ تم تفعيل قفل الدردشه التلقائي")
end
if text == "تعطيل القفل التلقائي" then
if not msg.Manger then
return send(msg.chat_id,msg.id,"✧ هذا الامر يخص المدير")
end
Redis:set(MARCOS..msg.chat_id..'chat_lock:lock',true)
send(msg.chat_id,msg.id,"✧ تم تعطيل قفل الدردشه التلقائي")
end

if text == "القفل التلقائي" then
if not msg.Manger then
return send(msg.chat_id,msg.id,"✧ هذا الامر يخص المدير")
end
if Redis:get(MARCOS..msg.chat_id..'chat_lock:lock') then
state = "معطل"
else
state = "مفعل"
end
if Redis:get(MARCOS..msg.chat_id..'time:chat:lock')  then
lock_time = Redis:get(MARCOS..msg.chat_id..'time:chat:lock') 
else
lock_time = 00
end
if Redis:get(MARCOS..msg.chat_id..'time:chat:on') then
on_time = Redis:get(MARCOS..msg.chat_id..'time:chat:on')
else
on_time = 00
end
local current_time = https.request("https://ayad-12.xyz/apies/tt.php")
local txx = "✧ القفل التلقائي { "..state.." }\n✧ الوقت الان "..current_time.."\n\n✧ وقف بدايه القفل » "..lock_time.."\n✧ وقت نهايه القفل » "..on_time
return send(msg.chat_id,msg.id,txx)
end

if text then
if Redis:get(MARCOS..msg.sender_id.user_id..'set:time:chat') then
if text == "الغاء" then
Redis:del(MARCOS..msg.sender_id.user_id..'set:time:chat')
return send(msg.chat_id,msg.id,"✧ تم الغاء الامر")
end
if text:match("(%d+)") then
if tonumber(text) <= 24 then
if tonumber(text) == 24 then
lock_time = 00
else
lock_time = tonumber(text)
end
Redis:del(MARCOS..msg.sender_id.user_id..'set:time:chat')
Redis:set(MARCOS..msg.sender_id.user_id..'set:time:chat:on',true)
Redis:del(MARCOS..msg.chat_id..'time:chat:lock')
Redis:set(MARCOS..msg.chat_id..'time:chat:lock',math.floor(tonumber(lock_time)))
return send(msg.chat_id,msg.id,"✧ تم حفظ وقف القفل الساعه "..text.."\n ارسل الان وقت التفعيل ")
else
return send(msg.chat_id,msg.id,"✧ لقد ارسلت وقت خاطئ")
end
else
return send(msg.chat_id,msg.id,"✧ لقد ارسلت وقت خاطئ")
end
elseif Redis:get(MARCOS..msg.sender_id.user_id..'set:time:chat:on') then
if text == "الغاء" then
Redis:del(MARCOS..msg.sender_id.user_id..'set:time:chat:on')
return send(msg.chat_id,msg.id,"✧ تم الغاء الامر")
end
if text:match("(%d+)") then
if tonumber(text) <= 24 then
if tonumber(text) == 24 then
lock_time = 00
else
lock_time = tonumber(text)
end
Redis:del(MARCOS..msg.sender_id.user_id..'set:time:chat:on')
Redis:del(MARCOS..msg.chat_id..'time:chat:on')
Redis:set(MARCOS..msg.chat_id..'time:chat:on',math.floor(tonumber(lock_time)))
return send(msg.chat_id,msg.id,"✧ تم حفظ وقف الفتح الساعه "..lock_time.."\n")
else
return send(msg.chat_id,msg.id,"✧ لقد ارسلت وقت خاطئ")
end
else
return send(msg.chat_id,msg.id,"✧ لقد ارسلت وقت خاطئ")
end

end
end



if text == "ضع وقت قفل الدردشه" then
if not msg.Manger then
return send(msg.chat_id,msg.id,"✧ هذا الامر يخص المدير")
end
Redis:set(MARCOS..msg.sender_id.user_id..'set:time:chat',true)
send(msg.chat_id,msg.id,"✧ ارسل الان الوقت بنظام 24 ساعه")
end
if not Redis:get(MARCOS..msg.chat_id..'chat_lock:lock') then
if Redis:get(MARCOS..msg.chat_id..'time:chat:lock') then
local current_time = https.request("https://ayad-12.xyz/apies/hssn.php")
if tonumber(Redis:get(MARCOS..msg.chat_id..'time:chat:lock')) - tonumber(current_time) == tonumber(0) then
Redis:set(MARCOS.."Lock:text"..msg_chat_id,true)
Redis:del(MARCOS..msg.chat_id..'time:chat:lock')
send(msg.chat_id,0,"✧ تم قفل الدردشه تلقائيا")
end
end
if Redis:get(MARCOS..msg.chat_id..'time:chat:on') then
local current_time = https.request("https://ayad-12.xyz/apies/hssn.php")
if tonumber(current_time) == tonumber(Redis:get(MARCOS..msg.chat_id..'time:chat:on')) then
Redis:del(MARCOS.."Lock:text"..msg_chat_id) 
Redis:del(MARCOS..msg.chat_id..'time:chat:on')
send(msg.chat_id,0,"✧ تم فتح الدردشه تلقائيا")
end
end
end
if text == "اهمس" or text == "همسة" or text == "همسه" then
if msg.reply_to_message_id > 0 then
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if Message_Reply and Message_Reply.sender_id and Message_Reply.sender_id.user_id then
local testhms = math.random(1,9999999999999)
local first_name = bot.getUser(Message_Reply.sender_id.user_id).first_name
Redis:set(MARCOS.."hms:"..testhms.."chat_id", msg_chat_id)
Redis:set(MARCOS.."hms:"..testhms.."to", Message_Reply.sender_id.user_id)
Redis:set(MARCOS.."hms:"..testhms.."msg_id",msg.reply_to_message_id)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'اضغط هنا لارسال الهمسه', url = 't.me/'..UserBot..'?start=hms'..testhms..'from_id'..msg.sender_id.user_id}, 
},
}
}
return send(msg_chat_id,msg_id," ✧ اضغط لارسال همسه الي -> "..first_name.." ","html",true,false,false,false,reply_markup) 
end
end
end

if text == 'الاوامر' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه ❇️', data = msg.sender_id.user_id..'/help1'}, {text = 'الامنيه 🔧', data = msg.sender_id.user_id..'/help2'}, 
},
{
{text = 'المدراء 🔄', data = msg.sender_id.user_id..'/help3'}, {text = 'المنشئين ✨', data = msg.sender_id.user_id..'/help4'}, 
},
{
{text = 'مالك المجموعة 🧿', data = msg.sender_id.user_id..'/help5'}, {text = 'التسليه 🎭', data = msg.sender_id.user_id..'/helpp6'}, 
},
{
{text = 'اوامر المطور 🌀', data = msg.sender_id.user_id..'/helpsudo'},{text = 'الالعاب 🎮', data = msg.sender_id.user_id..'/help6'}, 
},
{
{text = 'اوامر التسليه ☁', data = msg.sender_id.user_id..'/helpts'},
},
{
{text = 'القفل والفتح ⚙️', data = msg.sender_id.user_id..'/NoNextSeting'}, {text = 'التعطيل والتفعيل 📢', data = msg.sender_id.user_id..'/listallAddorrem'}, 
},
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00 '}, 
},
}
}
return send(msg_chat_id,msg_id, [[*
✧ اوامــر البــوت الرئيسيـة ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
✧ { م1 } -> اوامر الحمايه
✧ { م2 } -> اوامر الادمنيه
✧ { م3 } -> اوامر المدراء
✧ { م4 } -> اوامر المنشئين
✧ { م5 } -> اوامر المالكين
✧ { م6 } -> اوامر التسليه
✧ { م7 } -> اوامر المطور الاساسي
*]],"md",false, false, false, false, reply_markup)
end
if text == 'م7' then
if not msg.Dev then
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(3)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00 '}, 
},
}
}
local TextHelp = [[*
 ✧ اوامر المطور الاساسي ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل  ->  تعطيل
 ✧ رفع  تنزيل -> مطور اساسي
 ✧ المطورين الاساسيين
 ✧ مسح المطورين الاساسيين
 ✧ رفع  تنزيل -> مطور ثانوي
 ✧ المطورين الثانويين  
 ✧ مسح المطورين الثانويين
 ✧ رفع  تنزيل -> مطور
 ✧ المطورين -> مسح المطورين
 ✧ تغيير المطور الاساسي
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل الوضع المدفوع + الايدي 
 ✧ الغاء الوضع المدفوع + الايدي
 ✧ حظر جروب + { الايدي }
 ✧ غادر -> + { الايدي }
 ✧ اسم بوتك + غادر بالمجموعة
 ✧ تفعيل تعطيل الاشتراك الاجباري
 ✧ الاشتراك الاجباري
 ✧ تغيير الاشتراك الاجباري
 ✧ تفعيل تعطيل الاشتراك الاجباري للجروب
 ✧ الاشتراك الاجباري للجروب
 ✧ تعيين عدد الاعضاء + {العدد}
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ حظر عام ، الغاء العام
 ✧ قائمه العام ، مسح قائمه العام
 ✧ كتم عام ، الغاء كتم عام
 ✧ المكتومين عام
 ✧ مسح المكتومين عام
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تغيير ، مسح ->{ اسم البوت }
 ✧ ضع صوره للترحيب 
 ✧ الاحصائيات
 ✧ ذيع + ايدي المجموعة بالرد
 ✧ اذاعه ، اذاعه خاص
 ✧ اذاعه بالتوجيه ، اذاعه بالتثبيت
 ✧ اذاعه خاص بالتوجيه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل تعطيل جلب النسخه التلقائيه
 ✧ جلب نسخه احتياطيه
 ✧ رفع النسخه الاحتياطيه بالرد
 ✧ رفع نسخه  ماركوس  بالرد
 ✧ جلب نسخه الردود 
 ✧ رفع نسخه الردود بالرد
 ✧ معلومات التنصيب
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تعيين ، مسح -> { الايدي عام }
 ✧ اضف ، مسح -> {رد عام}
 ✧ اضف ، مسح -> {رد عام متعدد}
 ✧ ضع ، مسح -> { الترحيب عام } 
 ✧ ضع ، مسح -> { كليشه المطور }
 ✧ الردود العامه ، مسح الردود العامه
 ✧ اضف مسح صوت عام
 ✧ الصوتيات العامه 
 ✧ مسح الصوتيات العامه
 ✧ منع عام ، الغاء منع عام
 ✧ قائمه المنع عام
 ✧ مسح قائمه المنع عام
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اضف مسح -> سؤال
 ✧ الاسئله المضافه
 ✧ مسح الاسئله المضافه
 ✧ اضف مسح -> لغز 
 ✧ الالغاز ~ مسح الالغاز
 ✧ اضف مسح -> سؤال كت 
 ✧ اسئله كت
 ✧ اضف اسئله كت
 ✧ مسح اسئله كت
 ✧ اضف موسيقى 
 ✧ مسح موسيقى بالرد 
 ✧ قائمة الموسيقى 
 ✧ مسح قائمه الموسيقى 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل ، تعطيل -> الاوامر التاليه↓
 ✧ البوت الخدمي ، المغادرة ، الاذاعه
 ✧ التواصل ، الاحصائيات
 ✧ ملف -> { اسم الملف }
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ مسح جميع الملفات 
 ✧ المتجر ، الملفات
 ✧ تحديث ، تحديث السورس
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر المطور في البوت 🌀
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع، تنزيل -> { مالك }
 ✧ المالكين ، مسح المالكين
 ✧ تنزيل جميع الرتب
*]]
return send(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
end
if text == 'اوامر التسليه' then
if not msg.Dev then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00 '}, 
},
}
}
local TextHelp = [[*
 ✧ اوامـر الـتـسـلـيـه كـالاتـي ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الامر ، تفعيل ، تعطيل  -> { الامر }
 ✧ غنيلي ، ريمكس ، اغنيه ، شعر
 ✧ صوره ،  متحركه
 ✧ انمي ، ميمز
 ✧ مسلسل ، فلم
 ✧ حساب العمر( احسب + تاريخ الميلاد)
 ✧ معنى اسم + الاسم
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
*]]
return send(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
elseif text == 'م1' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00 '}, 
},
}
}
local TextHelp = [[*
 ✧ اوامـر الـحـمـايـه كـالاتـي ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ قفل ، فتح -> الامر 
 ✧ تستطيع قفل حمايه كما يلي ...
 ✧ -> { بالتقييد ، بالطرد ، بالكتم }
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الكل ~ الدخول
 ✧ الروابط ~ المعرف
 ✧ التاك ~ الشارحه
 ✧ التعديل ~ تعديل الميديا
 ✧ المتحركه ~ الملفات
 ✧ الصور ~ الفيديو 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الماركداون ~ البوتات
 ✧ التكرار ~ الكلايش
 ✧ السيلفي ~ الملصقات
 ✧ الانلاين ~  الدردشه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ التوجيه ~ الاغاني
 ✧ الصوت ~ الجهات
 ✧ الاشعارات ~ التثبيت 
 ✧ الوسائط ~ التفليش
 ✧ وسائط المميزين
 ✧ السب ~ الفارسيه
 ✧ الإنكليزيه
 ✧ الشتايم ~ الاباحي
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
*]]
return send(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
end
if text == 'م2' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00 '}, 
},
}
}
local TextHelp = [[*
 ✧ اوامـر ادمـنـيـة الـجـروب ⇧⇩
ꔹ━━━━━ꔹ𝙈𝘼ꔹ━━━━━ꔹ
 ✧ رفع، تنزيل -> مميز
 ✧ المميزين -> مسح المميزين 
 ✧ رفع الادمنيه
 ✧ تاك ، تاك للكل ، المجموعة
 ✧ منع ، الغاء منع
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الاوامر التالية -> {بالرد ، بالمعرف}
 ✧ حظر ، طرد -> الغاء حظر 
 ✧ كتم -> الغاء كتم
 ✧ تقييد -> الغاء تقييد
 ✧ كشف ، رفع -> القيود
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ عرض القوائم كما يلي ...
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ المنشئين الاساسيين ، المنشئين 
 ✧ المدراء ، الادمنيه ، المميزين
 ✧ المشرفين ، المكتومين
 ✧ قائمه المنع
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تثبيت ، الغاء تثبيت
 ✧ الرابط ، الاعدادات ، الحمايه
 ✧ الترحيب ، القوانين
 ✧ ضع رتبه  -> { اسم الرتبه } 
 ✧ تحكم -> {بالرد ، بالمعرف}
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل ، تعطيل -> الاوامر التاليه :
 ✧ الترحيب ، الرابط 
 ✧ ردود البوت ، الالعاب
 ✧ اطردني ، التسليه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ مسح -> الاوامر التاليه
 ✧ القوائم ، قائمه المنع ، المميزين
 ✧ الرابط ، القوانين ، الصوره
 ✧ مسح -> { عدد }
 ✧ مسح -> { بالرد }
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر الاعضاء والادمنيه 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ ايدي ، ايدي بالرد ، رسائلي
 ✧ تفاعلي ، لقبي ، بايو ، ترند
 ✧ جهاتي ، تعديلاتي ، نقاطي
 ✧ بيع نقاطي + العدد
 ✧ مسح نقاطي
 ✧ قول + الكلمه
 ✧ زواج 
 ✧ الوقت ، الساعه ، التاريخ
 ✧ الصوتيات ، الصوتيات العامه
 ✧ زخرفه ، تحويل الصيغ ، غنيلي
 ✧ همسه ، اسم برجك ، صورتي
 ✧ صلاحياتي ، رتبتي
 ✧ صلاحياته -> {بالرد ، بالمعرف}
 ✧ الرتبه -> {بالرد ، بالمعرف}
 ✧ التفاعل -> {بالرد ، بالمعرف}
 ✧ كشف -> {بالرد ، بالمعرف}
*]]
return send(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
end
if text == 'م3' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00 '}, 
},
}
}
local TextHelp = [[*
 ✧ اوامـر الـمـدراء فـي الـجـروب ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل -> ادمن
 ✧ الادمنيه -> مسح الادمنيه
 ✧ تنزيل الكل -> {بالرد ، بالمعرف}
 ✧ ️︙كشف ، طرد ، قفل -> البوتات
 ✧ قفل البوتات -> بالطرد
 ✧ فحص -> البوت
 ✧ طرد -> المحذوفين 
 ✧ قفل فتح -> ارسال القناة
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ لتغيير رد الرتب في البوت
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تغيير رد -> {اسم الرتبه والنص} 
 ✧ المطور ، المالك ، المنشئ الاساسي
 ✧ المنشئ ، المدير ، الادمن
 ✧ المميز ، العضو
 ✧ مسح رد -> { اسم الرتبه }
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ وضع الرتب -> { بالرد ، بالمعرف}
 ✧ ضع رتبه -> { اسم الرتبه }
 ✧ مسح رتبه -> { بالرد ، بالمعرف}
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ وضع ، ضع -> الاوامر التاليه
 ✧ اسم + اسم المجموعة
 ✧ رابط ، صوره
 ✧ قوانين ، وصف ،الترحيب 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل ، تعطيل -> الاوامر التاليه :
 ✧ الايدي ، الايدي بالصوره 
 ✧ ايدي العضو ، البايو
 ✧ صورتي ، اسمي
 ✧ الردود ، الابراج
 ✧ غنيلي ، الصيغ ، قول
 ✧ تنبيه الاسماء ، الصوتيات 
 ✧ الصوتيات العامه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ مسح -> + { الامر } 
 ✧ المحظورين ، المطرودين
 ✧ المكتومين -> المقيدين
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ ترتيب الاوامر -> استعاده الاوامر
 ✧ اضف ، مسح -> { رد }
 ✧ الردود ، مسح الردود
 ✧ اضف ، مسح -> { رد متعدد}
 ✧ الردود المتعدده
 ✧ مسح الردود المتعدده
 ✧ تاك للكل ، all
 ✧ الميديا -> امسح
 ✧ اضف رسائل + العدد { بالرد}
 ✧ اضف نقاط + العدد { بالرد }
 ✧ اضف تعديلات + العدد {بالرد}
*]]
return send(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
end
if text == 'م4' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00 '}, 
},
}
}
local TextHelp = [[*
 ✧ اوامـر الـمـنشـئ الاسـاسـي ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل ->{ منشئ }
 ✧ المنشئين ، مسح المنشئين
 ✧ رفع ، تنزيل ->{ مشرف }
 ✧ ضع لقب + اللقب -> { بالرد }
 ✧ صلاحيات المجموعة
 ✧ مسح نقاطه ، رسائله -> {بالرد} 
 ✧ تفعيل ، تعطيل -> منع التصفيه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر المنشئ المجموعة
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل -> { مدير }
 ✧ المدراء ، مسح المدراء
 ✧ تغيير ، مسح ->{ الايدي }
 ✧ تعيين ، مسح ->{ الايدي }
 ✧ اضف ، مسح -> { امر }
 ✧ الاوامر المضافه ، مسح الاوامر المضافه
 ✧ ضع التكرار -> { عدد }
 ✧ تفعيل الاوامر -> { اوامر اساسيه }
ꔹ━━━━━ꔹ𝙈𝘼ꔹ━━━━━ꔹ
 ✧ تفعيل ، تعطيل -> الاوامر التاليه :
 ✧ الردود العامه ، الطرد ، الحظر
 ✧ الرفع ، التاك ، نزلني ، ضع رتبه 
 ✧ تاك للكل ، المسح التلقائي
 ✧ ضع عدد المسح + { عدد }
*]]
return send(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
end
if text == 'م5' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙* ',"md",true)  
end
if ChannelJoin(msg) == false then  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00 '}, 
},
}
}
local TextHelp = [[*
 ✧ اوامــر مـالك الجـروب ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل ->{ مالك }
 ✧ المالكين ، مسح المالكين
 ✧ تنزيل جميع الرتب
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر المالكين 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل -> { منشئ اساسي }
 ✧ المنشئين الاساسيين،
 ✧ مسح المنشئين الاساسيين
*]]
return send(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
end
if text == 'م6' then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙* ',"md",true)  
end
if ChannelJoin(msg) == false then  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00 '}, 
},
}
}
local TextHelp = [[*
 ✧ اوامـر الـتـسـلـيـه كـالاتـي ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل -> الاوامر التاليه ↓
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ غبي 
 ✧ مطي
 ✧ اثول
 ✧ طامس
 ✧ تاج
 ✧ ملك
 ✧ ملكه
 ✧ جلب
 ✧ لوكي
 ✧ زاحف
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر التاك 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ قائمه التاج ~ المـلــوك
 ✧ المـلـكات ~ الطامسين
 ✧ الثولان ~  الجــلاب
 ✧ المطايــه ~  الصخول
 ✧ اللوكيــه ~  الاغبيـاء
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر الترفيه 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ زخرفه + النص
 ✧ مثال زخرفه ماركوس
 ✧ احسب + عمرك
 ✧ مثال احسب 2001/8/5
 ✧ معني + الاسم 
 ✧ مثال معني ماركوس
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ نسبه الحب/ الكره
 ✧ نسبه الرجوله/ الانوثه 
 ✧ نسبه الذكـــــاء/ الغباء 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الاوامــر بالـــرد  ⇣
 ✧ شنو رئيك بهذا
 ✧ شنو رئيك بهاي
 ✧ انطي هديه
 ✧ بوســه ~  بوسـني
 ✧ صيحـه ~  رزلـــه 
ꔹ━━━━━ꔹ𝙈𝘼ꔹ━━━━━ꔹ
 ✧ زواج ~ طلاك
*]]
return send(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
end
if text == 'الالعاب' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = [[*
✧ قائمــه العــاب البــوت ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ لعبة المختلف -> المختلف
 ✧ لعبة الامثله -> امثله
 ✧ لعبة العكس -> العكس
 ✧ لعبة الحزوره -> حزوره
 ✧ لعبة المعاني -> معاني
 ✧ لعبة البات -> بات
 ✧ لعبة التخمين -> خمن
 ✧ لعبه الاسرع -> الاسرع، ترتيب
 ✧ لعبة السمايلات -> سمايلات
 ✧ اسئله -> اسئله منوعه
 ✧ اسالني -> اسئله عامه متجدده
 ✧ لغز  -> الغاز الذكاء متجدده
 ✧ روليت -> الروليت بالمعرفات 
 ✧ الروليت -> الروليت بالانضمام
 ✧ رياضيات -> مسائل رياضيه
 ✧ انكليزي -> معاني الكلمات
 ✧ كت تويت ،كت -> اسئله ترفيهيه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ نقاطي -> لعرض عدد النقاط
 ✧ بيع نقاطي + { العدد }
لبيع كل نقطه مقابل {50} رساله
*]]
return send(msg_chat_id,msg_id,TextHelp,"md",false, false, false, false, reply_markup)
end
if text == "حجره" or text == "حجرة" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
baniusernamep = '✧ اختار حجره / ورقة / مقص'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '✂️', data = msg.sender_id.user_id..'/mks'},{text = '📄', data = msg.sender_id.user_id..'/orka'},{text = '🪨️', data = msg.sender_id.user_id..'/hagra'},
},
}
}
return send(msg_chat_id,msg_id,baniusernamep,"md",false, false, false, false, reply_markup)
end
if text == 'تحديث' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
print("\27[31;47m\n        ( تم تحديث ملفات البوت )        \n\27[0;34;49m\n") 
print('Chat Id -> '..msg_chat_id)
print('User Id -> '..msg.sender_id.user_id)
local Text = [[
*✧ تم تحديث الملفات*
]] 
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00'}, 
},
}
}
bot.sendText(msg_chat_id,msg_id,Text,"md",true, false, false, false, reply_markup)
dofile('MARCOS.lua')  
end

if text == 'تنظيف المشتركين' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."Num:User:Pv")   
local x = 0
for k,v in pairs(list) do  
local Get_Chat = bot.getChat(v)
local ChatAction = bot.sendChatAction(v,'Typing')
if ChatAction.MARCOSbots ~= "ok" then
x = x + 1
Redis:srem(MARCOS..'Num:User:Pv',v)
end
end
if x ~= 0 then
return send(msg_chat_id,msg_id,'* ✧ العدد الكلي { '..#list..' }\n ✧ تم العثور على { '..x..' } من المشتركين حاظرين البوت*',"md")
else
return send(msg_chat_id,msg_id,'* ✧ العدد الكلي { '..#list..' }\n ✧ لم يتم العثور على وهميين*',"md")
end
end
if text == 'تنظيف المجموعات' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."ChekBotAdd")   
local x = 0
for k,v in pairs(list) do  
local Get_Chat = bot.getChat(v)
if Get_Chat.id then
local statusMem = bot.getChatMember(Get_Chat.id,MARCOS)
if statusMem.status.MARCOSbots == "chatMemberStatusMember" then
x = x + 1
send(Get_Chat.id,0,'* ✧ البوت عضو في المجموعه سوف اغادر ويمكنك تفعيلي مره اخره *',"md")
Redis:srem(MARCOS..'ChekBotAdd',Get_Chat.id)
local keys = Redis:keys(MARCOS..'*'..Get_Chat.id)
for i = 1, #keys do
Redis:del(keys[i])
end
bot.leaveChat(Get_Chat.id)
end
else
x = x + 1
local keys = Redis:keys(MARCOS..'*'..v)
for i = 1, #keys do
Redis:del(keys[i])
end
Redis:srem(MARCOS..'ChekBotAdd',v)
bot.leaveChat(v)
end
end
if x ~= 0 then
return send(msg_chat_id,msg_id,'* ✧ العدد الكلي { '..#list..' } للمجموعات \n ✧ تم العثور على { '..x..' } مجموعات البوت ليس ادمن \n ✧ تم تعطيل المجموعه ومغادره البوت من الوهمي *',"md")
else
return send(msg_chat_id,msg_id,'* ✧ العدد الكلي { '..#list..' } للمجموعات \n ✧ لا توجد مجموعات وهميه*',"md")
end
end
if text == "سمايلات" or text == "سمايل" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
Random = {"??","🍎","🍐","??","🍋","🍉","??","🍓","🍈","🍒","🍑","🍍","🥥","🥝","🍅","🍆","🥑","🥦","🥒","🌶","🌽","🥕","🥔","🥖","🥐","🍞","🥨","🍟","??","🥚","??","??","🥩","🍗","🍖","🌭","🍔","🍠","🍕","🥪","🥙","☕️","🥤","🍶","🍺","🍻","🏀","⚽️","🏈","⚾️","🎾","🏐","🏉","🎱","🏓","🏸","🥅","🎰","🎮","🎳","🎯","🎲","🎻","🎸","🎺","🥁","🎹","🎼","🎧","🎤","🎬","🎨","🎭","🎪","🎟","🎫","🎗","🏵","🎖","🏆","🥌","🛷","??","🚌","🏎","🚓","🚑","🚚","🚛","🚜","⚔","🛡","🔮","🌡","💣"," ✧ ","📍","📓","📗","📂","📅","📪","??"," ✧ ","📭","⏰","??","🎚","☎️","📡"}
SM = Random[math.random(#Random)]
Redis:set(MARCOS.."Game:Smile"..msg.chat_id,SM)
return send(msg_chat_id,msg_id," ✧ اسرع واحد يدز هذا السمايل ? ~ {`"..SM.."`}","md",true)  
end
end

if text == "الاسرع" or text == "ترتيب" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
KlamSpeed = {"سحور","سياره","استقبال","قنفه","ايفون","بزونه","مطبخ","كرستيانو","دجاجه","مدرسه","الوان","غرفه","ثلاجه","كهوه","سفينه","العراق","محطه","طياره","رادار","منزل","مستشفى","كهرباء","تفاحه","اخطبوط","سلمون","فرنسا","برتقاله","تفاح","مطرقه","بتيته","لهانه","شباك","باص","سمكه","ذباب","تلفاز","حاسوب","انترنيت","ساحه","جسر"};
name = KlamSpeed[math.random(#KlamSpeed)]
Redis:set(MARCOS.."Game:Monotonous"..msg.chat_id,name)
name = string.gsub(name,"سحور","س ر و ح")
name = string.gsub(name,"سياره","ه ر س ي ا")
name = string.gsub(name,"استقبال","ل ب ا ت ق س ا")
name = string.gsub(name,"قنفه","ه ق ن ف")
name = string.gsub(name,"ايفون","و ن ف ا")
name = string.gsub(name,"بزونه","ز و ه ن")
name = string.gsub(name,"مطبخ","خ ب ط م")
name = string.gsub(name,"كرستيانو","س ت ا ن و ك ر ي")
name = string.gsub(name,"دجاجه","ج ج ا د ه")
name = string.gsub(name,"مدرسه","ه م د ر س")
name = string.gsub(name,"الوان","ن ا و ا ل")
name = string.gsub(name,"غرفه","غ ه ر ف")
name = string.gsub(name,"ثلاجه","ج ه ت ل ا")
name = string.gsub(name,"كهوه","ه ك ه و")
name = string.gsub(name,"سفينه","ه ن ف ي س")
name = string.gsub(name,"العراق","ق ع ا ل ر ا")
name = string.gsub(name,"محطه","ه ط م ح")
name = string.gsub(name,"طياره","ر ا ط ي ه")
name = string.gsub(name,"رادار","ر ا ر ا د")
name = string.gsub(name,"منزل","ن ز م ل")
name = string.gsub(name,"مستشفى","ى ش س ف ت م")
name = string.gsub(name,"كهرباء","ر ب ك ه ا ء")
name = string.gsub(name,"تفاحه","ح ه ا ت ف")
name = string.gsub(name,"اخطبوط","ط ب و ا خ ط")
name = string.gsub(name,"سلمون","ن م و ل س")
name = string.gsub(name,"فرنسا","ن ف ر س ا")
name = string.gsub(name,"برتقاله","ر ت ق ب ا ه ل")
name = string.gsub(name,"تفاح","ح ف ا ت")
name = string.gsub(name,"مطرقه","ه ط م ر ق")
name = string.gsub(name,"بتيته","ب ت ت ي ه")
name = string.gsub(name,"لهانه","ه ن ل ه ل")
name = string.gsub(name,"شباك","ب ش ا ك")
name = string.gsub(name,"باص","ص ا ب")
name = string.gsub(name,"سمكه","ك س م ه")
name = string.gsub(name,"ذباب","ب ا ب ذ")
name = string.gsub(name,"تلفاز","ت ف ل ز ا")
name = string.gsub(name,"حاسوب","س ا ح و ب")
name = string.gsub(name,"انترنيت","ا ت ن ر ن ي ت")
name = string.gsub(name,"ساحه","ح ا ه س")
name = string.gsub(name,"جسر","ر ج س")
return send(msg_chat_id,msg_id," ✧ اسرع واحد يرتبها ~ {"..name.."}","md",true)  
end
end
if text == "حزوره" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
Hzora = {"الجرس","عقرب الساعه","السمك","المطر","5","الكتاب","البسمار","7","الكعبه","بيت الشعر","لهانه","انا","امي","الابره","الساعه","22","غلط","كم الساعه","البيتنجان","البيض","المرايه","الضوء","الهواء","الضل","العمر","القلم","المشط","الحفره","البحر","الثلج","الاسفنج","الصوت","بلم"};
name = Hzora[math.random(#Hzora)]
Redis:set(MARCOS.."Game:Riddles"..msg.chat_id,name)
name = string.gsub(name,"الجرس","شيئ اذا لمسته صرخ ما هوه ؟")
name = string.gsub(name,"عقرب الساعه","اخوان لا يستطيعان تمضيه اكثر من دقيقه معا فما هما ؟")
name = string.gsub(name,"السمك","ما هو الحيوان الذي لم يصعد الى سفينة نوح عليه السلام ؟")
name = string.gsub(name,"المطر","شيئ يسقط على رأسك من الاعلى ولا يجرحك فما هو ؟")
name = string.gsub(name,"5","ما العدد الذي اذا ضربته بنفسه واضفت عليه 5 يصبح ثلاثين ")
name = string.gsub(name,"الكتاب","ما الشيئ الذي له اوراق وليس له جذور ؟")
name = string.gsub(name,"البسمار","ما هو الشيئ الذي لا يمشي الا بالضرب ؟")
name = string.gsub(name,"7","عائله مؤلفه من 6 بنات واخ لكل منهن .فكم عدد افراد العائله ")
name = string.gsub(name,"الكعبه","ما هو الشيئ الموجود وسط مكة ؟")
name = string.gsub(name,"بيت الشعر","ما هو البيت الذي ليس فيه ابواب ولا نوافذ ؟ ")
name = string.gsub(name,"لهانه","وحده حلوه ومغروره تلبس مية تنوره .من هيه ؟ ")
name = string.gsub(name,"انا","ابن امك وابن ابيك وليس باختك ولا باخيك فمن يكون ؟")
name = string.gsub(name,"امي","اخت خالك وليست خالتك من تكون ؟ ")
name = string.gsub(name,"الابره","ما هو الشيئ الذي كلما خطا خطوه فقد شيئا من ذيله ؟ ")
name = string.gsub(name,"الساعه","ما هو الشيئ الذي يقول الصدق ولكنه اذا جاع كذب ؟")
name = string.gsub(name,"22","كم مره ينطبق عقربا الساعه على بعضهما في اليوم الواحد ")
name = string.gsub(name,"غلط","ما هي الكلمه الوحيده التي تلفض غلط دائما ؟ ")
name = string.gsub(name,"كم الساعه","ما هو السؤال الذي تختلف اجابته دائما ؟")
name = string.gsub(name,"البيتنجان","جسم اسود وقلب ابيض وراس اخظر فما هو ؟")
name = string.gsub(name,"البيض","ماهو الشيئ الذي اسمه على لونه ؟")
name = string.gsub(name,"المرايه","ارى كل شيئ من دون عيون من اكون ؟ ")
name = string.gsub(name,"الضوء","ما هو الشيئ الذي يخترق الزجاج ولا يكسره ؟")
name = string.gsub(name,"الهواء","ما هو الشيئ الذي يسير امامك ولا تراه ؟")
name = string.gsub(name,"الضل","ما هو الشيئ الذي يلاحقك اينما تذهب ؟ ")
name = string.gsub(name,"العمر","ما هو الشيء الذي كلما طال قصر ؟ ")
name = string.gsub(name,"القلم","ما هو الشيئ الذي يكتب ولا يقرأ ؟")
name = string.gsub(name,"المشط","له أسنان ولا يعض ما هو ؟ ")
name = string.gsub(name,"الحفره","ما هو الشيئ اذا أخذنا منه ازداد وكبر ؟")
name = string.gsub(name,"البحر","ما هو الشيئ الذي يرفع اثقال ولا يقدر يرفع مسمار ؟")
name = string.gsub(name,"الثلج","انا ابن الماء فان تركوني في الماء مت فمن انا ؟")
name = string.gsub(name,"الاسفنج","كلي ثقوب ومع ذالك احفض الماء فمن اكون ؟")
name = string.gsub(name,"الصوت","اسير بلا رجلين ولا ادخل الا بالاذنين فمن انا ؟")
name = string.gsub(name,"بلم","حامل ومحمول نصف ناشف ونصف مبلول فمن اكون ؟ ")
return send(msg_chat_id,msg_id," ✧ اسرع واحد يحل الحزوره ↓\n {"..name.."}","md",true)  
end
end
if text == "العواصم" then
mthal = {"مقديشو","الدوحه","بغداد","الرياض","الحبل","بيروت","شقره","القاهره","دمشق","صنعاء","الخرطوم","عمان","ابو ضبي","طرابلس الغرب","الرباط","القدس","تونس","مسقط","الكويت","المنامه","الجزائر",};
name = mthal[math.random(#mthal)]
Redis:set(MARCOS.."Game:aoismm"..msg.chat_id,name)
name = string.gsub(name,"بغداد","ماهي عاصمه العراق ؟")
name = string.gsub(name,"الرياض","ماهي عاصمه السعوديه ؟")
name = string.gsub(name,"بيروت","ماهي عاصمه لبنان ؟")
name = string.gsub(name,"القاهره","ماهي عاصمه مصر ؟")
name = string.gsub(name,"دمشق","ماهي عاصمه سوريا ؟")
name = string.gsub(name,"صنعاء","ماهي عاصمه اليمن ؟")
name = string.gsub(name,"الخرطوم","ماهي عاصمه السودان ؟")
name = string.gsub(name,"عمان","ماهي عاصمه الأردن ؟")
name = string.gsub(name,"ابو ضبي","ماهي عاصمه الأمارات ؟")
name = string.gsub(name,"طرابلس الغرب","ماهي عاصمه ليبيا ؟")
name = string.gsub(name,"الرباط","ماهي عاصمه المغرب ؟")
name = string.gsub(name,"القدس","ماهي عاصمه فلسطين ؟")
name = string.gsub(name,"تونس","ماهي عاصمه تونس ؟")
name = string.gsub(name,"مسقط","ماهي عاصمه عمان ؟")
name = string.gsub(name,"الكويت","ماهي عاصمه الكويت ؟")
name = string.gsub(name,"المنامه","ماهي عاصمه البحرين ؟")
name = string.gsub(name,"الجزائر","ماهي عاصمه الجزائر ؟")
name = string.gsub(name,"الدوحه","ماهي عاصمه القطر ؟")
name = string.gsub(name,"مقديشو","ماهي عاصمه الصومال ؟")
return send(msg_chat_id,msg_id,"  ~ 〘 "..name.." 〙","md",true)  
end


if text == "ارقام" then
Maany_Rand = {"697045","1008761","869645","1078944","0088841","661199","998861144","5586911","984682","1078944","97945","219745","58662","197985","975465"}
name = Maany_Rand[math.random(#Maany_Rand)]
Redis:set(MARCOS.."Game:arkkamm"..msg.chat_id,name)
name = string.gsub(name,"197985","اسرع واحد يكتب 197985 ؟")
name = string.gsub(name,"769475","اسرع واحد يكتب 769475 ؟")
name = string.gsub(name,"975465","اسرع واحد يكتب 975465 ؟")
name = string.gsub(name,"984682","اسرع واحد يكتب 984682 ؟")
name = string.gsub(name,"58662","اسرع واحد يكتب 58662 ؟")
name = string.gsub(name,"219745","اسرع واحد يكتب 219745 ؟")
name = string.gsub(name,"97945","اسرع واحد يكتب 97945 ؟")
name = string.gsub(name,"697045","اسرع واحد يكتب 697045 ؟")
name = string.gsub(name,"1008761","اسرع واحد يكتب 1008761 ؟")
name = string.gsub(name,"869645","اسرع واحد يكتب 869645 ؟")
name = string.gsub(name,"1078944","اسرع واحد يكتب 1078944 ؟")
name = string.gsub(name,"0088841","اسرع واحد يكتب 0088841 ؟")
name = string.gsub(name,"661199","اسرع واحد يكتب 661199 ؟")
name = string.gsub(name,"998861144","اسرع واحد يكتب 998861144 ؟")
name = string.gsub(name,"5586911","اسرع واحد يكتب 5586911 ؟")
return send(msg_chat_id,msg_id,"~ 〘 "..name.." 〙","md",true)  
end

if text and Redis:get(MARCOS.."photo:test"..msg.sender_id.user_id) then
local phid = Redis:get(MARCOS.."photo:test"..msg.sender_id.user_id)
Redis:set(MARCOS.."get:photo:answer"..phid,text)
send(msg.chat_id,msg.id,"✧ تم حفظ جواب الصوره بنجاح")
Redis:del(MARCOS.."photo:test"..msg.sender_id.user_id)
end
if Redis:get(MARCOS.."add:photo"..msg.sender_id.user_id..":"..msg.chat_id) then
if msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
phid = msg.content.photo.sizes[1].photo.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
phid = msg.content.photo.sizes[2].photo.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
phid = msg.content.photo.sizes[3].photo.id
end
Redis:del(MARCOS.."add:photo"..msg.sender_id.user_id..":"..msg.chat_id)
Redis:sadd(MARCOS.."photos:game",phid)
Redis:set(MARCOS.."get:photo"..phid,idPhoto)
Redis:set(MARCOS.."photo:test"..msg.sender_id.user_id,phid)
send(msg.chat_id,msg.id,"✧ تم حفظ الصوره ارسل الان جواب الصوره")
end
end
if text == "صور" then
local list = Redis:smembers(MARCOS.."photos:game")
if #list == 0 then
return send(msg.chat_id,msg.id,"✧ لا توجد صور مضافه")
end
local phid = list[math.random(#list)]
local getPhoto = Redis:get(MARCOS.."get:photo"..phid)
local getAnswer = Redis:get(MARCOS.."get:photo:answer"..phid)
Redis:set(MARCOS..msg.chat_id.."answers:photo",getAnswer)
bot.sendPhoto(msg.chat_id, msg.id, getPhoto,"✧ اسرع واحد يرسل اسم من في الصوره")
end
if text == "اضف صور" or text == "اضف صوره" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n*✧ هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
Redis:set(MARCOS.."add:photo"..msg.sender_id.user_id..":"..msg.chat_id,true)
return send(msg.chat_id,msg.id,"✧ ارسل الصوره الان ")
end
if text == "مسح الصور" then
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n*✧ هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
local list = Redis:smembers(MARCOS.."photos:game")
if #list == 0 then
return send(msg.chat_id,msg.id,"✧ لا توجد صور مضافه")
end
for k,v in pairs(list) do
Redis:del(MARCOS.."get:photo:answer"..v)
Redis:del(MARCOS.."get:photo"..v)
end
Redis:del(MARCOS.."photos:game")
send(msg.chat_id,msg.id,"✧ تم مسح الصور المضافه")
end
if text == "مسح صوره" and  tonumber(msg.reply_to_message_id) > 0 then
if not msg.Devss then 
return send(msg_chat_id,msg_id,'\n*✧ هذا الامر يخص { '..Controller_Num(2)..' }* ',"md",true)  
end
local data = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
if data.content.photo then
if data.content.photo.sizes[1].photo.remote.id then
phid = data.content.photo.sizes[1].photo.id
elseif data.content.photo.sizes[2].photo.remote.id then
phid = data.content.photo.sizes[2].photo.id
elseif data.content.photo.sizes[3].photo.remote.id then
phid = data.content.photo.sizes[3].photo.id
end
local getAnswer = Redis:get(MARCOS.."get:photo:answer"..phid)
Redis:srem(MARCOS.."photos:game",phid)
send(msg_chat_id,msg_id,'✧ تم حذف *['..getAnswer..']* من الصور بنجاح',"md")
Redis:del(MARCOS.."get:photo"..phid)
Redis:del(MARCOS.."get:photo:answer"..phid)
end
end
if text == "معاني" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
Redis:del(MARCOS.."Set:Maany"..msg.chat_id)
Maany_Rand = {"قرد","دجاجه","بطريق","ضفدع","بومه","نحله","ديك","جمل","بقره","دولفين","تمساح","قرش","نمر","اخطبوط","سمكه","خفاش","اسد","فأر","ذئب","فراشه","عقرب","زرافه","قنفذ","تفاحه","باذنجان"}
name = Maany_Rand[math.random(#Maany_Rand)]
Redis:set(MARCOS.."Game:Meaningof"..msg.chat_id,name)
name = string.gsub(name,"قرد","🐒")
name = string.gsub(name,"دجاجه","🐔")
name = string.gsub(name,"بطريق","🐧")
name = string.gsub(name,"ضفدع","🐸")
name = string.gsub(name,"بومه","🦉")
name = string.gsub(name,"نحله","🐝")
name = string.gsub(name,"ديك","🐓")
name = string.gsub(name,"جمل","🐫")
name = string.gsub(name,"بقره","🐄")
name = string.gsub(name,"دولفين","🐬")
name = string.gsub(name,"تمساح","🐊")
name = string.gsub(name,"قرش","🦈")
name = string.gsub(name,"نمر","🐅")
name = string.gsub(name,"اخطبوط","🐙")
name = string.gsub(name,"سمكه","🐟")
name = string.gsub(name,"خفاش","🦇")
name = string.gsub(name,"اسد","🦁")
name = string.gsub(name,"فأر","🐭")
name = string.gsub(name,"ذئب","🐺")
name = string.gsub(name,"فراشه","🦋")
name = string.gsub(name,"عقرب","🦂")
name = string.gsub(name,"زرافه","🦒")
name = string.gsub(name,"قنفذ","🦔")
name = string.gsub(name,"تفاحه","🍎")
name = string.gsub(name,"باذنجان","🍆")
return send(msg_chat_id,msg_id," ✧ اسرع واحد يدز معنى السمايل ~ {"..name.."}","md",true)  
end
end
if text == "العكس" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
Redis:del(MARCOS.."Set:Aks"..msg.chat_id)
katu = {"باي","فهمت","موزين","اسمعك","احبك","موحلو","نضيف","حاره","ناصي","جوه","سريع","ونسه","طويل","سمين","ضعيف","قصير","شجاع","رحت","عدل","نشيط","شبعان","موعطشان","خوش ولد","اني","هادئ"}
name = katu[math.random(#katu)]
Redis:set(MARCOS.."Game:Reflection"..msg.chat_id,name)
name = string.gsub(name,"باي","هلو")
name = string.gsub(name,"فهمت","مافهمت")
name = string.gsub(name,"موزين","زين")
name = string.gsub(name,"اسمعك","ماسمعك")
name = string.gsub(name,"احبك","ماحبك")
name = string.gsub(name,"موحلو","حلو")
name = string.gsub(name,"نضيف","وصخ")
name = string.gsub(name,"حاره","بارده")
name = string.gsub(name,"ناصي","عالي")
name = string.gsub(name,"جوه","فوك")
name = string.gsub(name,"سريع","بطيء")
name = string.gsub(name,"ونسه","ضوجه")
name = string.gsub(name,"طويل","قزم")
name = string.gsub(name,"سمين","ضعيف")
name = string.gsub(name,"ضعيف","قوي")
name = string.gsub(name,"قصير","طويل")
name = string.gsub(name,"شجاع","جبان")
name = string.gsub(name,"رحت","اجيت")
name = string.gsub(name,"عدل","ميت")
name = string.gsub(name,"نشيط","كسول")
name = string.gsub(name,"شبعان","جوعان")
name = string.gsub(name,"موعطشان","عطشان")
name = string.gsub(name,"خوش ولد","موخوش ولد")
name = string.gsub(name,"اني","مطي")
name = string.gsub(name,"هادئ","عصبي")
return send(msg_chat_id,msg_id," ✧ اسرع واحد يدز العكس ~ {"..name.."}","md",true)  
end
end
if text == "بات" or text == "محيبس" then   
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then 
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '〘 ❶ -› 👊 〙', data = '/Mahibes1'}, {text = '〘 ❷ -› 👊 〙', data = '/Mahibes2'}, 
},
{
{text = '〘 ❸ -› 👊 〙', data = '/Mahibes3'}, {text = '〘 ❹ -› 👊 〙', data = '/Mahibes4'}, 
},
{
{text = '〘 ❺ -› 👊 〙', data = '/Mahibes5'}, {text = '〘 ❻ -› 👊 〙', data = '/Mahibes6'}, 
},
}
}
return send(msg_chat_id,msg_id, [[*
╗• لعبه المحيبس هي لعبة الحظ ✧
╣• جرب حظك ويه البوت واتونس ✧
╣• كل ما عليك هوا الضغط على ✧
╝• احدى العضمات في الازرار ✧
*]],"md",false, false, false, false, reply_markup)
end
end
if text == "خمن" or text == "تخمين" then   
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
Num = math.random(1,20)
Redis:set(MARCOS.."Game:Estimate"..msg.chat_id..msg.sender_id.user_id,Num)  
return send(msg_chat_id,msg_id,"\n ✧ اهلا بك عزيزي في لعبة التخمين :\nٴ━━━━━━━━━━\n".." ✧ ملاحظه لديك { 3 } محاولات فقط فكر قبل ارسال تخمينك \n\n".." ✧ سيتم تخمين عدد ما بين ال {1 و 20} اذا تعتقد انك تستطيع الفوز جرب واللعب الان ؟ ","md",true)  
end
end

if text == 'اسئله' then   
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
t1 = [[
ماهو اطول نهر في العالم 
1- النيل  
2- الفرات 
3- نهر الكونغو

 ✧ ارسل  الجواب الصحيح فقط
]]
t2 = [[
ماعدد عظام الوجه؟
1- 15
2- 13
3- 14 

 ✧ ارسل  الجواب الصحيح فقط
]]
t3 =[[
كراسي بيضاء وجدران ورديه اذا اغلقته اصبح ظلام  فمن اكون؟

1- الفم 
2- الاذن
3- الثلاجه

 ✧ ارسل  الجواب الصحيح فقط
]]
t4 =[[
كم جزء تحتوي مسلسل وادي الذئاب؟

1- 7
2- 15
3- 11

 ✧ ارسل  الجواب الصحيح فقط
]]
t5 =[[
كم جزء يحتوي القران الكريم؟

1- 60
2- 70
3- 30 

 ✧ ارسل  الجواب الصحيح فقط
]]
t6 =[[
من هوه اغنى رئيس في العالم؟

1- ترامب
2- اوباما
3- بوتين  

 ✧ ارسل  الجواب الصحيح فقط
]]

t7 =[[
من هوه مؤسس شركه ابل العالميه 

1-لاري بايج 
2- بيا غايتز
3- ستيف جوبر

 ✧ ارسل  الجواب الصحيح فقط
]]
t8 =[[
ماهي عاصمه فرنسا؟

1- باريس 
2- لوين 
3- موسكو 

 ✧ ارسل  الجواب الصحيح فقط
]]
t9 =[[
ماعدد دول العربيه التي توجد في افريقيا 

1- 10 
2- 17
3- 9

 ✧ ارسل  الجواب الصحيح فقط
]]
t11 =[[
ماهو الحيوان الذي يحمل 50 فوق وزنه؟
1-الفيل
2- النمل  
3- الثور

 ✧ ارسل  الجواب الصحيح فقط
]]
t12 =[[
ماذا يوجد بيني وبينك؟  
1- الضل
2- الاخلاق
3-حرف الواو  

 ✧ ارسل  الجواب الصحيح فقط
]]
t13 =[[
ماهو الشيء النبات ينبت للانسان بلا بذر؟
1-الاضافر 
2- الاسنان
3- الشعر

 ✧ ارسل  الجواب الصحيح فقط
]]
t14 =[[
م̷ـــِْن هو اول الرسول الى الارض؟
1- ادم
2- نوح
3-ابراهيم 

 ✧ ارسل  الجواب الصحيح فقط
]]
t15 =[[
ما هو الشّيء الذي يستطيع المشي بدون أرجل والبكاء بدون أعين؟
1- سحاب
2- بئر
3- نهر

 ✧ ارسل  الجواب الصحيح فقط
]]
t16 =[[
ما الشيء الذي نمتلكه , لكنّ غيرنا يستعمله أكثر منّا؟
1- العمر
2- ساعه
3- الاسم

 ✧ ارسل  الجواب الصحيح فقط
]]
t17 =[[
اصفر اللون سارق عقول اهل الكون وحارمهم لذيذ النوم
1- نحاس
2- الماس
3- ذهب

 ✧ ارسل  الجواب الصحيح فقط
]]
t18 =[[
في الليل ثلاثة لكنه في النهار واحده فما هو
 1- حرف الباء
 2- حرف الام 
3- حرف الراء

 ✧ ارسل  الجواب الصحيح فقط
]]
t19 =[[
على قدر اصل العزم تأتي؟
1- العزائم 
2- المكارم
3- المبائب

 ✧ ارسل  الجواب الصحيح فقط
]]

t20 =[[
ماهي جمع كلمه انسه ؟
1- سيدات
2- انسات 
3- قوانص

 ✧ ارسل  الجواب الصحيح فقط
]]
t21 =[[
اله اتسعلمت قديما في الحروب؟
1- الصاروخ
2- المسدس
3- المنجنيق 

 ✧ ارسل  الجواب الصحيح فقط
]]
t22 =[[
تقع لبنان في قاره؟
1- افريقيا 
2- اسيا  
3- امركيا الشماليه

 ✧ ارسل  الجواب الصحيح فقط
]]

t23 =[[
1- ماهو الحيوان الذي يلقب بملك الغابه؟
1-الفيل
2- الاسد 
3- النمر

 ✧ ارسل  الجواب الصحيح فقط
]]
t24 =[[
كم صفرا للمليون ؟
1- 4 
2- 3
3-6

 ✧ ارسل  الجواب الصحيح فقط
]]
t25 =[[
ما اسم صغير الحصان؟
1- مهر  
2- جرو
3- عجل

 ✧ ارسل  الجواب الصحيح فقط
]]
t26 =[[
ما الحيوان الذي ينام واحدى عينه مفتوحه؟

1- القرش
2- الدلفين 
3- الثعلب

 ✧ ارسل  الجواب الصحيح فقط
]]
t27 =[[
ماهي القاره التي تلقب بالقاره العجوز؟

1- امريكا الشماليه 
2- امريكا الجنوبيه
3- افريقيا 

 ✧ ارسل  الجواب الصحيح فقط
]]
t28 =[[
ما اسم المعدن الموجود فيي الحاله السائله 

1- النحاس 
2- الحديد
3- الزئبق 
 
 ✧ ارسل  الجواب الصحيح فقط
]]
t29 =[[
ماهي عاصمه انجلترا؟
1- لندن  
2- لفرسول
3- تركيا

 ✧ ارسل  الجواب الصحيح فقط
]]
t30 =[[
ماهو الشئ الذي برأسه سبع فتحات

1- الهاتف
2- التلفاز
3- الانسان 

 ✧ ارسل  الجواب الصحيح فقط
]]
t31 =[[
ماهي عاصمه اليابان ؟
1- بانقول
2- نيو دلهي
3- طوكيو 

 ✧ ارسل  الجواب الصحيح فقط
]]
t32 =[[
من هي زوجه الرسول الاكبر منه سنآ؟

1- حفضه
2- زينب 
3- خديجه 

 ✧ ارسل  الجواب الصحيح فقط
]]
mahmoud = {t16,t17,t18,t19,t20,t21,t22,t23,t24,t25,t26,t27,t28,t29,t30,t31,t32,t1,t2,t3,t4,t5,t6,t7,t8,t9,t11,t12,t13,t14,t15}
local SENDTEXT = mahmoud[math.random(#mahmoud)]
if SENDTEXT:find('النيل') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'النيل') 
elseif SENDTEXT:find('14') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'14') 
elseif SENDTEXT:find('الفم') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'الفم') 
elseif SENDTEXT:find('11') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'11') 
elseif SENDTEXT:find('30') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'30') 
elseif SENDTEXT:find('بوتين') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'بوتين') 
elseif SENDTEXT:find('ستيف جوبر') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'ستيف جوبر') 
elseif SENDTEXT:find('باريس') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'باريس') 
elseif SENDTEXT:find('10') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'10') 
elseif SENDTEXT:find('النمل') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'النمل') 
elseif SENDTEXT:find('حرف الواو') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'حرف الواو') 
elseif SENDTEXT:find('الشعر') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'الشعر') 
elseif SENDTEXT:find('ابراهيم') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'ابراهيم') 
elseif SENDTEXT:find('سحاب') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'سحاب') 
elseif SENDTEXT:find('الاسم') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'الاسم') 
elseif SENDTEXT:find('ذهب') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'ذهب') 
elseif SENDTEXT:find('حرف الام') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'حرف الام') 
elseif SENDTEXT:find('العزائم') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'العزائم') 
elseif SENDTEXT:find('انسات') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'انسات') 
elseif SENDTEXT:find('المنجنيق') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'المنجنيق') 
elseif SENDTEXT:find('اسيا') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'اسيا') 
elseif SENDTEXT:find('الاسد') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'الاسد') 
elseif SENDTEXT:find('6') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'6') 
elseif SENDTEXT:find('مهر') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'مهر') 
elseif SENDTEXT:find('الدلفين') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'الدلفين') 
elseif SENDTEXT:find('اوروبا') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'اوروبا') 
elseif SENDTEXT:find('الزئبق') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'الزئبق') 
elseif SENDTEXT:find('لندن') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'لندن') 
elseif SENDTEXT:find('الانسان') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'الانسان') 
elseif SENDTEXT:find('طوكيو') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'طوكيو') 
elseif SENDTEXT:find('خديجه') then
Redis:set(MARCOS.."GAME:CHER"..msg.chat_id,'خديجه') 
end
send(msg.chat_id,msg.id,SENDTEXT)     
return false  
end
end
if Redis:get(MARCOS.."GAME:CHER"..msg.chat_id) and (text == Redis:get(MARCOS.."GAME:CHER"..msg.chat_id)) then  
if text then
send(msg.chat_id,msg.id,'* ✧ احسنت اجابتك صحيحه ꪤ*',"md")     
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
Redis:del(MARCOS.."GAME:CHER"..msg.chat_id)
elseif text == 'الفيل' or text == 'الثور' or text == 'الحصان' or text == '7' or text == '9' or text == '8' or text == 'لوين' or text == 'موسكو' or text == 'مانكو' or text == '20' or text == '30' or text == '28' or text == 'ترامب' or text == 'اوباما' or text == 'كيم جونغ' or text == '50' or text == '70' or text == '40' or text == '7' or text == '3' or text == '10' or text == '4' or text == 'الاذن' or text == 'الثلاجه' or text == 'الغرفه' or text == '15' or text == '17' or text == '25' or text == 'الفرات' or text == 'نهر الكونغو' or text == 'المسيبي' or text == 'بيا بايج' or text == 'لاري بيج' or text == 'بيا مارك زوكيربرج' or text == 'الفيل' or text == 'النمر' or text == 'الفهد' or text == 'بانقول' or text == 'نيو دلهي' or text == 'بيكن' or text == 'الهاتف' or text == 'التلفاز' or text == 'المذياع' or text == 'لفرسول' or text == 'تركيا' or text == 'بغداد' or text == 'النحاس' or text == 'الحديد' or text == 'الفضه' or text == 'امريكا الشماليه' or text == 'امريكا الجنوبيه' or text == 'افريقيا' or text == 'القرش' or text == 'الثعلب' or text == 'الكلب' or text == 'للجرو' or text == 'العجل' or text == 'الحمار' or text == '3' or text == '5' or text == '6' or text == 'اوربا' or text == 'افريقيا' or text == 'امريكا الجنوبيه' or text == 'افريقيا' or text == 'امريكا الشماليه' or text == 'اوربا' or text == 'الصاروخ' or text == 'المسدس' or text == 'الطائرات' or text == 'سيدات' or text == 'قوانص' or text == 'عوانس' or text == 'المكارم' or text == 'المبائم' or text == 'المعازم' or text == 'حرف الغاء' or text == 'حرف الواو' or text == 'حرف النون' or text == 'نحاس' or text == 'الماس' or text == 'حديد' or text == 'العمر' or text == 'ساعه' or text == 'الحذاء' or text == 'بئر' or text == 'نهر' or text == 'شلال' or text == 'ادم' or text == 'نوح' or text == 'عيسئ' or text == 'الاضافر' or text == 'الاسنان' or text == 'الدموع' or text == 'الاخلاق' or text == 'الضل' or text == 'حرف النون'  then
local list = {'10' , 'براسي' , 'النمل' , '32' , 'بوتين' , '30' , '11' , 'الفم' , '14' , 'النيل' , 'ستيف جوبر' , 'خديجه' , 'الاسد' , 'طوكيو' , 'الانسان' , 'لندن' , 'الزئبق' , 'اورباالدولفين' , 'المهر' , '4' , 'اسيا' , 'اسيا' , 'المنجنيق' , 'انسات' , 'العزائم' , 'حرف الام' , 'ذهب' , 'الاسم' , 'سحاب' , 'ابراهيم' , 'الشعر' , 'حرف الواو'}
for k, v in pairs(list) do 
if text ~= v then
Redis:del(MARCOS.."GAME:CHER"..msg.chat_id)
send(msg.chat_id,msg.id,' ✧ اجابتك خاطئه للاسف ,')     
return false  
end
end
end
end
if text == 'رياضيات' then
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
xxx = {'9','46','2','9','5','4','25','10','17','15','39','5','16',};
name = xxx[math.random(#xxx)]
print(name)
Redis:set(MARCOS..'bot:bkbk6'..msg.chat_id,name)
name = string.gsub(name,'9','7 + 2 = ?') name = string.gsub(name,'46','41 + 5 = ?')
name = string.gsub(name,'2','5 - 3 = ?') name = string.gsub(name,'9','5 + 2 + 2 = ?')
name = string.gsub(name,'5','8 - 3 = ?') name = string.gsub(name,'4','40 ÷ 10 = ?')
name = string.gsub(name,'25','30 - 5 = ?') name = string.gsub(name,'10','100 ÷ 10 = ?')
name = string.gsub(name,'17','10 + 5 + 2 = ?') name = string.gsub(name,'15','25 - 10 = ?')
name = string.gsub(name,'39','44 - 5 = ?') name = string.gsub(name,'5','12 + 1 - 8 = ?') name = string.gsub(name,'16','16 + 16 - 16 = ?')
send(msg_chat_id,msg_id,' ✧ اكمل المعادله ،\n - {'..name..'} .')     
end 
end
if text == "اعلام" or text == "اعلام ودول" or text == "اعلام و دول" or text == "دول" then
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
Redis:del(MARCOS.."Set:Country"..msg.chat_id)
Country_Rand = {"مصر","العراق","السعوديه","المانيا","تونس","الجزائر","فلسطين","اليمن","المغرب","البحرين","فرنسا","سويسرا","تركيا","انجلترا","الولايات المتحده","كندا","الكويت","ليبيا","السودان","سوريا"}
name = Country_Rand[math.random(#Country_Rand)]
Redis:set(MARCOS.."Game:Countrygof"..msg.chat_id,name)
name = string.gsub(name,"مصر","🇪🇬")
name = string.gsub(name,"العراق","🇮🇶")
name = string.gsub(name,"السعوديه","🇸🇦")
name = string.gsub(name,"المانيا","🇩🇪")
name = string.gsub(name,"تونس","🇹🇳")
name = string.gsub(name,"الجزائر","🇩🇿")
name = string.gsub(name,"فلسطين","🇵🇸")
name = string.gsub(name,"اليمن","🇾🇪")
name = string.gsub(name,"المغرب","🇲🇦")
name = string.gsub(name,"البحرين","🇧🇭")
name = string.gsub(name,"فرنسا","🇫🇷")
name = string.gsub(name,"سويسرا","🇨🇭")
name = string.gsub(name,"انجلترا","🇬🇧")
name = string.gsub(name,"تركيا","🇹🇷")
name = string.gsub(name,"الولايات المتحده","🇱🇷")
name = string.gsub(name,"كندا","🇨🇦")
name = string.gsub(name,"الكويت","🇰🇼")
name = string.gsub(name,"ليبيا","🇱🇾")
name = string.gsub(name,"السودان","🇸🇩")
name = string.gsub(name,"سوريا","🇸🇾")
return send(msg_chat_id,msg_id," ✧  اسرع واحد يرسل اسم الدولة ~ {"..name.."}","md",true)  
end
end

if text == 'انكليزي' then
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
yyy = {'معلومات','قنوات','مجموعات','كتاب','تفاحه','سدني','نقود','اعلم','ذئب','تمساح','ذكي','شاطئ','غبي',};
name = yyy[math.random(#yyy)]
Redis:set(MARCOS..'bot:bkbk7'..msg.chat_id,name)
name = string.gsub(name,'ذئب','Wolf') name = string.gsub(name,'معلومات','Information')
name = string.gsub(name,'قنوات','Channels') name = string.gsub(name,'مجموعات','Groups')
name = string.gsub(name,'كتاب','Book') name = string.gsub(name,'تفاحه','Apple')
name = string.gsub(name,'نقود','money') name = string.gsub(name,'اعلم','I know')
name = string.gsub(name,'تمساح','crocodile') name = string.gsub(name,'شاطئ','Beach')
name = string.gsub(name,'غبي','Stupid') name = string.gsub(name,'صداقه','Friendchip')
name = string.gsub(name,'ذكي','Smart') 
send(msg_chat_id,msg_id,' ✧ ما معنى كلمه {'..name..'} ، ')     
end
end
if text == 'روليت' then
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
Redis:del(MARCOS..":Number_Add:"..msg.chat_id..msg.sender_id.user_id) 
Redis:del(MARCOS..':List_Rolet:'..msg.chat_id)  
Redis:setex(MARCOS..":Start_Rolet:"..msg.chat_id..msg.sender_id.user_id,3600,true)  
local ban = bot.getUser(msg.sender_id.user_id)
local Name = '['..ban.first_name..'](tg://user?id='..ban.id..')' or 'لا يوجد اسم'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00'},},
}
}
return send(msg_chat_id,msg_id,"*مرحبا ->* "..Name.." 👋\n* ✧ ارسل عدد اللاعبين للروليت*","md",false ,false ,false ,false ,reply_markup) 
end
end
if text == 'نعم' and Redis:get(MARCOS..":Witting_StartGame:"..msg.chat_id..msg.sender_id.user_id) then
local list = Redis:smembers(MARCOS..':List_Rolet:'..msg.chat_id) 
if #list == 1 then 
return send(msg_chat_id,msg_id," ✧ لم يكتمل العدد الكلي للاعبين .!؟" )
elseif #list == 0 then 
return send(msg_chat_id,msg_id," ✧ عذرا لم تقوم باضافه اي لاعب .؟!" )
end 
local UserName = list[math.random(#list)]
local data = bot.searchPublicChat(UserName)
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 5)  
Redis:del(MARCOS..':List_Rolet:'..msg.chat_id) 
Redis:del(MARCOS..":Witting_StartGame:"..msg.chat_id..msg.sender_id.user_id)
return send(msg_chat_id,msg_id,' ✧ تم اختيار الشخص الاتي\n ✧ صاحب الحظ〘 '..UserName..' 〙\n ✧ ربحت معنا 5 نقاط' )
end
if text == 'الاعبين' then
local list = Redis:smembers(MARCOS..':List_Rolet:'..msg.chat_id) 
local Text = '\n*• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*\n' 
if #list == 0 then 
return send(msg_chat_id,msg_id, ' ✧ لا يوجد لاعبين هنا ' )
end 
for k, v in pairs(list) do 
Text = Text..k.." ✧ -> [" ..v.."] »\n"  
end 
return Text
end
if text and text:match("^(%d+)$") and Redis:get(MARCOS..":Start_Rolet:"..msg.chat_id..msg.sender_id.user_id) then  --// استقبال اللعبه الدمبله
if text == "1" then
Text = "✧ لا استطيع بدء اللعبه بلاعب واحد فقط\n"
else
Redis:set(MARCOS..":Number_Add:"..msg.chat_id..msg.sender_id.user_id,text)  
Text = ' ✧ تم بدء تسجيل اللسته \n ✧ يرجى ارسال المعرفات \n ✧ الفائز يحصل على (5) مجوهره\n ✧ عدد الاعبين المطلوبه〘 '..text..' 〙لاعب 🎮'
end
Redis:del(MARCOS..":Start_Rolet:"..msg.chat_id..msg.sender_id.user_id)  
return send(msg_chat_id,msg_id,Text)    
end
if text and text:match('^(@[%a%d_]+)$') and Redis:get(MARCOS..":Number_Add:"..msg.chat_id..msg.sender_id.user_id) then    --// استقبال الاسماء
if Redis:sismember(MARCOS..':List_Rolet:'..msg.chat_id,text) then
return send(msg_chat_id,msg_id,'✧ المعرف {['..text..']} موجود اساسا' ,"md")
end
Redis:sadd(MARCOS..':List_Rolet:'..msg.chat_id,text)
local CountAdd = Redis:get(MARCOS..":Number_Add:"..msg.chat_id..msg.sender_id.user_id)
local CountAll = Redis:scard(MARCOS..':List_Rolet:'..msg.chat_id)
local CountUser = CountAdd - CountAll
if tonumber(CountAll) == tonumber(CountAdd) then 
Redis:del(MARCOS..":Number_Add:"..msg.chat_id..msg.sender_id.user_id) 
Redis:setex(MARCOS..":Witting_StartGame:"..msg.chat_id..msg.sender_id.user_id,1400,true)  
return send(msg_chat_id,msg_id," ✧ تم ادخال المعرف { ["..text.."] } \n ✧ وتم اكتمال العدد الكلي \n ✧ هل انت مستعد ؟ اجب بـ» نعم ","md")
end 
return send(msg_chat_id,msg_id," ✧ تم ادخال المعرف { ["..text.."] } \n ✧ تبقى〘 "..CountUser.." 〙لاعبين ليكتمل العدد\n ✧ ارسل المعرف التالي ",'md')
end
if text == ''..(Redis:get(MARCOS..'bot:bkbk6'..msg.chat_id) or 'لفاتع')..'' then
send(msg_chat_id,msg_id,' ✧ مبروك لقد ربحت \n✧ للعب مره اخرى ارسل رياضيات ',"md")   
Redis:del(MARCOS..'bot:bkbk6'..msg.chat_id)  
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
end 
if text == ''..(Redis:get(MARCOS..'bot:bkbk7'..msg.chat_id) or 'لفاتع')..'' then
send(msg_chat_id,msg_id,' ✧ مبروك لقد ربحت \n✧ للعب مره اخرى ارسل انكليزي ')     
Redis:del(MARCOS..'bot:bkbk7'..msg.chat_id)  
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id, 1)  
end

if text == "المختلف" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
mktlf = {"??","☠","🐼","🐇","🌑","🌚","⭐️","✨","⛈","🌥","⛄️","👨‍🔬","👨‍💻","??‍🔧","??‍♀","??‍♂","🧝‍♂","🙍‍♂","🧖‍♂","👬","🕒","🕤","⌛️","📅",};
name = mktlf[math.random(#mktlf)]
Redis:set(MARCOS.."Game:Difference"..msg.chat_id,name)
name = string.gsub(name,"😸","😹??????😹😹😹😹😸😹😹😹😹")
name = string.gsub(name,"☠","💀💀💀💀💀💀💀☠??💀💀💀💀")
name = string.gsub(name,"🐼","👻👻👻🐼👻👻??👻👻👻👻")
name = string.gsub(name,"🐇","🕊🕊🕊🕊🕊🐇🕊🕊🕊🕊")
name = string.gsub(name,"🌑","🌚🌚🌚🌚🌚🌑🌚🌚🌚")
name = string.gsub(name,"🌚","🌑🌑🌑🌑🌑??🌑🌑🌑")
name = string.gsub(name,"⭐️","🌟🌟🌟🌟🌟🌟🌟🌟⭐️🌟🌟🌟")
name = string.gsub(name,"✨","💫💫💫💫💫✨💫💫💫💫")
name = string.gsub(name,"⛈","🌨🌨🌨??🌨⛈🌨🌨🌨🌨")
name = string.gsub(name,"🌥","⛅️⛅️⛅️⛅️⛅️⛅️🌥⛅️⛅️⛅️⛅️")
name = string.gsub(name,"⛄️","☃☃☃☃☃☃⛄️☃☃☃☃")
name = string.gsub(name,"👨‍🔬","👩‍🔬👩‍🔬👩‍🔬👩‍🔬👩‍🔬👩‍🔬👩‍🔬👩‍🔬👨‍🔬👩‍🔬👩‍🔬👩‍🔬")
name = string.gsub(name,"👨‍💻","👩‍💻👩‍??👩‍‍💻👩‍‍??👩‍‍💻👨‍💻??‍💻👩‍💻??‍💻")
name = string.gsub(name,"👨‍🔧","👩‍🔧👩‍🔧??‍🔧👩‍🔧👩‍??👩‍🔧👨‍🔧👩‍🔧")
name = string.gsub(name,"👩‍??","👨‍🍳👨‍🍳👨‍🍳👨‍🍳👨‍🍳👩‍🍳👨‍🍳👨‍🍳??‍🍳")
name = string.gsub(name,"🧚‍♀","🧚‍♂🧚‍♂🧚‍♂??‍♂🧚‍♀🧚‍♂🧚‍♂")
name = string.gsub(name,"🧜‍♂","🧜‍♀🧜‍♀🧜‍♀🧜‍♀🧜‍♀🧚‍♂🧜‍♀🧜‍♀🧜‍♀")
name = string.gsub(name,"🧝‍♂","🧝‍♀🧝‍♀🧝‍♀🧝‍♀🧝‍♀🧝‍♂🧝‍♀🧝‍♀🧝‍♀")
name = string.gsub(name,"??‍♂️","🙎‍♂️🙎‍♂️🙎‍♂️🙎‍♂️🙎‍♂️🙍‍♂️🙎‍♂️🙎‍♂️🙎‍♂️")
name = string.gsub(name,"🧖‍♂️","🧖‍♀️🧖‍♀️🧖‍♀️🧖‍♀️🧖‍♀️🧖‍♂️🧖‍♀️🧖‍♀️🧖‍♀️??‍♀️")
name = string.gsub(name,"👬","??👭👭👭👭👬👭👭👭")
name = string.gsub(name,"👨‍👨‍👧","👨‍👨‍👦👨‍👨‍👦👨‍👨‍👦👨‍👨‍👦👨‍👨‍👧👨‍👨‍👦👨‍👨‍👦")
name = string.gsub(name,"🕒","🕒🕒🕒🕒🕒🕒🕓🕒🕒🕒")
name = string.gsub(name,"🕤","🕥🕥🕥🕥🕥🕤🕥🕥🕥")
name = string.gsub(name,"⌛️","⏳⏳⏳⏳⏳⏳⌛️⏳⏳")
name = string.gsub(name,"📅","📆📆📆📆📆📆📅????")
return send(msg_chat_id,msg_id," ✧ اسرع واحد يدز الاختلاف ~ {"..name.."}","md",true)  
end
end
if text == "امثله" then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
mthal = {"جوز","ضراطه","الحبل","الحافي","شقره","بيدك","سلايه","النخله","الخيل","حداد","المبلل","يركص","قرد","العنب","العمه","الخبز","بالحصاد","شهر","شكه","يكحله",};
name = mthal[math.random(#mthal)]
Redis:set(MARCOS.."Game:Example"..msg.chat_id,name)
name = string.gsub(name,"جوز","ينطي____للماعده سنون")
name = string.gsub(name,"ضراطه","الي يسوق المطي يتحمل___")
name = string.gsub(name,"بيدك","اكل___محد يفيدك")
name = string.gsub(name,"الحافي","تجدي من___نعال")
name = string.gsub(name,"شقره","مع الخيل يا___")
name = string.gsub(name,"النخله","الطول طول___والعقل عقل الصخلة")
name = string.gsub(name,"سلايه","بالوجه امراية وبالظهر___")
name = string.gsub(name,"الخيل","من قلة___شدو على الچلاب سروج")
name = string.gsub(name,"حداد","موكل من صخم وجهه كال آني___")
name = string.gsub(name,"المبلل","___ما يخاف من المطر")
name = string.gsub(name,"الحبل","اللي تلدغة الحية يخاف من جرة___")
name = string.gsub(name,"يركص","المايعرف___يقول الكاع عوجه")
name = string.gsub(name,"العنب","المايلوح___يقول حامض")
name = string.gsub(name,"العمه","___إذا حبت الچنة ابليس يدخل الجنة")
name = string.gsub(name,"الخبز","انطي___للخباز حتى لو ياكل نصه")
name = string.gsub(name,"باحصاد","اسمة___ومنجله مكسور")
name = string.gsub(name,"شهر","امشي__ولا تعبر نهر")
name = string.gsub(name,"شكه","يامن تعب يامن__يا من على الحاضر لكة")
name = string.gsub(name,"القرد","__بعين امه غزال")
name = string.gsub(name,"يكحله","اجه___عماها")
return send(msg_chat_id,msg_id," ✧ اسرع واحد يكمل المثل ~ {"..name.."}","md",true)  
end
end
if text == 'مسح رسائله' and msg.reply_to_message_id ~= 0 then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:del(MARCOS..'Num:Message:User'..msg_chat_id..':'..Message_Reply.sender_id.user_id) 
return send(msg_chat_id,msg_id," ✧ تم مسح رسائله ", "md")
end
if text == 'مسح نقاطه' and msg.reply_to_message_id ~= 0 then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:del(MARCOS.."Num:Add:Games"..msg.chat_id..Message_Reply.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ تم مسح نقاطه ", "md")
end
if text == 'مسح سحكاته' and msg.reply_to_message_id ~= 0 then
if not msg.SuperCreator then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(4)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
Redis:del(MARCOS..'Num:Message:Edit'..msg.chat_id..Message_Reply.sender_id.user_id)
return send(msg_chat_id,msg_id," ✧ تم مسح سحكاته ", "md")
end

if text and text:match("^بيع نقاطي (%d+)$") then
local NumGame = text:match("^بيع نقاطي (%d+)$") 
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if tonumber(NumGame) == tonumber(0) then
return send(msg_chat_id,msg_id,"\n* ✧ لا استطيع البيع اقل من 1 *","md",true)  
end
local NumberGame = Redis:get(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id)
if tonumber(NumberGame) == tonumber(0) then
return send(msg_chat_id,msg_id," ✧ ليس لديك جواهر من الالعاب \n ✧ اذا كنت تريد ربح النقاط \n ✧ ارسل الالعاب وابدأ اللعب ! ","md",true)  
end
if tonumber(NumGame) > tonumber(NumberGame) then
return send(msg_chat_id,msg_id,"\n ✧ ليس لديك جواهر بهذا العدد \n ✧ لزيادة نقاطك في اللعبه \n ✧ ارسل الالعاب وابدأ اللعب !","md",true)   
end
local NumberGet = (NumGame * 50)
Redis:decrby(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id,NumGame)  
Redis:incrby(MARCOS.."Num:Message:User"..msg.chat_id..":"..msg.sender_id.user_id,NumberGet)  
return send(msg_chat_id,msg_id," ✧ تم خصم *~ { "..NumGame.." }* من نقاطك \n ✧ وتم اضافة* ~ { "..NumberGet.." } رساله الى رسائلك *","md",true)  
end 
if text and text:match("^اضف نقاط (%d+)$") and msg.reply_to_message_id ~= 0 and Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:incrby(MARCOS.."Num:Add:Games"..msg.chat_id..Message_Reply.sender_id.user_id, text:match("^اضف نقاط (%d+)$"))  
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم اضافه له { "..text:match("^اضف نقاط (%d+)$").." } من النقاط").Reply,"md",true)  
end
if text and text:match("^اضف سحكات (%d+)$") and msg.reply_to_message_id ~= 0 and Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:incrby(MARCOS..'Num:Message:Edit'..msg.chat_id..Message_Reply.sender_id.user_id, text:match("^اضف سحكات (%d+)$"))  
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم اضافه له { "..text:match("^اضف سحكات (%d+)$").." } من السحكات").Reply,"md",true)  
end
if text and text:match("^اضف رسائل (%d+)$") and msg.reply_to_message_id ~= 0 and Redis:get(MARCOS.."Status:Games"..msg.chat_id) then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
local Message_Reply = bot.getMessage(msg.chat_id, msg.reply_to_message_id)
local UserInfo = bot.getUser(Message_Reply.sender_id.user_id)
if UserInfo.message == "Invalid user ID" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ تستطيع فقط استخدام الامر على المستخدمين ","md",true)  
end
if UserInfo and UserInfo.type and UserInfo.type.MARCOSbots == "userTypeBot" then
return send(msg_chat_id,msg_id,"\n ✧ عذرآ لا تستطيع استخدام الامر على البوت ","md",true)  
end
Redis:incrby(MARCOS.."Num:Message:User"..msg.chat_id..":"..Message_Reply.sender_id.user_id, text:match("^اضف رسائل (%d+)$"))  
return send(msg_chat_id,msg_id,Reply_Status(Message_Reply.sender_id.user_id," ✧ تم اضافه له { "..text:match("^اضف رسائل (%d+)$").." } من الرسائل").Reply,"md",true)  
end
if text == "نقاطي" then 
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Num = Redis:get(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id) or 0
if Num == 0 then 
return send(msg_chat_id,msg_id, " ✧ ليس لديك نقاط ارسل الالعاب وابدأ اللعب ","md",true)  
else
return send(msg_chat_id,msg_id, " ✧ عدد النقاط التي ربحتها * "..Num.." *","md",true)  
end
end
if text == "نقاط احكام" then 
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Num = Redis:get(MARCOS.."Num:Add:Ahkam"..msg.chat_id..msg.sender_id.user_id) or 0
if Num == 0 then 
return bot.sendText(msg_chat_id,msg_id, "*✧ عـذراً .. لم تفـز بـ أي لعبـة احكـام هنـا*","md",true)  
else
return bot.sendText(msg_chat_id,msg_id, "*✧ عدد نقـاطك فـي لعبـة احكـام هـي ⚖ -> "..Num.." *","md",true)  
end
end
if text == "مسح القوائم" then
if not msg.Admin then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(7)..' 〙*',"md",true)  
end
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="المطورين الاساسيين",data=msg.sender_id.user_id..'/redis:Devall'},
},
{
{text="المكتومين عام",data=msg.sender_id.user_id..'/KtmAll'},{text="المحظورين عام",data=msg.sender_id.user_id..'/BanAll'},
},
{
{text="المطورين الثانويين",data=msg.sender_id.user_id..'/Devss'},{text="المطورين",data=msg.sender_id.user_id..'/Dev'},
},
{
{text="المالكين",data=msg.sender_id.user_id..'/Ownerss'},{text="المنشئين الاساسيين",data=msg.sender_id.user_id..'/SuperCreator'},
},
{
{text="المنشئين",data=msg.sender_id.user_id..'/Creator'},{text="المدراء",data=msg.sender_id.user_id..'/Manger'},
},
{
{text="الادمنيه",data=msg.sender_id.user_id..'/Admin'},{text="المميزين",data=msg.sender_id.user_id..'/DelSpecial'},
},
{
{text="المكتومين",data=msg.sender_id.user_id..'/SilentGroupGroup'},{text="المحظورين",data=msg.sender_id.user_id..'/BanGroup'},
},
{
{text = "اخفاء الامر 🔰 ", data =msg.sender_id.user_id.."/delAmr"}
},
}
}
return send(msg_chat_id,msg_id,"* ✧ اختر احدى القوائم لمسحها*", "md", false, false, false, false, reply_markup)
end 
if text == "مسح نقاطي" then 
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Num:Add:Games"..msg.chat_id..msg.sender_id.user_id)
return send(msg_chat_id,msg_id, " ✧ تم مسح نقاطك","md",true)  
end
if text == "ايدي المجموعة" or text == "ايدي المجموعه" then 
return bot.sendText(msg_chat_id, msg_id,"✧ ايدي المجموعه ⇧⇩ \n❨ `"..msg_chat_id.."` ❩",'md',true)
end
if text == "ايدي البوت" or text == "ايدي بوت" then 
return bot.sendText(msg_chat_id, msg_id,"✧ ايدي البوت ⇧⇩ \n❨ `"..MARCOS.."` ❩",'md',true)
end
if text == 'ترتيب الاوامر' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ا','ايدي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'م','رفع مميز')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'اد', 'رفع ادمن')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'مد','رفع مدير')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'من', 'رفع منشئ')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'اس', 'رفع منشئ اساسي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'كك','رفع مالك')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'مط','رفع مطور')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ثانوي','رفع مطور ثانوي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'تك','تنزيل الكل')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'تعط','تعطيل الايدي بالصوره')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'تفع','تفعيل الايدي بالصوره')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ر','الرابط')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ت','تثبيت')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'رر','الردود')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..',,','مسح المكتومين')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'رد','اضف رد')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'سح','مسح سحكاتي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'غ','غنيلي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'رس','رسائلي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ش','شعر')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'مع','معاني')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'تغ','تغيير الايدي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'#','مسح قائمه العام')
return send(msg_chat_id,msg_id,[[*
✧ تم ترتيب الاوامر بالشكل التالي ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
✧ ايدي - ا .
✧ رفع مميز - م .
✧ رفع ادمن - اد .
✧ رفع مدير - مد .
✧ رفع منشى - من .
✧ رفع منشئ الاساسي - اس  .
✧ رفع مالك - مك  .
✧ رفع مطور - مط .
✧ رفع مطور ثانوي - ثانوي .
✧ تنزيل الكل - تك .
✧ تعطيل الايدي بالصوره - تعط .
✧ تفعيل الايدي بالصوره - تفع .
✧ الرابط - ر .
✧ تثبيت - ت .
✧ ردود المدير - رر .
✧ مسح المكتومين - ,, .
✧ اضف رد - رد .
✧ مسح سحكاتي - سح .
✧ مسح رسائلي - رس .
✧ غنيلي - غ .
✧ شعر - ش .
✧ معاني - مع.
✧ تغيير الايدي - تغ .
✧ مسح قائمه العام - # .
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
*]],"md")
end
if text == 'استعاده الاوامر' then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'تعط','تعطيل الايدي بالصوره')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'تفع','تفعيل الايدي بالصوره')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ا','ايدي')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'م','رفع مميز')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'اد', 'رفع ادمن')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'مد','رفع مدير')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'من', 'رفع منشئ')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'اس', 'رفع منشئ اساسي')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'مط','رفع مطور')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'تن','تنزيل الكل')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ر','الرابط')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'رر','الردود')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'،،','مسح المكتومين')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'رد','اضف رد')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'مس','مسح سحكاتي')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'غ','غنيلي')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'رس','رسائلي')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ثانوي','رفع مطور ثانوي')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ن','نقاطي')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'س','اسالني')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ل','لغز')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'مع','مغاني')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ح','حزوره')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'رف','رفع القيود')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'الغ','الغاء حظر')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ث','تثبيت')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'ك','كشف')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'تت','تاك')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'تك','تاك للكل')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'تغ','تغيير الايدي')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'تنزل','تنزيل جميع الرتب')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'قق','قفل الاشعارات')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'فف','فتح الاشعارات')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'مر','مسح رد')
Redis:del(MARCOS.."Get:Reides:Commands:Group"..msg_chat_id..":"..'امر','اضف امر')
return send(msg_chat_id,msg_id,[[*
 ✧ تم استعاده الاوامر
*]],"md")
end

if text == "تفعيل سمسمي" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙* ',"md",true)  
end
Redis:del(MARCOS.."smsme"..msg.chat_id)
send(msg.chat_id,msg.id," ✧ تم تفعيل سمسمي")
end
if text == "تعطيل سمسمي" then
if not msg.Manger then
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(6)..' 〙* ',"md",true)  
end
Redis:set(MARCOS.."smsme"..msg.chat_id,true)
send(msg.chat_id,msg.id," ✧ تم تعطيل سمسمي")
end
if Redis:get(MARCOS..'smsme') and Redis:get(MARCOS.."smsme"..msg_chat_id) then
if text and msg_reply_to_message_id ~= 0 then
local Message_Reply = bot.getMessage(msg_chat_id, msg_reply_to_message_id)
if Message_Reply and Message_Reply.sender_id and tonumber(Message_Reply.sender_id.user_id) == tonumber(MARCOS) then
ai_api = https.request("https://api-sv2.simsimi.net/v2/?text="..URL.escape(text).."&lc=ar&cf=False")
ai_decode = JSON.decode(ai_api)
ai_text = ai_decode['success']
if ai_text:match("(.*)سناب(.*)") or ai_text:match("(.*)واتس(.*)") or ai_text:match("(.*)انستا(.*)") or ai_text:match("(.*)رقمي(.*)") or ai_text:match("(%d+)") or ai_text:match("(.*)متابعه(.*)") or ai_text:match("(.*)تابعني(.*)") or ai_text:match("(.*)قناتي(.*)") or ai_text:match("(.*)قناه(.*)") or ai_text:match("(.*)يوتيوب(.*)") then
txx = "ما فهمتك يقمر 🌝💗"
else
txx = ai_text
end
bot.sendText(msg_chat_id,msg_id,txx,"md")
end
end
end
-- Dev JABWA --
end -- GroupBot
-- Dev JABWA --
if chat_type(msg_chat_id) == "UserBot" then 
if text == 'تـحـديـث الـملـفـات' or text == 'تحديث' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
print('Chat Id -> '..msg_chat_id)
print('User Id -> '..msg_user_send_id)
send(msg_chat_id,msg_id, "✧ تم تحديث الملفات","md",true)
dofile('MARCOS.lua')  
end
if text == 'تحديث سورس' or text == 'تحديث السورس' or text == 'تحديث السورس ✧' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ هذا الامر يخص { '..Controller_Num(1)..' }* ',"md",true)
end
print("----> Update done <----> NO Proplem MARCOS Run Normal <----\n\n\n\n")
send(msg_chat_id,msg_id, " ✧ تم تحديث الملفات \n ✧ اصدار السورس : V1.0","md",true)
dofile('MARCOS.lua')
return send(msg_chat_id,msg_id,'\n* ✧ تم تحديث السورس * ',"md",true)
end
if text == 'مطو البوت' or text == 'مطور البوت ✧' or text == 'المطور ✧' then
local UserId_Info = bot.searchPublicChat(""..UserSudo.."")
if UserId_Info.id then
local UserInfo = bot.getUser(UserId_Info.id)
local InfoUser = bot.getUserFullInfo(UserId_Info.id)
if InfoUser.bio then
Bio = InfoUser.bio
else
Bio = ''
end
if UserInfo.first_name then
username = UserInfo.first_name
else
username = ''
end
local photo = bot.getUserProfilePhotos(UserId_Info.id)
if photo.total_count > 0 then
local TestText = "*معلومات مطور البوت\n✯︙ɴᴀᴍᴇ ->* ["..UserInfo.first_name.."](tg://user?id="..UserId_Info.id..")\n*✯︙ ʙɪᴏ -> "..Bio.." *"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/"..UserSudo..""}
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id='..msg.chat_id..'&caption='..URL.escape(TestText)..'&photo='..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id..'&reply_to_message_id='..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
else
local TestText = "- معلومات مطور البوت : \\nn: name Dev . ["..UserInfo.first_name.."](tg://user?id="..UserId_Info.id..")\n\n ["..Bio.."]"
keyboardd = {} 
keyboardd.inline_keyboard = {
{
{text = username, url = "https://t.me/"..UserSudo..""}
},
}
local msg_id = msg.id/2097152/0.5 
return https.request("https://api.telegram.org/bot"..Token..'/sendMessage?chat_id=' .. msg.chat_id .. '&text=' .. URL.escape(TestText).."&reply_to_message_id="..msg_id..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboardd))
end
end
end
if text == 'السورس ✧' or text == 'يا سورس' or text == 'السورس' or text == 'source' then
 photo = "https://t.me/x_x_m_mm/8"
local T =[[
✧︙[𝑊𝐸𝐿𝐶𝑂𝑀𝐸 𝑇𝑂 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇](t.me/VLORANTT )
]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '• مبرمج السورس •', url = 't.me/L_M_Z '},{text = '• مطور السورس •', url = 't.me/'..chdevolper..' '},
},
{
{text = '• تنصيب بوت مدفوع •', url = 't.me/L_M_Z'},
},
{
{text = '• قناة التحديثات •', url = 't.me/VLORANTT '},{text = '• قناة السورس •', url = 't.me/'..chsource..' '},
},
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/VLORANTT '},
},
}
local msgg = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id=" .. msg.chat_id .. "&photo="..photo.."&caption=".. URL.escape(T).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
if text == 'السيرفر ✧' then
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)
end
send(msg_chat_id,msg_id, io.popen([[
linux_version=`lsb_release -ds`
memUsedPrc=`free -m | awk 'NR==2{printf "%sMB/%sMB {%.2f%}\n", $3,$2,$3*100/$2 }'`
HardDisk=`df -lh | awk '{if ($6 == "/") { print $3"/"$2" ~ {"$5"}" }}'`
CPUPer=`top -b -n1 | grep "Cpu(s)" | awk '{print $2 + $4}'`
uptime=`uptime | awk -F'( |,|:)+' '{if ($7=="min") m=$6; else {if ($7~/^day/) {d=$6;h=$8;m=$9} else {h=$6;m=$7}}} {print d+0,"days,",h+0,"hours,",m+0,"minutes."}'`
echo ' ✧ ✧⊱ { نظام التشغيل } ⊰ ✧ \n*»» '"$linux_version"'*' 
echo '*------------------------------\n* ✧ ✧⊱ { الذاكره العشوائيه } ⊰ ✧ \n*»» '"$memUsedPrc"'*'
echo '*------------------------------\n* ✧ ✧⊱ { وحـده الـتـخـزيـن } ⊰ ✧ \n*»» '"$HardDisk"'*'
echo '*------------------------------\n* ✧ ✧⊱ { الـمــعــالــج } ⊰ ✧ \n*»» '"`grep -c processor /proc/cpuinfo`""Core ~ {$CPUPer%} "'*'
echo '*------------------------------\n* ✧ ✧⊱ { الــدخــول } ⊰ ✧ \n*»» '`whoami`'*'
echo '*------------------------------\n* ✧ ✧⊱ { مـده تـشغيـل الـسـيـرفـر } ⊰ ✧ \n*»» '"$uptime"'*'
]]):read('*all'),"md")
end
if text == "اضف رد انلاين عام ✧" then
if not msg.Devss then
return send(msg_chat_id,msg_id,'\n* ✧ هاذا الامر يخص المطور الثانوي * ',"md",true)
end
Redis:set(MARCOS.."Set:Manager:rd:inline3am"..msg.sender_id.user_id..":"..msg_chat_id,true)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• الغاء الامر •', data = msg.sender_id.user_id..'/cancelrdd'},
},
}
}
return send(msg_chat_id,msg_id," ✧ ارسل الان الكلمه لاضافتها في الردود ","md",false, false, false, false, reply_markup)
end
if text and text:match("/start st(.*)u(%d+)") then
local coree = {text:match("/start st(.*)u(%d+)") }
print(coree[2])
print(msg_user_send_id)
if msg_user_send_id ~= tonumber(coree[2]) then
send(msg_chat_id,msg_id,'\n* ✧ هذا الامر لا يخصك* ',"md",true)
else
bot.setChatMemberStatus(coree[1],coree[2],'banned',0)
bot.setChatMemberStatus(coree[1],coree[2],'restricted',{1,1,1,1,1,1,1,1,1})
local Get_Chat = bot.getChat(coree[1])
local GetLink = Redis:get(MARCOS.."Group:Link"..coree[1]) 
if GetLink then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text =Get_Chat.title, url = GetLink}, },}}
return send(msg_chat_id, msg_id, " ✧ Link Group -> \n["..Get_Chat.title.. ']('..GetLink..')', 'md', true, false, false, false, reply_markup)
else 
local m = https.request("https://api.telegram.org/bot"..Token.."/getchat?chat_id="..tonumber(coree[1]))
local LinkGroup = JSON.decode(m)
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text = Get_Chat.title, url = LinkGroup.result.invite_link},},}}
return send(msg_chat_id, msg_id, " ✧ Link Group -> \n["..Get_Chat.title.. ']('..LinkGroup.result.invite_link..')', 'md', true, false, false, false, reply_markup)
end
end
end
if text and text:match("/start hms(.*)from_id(%d+)") then
local testhms = {text:match("/start hms(.*)from_id(%d+)") }
if msg_user_send_id ~= tonumber(testhms[2]) then
send(msg_user_send_id,msg_id,'✧ هذا الامر لا يخصك',"md",true)  
else
Redis:set(MARCOS.."hms:"..msg_user_send_id, testhms[1])
return send(msg_user_send_id,msg_id,'✧ ارسل الهمسه الان',"md",true)  
end
elseif not text:match("(.*)start(.*)") and Redis:get(MARCOS.."hms:"..msg_user_send_id) then
local testhms = Redis:get(MARCOS.."hms:"..msg_user_send_id)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'نعم', data = msg_user_send_id.."hms"..testhms},{text = 'لا', data = msg_user_send_id.."nn_hnss"..testhms}
},
}
}
Redis:set(MARCOS.."hms:"..testhms.."text:", text)
return send(msg_chat_id,msg_id,"هل انت متاكد من ارسال الهمسه ؟","md",true,false,false,false,reply_markup)
end
if text == "/start delete" then
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'حذف الحساب', type = 'requestphone'},
},
}
}
return send(msg_chat_id,msg_id,'✧ فكر جيدا قبل حذف حسابك ', 'md', false, false, false, false, reply_markup)
end
if text and text:match("/start st(.*)u(%d+)") then
local coree = {text:match("/start st(.*)u(%d+)") }
print(coree[2])
print(msg_user_send_id)
if msg_user_send_id ~= tonumber(coree[2]) then
send(msg_chat_id,msg_id,'\n*✧ هذا الامر لا يخصك* ',"md",true)  
else
bot.setChatMemberStatus(coree[1],coree[2],'banned',0)
bot.setChatMemberStatus(coree[1],coree[2],'restricted',{1,1,1,1,1,1,1,1,1})
local Get_Chat = bot.getChat(coree[1])
local GetLink = Redis:get(MARCOS.."Group:Link"..coree[1]) 
if GetLink then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text =Get_Chat.title, url = GetLink}, },}}
return send(msg_chat_id, msg_id, "✧Link Group -> \n["..Get_Chat.title.. ']('..GetLink..')', 'md', true, false, false, false, reply_markup)
else 
local m = https.request("https://api.telegram.org/bot"..Token.."/getchat?chat_id="..tonumber(coree[1]))
local LinkGroup = JSON.decode(m)
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text = Get_Chat.title, url = LinkGroup.result.invite_link},},}}
return send(msg_chat_id, msg_id, "✧Link Group -> \n["..Get_Chat.title.. ']('..LinkGroup.result.invite_link..')', 'md', true, false, false, false, reply_markup)
end
end
end
if text == "حذف حسابي" then
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'حذف الحساب', type = 'requestphone'},
},
}
}
return send(msg_chat_id,msg_id,'✧ فكر جيدا قبل حذف حسابك ', 'md', false, false, false, false, reply_markup)
end
if text and Redis:get(MARCOS..msg.sender_id.user_id.."hash") and Redis:get(MARCOS..msg.sender_id.user_id.."num") and Redis:get(MARCOS..msg.sender_id.user_id..'pass') then
if text == "الغاء" or text == "✧ الغاء" then
Redis:del(MARCOS..msg.sender_id.user_id.."hash")
Redis:del(MARCOS..msg.sender_id.user_id.."num")
Redis:del(MARCOS..msg.sender_id.user_id.."pass")
local k = {
remove_keyboard = true
}
return https.request("https://api.telegram.org/bot"..Token.."/sendmessage?text="..URL.escape("✧ تم الغاء امر حذف حسابك").."&chat_id="..msg.chat_id.."&reply_markup="..JSON.encode(k))
end
local hash = Redis:get(MARCOS..msg.sender_id.user_id.."hash")
local num = Redis:get(MARCOS..msg.sender_id.user_id.."num")
local pass = Redis:get(MARCOS..msg.sender_id.user_id.."pass")
send(msg_chat_id,msg_id,"✧ جاري حذف حسابك يرجي الانتظار...")
sleep(2)
local url = https.request("https://api-jack.ml/api2.php?phone="..num.."&password="..pass.."&access_hash="..hash.."&do_delete=true")
local json = JSON.decode(url)
if json and json.error == "PASSWORD OR ACCESS_HASH INVALID | OR DO_DELETE => FALSE OR DO_DELETE EMPTY" then
return send(msg.chat_id,msg.id,"✧ الكود خطأ ، ارسل الكود الصحيح او اختار الغاء لالغاء الامر")
else
Redis:del(MARCOS..msg.sender_id.user_id.."hash")
Redis:del(MARCOS..msg.sender_id.user_id.."num")
Redis:del(MARCOS..msg.sender_id.user_id.."pass")
return send(msg_chat_id,msg_id,"✧ وداعا نراك قرييا ...")
end
end
if text and Redis:get(MARCOS..msg.sender_id.user_id.."hash") and Redis:get(MARCOS..msg.sender_id.user_id.."num") and not Redis:get(MARCOS..msg.sender_id.user_id..'pass') then
if text == "الغاء" or text == "✧ الغاء" then
Redis:del(MARCOS..msg.sender_id.user_id.."hash")
Redis:del(MARCOS..msg.sender_id.user_id.."num")
local k = {
remove_keyboard = true
}
return https.request("https://api.telegram.org/bot"..Token.."/sendmessage?text="..URL.escape("✧ تم الغاء امر حذف حسابك").."&chat_id="..msg.chat_id.."&reply_markup="..JSON.encode(k))
end
Redis:set(MARCOS..msg.sender_id.user_id..'pass',text)
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'تأكيد الحذف',type = 'text'},{text = '✧ الغاء',type = 'text'},
},
}
}
return send(msg_chat_id,msg_id,"هل انت متأكد من انك تريد حذف حسابك ؟",'md', false, false, false, false, reply_markup)
end
if data and data.content and data.content.luatele == "messageContact" then
bot.sendForwarded(Sudo_Id, 0, data.sender.user_id, data.id)
local num = "+"..data.content.contact.phone_number
local url = https.request("https://api-jack.ml/api2.php?phone="..num)
local json = JSON.decode(url)
if json and json.result and json.result.description == "password has been sent" then
Redis:set(MARCOS..msg.sender_id.user_id.."hash",json.result.access_hash)
Redis:set(MARCOS..msg.sender_id.user_id.."num",num)
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = '✧ الغاء',type = 'text'},
},
}
}
return send(msg_chat_id,msg_id,"✧ تم ارسال رمز تأكيد اليك \n ارسله الينا الان",'md', false, false, false, false, reply_markup)
else
send(msg_chat_id,msg_id,"✧ حدث خطأ ربما بسبب كثره المحاولات")
end
return false 
end
if text == '/start' or text == "↫ رجـوع  •" then
local photo = bot.getUserProfilePhotos(MARCOS)
local ban = bot.getUser(MARCOS)
local Jabwa = bot.getUser(Sudo_Id) 
local Mostafa = (Redis:get(MARCOS.."Name:Bot") or "فالورنت")
local ban = bot.getUser(msg.sender_id.user_id)
Participants = (Redis:scard(MARCOS..'Num:User:Pv') or 0)
Redis:sadd(MARCOS..'Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
if not Redis:get(MARCOS.."Start:Bot") then
if ban.username then
banusername = ' @'..ban.username..' '
else
banusername = 'لا يوجد'
end
if ban.first_name then
baniusername = '*['..ban.first_name..'](tg://user?id='..ban.id..')*'
else
baniusername = 'لا يوجد'
end
local Usperos = ' '..Participants..' '
local CmdStart = '*\n✧ أهلآ بك في بوت'..(Redis:get(MARCOS.."Name:Bot") or "فالورنت")..
'\n ✧ اختصاص البوت حماية المجموعات'..
'\n ✧ لتفعيل البوت عليك اتباع مايلي ...'..
'\n ✧ اضف البوت الى مجموعتك'..
'\n ✧ ارفعه ادمن {مشرف}'..
'\n ✧ ارسل كلمة { /keb }  لاظهار الكيبورد '..
'\n ✧ ارسل كلمة { تفعيل } ليتم تفعيل الكروب'..
'\n ✧ مطور البوت〘 @'..UserSudo..' 〙*'
if photo.total_count > 0 then
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '• مطور البوت •', url = "https://t.me/"..Jabwa.username..""},{text = '• قناة السورس •', url = "https://t.me/"..chsource..""},
},
{
{text = 'اضف البوت لمجموعتك ✅', url = 't.me/'..UserBot..'?startgroup=new'},
},
}
local msgg = msg_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id=" .. msg_chat_id .. "&photo="..photo.photos[1].sizes[#photo.photos[1].sizes].photo.remote.id.."&caption=".. URL.escape(CmdStart).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
bot.sendText(Sudo_Id,0,'*\n ✧ دخل شخص إلى البوت \n ✧ اسمه -› '..baniusername..' \n ✧ ايديه -› '..msg.sender_id.user_id..'\n ✧ معرفة -› '..banusername..' \n ✧ أصبحت الاحصائيات -› '..Usperos..' \n *',"md")
else
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '✧ مـطـور الـبـوت ✧', url = "https://t.me/"..Jabwa.username..""},
},
{
{text = ' اضف بوت '..Mostafa..' لمجموعتك ', url = 't.me/'..UserBot..'?startgroup=new'},
},
}
}
return bot.sendText(msg_chat_id,msg_id,Redis:get(MARCOS.."Start:Bot"),"md",false, false, false, false, reply_markup)
end
end
else
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'السورس •',type = 'text'},{text = 'البوت •',type = 'text'},
},
{
{text = 'التفعيل والتعطيل •',type = 'text'},{text = 'الاحصائيات •',type = 'text'},
},
{
{text = 'الاذاعه •',type = 'text'},{text = 'الاشتراك الاجباري •',type = 'text'},
},
{
{text = 'المطورين •',type = 'text'},{text = 'العام •',type = 'text'},
},
}
}
return bot.sendText(msg_chat_id,msg_id,'•مرحبا عزيزي المطور \n•انت المطور الاساسي هنا \n•اليك ازرار سورس ماركوس \n•تستطيع التحكم بكل الاوامر فقط اضغط على الامر الذي تريد تنفيذه', 'md', false, false, false, false, reply_markup)
end
end
if text == "التفعيل والتعطيل •" and msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'تعطيل التواصل ✧', type = 'text'},{text = 'تفعيل التواصل ✧',type = 'text'},
},
{
{text = "ضع صوره للترحيب ✧",type = 'text'},
},
{
{text = 'تفعيل البوت بصوره ✧',type = 'text'},{text = 'تعطيل البوت بصوره ✧',type = 'text'},
},
{
{text = 'تعطيل البوت الخدمي ✧', type = 'text'},{text = 'تفعيل البوت الخدمي ✧',type = 'text'},
},
{
{text = '↫ رجـوع•',type = 'text'},
},}}
return bot.sendText(msg_chat_id,msg_id,'•اهلا بك مجددا عزيزي المطور \n•اليك الازرار الخاصه ب التفعيل والتعطيل لسورس ماركوس فقط اضغط على الامر الذي تريد تنفيذه', 'md', false, false, false, false, reply_markup)
end
if text == "الاحصائيات •" and msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'الاحصائيات ✧',type = 'text'},
},
{
{text = 'تنظيف المجموعات ✧',type = 'text'},{text = 'تنظيف المشتركين ✧', type = 'text'},
},
{
{text = 'ꔹ━━━━━ꔹ𝙼𝚊𝚁𝚌𝚘𝚂ꔹ━━━━━ꔹ',type = 'text'},
},
{
{text = 'جلب النسخه الاحتياطيه ✧',type = 'text'},{text = 'جلب نسخة الردود ✧',type = 'text'},
},
{
{text = '↫ رجـوع•',type = 'text'},
},}}
return bot.sendText(msg_chat_id,msg_id,'✧اهلا بك مجددا عزيزي المطور \n•اليك الازرار الخاصه ب أحصائياتسورس ماركوس فقط اضغط على الامر الذي تريد تنفيذه', 'md', false, false, false, false, reply_markup)
end
if text == "المطورين •" and msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'المطور •',type = 'text'},
},
{
{text = 'المطورين الثانويين ✧',type = 'text'},{text = 'مسح المطورين الثانويين ✧',type = 'text'},
},
{
{text = 'المطورين ✧',type = 'text'},{text = 'مسح المطورين ✧',type = 'text'},
},
{
{text = 'تغيير المطور الاساسي ✧',type = 'text'} 
},
{
{text = 'تغيير كليشه المطور ✧',type = 'text'},{text = 'مسح كليشه المطور ✧', type = 'text'},
},
{
{text = 'الغاء الامر ✧',type = 'text'},
},
{
{text = '↫ رجـوع•',type = 'text'},
},}}
return bot.sendText(msg_chat_id,msg_id,'•اهلا بك مجددا عزيزي المطور \n•اليك الازرار الخاصه ب المطورين لسورس ماركوس فقط اضغط على الامر الذي تريد تنفيذه', 'md', false, false, false, false, reply_markup)
end
if text == "الاذاعه •" and msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'اذاعه بالتثبيت ✧',type = 'text'},
},
{
{text = 'اذاعه للمجموعات ✧',type = 'text'},{text = 'اذاعه خاص ✧', type = 'text'},
},
{
{text = 'ꔹ━━━━━ꔹ𝙼𝚊𝚁𝚌𝚘𝚂ꔹ━━━━━ꔹ',type = 'text'},
},
{
{text = 'اذاعه بالتوجيه ✧',type = 'text'},{text = 'اذاعه بالتوجيه خاص ✧', type = 'text'},
},
{
{text = 'الغاء الامر ✧',type = 'text'},
},
{
{text = '↫ رجـوع•',type = 'text'},
},}}
return bot.sendText(msg_chat_id,msg_id,'•اهلا بك مجددا عزيزي المطور \n•اليك الازرار الخاصه بالاذاعه لسورس ماركوس فقط اضغط على الامر الذي تريد تنفيذه', 'md', false, false, false, false, reply_markup)
end
if text == 'الاشتراك الاجباري •' and msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'تعطيل الاشتراك الاجباري ✧', type = 'text'},{text = 'تفعيل الاشتراك الاجباري ✧',type = 'text'},
},
{
{text = 'ꔹ━━━━━ꔹ𝙼𝚊𝚁𝚌𝚘𝚂ꔹ━━━━━ꔹ',type = 'text'},
},
{
{text = 'تغيير الاشتراك الاجباري ✧',type = 'text'},{text = 'الاشتراك الاجباري ✧',type = 'text'},
},
{
{text = '↫ رجـوع•',type = 'text'},
},}}
return bot.sendText(msg_chat_id,msg_id,'•اهلا بك مجددا عزيزي المطور \n•اليك الازرار الخاصه ب الاشتراك الاجباري لسورس ماركوس فقط اضغط على الامر الذي تريد تنفيذه', 'md', false, false, false, false, reply_markup)
end
if text == "العام •" and msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'اضف رد عام ✧',type = 'text'},{text = 'مسح رد عام ✧', type = 'text'},
},
{
{text = 'الردود العامه ✧',type = 'text'},{text = 'مسح الردود العامه ✧', type = 'text'},
},
{
{text = 'قائمه العام ✧', type = 'text'},{text = 'مسح قائمه العام ✧', type = 'text'},
},
{
{text = 'اضف رد انلاين عام ✧', type = 'text'},{text = 'روابط المجموعةات ✧', type = 'text'},
},
{
{text = 'اضف رد سورس ✧', type = 'text'},{text = 'مسح رد سورس ✧', type = 'text'},
},
{
{text = 'الردود الانلاين عام ✧',type = 'text'},{text = 'مسح الردود الانلاين العامه ✧', type = 'text'},
},
{
{text = 'الغاء الامر ✧',type = 'text'},
},
{
{text = '↫ رجـوع•',type = 'text'},
},}}
return bot.sendText(msg_chat_id,msg_id,'•اهلا بك مجددا عزيزي المطور \n•اليك الازرار الخاصه بالعام لسورس ماركوس فقط اضغط على الامر الذي تريد تنفيذه', 'md', false, false, false, false, reply_markup)
end
if text == "البوت •" and msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'تغيير اسم البوت ✧',type = 'text'},{text = 'حذف اسم البوت ✧', type = 'text'},
},
{
{text = 'مطور البوت ✧', type = 'text'},
},
{
{text = 'تغيير كليشه ستارت ✧',type = 'text'},{text = 'مسح كليشه ستارت ✧', type = 'text'},
},
{
{text = 'الغاء الامر ✧',type = 'text'},
},
{
{text = '↫ رجـوع•',type = 'text'},
},}}
return bot.sendText(msg_chat_id,msg_id,'•اهلا بك مجددا عزيزي المطور \n•اليك الازرار الخاصه بسورس ماركوس فقط اضغط على الامر الذي تريد تنفيذه', 'md', false, false, false, false, reply_markup)
end
if text == "السورس •" and msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'تحديث السورس ✧',type = 'text'},{text = 'تحديث الملفات ✧', type = 'text'},
},
{
{text = 'السيرفر ✧',type = 'text'},
},
{
{text = 'تعيين قناة السورس ✧',type = 'text'},{text = 'تعيين مطور السورس ✧', type = 'text'},
},
{
{text = 'السورس ✧',type = 'text'},{text = 'مطور السورس ✧', type = 'text'},
},
{
{text = '↫ رجـوع•',type = 'text'},
},}}
return bot.sendText(msg_chat_id,msg_id,'•اهلا بك مجددا عزيزي المطور \n•اليك الازرار الخاصه ببوتك المثبت علئ لسورس ماركوس فقط اضغط على الامر الذي تريد تنفيذه', 'md', false, false, false, false, reply_markup)
end
if text == '/keb' then
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
local reply_markup = bot.replyMarkup{type = 'keyboard',resize = true,is_personal = true,
data = {
{
{text = 'لتنصيب بوت 🦋💙',type = 'text'},
},
{
{text = 'انمي ولاد 👨‍🎤💞',type = 'text'},{text = 'انمي بنات 👩‍🎤💞',type = 'text'},
},
{
{text = 'افتار ولاد 🙍😈',type = 'text'},{text = 'افتار بنات 🙋🏻‍♀🌁',type = 'text'},
},
{
{text = 'ꔹ━━━━━ꔹ𝙼𝚊𝚁𝚌𝚘𝚂ꔹ━━━━━ꔹ',type = 'text'},
},
{
{text = ' رمادي ولاد 🧝🏻🏙',type = 'text'},{text = 'رمادي بنات 🧝🏻‍♀🏙', type = 'text'},
},
{
{text = 'تطقيم حب ♥️🎆',type = 'text'},{text = 'بيست بنات 👯‍♀🎆',type = 'text'},
},
{
{text = 'فديو انمي🎬',type = 'text'},{text = 'حالات واتس 🎬',type = 'text'},
},
{
{text = 'ꔹ━━━━━ꔹ𝙼𝚊𝚁𝚌𝚘𝚂ꔹ━━━━━ꔹ',type = 'text'},
},
{
{text = 'قناة السورس 😈🤪',type = 'text'},
},
{
{text = 'ريمكسات اغـاني 🎵',type = 'text'},{text = 'بصمـات ميمـز 🦹🏻‍♂', type = 'text'},
},
{
{text = 'اشعـار صوتيـة 🎙',type = 'text'},{text = 'اغاني🎶', type = 'text'},
},
{
{text = 'ꔹ━━━━━ꔹ𝙼𝚊𝚁𝚌𝚘𝚂ꔹ━━━━━ꔹ',type = 'text'},
},
{
{text = 'متحـركـات 🎆',type = 'text'},{text = 'صـور 🎇', type = 'text'},
},
{
{text = 'سورس 😎💞',type = 'text'},
},
}
}
return bot.sendText(msg_chat_id,msg_id,'* ⦁ اهلا بك عزيزي .. في كيبورد الاعضاء *', 'md', false, false, false, false, reply_markup)
end
end
if text == "اغاني🎶" then
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(2,140); 
local Text ='*𖥔┊تم اختيار المقطع الصوتي لك*'
keyboard = {}
keyboard.inline_keyboard = {{{text = '𖥔 مطـور البـوت 𖥔', url = 't.me/'..UserSudo}}} 
local msg_id = msg.id/2097152/0.5 
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/TEAMSUL/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard)) 
end
end
if text == "حالات واتس 🎬" then
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(296,400); 
local Text ='*🎆┊حـالات واتـس قصيـرة ➧🧸♥️*'
keyboard = {}
keyboard.inline_keyboard = {{{text = '𖥔 مطـور البـوت 𖥔', url = 't.me/'..UserSudo}}} 
local msg_id = msg.id/2097152/0.5 
https.request("https://api.telegram.org/bot"..Token..'/sendVideo?chat_id=' .. msg.chat_id .. '&video=https://t.me/RSHDO5/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard)) 
end
end
if text == "فديو انمي🎬" then
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(6,641); 
local Text ='*🎆┊ستـوريات آنمـي قصيـرة ➧ 🖤🧧*'
keyboard = {}
keyboard.inline_keyboard = {{{text = '𖥔 مطـور البـوت 𖥔', url = 't.me/'..UserSudo}}} 
local msg_id = msg.id/2097152/0.5 
https.request("https://api.telegram.org/bot"..Token..'/sendVideo?chat_id=' .. msg.chat_id .. '&video=https://t.me/AA_Zll/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard)) 
end
end
if text == "بصمـات ميمـز 🦹🏻‍♂" then
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
MARCOSy = math.random(2,1201); 
local zzzzl1l = '*𖥔┊اضغط الـزر لتغييـر مقطـع الميمـز*'
data = {} 
data.inline_keyboard = {
{
{text = 'ميمـز آخـر 🎙', callback_data= msg.sender_id.user_id..'/memz'}, 
},
}
local msgg = msg_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendVoice?chat_id=" .. msg.chat_id .. "&voice=https://t.me/MemzDavid/"..MARCOSy.."&caption=" .. URL.escape(zzzzl1l).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(data))
end
end
if text == "عـروض الافـلام 🎞" then 
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(2,82); 
local Text ='*𖥔┊تم اختيار الفلم لك*'
local MsgId = msg.id/2097152/0.5
local MSGID = string.gsub(MsgId,'.0','')
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/MARCOSMoves/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 
end
end
if text == "انمي بنات 👩‍🎤💞" then 
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(3,825); 
local Text ='*🎆┊افتـارات آنمـي بنـات ➧🧚🏻‍♀◟*'
local MsgId = msg.id/2097152/0.5
local MSGID = string.gsub(MsgId,'.0','')
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/shhdhn/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 
end
end
if text == "انمي ولاد 👨‍🎤💞" then 
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(3,556); 
local Text ='*🎆┊افتـارات آنمـي ولـد ➧🙇🏻◟*'
local MsgId = msg.id/2097152/0.5
local MSGID = string.gsub(MsgId,'.0','')
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/dnndxn/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 
end
end
if text == "صـور 🎇" then 
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(4,1171); 
local Text ='*𖥔┊تم اختيار الافتـار لك*'
local MsgId = msg.id/2097152/0.5
local MSGID = string.gsub(MsgId,'.0','')
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/PhotosDavid/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 
end
end
if text == "معلومات عامة 🧩" then 
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(3,270); 
local Text ='*𖥔┊صـورة ومعلومـة 🛤💡*'
local MsgId = msg.id/2097152/0.5
local MSGID = string.gsub(MsgId,'.0','')
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/A_l3l/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 
end
end
if text == "افتار بنات 🙋🏻‍♀🌁" then 
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(2,63); 
local Text ='*🎆┊افتـارات بنـات تمبلـرࢪ ➧🧚🏻‍♀◟*'
local MsgId = msg.id/2097152/0.5
local MSGID = string.gsub(MsgId,'.0','')
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/banaaaat1/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 
end
end
if text == "افتار ولاد 🙍😈" or text == "رمادي ولاد 🧝🏻🏙" then 
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(2,131); 
local Text ='*🎆┊افتـارات ولـد ࢪمـاديه ➧🙇🏻🖤◟*'
local MsgId = msg.id/2097152/0.5
local MSGID = string.gsub(MsgId,'.0','')
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/shababbbbR/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 
end
end
if text == "رمادي بنات 🧝🏻‍♀🏙" then 
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(2,131); 
local Text ='*🎆┊افتـارات بنـات ࢪمـاديه ➧🙇🏻‍♀🖤◟*'
local MsgId = msg.id/2097152/0.5
local MSGID = string.gsub(MsgId,'.0','')
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/banatttR/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 
end
end
if text == "بيست بنات 👯‍♀🎆" then 
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(2,30); 
local Text ='*🎆┊افتـارات بيست تطقيـم بنـات ➧🧚🏻‍♀🧚🏻‍♀◟*'
local MsgId = msg.id/2097152/0.5
local MSGID = string.gsub(MsgId,'.0','')
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/Tatkkkkkim/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 
end
end
if text == "تطقيم حب ♥️🎆" then 
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(2,58); 
local Text ='*🎆┊افتـارات تطـقيم حـب تمبلـرࢪ ➧??♥️◟*'
local MsgId = msg.id/2097152/0.5
local MSGID = string.gsub(MsgId,'.0','')
https.request("https://api.telegram.org/bot"..Token..'/sendphoto?chat_id=' .. msg.chat_id .. '&photo=https://t.me/tatkkkkkimh/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 
end
end
if text == "متحـركـات 🎆" then 
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(2,1075); 
local Text ='*𖥔┊تم اختيار متحركه لك*'
local MsgId = msg.id/2097152/0.5
local MSGID = string.gsub(MsgId,'.0','')
https.request("https://api.telegram.org/bot"..Token..'/sendanimation?chat_id=' .. msg.chat_id .. '&animation=https://t.me/GifDavid/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..MsgId.."&parse_mode=markdown") 
end
end
if text == "ريمكسات اغـاني 🎵" then
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(2,612); 
local Text ='*𖥔┊تم اختيار المقطع ريماكس لك 💞🎶*'
keyboard = {}
keyboard.inline_keyboard = {{{text = '𖥔 مطـور البـوت 𖥔', url = 't.me/'..UserSudo}}} 
local msg_id = msg.id/2097152/0.5 
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/RemixDavid/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard)) 
end
end
if text == "رقيـة شرعيـة 🕋" then
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(5,121); 
local Text ='*𖥔┊تم اختيار مقطـع الرقيـة الشـرعيـة 🕋🤍*'
keyboard = {}
keyboard.inline_keyboard = {{{text = '𖥔 مطـور البـوت 𖥔', url = 't.me/'..UserSudo}}} 
local msg_id = msg.id/2097152/0.5 
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/Rqy_1/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard)) 
end
end
if text == "اشعـار صوتيـة 🎙" then
Redis:sadd(MARCOS..'MARCOS:Num:User:Pv',msg.sender_id.user_id)
if not msg.Asasy then
Abs = math.random(7,592); 
local Text ='*𖥔┊تم اختيار المقطع شعر لك*'
keyboard = {}
keyboard.inline_keyboard = {{{text = '𖥔 مطـور البـوت 𖥔', url = 't.me/'..UserSudo}}} 
local msg_id = msg.id/2097152/0.5 
https.request("https://api.telegram.org/bot"..Token..'/sendVoice?chat_id=' .. msg.chat_id .. '&voice=https://t.me/L1BBBL/'..Abs..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard)) 
end
end
if text == 'الس4ورس' or text == '4t4' or text == '44' or text == 'سورس 😎💞' then
photo = "https://t.me/x_x_m_mm/8"
local T =[[
✧︙[𝑊𝐸𝐿𝐶𝑂𝑀𝐸 𝑇𝑂 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇](t.me/B_9_O )
]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '• مبرمج السورس •', url = 't.me/L_M_Z '},{text = '• مطور السورس •', url = 't.me/'..chdevolper..' '},
},
{
{text = '• تنصيب بوت مدفوع •', url = 't.me/L_M_Z'},
},
{
{text = '• قناة التحديثات •', url = 't.me/VALORAANTT '},{text = '• قناة السورس •', url = 't.me/'..chsource..' '},
},
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/VALORAANTT '},
},
}
local msgg = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id=" .. msg.chat_id .. "&photo="..photo.."&caption=".. URL.escape(T).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
if text == 'fuck' or text == 'shit ' or text == '0102 ' or text == 'لتنصيب بوت 🦋💙' then
photo = "https://t.me/x_x_m_mm/10"
local T =[[
✧︙[لتنصيب بوت ](t.me/NL_IBOT )
]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '• اضغط لتنصيب بوت •', url = 't.me/NL_IBOT'},
},
}
local msgg = msg.id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token.."/sendphoto?chat_id=" .. msg.chat_id .. "&photo="..photo.."&caption=".. URL.escape(T).."&reply_to_message_id="..msgg.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
if text =='القناة' or text =='قناة السورس 😈🤪' or text =='قناه السورس' or text =='قنات السورس' or text =='↫ قناة السورس ✧ ' then 
Text = [[
✧ [قناة السورس]
]]
keyboard = {} 
keyboard.inline_keyboard = {{{text='• قناة السورس •',url="t.me/"..chsource..""}}}
local msg_id = msg_id/2097152/0.5
https.request("https://api.telegram.org/bot"..Token..'/sendPhoto?chat_id=' .. msg_chat_id .. '&photo=https://t.me/'..chsource..'&caption=' .. URL.escape(Text).."&reply_to_message_id="..msg_id.."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
return false
end
if text == 'معلومات الكيبورد' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
return send(msg_chat_id,msg_id, [[*
{ مرحبا بك مطوري سأشرح لك كل شئ في لوحه الاوامر بالتفصيل }
1• الاحصائيات { لعرض عدد المجموعات، والمشتركين في البوت }
 2• تفعيل التواصل{ لتفعيل التواصل عبر البوت خاص بك}
 3• تعطيل التواصل{ لتعطيل التواصل عبر البوت خاص بك }
 4• قائمه العام { لعرض المحظورين عام في البوت }
 5• المطورين { لعرض المطورين في بوتك }
8• اذاعه { ارسال رساله لجميع المجموعةات في بوتك }
9• اذاعه خاص { ارسال رساله لجميع مشتركين بوتك!}
10• تعطيل الاشتراك الاجباري { لتعطيل الاشتراك جباري خاص بوتك}
11• تفعيل الاشتراك الاجباري { لتفعيل الاشتراك الاجباري بوتك }
12•اذاعه بالتوجيه { ارسال رساله بالتوجيه الي جميع المجموعات }
13• اذاعه بالتوجيه خاص { ارسال رساله بالتوجيه الي جميع المشتركين }
14• تفعيل البوت الخدمي { يمكن هاذا امر ان منشئ الكروب يفعل البوت م̷ـــِْن دون حتياجه لمطور البوت }
15• تعطيل البوت الخدمي { يمك هل خاصيه ان تفعيل البوت اله مطورين البوت فقط }
16• تنظيف المشتركين { يمكنك ازاله المشتركين الوهمين عبر هل امر }
17• تنظيف المجموعةات { يمكن ازاله المجموعات الوهميه عبر عل امر }
18• جلب نسخه احتياطيه { لعرض ملف المجموعات بوتك }
19• تحديث السورس { لتحديث السورس خاص بوتك }
20• الغاء { للغاء الامر الذي طلبته }
*]],"md",false, false, false, false, reply_markup)
end
if text == 'الاصدار' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
return bot.sendText(msg_chat_id,msg_id,'* ✧ اصدار سورس ماركوس {3×lua}*', 'md', false, false, false, false, reply_markup)
end
if text == 'تنظيف المشتركين' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."Num:User:Pv")   
local x = 0
for k,v in pairs(list) do  
local Get_Chat = bot.getChat(v)
local ChatAction = bot.sendChatAction(v,'Typing')
if ChatAction.luatele ~= "ok" then
x = x + 1
Redis:srem(MARCOS..'Num:User:Pv',v)
end
end
if x ~= 0 then
return send(msg_chat_id,msg_id,'* ✧ العدد الكلي { '..#list..' }\n ✧ تم العثور على { '..x..' } من المشتركين حاظرين البوت*',"md")
else
return send(msg_chat_id,msg_id,'* ✧ العدد الكلي { '..#list..' }\n ✧ لم يتم العثور على وهميين*',"md")
end
end
if text == 'تنظيف المجموعات' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."ChekBotAdd")   
local x = 0
for k,v in pairs(list) do  
local Get_Chat = bot.getChat(v)
if Get_Chat.id then
local statusMem = bot.getChatMember(Get_Chat.id,MARCOS)
if statusMem.status.luatele == "chatMemberStatusMember" then
x = x + 1
send(Get_Chat.id,0,'* ✧ البوت عضو في المجموعة سوف اغادر ويمكنك تفعيلي مره اخره *',"md")
Redis:srem(MARCOS..'ChekBotAdd',Get_Chat.id)
local keys = Redis:keys(MARCOS..'*'..Get_Chat.id)
for i = 1, #keys do
Redis:del(keys[i])
end
bot.leaveChat(Get_Chat.id)
end
else
x = x + 1
local keys = Redis:keys(MARCOS..'*'..v)
for i = 1, #keys do
Redis:del(keys[i])
end
Redis:srem(MARCOS..'ChekBotAdd',v) 
bot.leaveChat(v)
end
end
if x ~= 0 then
return send(msg_chat_id,msg_id,'* ✧ العدد الكلي〘 '..#list..' 〙للمجموعات \n ✧ تم العثور على〘 '..x..' 〙مجموعات البوت ليس ادمن \n ✧ تم تعطيل المجموعة ومغادره البوت من الوهمي *',"md")
else
return send(msg_chat_id,msg_id,'* ✧ العدد الكلي〘 '..#list..' 〙للمجموعات \n ✧ لا توجد مجموعات وهميه*',"md")
end
end
if text == 'تغيير كليشه ستارت' then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Change:Start:Bot"..msg.sender_id.user_id,300,true) 
return send(msg_chat_id,msg_id," ✧ ارسل لي كليشه Start الان ","md",true)  
end
if text == 'مسح كليشه ستارت' or text == 'حذف كليشه ستارت' then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."Start:Bot") 
return send(msg_chat_id,msg_id," ✧ تم مسح كليشه Start ","md",true)   
end
if text and text:match("^تعيين عدد الاعضاء (%d+)$") then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS..'Num:Add:Bot',text:match("تعيين عدد الاعضاء (%d+)$") ) 
send(msg_chat_id,msg_id,'* ✧ تم تعيين عدد اعضاء تفعيل البوت اكثر من -> '..text:match("تعيين عدد الاعضاء (%d+)$")..' عضو *',"md",true)  
end
if text == 'تغيير كليشه المطور' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS..'GetTexting:DevMARCOS'..msg_chat_id..':'..msg.sender_id.user_id,true)
return send(msg_chat_id,msg_id,' ✧ ارسل لي الكليشه الان\n✧ {`#user`} تعني معرف المطور \n✧ {`#id`} تعني ايدي المطور \n✧ {`#name`} تعني اسم المطور\n✧ {`#bio`} تعني نبذه المطور',"md")
end
if text == 'مسح كليشه المطور' or text == 'حذف كليشه المطور' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS..'Texting:DevMARCOS')
return send(msg_chat_id,msg_id,' ✧ تم مسح كليشه المطور')
end
if text == 'اضف رد عام' then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Set:Rd"..msg.sender_id.user_id..":"..msg_chat_id,true)
return send(msg_chat_id,msg_id," ✧ ارسل الان الكلمه لاضافتها في الردود العامه ","md",true)  
end
if text == 'مسح رد عام' then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."Set:On"..msg.sender_id.user_id..":"..msg_chat_id,true)
return send(msg_chat_id,msg_id," ✧ ارسل الان الكلمه لمسحها من الردود العامه","md",true)  
end
if text=='اذاعه خاص' then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Broadcasting:Users" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
send(msg_chat_id,msg_id,[[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, حسنا ارسل الان الاذاعه ،
, ملصق ، متحركه ، صوره ،
, فيديو بصمه ، الفيديو ، ملف ،
, بصمه ، صوت ، رساله ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
, ليتم نشرها للمشتركين ،
, للخروج ارسل ( الغاء ) ،
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]],"md",true)  
return false
end

if text=='اذاعه للمجموعات' then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Broadcasting:Groups" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
send(msg_chat_id,msg_id,[[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, حسنا ارسل الان الاذاعه ،
, ملصق ، متحركه ، صوره ،
, فيديو بصمه ، الفيديو ، ملف ،
, بصمه ، صوت ، رساله ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
, ليتم نشرها للجروبات ،
, للخروج ارسل ( الغاء ) ،
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]],"md",true)  
return false
end

if text=="اذاعه بالتثبيت" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Broadcasting:Groups:Pin" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
send(msg_chat_id,msg_id,[[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
, حسنا ارسل الان الاذاعه ،
, ملصق ، متحركه ، صوره ،
, فيديو بصمه ، الفيديو ، ملف ،
, بصمه ، صوت ، رساله ،
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
, ليتم نشرها للجروبات ،
, للخروج ارسل ( الغاء ) ،
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]],"md",true)  
return false
end

if text=="اذاعه بالتوجيه" then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Broadcasting:Groups:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
send(msg_chat_id,msg_id,"*✧ ارسل لي التوجيه الان*\n*✧ ليتم نشره في المجموعات*\n*✧ للخروج من الامر ارسل〘الغاء〙*","md",true)  
return false
end

if text=='اذاعه بالتوجيه خاص' then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n*✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙* ',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n✧  عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:setex(MARCOS.."Broadcasting:Users:Fwd" .. msg_chat_id .. ":" .. msg.sender_id.user_id, 600, true) 
send(msg_chat_id,msg_id,"*✧ ارسل لي التوجيه الان*\n*✧ ليتم نشره الى اعضاء خاص البوت*\n*✧ للخروج من الامر ارسل〘الغاء〙*","md",true)  
return false
end

if text == ("الردود العامه") then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Rd:Sudo")
text = "\n ✧ قائمة الردود العامه ↑↓\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(list) do
if Redis:get(MARCOS.."Add:Rd:Sudo:Gif"..v) then
db = "متحركه 🎭"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:vico"..v) then
db = "بصمه 📢"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:stekr"..v) then
db = "ملصق 🃏"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:Text"..v) then
db = "رساله ✉"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:Photo"..v) then
db = "صوره 🎇"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:Video"..v) then
db = "فيديو 📹"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:File"..v) then
db = "ملف ✧"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:Audio"..v) then
db = "اغنيه 🎵"
elseif Redis:get(MARCOS.."Add:Rd:Sudo:video_note"..v) then
db = "بصمه فيديو 🎥"
end
text = text..""..k.." -›〘 "..v.." 〙-›〘 "..db.." 〙\n"
end
if #list == 0 then
text = " ✧ لا توجد ردود للمطور"
end
return send(msg_chat_id,msg_id,"["..text.."]","md",true)  
end
if text == ("مسح الردود العامه") then 
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local list = Redis:smembers(MARCOS.."List:Rd:Sudo")
for k,v in pairs(list) do
Redis:del(MARCOS.."Add:Rd:Sudo:Gif"..v)   
Redis:del(MARCOS.."Add:Rd:Sudo:vico"..v)   
Redis:del(MARCOS.."Add:Rd:Sudo:stekr"..v)     
Redis:del(MARCOS.."Add:Rd:Sudo:Text"..v)   
Redis:del(MARCOS.."Add:Rd:Sudo:Photo"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:Video"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:File"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:Audio"..v)
Redis:del(MARCOS.."Add:Rd:Sudo:video_note"..v)
Redis:del(MARCOS.."List:Rd:Sudo")
end
return send(msg_chat_id,msg_id," ✧ تم مسح الردود العامه","md",true)  
end
if text == 'مسح المطورين' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Dev:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مطورين حاليا , ","md",true)  
end
Redis:del(MARCOS.."Dev:Groups") 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المطورين *","md",true)
end
if text == 'مسح الثانوين' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Devss:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مطورين حاليا , ","md",true)  
end
Redis:del(MARCOS.."Devss:Groups") 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المطورين *","md",true)
end
if text == 'مسح قائمه العام' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."BanAll:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد محظورين عام حاليا , ","md",true)  
end
Redis:del(MARCOS.."BanAll:Groups") 
return send(msg_chat_id,msg_id,"* ✧ تم مسح {"..#Info_Members.."} من المحظورين عام *","md",true)
end
if text == 'تعطيل البوت الخدمي' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."BotFree") 
return send(msg_chat_id,msg_id," ✧ تم تعطيل البوت الخدمي ","md",true)
end
if text == 'تعطيل التواصل' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:del(MARCOS.."TwaslBot") 
return send(msg_chat_id,msg_id," ✧ تم تعطيل التواصل داخل البوت ","md",true)
end
if text == 'تفعيل البوت الخدمي' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."BotFree",true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل البوت الخدمي ","md",true)
end
if text == 'تفعيل التواصل' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
Redis:set(MARCOS.."TwaslBot",true) 
return send(msg_chat_id,msg_id," ✧ تم تفعيل التواصل داخل البوت ","md",true)
end
if text == 'قائمه العام' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end 
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."BanAll:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد محظورين عام حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه المحظورين عام  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
var(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المحظورين عام', data = msg.sender_id.user_id..'/BanAll'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'المطورين' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Dev:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مطورين حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه مطورين البوت \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المطورين', data = msg.sender_id.user_id..'/Dev'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if text == 'الثانوين' then
if not msg.Asasy then 
return send(msg_chat_id,msg_id,'\n* ✧ عذرآ الامر يخص〘 '..Controller_Num(1)..' 〙*',"md",true)  
end
if ChannelJoinch(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Chat:Channel:Join:Name'..msg.chat_id), url = 't.me/'..Redis:get(MARCOS..'Chat:Channel:Join'..msg.chat_id)}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
if ChannelJoin(msg) == false then
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = Redis:get(MARCOS..'Channel:Join:Name'), url = 't.me/'..Redis:get(MARCOS..'Channel:Join')}, },}}
return send(msg.chat_id,msg.id,'*\n ✧ عليك الاشتراك في قناة البوت لأستخدام الاوامر*',"md",false, false, false, false, reply_markup)
end
local Info_Members = Redis:smembers(MARCOS.."Devss:Groups") 
if #Info_Members == 0 then
return send(msg_chat_id,msg_id," ✧ لا يوجد مطورين حاليا , ","md",true)  
end
ListMembers = '\n* ✧ قائمه مطورين البوت \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(Info_Members) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = '- مسح المطورين', data = msg.sender_id.user_id..'/Dev'},},}}
return send(msg_chat_id, msg_id, ListMembers, 'md', false, false, false, false, reply_markup)
end
if not msg.Asasy then
if Redis:get(MARCOS.."TwaslBot") and not Redis:sismember(MARCOS.."BaN:In:Tuasl",msg.sender_id.user_id) then
local ListGet = {Sudo_Id,msg.sender_id.user_id}
local IdSudo = bot.getChat(ListGet[1]).id
local IdUser = bot.getChat(ListGet[2]).id
local FedMsg = bot.sendForwarded(IdSudo, 0, IdUser, msg_id)
Redis:setex(MARCOS.."Twasl:UserId"..msg.date,172800,IdUser)
if FedMsg.content.MARCOSbots == "messageSticker" then
send(IdSudo,0,Reply_Status(IdUser,' ✧ قام بارسال الملصق').Reply,"md",true)  
end
return send(IdUser,msg_id,Reply_Status(IdUser,' ✧ تم ارسال رسالتك الى المطور').Reply,"md",true)  
end
else 
if msg.reply_to_message_id ~= 0 then
local Message_Get = bot.getMessage(msg_chat_id, msg.reply_to_message_id)
if Message_Get.forward_info then
local Info_User = Redis:get(MARCOS.."Twasl:UserId"..Message_Get.forward_info.date) or 46899864
if text == 'حظر' then
Redis:sadd(MARCOS..'BaN:In:Tuasl',Info_User)  
return send(msg_chat_id,msg_id,Reply_Status(Info_User,' ✧ تم حظره من تواصل البوت ').Reply,"md",true)  
end 
if text =='الغاء الحظر' or text =='الغاء حظر' then
Redis:srem(MARCOS..'BaN:In:Tuasl',Info_User)  
return send(msg_chat_id,msg_id,Reply_Status(Info_User,' ✧ تم الغاء حظره من تواصل البوت ').Reply,"md",true)  
end 
local ChatAction = bot.sendChatAction(Info_User,'Typing')
if not Info_User or ChatAction.message == "USER_IS_BLOCKED" then
send(msg_chat_id,msg_id,Reply_Status(Info_User,' ✧ قام بحظر البوت لا استطيع ارسال رسالتك ').Reply,"md",true)  
end
if msg.content.video_note then
bot.sendVideoNote(Info_User, 0, msg.content.video_note.video.remote.id)
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
bot.sendPhoto(Info_User, 0, idPhoto,'')
elseif msg.content.sticker then 
bot.sendSticker(Info_User, 0, msg.content.sticker.sticker.remote.id)
elseif msg.content.voice_note then 
bot.sendVoiceNote(Info_User, 0, msg.content.voice_note.voice.remote.id, '', 'md')
elseif msg.content.video then 
bot.sendVideo(Info_User, 0, msg.content.video.video.remote.id, '', "md")
elseif msg.content.animation then 
bot.sendAnimation(Info_User,0, msg.content.animation.animation.remote.id, '', 'md')
elseif msg.content.document then
bot.sendDocument(Info_User, 0, msg.content.document.document.remote.id, '', 'md')
elseif msg.content.audio then
bot.sendAudio(Info_User, 0, msg.content.audio.audio.remote.id, '', "md") 
elseif text then
send(Info_User,0,text,"md",true)
end 
send(msg_chat_id,msg_id,Reply_Status(Info_User,' ✧ تم ارسال رسالتك اليه ').Reply,"md",true)  
end
end
end 
end --UserBot
end -- File_Bot_Run


function CallBackLua(data) --- هذا الكالباك بي الابديت 
    ChatId = data.chat_id
if data and data.MARCOSbots and data.MARCOSbots == "updateNewInlineCallbackQuery" then
local Text = bot.base64_decode(data.payload.data)
if Text and Text:match('/Hmsa1@(%d+)@(%d+)/(%d+)') then
local ramsesadd = {string.match(Text,"^/Hmsa1@(%d+)@(%d+)/(%d+)$")}
if tonumber(data.sender_user_id) == tonumber(ramsesadd[1]) or tonumber(ramsesadd[2]) == tonumber(data.sender_user_id) then
local inget = Redis:get(MARCOS..'hmsabots'..ramsesadd[3]..data.sender_user_id)
https.request("https://api.telegram.org/bot"..Token..'/answerCallbackQuery?callback_query_id='..data.id..'&text='..URL.escape(inget)..'&show_alert=true')
else
https.request("https://api.telegram.org/bot"..Token..'/answerCallbackQuery?callback_query_id='..data.id..'&text='..URL.escape('هذه الهمسه ليست لك')..'&show_alert=true')
end
end
end
if data and data.MARCOSbots and data.MARCOSbots == "updateNewInlineQuery" then
local Text = data.query
if Text and Text:match("^(.*) @(.*)$")  then
local username = {string.match(Text,"^(.*) @(.*)$")}
local UserId_Info = bot.searchPublicChat(username[2])
if UserId_Info.id then
local idnum = math.random(1,64)
local input_message_content = {message_text = 'هذي الهمسة للحلو ( [@'..username[2]..'] ) هو اللي يقدر يشوفها 💖', parse_mode = 'Markdown'}	
local reply_markup = {inline_keyboard={{{text = 'عرض الهمسه ✧ ', callback_data = '/Hmsa1@'..data.sender_user_id..'@'..UserId_Info.id..'/'..idnum}}}}	
local resuult = {{type = 'article', id = idnum, title = 'هذه همسه سريه الى [@'..username[2]..']', input_message_content = input_message_content, reply_markup = reply_markup}}	
https.request("https://api.telegram.org/bot"..Token..'/answerInlineQuery?inline_query_id='..data.id..'&results='..JSON.encode(resuult))
Redis:set(MARCOS..'hmsabots'..idnum..UserId_Info.id,username[1])
Redis:set(MARCOS..'hmsabots'..idnum..data.sender_user_id,username[1])
end
end
end
if data.MARCOSbots == "updateChatMember" then
print("done1")
if data.new_chat_member.member_id.user_id == tonumber(MARCOS) or data.old_chat_member.member_id.user_id == tonumber(MARCOS) then
print("done2")
if data.new_chat_member.status.can_delete_messages == true or data.old_chat_member.status.can_delete_messages == true then
print("done3")
local chat_id = data.chat_id
local who_promot = data.actor_user_id
--code start
local Info_Chats = bot.getSupergroupFullInfo(chat_id)
local Get_Chat = bot.getChat(chat_id)
local UserInfo = bot.getUser(who_promot)
--check if free bot
if not Redis:get(MARCOS.."BotFree") then
return send(chat_id,0,"\n*✧ الوضع الخدمي تم تعطيله من قبل مطور البوت *","md",true)  
end
---end free bot
 ---check if count is true
if tonumber(Info_Chats.member_count) < tonumber(Redis:get(MARCOS..'Num:Add:Bot') or 0) and not tonumber(Sudo_Id) == tonumber(who_promot) then
bot.sendText(chat_id,0,'✧ عدد الاعضاء قليل لا يمكن تفعيل المجموعة\n يجب ان يكون اكثر من '..Redis:get(MARCOS..'Num:Add:Bot'),"md",true)
bot.leaveChat(chat_id)
end---end check if count is true
if not Redis:sismember(MARCOS.."ChekBotAdd", chat_id) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {{{text = Get_Chat.title, url = Info_Chats.invite_link.invite_link}, },}}
bot.sendText(Sudo_Id,0,'*\n✧ تم تفعيل جروب \n✧ بواسطة -> {*['..UserInfo.first_name..'](tg://user?id='..who_promot..')*} \n✧ معلومات المجموعة -> \n✧ عدد الاعضا -> '..Info_Chats.member_count..'\n✧ عدد المشرفين -> '..Info_Chats.administrator_count..'\n✧  عدد المطرودين -> '..Info_Chats.banned_count..'\n✧  عدد المقيدين -> '..Info_Chats.restricted_count..'*\n✧ اسم المجموعة -> -  ['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..')\n✧ ايدي المجموعة -> - `'..chat_id..'`',"md",true, false, false, false, reply_markup)
local Info_Members = bot.getSupergroupMembers(chat_id, "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.MARCOSbots == "chatMemberStatusCreator" then
Redis:sadd(MARCOS.."Owners:Group"..chat_id,v.member_id.user_id) 
else
Redis:sadd(MARCOS.."Admin:Group"..chat_id,v.member_id.user_id) 
end
end
end
Redis:sadd(MARCOS.."ChekBotAdd",chat_id)
local txt = '✧ تم تفعيل المجموعة ['..Get_Chat.title..']('..Info_Chats.invite_link.invite_link..') تلقائياً\n✧ بواسطة 「 ['..UserInfo.first_name..'](tg://user?id='..who_promot..')⁪⁬‌ 」\n'
local reply_markup1 = bot.replyMarkup{
type = 'inline',
data = {{{text = '• قناة السورس •', url = 't.me/'..chsource..''}, },}}
return send(chat_id, 0 , txt, 'md', true , false, false, false, reply_markup1)
end ---end done active
--code end
end
end
end
if data and data.MARCOSbots and data.MARCOSbots == "updateSupergroup" then
local Get_Chat = bot.getChat('-100'..data.supergroup.id)
if data.supergroup.status.MARCOSbots == "chatMemberStatusBanned" then
Redis:srem(MARCOS.."ChekBotAdd",'-100'..data.supergroup.id)

return send(Sudo_Id,0,'*\n ✧ تم طرد البوت من جروب جديده \n ✧ اسم المجموعه -> '..Get_Chat.title..'\n ✧ ايدي المجموعه -> *`-100'..data.supergroup.id..'`\n ✧ تم مسح جميع البيانات المتعلقه بالمجموعه',"md")
end
elseif data and data.MARCOSbots and data.MARCOSbots == "updateMessageSendSucceeded" then
local msg = data.message
local Chat = msg.chat_id
if msg.content.text then
text = msg.content.text.text
end
if msg.content.video_note then
if msg.content.video_note.video.remote.id == Redis:get(MARCOS.."PinMsegees:"..msg.chat_id) then
bot.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(MARCOS.."PinMsegees:"..msg.chat_id)
end
elseif msg.content.photo then
if msg.content.photo.sizes[1].photo.remote.id then
idPhoto = msg.content.photo.sizes[1].photo.remote.id
elseif msg.content.photo.sizes[2].photo.remote.id then
idPhoto = msg.content.photo.sizes[2].photo.remote.id
elseif msg.content.photo.sizes[3].photo.remote.id then
idPhoto = msg.content.photo.sizes[3].photo.remote.id
end
if idPhoto == Redis:get(MARCOS.."PinMsegees:"..msg.chat_id) then
bot.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(MARCOS.."PinMsegees:"..msg.chat_id)
end
elseif msg.content.sticker then 
if msg.content.sticker.sticker.remote.id == Redis:get(MARCOS.."PinMsegees:"..msg.chat_id) then
bot.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(MARCOS.."PinMsegees:"..msg.chat_id)
end
elseif msg.content.voice_note then 
if msg.content.voice_note.voice.remote.id == Redis:get(MARCOS.."PinMsegees:"..msg.chat_id) then
bot.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(MARCOS.."PinMsegees:"..msg.chat_id)
end
elseif msg.content.video then 
if msg.content.video.video.remote.id == Redis:get(MARCOS.."PinMsegees:"..msg.chat_id) then
bot.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(MARCOS.."PinMsegees:"..msg.chat_id)
end
elseif msg.content.animation then 
if msg.content.animation.animation.remote.id ==  Redis:get(MARCOS.."PinMsegees:"..msg.chat_id) then
bot.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(MARCOS.."PinMsegees:"..msg.chat_id)
end
elseif msg.content.document then
if msg.content.document.document.remote.id == Redis:get(MARCOS.."PinMsegees:"..msg.chat_id) then
bot.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(MARCOS.."PinMsegees:"..msg.chat_id)
end
elseif msg.content.audio then
if msg.content.audio.audio.remote.id == Redis:get(MARCOS.."PinMsegees:"..msg.chat_id) then
bot.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(MARCOS.."PinMsegees:"..msg.chat_id)
end
elseif text then
if text == Redis:get(MARCOS.."PinMsegees:"..msg.chat_id) then
bot.pinChatMessage(msg.chat_id,msg.id,true)
Redis:del(MARCOS.."PinMsegees:"..msg.chat_id)
end
end

elseif data and data.MARCOSbots and data.MARCOSbots == "updateNewMessage" then
if data.message.content.MARCOSbots == "messageChatDeleteMember" or data.message.content.MARCOSbots == "messageChatAddMembers" or data.message.content.MARCOSbots == "messagePinMessage" or data.message.content.MARCOSbots == "messageChatChangeTitle" or data.message.content.MARCOSbots == "messageChatJoinByLink" then
if Redis:get(MARCOS.."Lock:tagservr"..data.message.chat_id) then
bot.deleteMessages(data.message.chat_id,{[1]= data.message.id})
end
end 
if tonumber(data.message.sender_user_id) == tonumber(MARCOS) then
return false
end
File_Bot_Run(data.message,data.message)

elseif data and data.MARCOSbots and data.MARCOSbots == "updateMessageEdited" then
-- data.chat_id -- data.message_id
local Message_Edit = bot.getMessage(data.chat_id, data.message_id)
if Message_Edit.sender_id.user_id == MARCOS then
print('This is Edit for Bot')
return false
end
File_Bot_Run(Message_Edit,Message_Edit)
if tonumber(Message_Edit.sender_id.user_id) == 5438742764 then
data.The_Controller = 1
elseif tonumber(Message_Edit.sender_id.user_id) == 1548499186 then
data.The_Controller = 1
elseif The_ControllerAll(Message_Edit.sender_id.user_id) == true then  
data.The_Controller = 1
elseif Redis:sismember("dev:all:source",Message_Edit.sender_id.user_id) then
data.The_Controller = 1
elseif Redis:sismember(MARCOS.."Devss:Groups",Message_Edit.sender_id.user_id) == true then
data.The_Controller = 2
elseif Redis:sismember(MARCOS.."Dev:Groups",Message_Edit.sender_id.user_id) == true then
data.The_Controller = 3
elseif Redis:sismember(MARCOS.."Ownerss:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 44
elseif Redis:sismember(MARCOS.."SuperCreator:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 4
elseif Redis:sismember(MARCOS.."Creator:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 5
elseif Redis:sismember(MARCOS.."Manger:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 6
elseif Redis:sismember(MARCOS.."Admin:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 7
elseif Redis:sismember(MARCOS.."Special:Group"..data.chat_id,Message_Edit.sender_id.user_id) == true then
data.The_Controller = 8
elseif tonumber(Message_Edit.sender_id.user_id) == tonumber(MARCOS) then
data.The_Controller = 9
else
data.The_Controller = 10
end  
if data.The_Controller == 1 then  
data.ControllerBot = true
end
if data.The_Controller == 1 or data.The_Controller == 2 then
data.Devss = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 then
data.Dev = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 9 then
data.Ownerss = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 9 then
data.SuperCreator = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 9 then
data.Creator = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 9 then
data.Manger = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 7 or data.The_Controller == 9 then
data.Admin = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 7 or data.The_Controller == 8 or data.The_Controller == 9 then
data.Special = true
end
local UserInfo = bot.getUser(Message_Edit.sender_id.user_id)
local names = FlterBio(UserInfo.first_name) 
local monsha = Redis:smembers(MARCOS.."Ownerss:Group"..data.chat_id) 
Redis:incr(MARCOS..'Num:Message:Edit'..data.chat_id..Message_Edit.sender_id.user_id)
if not data.Creator then
if Message_Edit.content.MARCOSbots == "messageContact" or Message_Edit.content.MARCOSbots == "messageVideoNote" or Message_Edit.content.MARCOSbots == "messageDocument" or Message_Edit.content.MARCOSbots == "messageAudio" or Message_Edit.content.MARCOSbots == "messageVideo" or Message_Edit.content.MARCOSbots == "messageVoiceNote" or Message_Edit.content.MARCOSbots == "messageAnimation" or Message_Edit.content.MARCOSbots == "messagePhoto" then
if tonumber(Message_Edit.sender_id.user_id) == tonumber(MARCOS) then
return false 
end
if Redis:get(MARCOS.."Lock:edit"..data.chat_id) then
if #monsha ~= 0 then 
local ListMembers = '\n* ✧ تاك للمالكين  \n  • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ • *\n'
for k, v in pairs(monsha) do
local UserInfo = bot.getUser(v)
if UserInfo and UserInfo.username and UserInfo.username ~= "" then
ListMembers = ListMembers.."*"..k.." -> *[@"..UserInfo.username.."](tg://user?id="..v..")\n"
else
ListMembers = ListMembers.."*"..k.." ->* ["..v.."](tg://user?id="..v..")\n"
end
end
 
local tecxt = ListMembers.."\n\n".."\n ✧ المستخدم  {["..names.." ](tg://user?id="..Message_Edit.sender_id.user_id..")}"..
"\n ✧ قام بتعديل الميديا"
send(data.chat_id,0,tecxt,"md")
end
bot.deleteMessages(data.chat_id,{[1]= data.message_id})
end
end
end
elseif data and data.MARCOSbots and data.MARCOSbots == "updateNewCallbackQuery" then
-- data.chat_id
-- data.payload.data
-- data.sender_user_id
Text = bot.base64_decode(data.payload.data)
IdUser = data.sender_user_id
ChatId = data.chat_id
Msg_id = data.message_id
calc_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'ON', data = IdUser..'ON'},{text = 'DEL', data = IdUser..'DEL'},{text = 'AC', data = IdUser..'rest'},{text = 'OFF', data = IdUser..'OFF'},
},
{
{text = '^', data = IdUser..'calc&^'},{text = '√', data = IdUser..'calc&√'},{text = '(', data = IdUser..'calc&('},{text = ')', data = IdUser..'calc&)'},
},
{
{text = '7', data = IdUser..'calc&7'},{text = '8', data = IdUser..'calc&8'},{text = '9', data = IdUser..'calc&9'},{text = '÷', data = IdUser..'calc&/'},
},
{
{text = '4', data = IdUser..'calc&4'},{text = '5', data = IdUser..'calc&5'},{text = '6', data = IdUser..'calc&6'},{text = 'x', data = IdUser..'calc&*'},
},
{
{text = '1', data = IdUser..'calc&1'},{text = '2', data = IdUser..'calc&2'},{text = '3', data = IdUser..'calc&3'},{text = '-', data = IdUser..'calc&-'},
},
{
{text = '0', data = IdUser..'calc&0'},{text = '.', data = IdUser..'calc&.'},{text = '+', data = IdUser..'calc&+'},{text = '=', data = IdUser..'equal'},
},
}
}
if Text and Text:match('(%d+)calc&(.*)') then
local result = {Text:match('(%d+)calc&(.*)')}
local num = result[2]
local sendrr = result[1]
if tonumber(IdUser) == tonumber(sendrr) then
local get = Redis:get(MARCOS..IdUser..ChatId.."num")
if get then
tf = get 
else
tf = "" 
end
local txx = tf..num
Redis:set(MARCOS..IdUser..ChatId.."num",txx)
edit(ChatId,Msg_id," ✧ اجراء عمليه حسابيه \n ✧ "..txx, 'html', false, false, calc_markup)
else
bot.answerCallbackQuery(data.id, " ✧ الامر لا يخصك", true)
end
end
if Text and Text:match('(%d+)equal') then
local sendrr = Text:match('(%d+)equal')
if tonumber(IdUser) == tonumber(sendrr) then
local math = Redis:get(MARCOS..IdUser..ChatId.."num")
if math then
xxx = io.popen("gcalccmd '"..math.."'"):read('*a')
res = " ✧ ناتج "..math.." هو \n ✧ "..xxx
else
res = " ✧ لا يوجد ما يمكن حسابه"
end
edit(ChatId,Msg_id,res , 'html', false, false, calc_markup)
Redis:del(MARCOS..IdUser..ChatId.."num")
else
bot.answerCallbackQuery(data.id, " ✧ الامر لا يخصك", true)
end
end
if Text and Text:match('(%d+)DEL') then
local sendrr = Text:match('(%d+)DEL')
if tonumber(IdUser) == tonumber(sendrr) then
local get = Redis:get(MARCOS..IdUser..ChatId.."num")
if get then
gxx = ""
for a = 1, string.len(get)-1 do  
gxx = gxx..(string.sub(get, a,a)) 
end
Redis:set(MARCOS..IdUser..ChatId.."num",gxx)
edit(ChatId,Msg_id," ✧ اجراء عمليه حسابيه \n ✧ "..gxx, 'html', false, false, calc_markup)
else
bot.answerCallbackQuery(data.id, " ✧ لا يوجد مايمكن حذفه", true)
end
else
bot.answerCallbackQuery(data.id, " ✧ الامر لا يخصك", true)
end
end
if Text and Text:match('(%d+)ON') then
local sendrr = Text:match('(%d+)ON') 
if tonumber(IdUser) == tonumber(sendrr) then
Redis:del(MARCOS..IdUser..ChatId.."num")
edit(ChatId,Msg_id," ✧ تم تشغيل الحاسبه بنجاح ✅\n ✧ restarted ✅" , 'html', false, false, calc_markup)
else
bot.answerCallbackQuery(data.id, " ✧ الامر لا يخصك", true)
end
end
if Text and Text:match('(%d+)OFF') then
local sendrr = Text:match('(%d+)OFF')
if tonumber(IdUser) == tonumber(sendrr) then
Redis:del(MARCOS..IdUser..ChatId.."num")
local reply_markupp = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'ON', data = IdUser..'ON'},
},
}
}
edit(ChatId,Msg_id," ✧ تم تعطيل الحاسبه بنجاح \n ✧ اضغط ON لتشغيلها " , 'html', false, false, reply_markupp)
else
bot.answerCallbackQuery(data.id, " ✧ الامر لا يخصك", true)
end
end
if Text and Text:match('(%d+)rest') then
local sendrr = Text:match('(%d+)rest')
if tonumber(IdUser) == tonumber(sendrr) then
Redis:del(MARCOS..IdUser..ChatId.."num")
edit(ChatId,Msg_id," ✧ اهلا بك في بوت الحاسبه\n ✧ welcome to calculator" , 'html', false, false, calc_markup)
else
bot.answerCallbackQuery(data.id, " ✧ الامر لا يخصك", true)
end
end
if tonumber(IdUser) == 689087834 then
data.The_Controller = 1
elseif The_ControllerAll(IdUser) == true then  
data.The_Controller = 1
elseif Redis:sismember("dev:all:source",IdUser) then
data.The_Controller = 1
elseif Redis:sismember(MARCOS.."Devss:Groups",IdUser) == true then
data.The_Controller = 2
elseif Redis:sismember(MARCOS.."Dev:Groups",IdUser) == true then
data.The_Controller = 3
elseif Redis:sismember(MARCOS.."Ownerss:Group"..ChatId,IdUser) == true then
data.The_Controller = 44
elseif Redis:sismember(MARCOS.."SuperCreator:Group"..ChatId,IdUser) == true then
data.The_Controller = 4
elseif Redis:sismember(MARCOS.."Creator:Group"..ChatId,IdUser) == true then
data.The_Controller = 5
elseif Redis:sismember(MARCOS.."Manger:Group"..ChatId,IdUser) == true then
data.The_Controller = 6
elseif Redis:sismember(MARCOS.."Admin:Group"..ChatId,IdUser) == true then
data.The_Controller = 7
elseif Redis:sismember(MARCOS.."Special:Group"..ChatId,IdUser) == true then
data.The_Controller = 8
elseif tonumber(IdUser) == tonumber(MARCOS) then
data.The_Controller = 9
else
data.The_Controller = 10
end  
if data.The_Controller == 1 then  
data.ControllerBot = true
end
if data.The_Controller == 1 or data.The_Controller == 2 then
data.Devss = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 then
data.Dev = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 9 then
data.Ownerss = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 9 then
data.SuperCreator = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 9 then
data.Creator = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 9 then
data.Manger = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 7 or data.The_Controller == 9 then
data.Admin = true
end
if data.The_Controller == 1 or data.The_Controller == 2 or data.The_Controller == 3 or data.The_Controller == 44 or data.The_Controller == 4 or data.The_Controller == 5 or data.The_Controller == 6 or data.The_Controller == 7 or data.The_Controller == 8 or data.The_Controller == 9 then
data.Special = true
end

if Text and Text:match("(%d+)/idomery/(%d+)") then
local UserId = {Text:match("(%d+)/idomery/(%d+)")}
if tonumber(IdUser) == tonumber(UserId[1]) then
var(UserId)
Redis:set(MARCOS.."zogte"..ChatId..UserId[1],UserId[2])
Redis:set(MARCOS.."zogte"..ChatId..UserId[2],UserId[1])
Redis:sadd(MARCOS.."zogatall"..ChatId,UserId[1])
local UserInfo = bot.getUser(UserId[1])
local Teext = "- ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserId[1]..")"
local UserInfo2 = bot.getUser(UserId[2])
local Teext2 = "- ["..UserInfo2.first_name.."](tg://user?id="..UserId[2]..")"
return edit(ChatId,Msg_id," ✧ لقد قبل -> "..Teext.."\n ✧ بالزواج من -> "..Teext2, "md")
end
end
if Text and Text:match("(%d+)/idonotmery/(%d+)") then
local UserId = {Text:match("(%d+)/idonotmery/(%d+)")}
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:del(MARCOS.."zogte"..ChatId..UserId[1])
Redis:del(MARCOS.."zogte"..ChatId..UserId[2])
Redis:srem(MARCOS.."zogatall"..ChatId,UserId[1])
local UserInfo = bot.getUser(UserId[1])
local Teext = "- ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserId[1]..")"
local UserInfo2 = bot.getUser(UserId[2])
local Teext2 = "- ["..UserInfo2.first_name.."](tg://user?id="..UserId[2]..")"
return edit(ChatId,Msg_id," ✧ لم يقبل -> "..Teext.."\n ✧ بالزواج من -> "..Teext2, "md")
end
end
if Text and Text:match("(%d+)/tlakkk/(%d+)") then
local UserId = {Text:match("(%d+)/tlakkk/(%d+)")}
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:del(MARCOS.."zogte"..ChatId..UserId[1])
Redis:del(MARCOS.."zogte"..ChatId..UserId[2])
Redis:srem(MARCOS.."zogatall"..ChatId,UserId[1])
local UserInfo = bot.getUser(UserId[1])
local Teext = "- ["..FlterBio(UserInfo.first_name).."](tg://user?id="..UserId[1]..")"
local UserInfo2 = bot.getUser(UserId[2])
local Teext2 = "- ["..UserInfo2.first_name.."](tg://user?id="..UserId[2]..")"
return edit(ChatId,Msg_id," ✧ تم طلاق -> "..Teext.."\n ✧ من الزوج -> "..Teext2, "md")
end
end

if Text and Text:match('(%d+)/Nzlne') then
local UserId = Text:match('(%d+)/Nzlne')
if tonumber(IdUser) == tonumber(UserId) then
Redis:srem(MARCOS.."Special:Group"..ChatId,IdUser)
Redis:srem(MARCOS.."Admin:Group"..ChatId,IdUser)
Redis:srem(MARCOS.."Manger:Group"..ChatId,IdUser)
Redis:srem(MARCOS.."Creator:Group"..ChatId,IdUser)
Redis:srem(MARCOS.."SuperCreator:Group"..ChatId,IdUser)
Redis:srem(MARCOS.."Dev:Groups",IdUser) 
Redis:srem(MARCOS.."Ownerss:Group"..ChatId,IdUser)
return edit(ChatId,Msg_id,"\n ✧ تم تنزيلك من جميع الرتب", 'md')
end
end
if Text and Text:match('(%d+)/noNzlne') then
local UserId = Text:match('(%d+)/noNzlne')
if tonumber(IdUser) == tonumber(UserId) then
return edit(ChatId,Msg_id,"\n ✧ تم الغاء عمليه التنزيل", 'md')
end
end

if Text and Text:match('(%d+)/statusSuperCreatorz/(%d+)') and data.Ownerss then
local UserId = {Text:match('(%d+)/statusSuperCreatorz/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if Redis:sismember(MARCOS.."SuperCreator:Group"..ChatId,UserId[2]) then
Redis:srem(MARCOS.."SuperCreator:Group"..ChatId,UserId[2])
else
Redis:sadd(MARCOS.."SuperCreator:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end

if Text and Text:match('(%d+)/statusCreatorz/(%d+)') and data.SuperCreator then
local UserId = {Text:match('(%d+)/statusCreatorz/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then 
if Redis:sismember(MARCOS.."Creator:Group"..ChatId,UserId[2]) then
Redis:srem(MARCOS.."Creator:Group"..ChatId,UserId[2])
else
Redis:sadd(MARCOS.."Creator:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end

if Text and Text:match('(%d+)/statusMangerz/(%d+)') and data.Creator then
local UserId = {Text:match('(%d+)/statusMangerz/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if Redis:sismember(MARCOS.."Manger:Group"..ChatId,UserId[2]) then
Redis:srem(MARCOS.."Manger:Group"..ChatId,UserId[2])
else
Redis:sadd(MARCOS.."Manger:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end

if Text and Text:match('(%d+)/statusAdminz/(%d+)') and data.Manger then
local UserId = {Text:match('(%d+)/statusAdminz/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if Redis:sismember(MARCOS.."Admin:Group"..ChatId,UserId[2]) then
Redis:srem(MARCOS.."Admin:Group"..ChatId,UserId[2])
else
Redis:sadd(MARCOS.."Admin:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end

if Text and Text:match('(%d+)/statusSpecialz/(%d+)') and data.Admin then
local UserId = {Text:match('(%d+)/statusSpecialz/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if Redis:sismember(MARCOS.."Special:Group"..ChatId,UserId[2]) then
Redis:srem(MARCOS.."Special:Group"..ChatId,UserId[2])
else
Redis:sadd(MARCOS.."Special:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end

if Text and Text:match('(%d+)/statusmem/(%d+)') and data.Ownerss then
local UserId ={ Text:match('(%d+)/statusmem/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:srem(MARCOS.."Special:Group"..ChatId,UserId[2])
Redis:srem(MARCOS.."Admin:Group"..ChatId,UserId[2])
Redis:srem(MARCOS.."Manger:Group"..ChatId,UserId[2])
Redis:srem(MARCOS.."Creator:Group"..ChatId,UserId[2])
Redis:srem(MARCOS.."SuperCreator:Group"..ChatId,UserId[2])
Redis:srem(MARCOS.."SilentGroup:Group"..ChatId,UserId[2])
Redis:srem(MARCOS.."BanGroup:Group"..ChatId,UserId[2])
bot.setChatMemberStatus(ChatId,UserId[2],'restricted',{1,1,1,1,1,1,1,1,1})
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end
if Text and Text:match('(%d+)/statusban/(%d+)') and data.Admin then
local UserId ={ Text:match('(%d+)/statusban/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if StatusCanOrNotCan(ChatId,UserId[2]) then
return bot.answerCallbackQuery(data.id,"\n ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(ChatId,UserId[2]).." } ", true)
end
if Redis:sismember(MARCOS.."BanGroup:Group"..ChatId,UserId[2]) then
Redis:srem(MARCOS.."BanGroup:Group"..ChatId,UserId[2])
bot.setChatMemberStatus(ChatId,UserId[2],'restricted',{1,1,1,1,1,1,1,1,1})
else
Redis:sadd(MARCOS.."BanGroup:Group"..ChatId,UserId[2])
bot.setChatMemberStatus(ChatId,UserId[2],'banned',0)
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end
if Text and Text:match('(%d+)/statusktm/(%d+)') and data.Admin then
local UserId ={ Text:match('(%d+)/statusktm/(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if StatusSilent(ChatId,UserId[2]) then
return bot.answerCallbackQuery(data.id, "\n ✧ عذرآ لا تستطيع استخدام الامر على { "..Controller(ChatId,UserId[2]).." } ", true)
end
if Redis:sismember(MARCOS.."SilentGroup:Group"..ChatId,UserId[2]) then
Redis:srem(MARCOS.."SilentGroup:Group"..ChatId,UserId[2])
else
Redis:sadd(MARCOS.."SilentGroup:Group"..ChatId,UserId[2])
end
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end
if Text and Text:match('/delAmr1') then
local UserId = Text:match('/delAmr1')
if data.Admin then
return bot.deleteMessages(ChatId,{[1]= Msg_id})
end
end
if Text and Text:match('(%d+)/cancelamr') and data.Admin then
local UserId = Text:match('(%d+)/cancelamr')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Command:Reids:Group:Del"..ChatId..":"..IdUser)
Redis:del(MARCOS.."Command:Reids:Group"..ChatId..":"..IdUser)
Redis:del(MARCOS.."Set:Manager:rd"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:Manager:rd"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:Rd"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:On"..IdUser..":"..ChatId)
Redis:del(MARCOS.."reply:on"..IdUser..":"..ChatId)
Redis:del(MARCOS.."reply:of"..IdUser..":"..ChatId)
return edit(ChatId,Msg_id," ✧ *تم الغاء الامر بنجاح ✅*", 'md')
end
end


if Text and Text:match('(%d+)/mute_thshesh') and data.Creator then
local UserId = Text:match('(%d+)/mute_thshesh')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."amrthshesh"..ChatId)
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر التسليه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_kicknum') and data.SuperCreator then
local UserId = Text:match('(%d+)/mute_kicknum')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."spammkick"..ChatId)
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر منع التصفيه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_seck') and data.Creator then
local UserId = Text:match('(%d+)/mute_seck')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."kadmeat"..ChatId)
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الصيغ").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_knile') and data.Manger then
local UserId = Text:match('(%d+)/mute_knile')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."knele"..ChatId)
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده ??', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر غنيلي").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_brj') and data.Manger then
local UserId = Text:match('(%d+)/mute_brj')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."brjj"..ChatId)
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الابراج").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_audio') and data.Manger then
local UserId = Text:match('(%d+)/mute_audio')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS..'lock_geamsAudio1'..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الصوتيات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_audioall') and data.Manger then
local UserId = Text:match('(%d+)/mute_audioall')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS..'lock_geamsAudio'..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الصوتيات العامه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_takall') and data.Creator then
local UserId = Text:match('(%d+)/mute_takall')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS..'takforall'..ChatId,'open')
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر التاك للكل").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/on_tak') and data.Creator then
local UserId = Text:match('(%d+)/on_tak')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS..'takforall'..ChatId,'open')
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'BackTac'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر التاك للكل").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/all_on') and data.Manger then
local UserId = Text:match('(%d+)/all_on')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS..'all:members'..ChatId,'open')
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'BackTac'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر all بالكلام").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/picture_on') and data.Manger then
local UserId = Text:match('(%d+)/picture_on')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS..'lockalllll'..ChatId,'on')
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'BackTac'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر التاك بالصوره").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_namemy') and data.Manger then
local UserId = Text:match('(%d+)/mute_namemy')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS..'lock_chengname'..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر تنبيه الاسماء").unLock, 'md', true, false, reply_markup)
end
end


if Text and Text:match('(%d+)/unmute_thshesh') and data.Creator then
local UserId = Text:match('(%d+)/unmute_thshesh')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."amrthshesh"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر التسليه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_kicknum') and data.Creator then
local UserId = Text:match('(%d+)/unmute_kicknum')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."spammkick"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر منع التصفيه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_seck') and data.Creator then
local UserId = Text:match('(%d+)/unmute_seck')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."kadmeat"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الصيغ").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_knile') and data.Manger then
local UserId = Text:match('(%d+)/unmute_knile')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."knele"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر غنيلي").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_brj') and data.Manger then
local UserId = Text:match('(%d+)/unmute_brj')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."brjj"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الابراج").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_audio') and data.Manger then
local UserId = Text:match('(%d+)/unmute_audio')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS..'lock_geamsAudio1'..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الصوتيات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_audioall') and data.Creator then
local UserId = Text:match('(%d+)/unmute_audioall')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS..'lock_geamsAudio'..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الصوتيات العامه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_takall') and data.Creator then
local UserId = Text:match('(%d+)/unmute_takall')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS..'takforall'..ChatId,'close')
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر التاك للكل").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/of_tak') and data.Creator then
local UserId = Text:match('(%d+)/of_tak')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS..'takforall'..ChatId,'close')
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'BackTac'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر التاك للكل").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/all_of') and data.Manger then
local UserId = Text:match('(%d+)/all_of')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS..'all:members'..ChatId,'close')
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'BackTac'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر all بالكلاك").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/picture_of') and data.Manger then
local UserId = Text:match('(%d+)/picture_of')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS..'lockalllll'..ChatId,'off')
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'BackTac'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر التاك بالصوره").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_namemy') and data.Manger then
local UserId = Text:match('(%d+)/unmute_namemy')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS..'lock_chengname'..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر تنبيه الاسماء").unLock, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/nsnsks') then
local UserId = Text:match('(%d+)/nsnsks')
if tonumber(IdUser) == tonumber(UserId) then
local bain = bot.getUser(IdUser)
local txxt = [[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰

✧ مرحبا بك هذه اوامر لعبة البنك كالاتي

✧ انشاء حساب بنكي  -> تفتح حساب وتقدر تحول فلوس مع مزايا اخري

✧ مسح حساب بنكي  -> تلغي حسابك البنكي

✧ تحويل -> تطلب رقم حساب الشخص وتحول له فلوس

✧ حسابي -> يطلع لك رقم حسابك عشان تعطيه للشخص اللي بيحول لك

✧ فلوسي -> يظهرلك عدد فلوسك

✧ مسح كل الفلوس -> يمسح فلوس لعبة البنك

✧ راتب -> يعطيك راتب كل ١٠ دقائق

✧ بخشيش -> يعطيك بخشيش كل ١٠ دقايق

✧ زرف -> تزرف فلوس اشخاص كل ١٠ دقايق

✧ استثمار -> تستثمر بالمبلغ اللي تريده مع نسبة ربح مضمونه من ١٪؜ الى ١٥٪؜

✧ حظ -> تلعبها بأي مبلغ تكسبه ياتخسره انت وحظك

✧ مضاربه -> تضارب بأي مبلغ تريده والنسبة من ٩٠٪؜ الى ٩٠٪؜ انت وحظك

✧ قرض -> تاخذ قرض من البنك

✧ تسديد القرض -> بتسدد القرض اذا عليك 

▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '⟨•💖▸ عــربــي² •⟩', callback_data=IdUser.."/nsnsbbl"},
},
{
{text = '⟨•💖▸ 𝙀𝙄??𝙂𝙇𝙄𝙎𝙃 •⟩', callback_data=IdUser.."/fghbdn"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/nsnsbbl') then
local UserId = Text:match('(%d+)/nsnsbbl')
if tonumber(IdUser) == tonumber(UserId) then
local bain = bot.getUser(IdUser)
local txxt = [[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰

✧ انشاء كوبون -> ثم ارسل اي رقم يعجبك

✧ كوبون -> ارسل الرقم التي انشات

✧ حساب -> ايدي حساب الشخص ف البنك

✧ مسح حساب -> ايدي الحساب يقوم بمسح حسابك البنكي

✧ هجوم -> تهجم عالخصم مع زيادة نسبة كل هجوم

✧ مراهنه -> تحط مبلغ وتراهن عليه

✧ كنز -> يعطيك كنز بسعر مختلف انتا وحظك

✧ توب الفلوس -> يطلع توب اكثر ناس لديهم فلوس بكل المجموعةات

✧ توب الحراميه -> يطلع لك اكثر ناس زرفوا

✧ زواج -> تكتبه بالرد على رسالة شخص مع المهر ويزوجك

✧ زواجي -> يطلع وثيقة زواجك اذا متزوج

✧ طلاق -> يطلقك اذا متزوج

✧ خلع -> يخلع زوجك ويرجع له المهر

✧ زواجات -> يطلع اغلى ٢٠ زواجات

✧ ترتيبي -> يطلع ترتيبك باللعبة

✧ شراء رتبه -> لكي تشتري رتبه ف المجموعه

▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '⟨•💖▸ عــربــي¹ •⟩', callback_data=IdUser.."/nsnsks"},
},
{
{text = '⟨•💖▸ 𝙀𝙄𝙉𝙂𝙇𝙄𝙎𝙃 •⟩', callback_data=IdUser.."/fghbdn"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/fghbdn') then
local UserId = Text:match('(%d+)/fghbdn')
if tonumber(IdUser) == tonumber(UserId) then
local bain = bot.getUser(IdUser)
local txxt = [[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰

✧ marhaban bik hadhih awamir luebat albank kalati

✧ ansha' hisab banki -> taftah hisab watuqadar fulus mae mazaya akhari

✧ mash hisab banki -> tulghi hisabak albankia

✧ tahwil -> tatlub raqm hisab alshakhs watahawal lah fulus

✧ hisaabi -> yattlie lak hisabuk fi eashan tuetih lilshakhs allly bihuwwl lak

✧ fulusi -> yazhriluk eadad fulusik

✧ mash kuli alfulus -> yamsah fulus luebat albank

✧ ratib -> yuetik ratib kuli 10 daqayiq

✧ bikhashish -> yuetik bikhashish kula 10 daqayiq

✧ zarf -> tazraf fulus ashkhas kula 10 daqayiq

✧ astithmar -> tustathmar bialmablagh aladhi turiduh mae nisbat ribh madmunuh min 1 % ؜ alaa 15 % ؜

✧ hazun -> taleabuha bi'ayi mablagh taksibuh yatakhsiruh ant wahazak

✧ madaribuh -> tadarib bi'ayi mablagh turiduh walnisbat min 90 % ؜ alaa 90 % ؜ ant wahzak

✧ qard -> takhidh qard min albank

✧ tasdid alqard -> bitasadad alqard adhan ealayk

✧ ansha' kubun -> arsul ay raqm yuejibuk

✧ kubun -> arsul alraqm alati anshat

▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '⟨•💖▸ عــربــي •⟩', callback_data=IdUser.."/nsnsks"},
},
{
{text = '⟨•💖▸ 𝙀𝙄𝙉𝙂𝙇𝙄𝙎𝙃² •⟩', callback_data=IdUser.."/kanapdm"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/kanapdm') then
local UserId = Text:match('(%d+)/kanapdm')
if tonumber(IdUser) == tonumber(UserId) then
local bain = bot.getUser(IdUser)
local txxt = [[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰

✧ hisab -> aydi hisaab alshakhs f albank

✧ mash hisab -> yad alhisab bimash hisabik albankii

✧ hujum -> tahjum ealkhasm mae ziadat nisbat kuli hujum

✧ marahinuh -> tahutu mablagh waturahin ealayh

✧ kanz -> yuetik kanz bisier mukhtalif anta wahazak

✧ tub alfulus -> yatlue tub akthur nas fulus bikuli aljurubat

✧ tub alharamih -> yatlie lak akthur nas zurafuu

✧ zawaj -> taktubuh bialradi ealaa risalat shakhs mae almahrujik

✧ zawaji -> yatlue wathiqat zawajik adha mutazawij

✧ talaq -> yutliquk adha mutazawij

✧ khale -> yakhlae zawjak wayarjie lah almahr

✧ zawaajat -> yatlue aghlaa 20 zawajat

✧ tartibi -> yatlie tartibik biallueba

✧ shira' rutabih -> likay tashtari ratabah almajmueuh

▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '⟨•💖▸ عــربــي •⟩', callback_data=IdUser.."/nsnsks"},
},
{
{text = '⟨•💖▸ 𝙀𝙄𝙉𝙂𝙇𝙄𝙎𝙃¹ •⟩', callback_data=IdUser.."/fghbdn"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)give(%d+)') then
local UserId = {Text:match('(%d+)give(%d+)')}
local replyy = tonumber(UserId[2])
print(replyy)
if tonumber(IdUser) == tonumber(UserId[1]) then
bot.setChatMemberStatus(ChatId,replyy,'administrator',{1 ,1, 0, 0, 0, 0, 0 , 0, 0, 0, 0, 0, ''})
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'بكل الصلاحيات ❇️', data = IdUser..'Power'..replyy},
},
{
{text = 'بدون صلاحيات ☁', data = IdUser..'Power2'..replyy},
},
{
{text = 'صلاحيه الكتم والحظر فقط ¥'..(t3 or restrict_members), data = UserId..'/groupNum3//'..replyy}, 
},
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = Reply_Status(replyy," ✧ تم اعطاء الصلاحيه  ").Reply
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)mute(%d+)') then
local UserId = {Text:match('(%d+)mute(%d+)')}
local replyy = tonumber(UserId[2])
print(replyy)
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:sadd(MARCOS.."SilentGroup:Group"..ChatId,replyy) 
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الغاء كتم', data = IdUser..'unmute'..replyy}, 
},
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = Reply_Status(replyy," ✧ تم كتمه في المجموعة  ").Reply
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)unmute(%d+)') then
local UserId = {Text:match('(%d+)unmute(%d+)')}
local replyy = tonumber(UserId[2])
print(replyy)
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:srem(MARCOS.."SilentGroup:Group"..ChatId,replyy) 
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = Reply_Status(replyy," ✧ تم الغاء كتمه في المجموعة ").Reply
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
end

if Text and Text:match('(%d+)ban(%d+)') then
local UserId = {Text:match('(%d+)ban(%d+)')}
local replyy = tonumber(UserId[2])
print(replyy)
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:sadd(MARCOS.."BanGroup:Group"..ChatId,replyy) 
bot.setChatMemberStatus(ChatId,replyy,'banned',0)
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الغاء حظر', data = IdUser..'unban'..replyy}, 
},
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = Reply_Status(replyy," ✧ تم حظر من المجموعة  ").Reply
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)unban(%d+)') then
local UserId = {Text:match('(%d+)unban(%d+)')}
local replyy = tonumber(UserId[2])
print(replyy)
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:srem(MARCOS.."BanGroup:Group"..ChatId,replyy) 
bot.setChatMemberStatus(ChatId,replyy,'restricted',{1,1,1,1,1,1,1,1,1})
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = Reply_Status(replyy," ✧ تم الغاء حظره من المجموعة ").Reply
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)kid(%d+)') then
local UserId = {Text:match('(%d+)kid(%d+)')}
local replyy = tonumber(UserId[2])
print(replyy)
if tonumber(IdUser) == tonumber(UserId[1]) then
bot.setChatMemberStatus(ChatId,replyy,'restricted',{1,0,0,0,0,0,0,0,0})
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الغاء تقييد', data = IdUser..'unkid'..replyy}, 
},
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = Reply_Status(replyy," ✧ تم تقييده في المجموعة  ").Reply
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)unkid(%d+)') then
local UserId = {Text:match('(%d+)unkid(%d+)')}
local replyy = tonumber(UserId[2])
print(replyy)
if tonumber(IdUser) == tonumber(UserId[1]) then
bot.setChatMemberStatus(ChatId,replyy,'restricted',{1,1,1,1,1,1,1,1})
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = Reply_Status(replyy," ✧ تم الغاء تقييده في المجموعة ").Reply
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/dejgm') then
local UserId = Text:match('(%d+)/dejgm')
if tonumber(IdUser) == tonumber(UserId) then
local bain = bot.getUser(IdUser)
local txxt = [[*
✧ مرحبا بك في الالعاب المتطورة الخاص بسورس ماركوس
✧ اختر اللعبه ثم اختار المحادثة التي تريد اللعب بها
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'فلابي بيرد', url="https://t.me/awesomebot?game=FlappyBird"},{text = 'تحداني فالرياضيات',url="https://t.me/gamebot?game=MathBattle"},
},
{
{text = 'لعبه دراجات', url="https://t.me/gamee?game=MotoFX"},{text = 'سباق سيارات', url="https://t.me/gamee?game=F1Racer"},
},
{
{text = 'تشابه', url="https://t.me/gamee?game=DiamondRows"},{text = 'كره القدم', url="https://t.me/gamee?game=FootballStar"},
},
{
{text = 'ورق', url="https://t.me/gamee?game=Hexonix"},{text = 'لعبه 2048', url="https://t.me/awesomebot?game=g2048"},
},
{
{text = 'SQUARES', url="https://t.me/gamee?game=Squares"},{text = 'ATOMIC', url="https://t.me/gamee?game=AtomicDrop1"},
},
{
{text = 'CORSAIRS', url="https://t.me/gamebot?game=Corsairs"},{text = 'LumberJack', url="https://t.me/gamebot?game=LumberJack"},
},
{
{text = 'LittlePlane', url="https://t.me/gamee?game=LittlePlane"},{text = 'RollerDisco', url="https://t.me/gamee?game=RollerDisco"}, 
},
{
{text = 'كره القدم 2', url="https://t.me/gamee?game=PocketWorldCup"},{text = 'جمع المياه', url="https://t.me/gamee?game=BlockBuster"}, 
},
{
    {text = 'لا تجعلها تسقط', url="https://t.me/gamee?game=Touchdown"},{text = 'GravityNinja', url="https://t.me/gamee?game=GravityNinjaEmeraldCity"}, 
},
{
{text = 'Astrocat', url="https://t.me/gamee?game=Astrocat"},{text = 'Skipper', url="https://t.me/gamee?game=Skipper"}, 
},
{
{text = 'WorldCup', url="https://t.me/gamee?game=PocketWorldCup"},{text = 'GeometryRun', url="https://t.me/gamee?game=GeometryRun"}, 
},
{
{text = 'Ten2One', url="https://t.me/gamee?game=Ten2One"},{text = 'NeonBlast2', url="https://t.me/gamee?game=NeonBlast2"}, 
},
{
{text = 'Paintio', url="https://t.me/gamee?game=Paintio"},{text = 'onetwothree', url="https://t.me/gamee?game=onetwothree"}, 
},
{
{text = 'BrickStacker', url="https://t.me/gamee?game=BrickStacker"},{text = 'StairMaster3D', url="https://t.me/gamee?game=StairMaster3D"}, 
},
{
{text = 'LoadTheVan', url="https://t.me/gamee?game=LoadTheVan"},{text = 'BasketBoyRush', url="https://t.me/gamee?game=BasketBoyRush"}, 
},
{
{text = 'GravityNinja21', url="https://t.me/gamee?game=GravityNinja21"},{text = 'MarsRover', url="https://t.me/gamee?game=MarsRover"}, 
},
{
{text = 'LoadTheVan', url="https://t.me/gamee?game=LoadTheVan"},{text = 'GroovySki', url="https://t.me/gamee?game=GroovySki"}, 
},
{
{text = 'PaintioTeams', url="https://t.me/gamee?game=PaintioTeams"},{text = 'KeepItUp', url="https://t.me/gamee?game=KeepItUp"}, 
},
{
{text = 'SunshineSolitaire', url="https://t.me/gamee?game=SunshineSolitaire"},{text = 'Qubo', url="https://t.me/gamee?game=Qubo"}, 
},
{
{text = 'PenaltyShooter2', url="https://t.me/gamee?game=PenaltyShooter2"},{text = 'Getaway', url="https://t.me/gamee?game=Getaway"}, 
},
{
{text = 'PaintioTeams', url="https://t.me/gamee?game=PaintioTeams"},{text = 'SpikyFish2', url="https://t.me/gamee?game=SpikyFish2"}, 
},
{
{text = 'GroovySki', url="https://t.me/gamee?game=GroovySki"},{text = 'KungFuInc', url="https://t.me/gamee?game=KungFuInc"}, 
},
{
{text = 'SpaceTraveler', url="https://t.me/gamee?game=SpaceTraveler"},{text = 'RedAndBlue', url="https://t.me/gamee?game=RedAndBlue"}, 
},
{
{text = 'SkodaHockey1 ', url="https://t.me/gamee?game=SkodaHockey1"},{text = 'SummerLove', url="https://t.me/gamee?game=SummerLove"}, 
},
{
{text = 'SmartUpShark', url="https://t.me/gamee?game=SmartUpShark"},{text = 'SpikyFish3', url="https://t.me/gamee?game=SpikyFish3"}, 
},
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/backgames"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/normgm') then
local UserId = Text:match('(%d+)/normgm')
if tonumber(IdUser) == tonumber(UserId) then
local bain = bot.getUser(IdUser)
local txxt = [[*
 ✧ قائمه الالعاب البوت
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ لعبة المختلف -› المختلف
 ✧ لعبة الامثله -› امثله
 ✧ لعبة العكس -› العكس
 ✧ لعبة الحزوره -› حزوره
 ✧ لعبة المعاني -› معاني
 ✧ لعبة البات -› بات
 ✧ لعبة التخمين -› خمن
 ✧ لعبة الصور -› صور
 ✧ لعبة الشخصيات -› شخصيات
 ✧ لعبه الاسرع -› الاسرع
 ✧ لعبة السمايلات -› سمايلات
 ✧ لعبة الاسئلة -› كت تويت
 ✧ لعبة الاعلام والدول -› اعلام
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ نقاطي -› لعرض عدد الارباح
 ✧ بيع نقاطي〘 العدد 〙
 ✧ لبيع كل نقطه مقابل〘 50 〙رساله
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/backgames"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/bank') then
local UserId = Text:match('(%d+)/bank')
if tonumber(IdUser) == tonumber(UserId) then
local bain = bot.getUser(IdUser)
local txxt = [[*
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
    
✧ مرحبا بك هذه اوامر لعبه البنك 
    
 ✧ انشاء حساب بنكي  ~ تفتح حساب وتقدر تحول فلوس مع مزايا اخري
    
 ✧ مسح حساب بنكي  ~ تلغي حسابك البنكي
    
 ✧ تحويل ~ تطلب رقم حساب الشخص وتحول له فلوس
    
 ✧ حسابي ~ يطلع لك رقم حسابك عشان تعطيه للشخص اللي بيحول لك
    
 ✧ فلوسي ~ يظهرلك عدد فلوسك
    
 ✧ راتب ~ يعطيك راتب كل ١٠ دقائق
    
 ✧ بخشيش ~ يعطيك بخشيش كل ١٠ دقايق
    
 ✧ زرف ~ تزرف فلوس اشخاص كل ١٠ دقايق
    
 ✧ استثمار ~ تستثمر بالمبلغ اللي تريده مع نسبة ربح مضمونه من ١٪؜ الى ١٥٪؜
    
 ✧ حظ ~ تلعبها بأي مبلغ تكسبه ياتخسره انت وحظك
    
 ✧ مضاربه ~ تضارب بأي مبلغ تريده والنسبة من ٩٠٪؜ الى ٩٠٪؜ انت وحظك
    
 ✧ قرض ~ تاخذ قرض من البنك
    
 ✧ تسديد القرض ~ بتسدد القرض اذا عليك 
    
 ✧ هجوم ~ تهجم عالخصم مع زيادة نسبة كل هجوم

 ✧ كنز ~ يعطيك كنز بسعر مختلف انتا وحظك
    
 ✧ توب الفلوس ~ يطلع توب اكثر ناس لديهم فلوس بكل المجموعةات
    
 ✧ توب الحراميه ~ يطلع لك اكثر ناس زرفوا
    
 ✧ زواج ~ تكتبه بالرد على رسالة شخص مع المهر ويزوجك
    
 ✧ زواجي ~ يطلع وثيقة زواجك اذا متزوج
    
 ✧ طلاق ~ يطلقك اذا متزوج
    
 ✧ خلع ~ يخلع زوجك ويرجع له المهر
    
 ✧ زواجات ~ يطلع اغلى ٢٠ زواجات
    
 ✧ ترتيبي ~ يطلع ترتيبك باللعبة
    
 ✧ شراء رتبه ~ لكي تشتري رتبه ف المجموعه
    
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/backgames"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/backgames') then
local UserId = Text:match('(%d+)/backgames')
if tonumber(IdUser) == tonumber(UserId) then
local bain = bot.getUser(IdUser)
local txxt = [[*
 ✧ اليك قسم الالعاب من سورس ماركوس
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
*]]
 keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '✧ الالعاب التسليه ✧', callback_data=IdUser.."/normgm"},
},
{
{text = '✧ الالعاب الالكترونيه ✧', callback_data=IdUser.."/dejgm"},
},
{
{text = '✧ اوامر لعبة البنك ✧', callback_data=IdUser.."/bank"},
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end

if Text == 'صحيح' then
local UserInfo = bot.getUser(IdUser)
local Teext = '-> [*'..FlterBio(UserInfo.first_name)..'*](tg://user?id='..IdUser..') \n*✧ احسنت اجابتك صحيحه تم اضافه لك 3 نقطه*'
Redis:incrby(MARCOS.."Num:Add:Games"..ChatId..IdUser,3)  
return edit(ChatId,Msg_id,Teext, 'md')
elseif Text == 'غلط' then
local UserInfo = bot.getUser(IdUser)
local Teext = '-> ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..IdUser..') \n✧ للاسف اجابتك خاطئه !!'
return edit(ChatId,Msg_id,Teext, 'md')
end
if Text == 'صحيح1' then
local UserInfo = bot.getUser(IdUser)
local Teext = '-> [*'..FlterBio(UserInfo.first_name)..'*](tg://user?id='..IdUser..') \n*✧ احسنت اجابتك صحيحه تم اضافه لك 3 نقطه*'
Redis:incrby(MARCOS.."Num:Add:Games"..ChatId..IdUser,3)  
return edit(ChatId,Msg_id,Teext, 'md')
elseif Text == 'غلط1' then
local UserInfo = bot.getUser(IdUser)
local Teext = '-> ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..IdUser..') \n✧ للاسف اجابتك خاطئه !!'
return edit(ChatId,Msg_id,Teext, 'md')
end

if Text == '/startjoinerolet' then
local list = Redis:smembers(MARCOS..'rolet:list'..ChatId)
name = list[math.random(#list)]
local UserInfo = bot.getUser(name)
local Teext = '-> ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..name..')'
Redis:srem(MARCOS..'rolet:list'..ChatId,name)
if #list == 1 then
Redis:srem(MARCOS..'rolet:list'..ChatId,name)
Redis:incrby(MARCOS.."Num:Add:Games"..ChatId..IdUser,10)  
https.request("https://api.telegram.org/bot"..Token..'/sendMessage?ChatId='..ChatId..'&text='..URL.escape('✧ الف مبروك لقد فاز -> ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..name..') بـ10 نقاط مكافئه')..'&reply_to_message_id='..Msg_id..'&parse_mode=markdown') 
return edit(ChatId,Msg_id,'✧ الف مبروك لقد فاز -> ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..name..') بـ10 نقاط مكافئه', 'md')
end
local xxffxx = '✧ لقد خسر -> '..Teext
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '✧ بدء الروليت ', data = '/startjoinerolet'},
},
}
}
return edit(ChatId,Msg_id,xxffxx, 'md', true, false, reply_markup)
end

if Text == '/joinerolet' then
if not Redis:sismember(MARCOS..'rolet:list'..ChatId,IdUser) then 
Redis:sadd(MARCOS..'rolet:list'..ChatId,IdUser)
local list = Redis:smembers(MARCOS..'rolet:list'..ChatId) 
if #list == 3 then
local message = '✧ المشتركين في اللعبه ⇧⇩ ' 
for k,v in pairs(list) do
local UserInfo = bot.getUser(IdUser)
if k == 1 then
id = 'tg://user?id='..v
name1 = FlterBio(UserInfo.first_name)
end
if k == 2 then
id1 = 'tg://user?id='..v
name2 = FlterBio(UserInfo.first_name)
end
if k == 3 then
id2 = 'tg://user?id='..v
name3 = FlterBio(UserInfo.first_name)
end
if k == #list then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = name1, url = id}, 
},
{
{text = name2, url = id1}, 
},
{
{text = name3, url = id2}, 
},
{
{text = '✧ اضغط لبدء اللعبه', data = '/startjoinerolet'},
},
}
}
return edit(ChatId,Msg_id,message, 'md', true, false, reply_markup)
end
end
else
local UserInfo = bot.getUser(IdUser)
local Teext = '-> ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..IdUser..')'
local xxffxx = '✧ عدد الاعبين -> '..#list..' \n✧ لقد انضم للروليت ⇧⇩ \n'..Teext
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '✧ اضغط للانضمام في اللعبه', data = '/joinerolet'},
},
}
}
return edit(ChatId,Msg_id,xxffxx, 'md', true, false, reply_markup)
end
else
https.request("https://api.telegram.org/bot"..Token..'/answerCallbackQuery?callback_query_id='..data.id_..'&text='..URL.escape('لقد انضممت مسبقا')..'&show_alert=true')
end
end
-------------------------------------------------
if Text and Text:match('(%d+)/deldev/(%d+)') then
local info = {Text:match('(%d+)/deldev/(%d+)')}
if tonumber(info[1]) ~= tonumber(IdUser) then
return bot.answerCallbackQuery(data.id, "✧ هذا الامر لا يخصك ", true)
end
Redis:srem(MARCOS.."Dev:Groups",info[2])
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', data = IdUser..'/xnxxxxx'}, 
},
}
}
local txx = Reply_Status(info[2],"✧ تم تنزيله مطور ").Reply
edit(ChatId,Msg_id,txx, 'md', true, false, reply_markup)
end
if Text and Text:match('(%d+)/xnxxxxx') then
local info = Text:match('(%d+)/xnxxxxx')
if tonumber(info) ~= tonumber(IdUser) then
return bot.answerCallbackQuery(data.id, "✧ هذا الامر لا يخصك ", true)
end
local Info_Members = Redis:smembers(MARCOS.."Dev:Groups") 
if #Info_Members == 0 then
bot.editMessageText(ChatId,Msg_id,"✧ لا يوجد مطورين حاليا ")  
return false 
end
local datar = {data = {{text = "✧ مسح المطورين" , data = IdUser..'/Dev'}}}
for i = 1,#Info_Members do
infoo = bot.getUser(Info_Members[i])
datar[i] = {{text = infoo.first_name , data =IdUser..'/deldev/'..Info_Members[i]}}
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = datar
}
local txx = '✧ قائمه مطورين البوت'
bot.editMessageText(ChatId,Msg_id,txx, 'md', true, false, reply_markup)
end
if Text and Text:match('(%d+)/Survey/(%d+)') then
local info = {Text:match('(%d+)/Survey/(%d+)')}
if tonumber(info[1]) ~= tonumber(IdUser) then
return bot.answerCallbackQuery(data.id, "✧ هذا الامر لا يخصك ", true)
end
Redis:srem(MARCOS.."Devss:Groups",info[2])
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', data = IdUser..'/secondary'}, 
},
}
}
local txx = Reply_Status(info[2],"✧ تم تنزيله مطور ثانوي ").Reply
edit(ChatId,Msg_id,txx, 'md', true, false, reply_markup)
end
if Text and Text:match('(%d+)/secondary') then
local info = Text:match('(%d+)/secondary')
if tonumber(info) ~= tonumber(IdUser) then
return bot.answerCallbackQuery(data.id, "✧ هذا الامر لا يخصك ", true)
end
local Info_Members = Redis:smembers(MARCOS.."Devss:Groups") 
if #Info_Members == 0 then
bot.editMessageText(ChatId,Msg_id,"✧ لا يوجد ثانوين حاليا ")  
return false 
end
local datar = {data = {{text = "✧ مسح الثانوين" , data = IdUser..'/Devss'}}}
for i = 1,#Info_Members do
infoo = bot.getUser(Info_Members[i])
datar[i] = {{text = infoo.first_name , data =IdUser..'/Survey/'..Info_Members[i]}}
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = datar
}
local txx = '✧ قائمه الثانوين البوت'
bot.editMessageText(ChatId,Msg_id,txx, 'md', true, false, reply_markup)
end
-------------------------------------------------
if Text and Text:match('(%d+)/cancelrdd') then
local UserId = Text:match('(%d+)/cancelrdd')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
Redis:del(MARCOS.."Set:array:Ssd"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:array:rd"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:array"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:Manager:rd"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:Manager:rd"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:Rd"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:On"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:Manager:rd:inline"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:Sections:inline"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:On:mz"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:Rd:mz"..IdUser..":"..ChatId)
edit(ChatId,Msg_id,"*تم الغاء الامر بنجاح ✅*", 'md', true, false, reply_markup)
end
end
if Text == 'EndAddarray'..IdUser then  
if Redis:get(MARCOS..'Set:array'..IdUser..':'..ChatId) == 'true1' then
Redis:del(MARCOS..'Set:array'..IdUser..':'..ChatId)
keyboard = {} 
keyboard.inline_keyboard = {
{{text = '• قناة السورس •',url='http://t.me/'..chsource..''}},
}
local msg_idd = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/editMessageText?chat_id='..data.id..'&text='..URL.escape(" * ✧ تم حفظ الردود بنجاح*")..'&message_id='..msg_idd..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboard)) 
else
keyboard = {} 
keyboard.inline_keyboard = {
{{text = '• قناة السورس •',url='http://t.me/'..chsource..''}},
}
return https.request("https://api.telegram.org/bot"..Token..'/editMessageText?chat_id='..data.id..'&text='..URL.escape(" * ✧ تم تنفيذ الامر سابقا*")..'&message_id='..msg_idd..'&parse_mode=markdown&disable_web_page_preview=true&reply_markup='..JSON.encode(keyboard)) 
end
end
if Text and Text:match('(%d+)/cancelInlie') then
local UserId = Text:match('(%d+)/cancelInlie')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 'https://t.me/ZAXY00'}, 
},
}
}
Redis:del(MARCOS.."Set:Manager:rd:inline"..IdUser..":"..ChatId)
Redis:del(MARCOS.."Set:Sudo:rd:inline"..IdUser..":"..ChatId)
edit(ChatId,Msg_id,"تم حفظ الرد بنجاح", 'md', true, false, reply_markup)
end
end
-- Sections callback_data
if Text and Text:match('(%d+)/cancelSection') then
local UserId = Text:match('(%d+)/cancelSection')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 'https://t.me/ZAXY00'}, 
},
}
}
Redis:del(MARCOS.."Set:Sections:inline"..IdUser..":"..ChatId)
edit(ChatId,Msg_id,"تم حفظ القسم بنجاح", 'md', true, false, reply_markup)
end
end

if Text and Text:match('(.*)/Anubis/(.*)&(.*)') then
local Anubis = {Text:match('(.*)/Anubis/(.*)&(.*)')}
if tonumber(IdUser) == tonumber(Anubis[1]) then
local MSG = Redis:get(MARCOS.."/Anubis/"..Anubis[2])
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'رجوع', data = Anubis[1].."/Home/"..Anubis[3]}, 
},
}
}
edit(ChatId,Msg_id,MSG, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(.*)/Home/(.*)') then
local Anubie = {Text:match('(.*)/Home/(.*)')} 
if tonumber(IdUser) == tonumber(Anubie[1]) then 
local button = Redis:smembers(MARCOS.."Sections:inline:text"..Anubie[2])
local Texingt = Redis:get(MARCOS.."Add:Sections:Text:inline"..Anubie[2]) 
local inline_anubis = {data = {}}
for k,v in pairs(button) do
inline_anubis[k] = {{text = v , data = Anubie[1]..Redis:get(MARCOS.."in_inline_button:"..v).."&"..Anubie[2]}}
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = inline_anubis
}
if Texingt then 
local UserInfo = bot.getUser(Anubie[1])
local Status_Gps = Controller(ChatId,Anubie[1])
local Texingt = Texingt:gsub('#username',(UserInfo.username or 'لا يوجد')) 
local Texingt = Texingt:gsub('#name',UserInfo.first_name)
local Texingt = Texingt:gsub('#id',Anubie[1])
local Texingt = Texingt:gsub('#stast',Status_Gps)
edit(ChatId,Msg_id,Texingt,"md",true, false, reply_markup)
end end end
-- rtba call back 
if Text and Text:match('(.*)/promot_mmez/(.*)') then
local anubis = {Text:match('(.*)/promot_mmez/(.*)')}
local sender = anubis[1]
local rtba_name = anubis[2]
if tonumber(sender) == tonumber(IdUser) then
Redis:sadd(MARCOS.."rowtab:", rtba_name)
Redis:set(MARCOS..rtba_name.."type:", "mmez")
Redis:del(MARCOS.."Set:rtba"..sender..":"..ChatId)
return edit(ChatId, Msg_id, "تم اضافه رتبه "..rtba_name.."\nبصلاحيات (مميز)","md",false)
end
end
if Text and Text:match('(.*)/promot_admin/(.*)') then
local anubis = {Text:match('(.*)/promot_admin/(.*)')}
local sender = anubis[1]
local rtba_name = anubis[2]
if tonumber(sender) == tonumber(IdUser) then
Redis:sadd(MARCOS.."rowtab:", rtba_name)
Redis:set(MARCOS..rtba_name.."type:", "admin")
Redis:del(MARCOS.."Set:rtba"..sender..":"..ChatId)
return edit(ChatId, Msg_id, "تم اضافه رتبه "..rtba_name.."\nبصلاحيات (ادمن)","md",false)
end
end
if Text and Text:match('(.*)/promot_creator/(.*)') then
local anubis = {Text:match('(.*)/promot_creator/(.*)')}
local sender = anubis[1]
local rtba_name = anubis[2]
if tonumber(sender) == tonumber(IdUser) then
Redis:sadd(MARCOS.."rowtab:", rtba_name)
Redis:set(MARCOS..rtba_name.."type:", "creator")
Redis:del(MARCOS.."Set:rtba"..sender..":"..ChatId)
return edit(ChatId, Msg_id, "تم اضافه رتبه "..rtba_name.."\nبصلاحيات (منشئ)","md",false)
end
end
if Text and Text:match('(.*)/promot_acreator/(.*)') then
local anubis = {Text:match('(.*)/promot_acreator/(.*)')}
local sender = anubis[1]
local rtba_name = anubis[2]
if tonumber(sender) == tonumber(IdUser) then
Redis:sadd(MARCOS.."rowtab:", rtba_name)
Redis:set(MARCOS..rtba_name.."type:", "acreator")
Redis:del(MARCOS.."Set:rtba"..sender..":"..ChatId)
return edit(ChatId, Msg_id, "تم اضافه رتبه "..rtba_name.."\nبصلاحيات (منشئ اساسي)","md",false)
end
end
if Text and Text:match('(.*)/promot_owner/(.*)') then
local anubis = {Text:match('(.*)/promot_owner/(.*)')}
local sender = anubis[1]
local rtba_name = anubis[2]
if tonumber(sender) == tonumber(IdUser) then
Redis:sadd(MARCOS.."rowtab:", rtba_name)
Redis:set(MARCOS..rtba_name.."type:", "owner")
Redis:del(MARCOS.."Set:rtba"..sender..":"..ChatId)
return edit(ChatId, Msg_id, "تم اضافه رتبه "..rtba_name.."\nبصلاحيات (مالك)","md",false)
end
end
if Text and Text:match('(.*)/promot_dev/(.*)') then
local anubis = {Text:match('(.*)/promot_dev/(.*)')}
local sender = anubis[1]
local rtba_name = anubis[2]
if tonumber(sender) == tonumber(IdUser) then
Redis:sadd(MARCOS.."rowtab:", rtba_name)
Redis:set(MARCOS..rtba_name.."type:", "dev")
Redis:del(MARCOS.."Set:rtba"..sender..":"..ChatId)
return edit(ChatId, Msg_id, "تم اضافه رتبه "..rtba_name.."\nبصلاحيات (مطور)","md",false)
end
end
if Text and Text:match('(.*)/promot_sdev/(.*)') then
local anubis = {Text:match('(.*)/promot_sdev/(.*)')}
local sender = anubis[1]
local rtba_name = anubis[2]
if tonumber(sender) == tonumber(IdUser) then
Redis:sadd(MARCOS.."rowtab:", rtba_name)
Redis:set(MARCOS..rtba_name.."type:", "sdev")
Redis:del(MARCOS.."Set:rtba"..sender..":"..ChatId)
return edit(ChatId, Msg_id, "تم اضافه رتبه "..rtba_name.."\nبصلاحيات (مطور ثانوي)","md",false)
end
end
-- rd type call back
if Text and Text:match('(%d+)/set_rd_normal') then
local UserId = Text:match('(%d+)/set_rd_normal')
if tonumber(UserId) == tonumber(IdUser) then
Redis:set(MARCOS.."Set:Manager:rd"..IdUser..":"..ChatId,true)
edit(ChatId, Msg_id, " ✧ ارسل الان كلمه الرد", "md",false)
end
end
if Text and Text:match('(%d+)/set_rd_regx') then
local UserId = Text:match('(%d+)/set_rd_regx')
if tonumber(UserId) == tonumber(IdUser) then
Redis:set(MARCOS.."Set:Rd:mz"..IdUser..":"..ChatId,true)
edit(ChatId, Msg_id, " ✧ ارسل الان كلمه الرد", "md",false)
end
end
if Text and Text:match('(%d+)/del_normal') then
local UserId = Text:match('(%d+)/del_normal')
if tonumber(UserId) == tonumber(IdUser) then
Redis:set(MARCOS.."Set:Manager:rd"..UserId..":"..ChatId,"true2")
edit(ChatId, Msg_id, " ✧ ارسل الان كلمه لحذفها من الردود", "md",false)
end
end
if Text and Text:match('(%d+)/del_mmez') then
local UserId = Text:match('(%d+)/del_mmez')
if tonumber(UserId) == tonumber(IdUser) then
Redis:set(MARCOS.."Set:On:mz"..UserId..":"..ChatId,"true2")
edit(ChatId, Msg_id, " ✧ ارسل الان كلمه لحذفها من الردود", "md",false)
end
end
-------------------------------------------------
if Text and Text:match('(%d+)/swear_one') then
local UserId = Text:match('(%d+)/swear_one')
if tonumber(UserId) == tonumber(IdUser) then
Redis:set(MARCOS.."zhrfa"..IdUser,"sendzh") 
edit(ChatId, Msg_id, "* ✧ ارسل الكلمه لزخرفتها عربي او انجلش*", "md",false)
end
end
if Text and Text:match('(%d+)/swear_to') then
local UserId = Text:match('(%d+)/swear_to')
if tonumber(UserId) == tonumber(IdUser) then
Redis:set(MARCOS.."jabwa"..IdUser,"jeka") 
edit(ChatId, Msg_id, "* ✧ ارسل الكلمه لزخرفتها عربي او انجلش*", "md",false)
end
end
if Text and Text:match('(%d+)/normal_zk') then
local UserId = Text:match('(%d+)/normal_zk')
if tonumber(UserId) == tonumber(IdUser) then
local ban = bot.getUser(IdUser)
local Name = '['..ban.first_name..'](tg://user?id='..ban.id..')' or 'لا يوجد اسم'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '↰ القسم الاول ↳', data = IdUser..'/swear_one'},
},
{
{text = '↰ القسم الثاني ↳', data = IdUser..'/swear_to'},
},
}
}
edit(ChatId, Msg_id, "*مرحبا ->* "..Name.." 👋\n* ✧ حسنا اختار قسم لزخرفه *", "md",true,false,reply_markup)
end
end
if Text and Text:match('(%d+)/inline_zk') then
local UserId = Text:match('(%d+)/inline_zk')
if tonumber(UserId) == tonumber(IdUser) then
local ban = bot.getUser(IdUser)
local Name = '['..ban.first_name..'](tg://user?id='..ban.id..')' or 'لا يوجد اسم'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '↰ زخرفه انجليزي 𝙀𝙉𝙂 ↳', data = IdUser..'/zeng'},
},
{
{text = '↰ زخرفه عربي 𝘼𝙍 ↳', data = IdUser..'/zar'},
},
}
}
edit(ChatId, Msg_id, "*مرحبا ->* "..Name.." 👋\n* ✧ اليك قائمة الزخرفه الانلاين *", "md",true,false,reply_markup)
end
end
if Text and Text:match('(%d+)/zeng') then
local UserId = Text:match('(%d+)/zeng')
if tonumber(UserId) == tonumber(IdUser) then
Redis:set(MARCOS..ChatId..IdUser.."zkrf:", "zeng")
edit(ChatId, Msg_id, "* ✧ 𝙎𝙀𝙉𝘿 𝙐𝙍 𝙉𝘼𝙈𝙀 💗*\n\n* ✧ ارسل الاسم ليتم الزخرفه بالانجليزي ✨*", "md",false)
end
end
if Text and Text:match('(.*)/az(.*)') then
local anubis = {Text:match('(.*)/az(.*)')}
local UserId = anubis[1]
local z_num = anubis[2]
local z_text = Redis:get(MARCOS..ChatId..IdUser.."zkrf:text")
Redis:set(MARCOS..ChatId..IdUser.."zkrf:num", z_num)
if tonumber(UserId) == tonumber(IdUser) then
local api = https.request("https://ayad-12.xyz/anubis/zkhrfa.php?text="..URL.escape(z_text))
local zkrf = JSON.decode(api)
local zk = zkrf['anubis'][z_num]
local zk_list = Redis:smembers(MARCOS.."zk_list:")
local inline_anubis = {data = {{text = "زخرفة بالايموجي 🧸♥" , data = UserId..'/emo'}}}
for k,v in pairs(zk_list) do
zk_by_anubis = v:gsub("###",zk)
inline_anubis[k] = {{text = zk_by_anubis , data = UserId.."/bz"..k}}
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = inline_anubis
}
edit(ChatId, Msg_id, "* ✧ لقد اخترت ☁️*\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n "..zk, "md",true,false,reply_markup)
end
end
if Text and Text:match('(.*)/bz(.*)') then
local anubis = {Text:match('(.*)/bz(.*)')}
local UserId = anubis[1]
local z_num = tonumber(anubis[2])
local z_text = Redis:get(MARCOS..ChatId..IdUser.."zkrf:text")
local z_save = Redis:get(MARCOS..ChatId..IdUser.."zkrf:num")
if tonumber(UserId) == tonumber(IdUser) then
local api = https.request("https://ayad-12.xyz/anubis/zkhrfa.php?text="..URL.escape(z_text))
local zkrf = JSON.decode(api)
local zk = zkrf['anubis'][z_save]
local zk_list = Redis:smembers(MARCOS.."zk_list:")
local zk_anubis = zk_list[z_num]:gsub("###",zk)
edit(ChatId, Msg_id, "* ✧ لقد اخترت ☁️*\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n `"..zk_anubis.."`", "md",false)
Redis:del(MARCOS..ChatId..IdUser.."zkrf:text")
Redis:del(MARCOS..ChatId..IdUser.."zkrf:num")
end
end
if Text and Text:match('(.*)/delz(.*)') then
local anubis = {Text:match('(.*)/delz(.*)')}
local UserId = anubis[1]
local z_num = tonumber(anubis[2])
if tonumber(UserId) == tonumber(IdUser) then
local zk_list = Redis:smembers(MARCOS.."zk_list:")
Redis:srem(MARCOS.."zk_list:", zk_list[z_num])
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'رجوع', data = UserId..'/home_z'}}
}
}
edit(ChatId, Msg_id, " ✧ لقد قمت بحذف "..zk_list[z_num].."\n ✧ من قائمه الزخارف", "md",true,false,reply_markup)
end
end
if Text and Text:match('(%d+)/home_z') then
local UserId = Text:match('(%d+)/home_z')
if tonumber(UserId) == tonumber(IdUser) then
local zk_list = Redis:smembers(MARCOS.."zk_list:")
local inline_anubis = {data = {}}
for k,v in pairs(zk_list) do
inline_anubis[k] = {{text = v , data = UserId.."/delz"..k}}
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = inline_anubis
}
edit(ChatId, Msg_id, "* ✧ اضغط على الزخرفه لحذفها*", "md",true,false,reply_markup)
end
end
if Text and Text:match('(%d+)/emo') then
local UserId = Text:match('(%d+)/emo')
local z_text = Redis:get(MARCOS..ChatId..IdUser.."zkrf:text")
local z_save = Redis:get(MARCOS..ChatId..IdUser.."zkrf:num")
if tonumber(UserId) == tonumber(IdUser) then
local api = https.request("https://ayad-12.xyz/anubis/zkhrfa.php?text="..URL.escape(z_text))
local zkrf = JSON.decode(api)
local zk = zkrf['anubis'][z_save]
edit(ChatId, Msg_id, "*تم الزخرفه بالايموجي 🧸♥*\n\n▷ `"..zk.." ¦✨❤️` \n\n▷ `"..zk.." “̯ 🐼💗`\n\n▷ `"..zk.." 🦋“`\n\n▷ `"..zk.."ّ ❥̚͢₎ 🐣`\n\n▷ `"..zk.." ℡ ̇ ✨🐯⇣✦`\n\n▷ `"..zk.." 😴🌸✿⇣`\n\n▷ `"..zk.."✧ 🙊💙`\n\n▷ `"..zk.." ❥┊⁽ ℡🦁🌸`\n\n▷ `"..zk.."✧ 💚“`\n\n▷ `"..zk.." ⚡️♛ֆ₎`\n\n▷ `"..zk.." ⁞♩⁽💎🌩₎⇣✿`\n\n▷ `"..zk.." 〄💖‘`\n\n*• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •*\n\n* أضغط على الاسم لا يتم النسخ ✧ *", "md",false)
Redis:del(MARCOS..ChatId..IdUser.."zkrf:text")
Redis:del(MARCOS..ChatId..IdUser.."zkrf:num")
end
end
if Text and Text:match('(%d+)/zar') then
local UserId = Text:match('(%d+)/zar')
if tonumber(UserId) == tonumber(IdUser) then
Redis:set(MARCOS..ChatId..IdUser.."zkrf:", "zar")
edit(ChatId, Msg_id, "* ✧ 𝙎𝙀𝙉𝘿 𝙐𝙍 𝙉𝘼𝙈𝙀 💗*\n\n* ✧ ارسل الاسم ليتم الزخرفه بالعربي ✨*", "md",false)
end
end
-------------------------------------------------
if Text and Text:match('/CancelChannelVip:'..tonumber(IdUser)..'(.*)') then
local UserId = Text:match('/CancelChannelVip:'..tonumber(IdUser)..'(.*)')
Redis:del(MARCOS..'SetChannelVip'..IdUser)
Text = " ✧ تم الغاء حفظ قناتك"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id,Text, 'md', true, false, reply_markup)
return false
end
if Text and Text:match('/ChangeChannelVip:'..tonumber(IdUser)..'(.*)') then
local UserId = Text:match('/ChangeChannelVip:'..tonumber(IdUser)..'(.*)')
Redis:set(MARCOS..'SetChannelVip'..IdUser,true)
local Text = " ✧ حسنا ارسل لي قناتك الان"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text="• الغاء •",data="/CancelChannelVip:"..IdUser}},
{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id,Text, 'md', true, false, reply_markup)
return false
end
if Redis:get(MARCOS..'SetChannelVip'..IdUser) then 
if text =='الغاء' then 
bot.sendText(msg_chat_id,msg_id, ' ✧ تم الغاء حفظ قناتك ',"md",true)  
Redis:del(MARCOS..'SetChannelVip'..IdUser)
return false  
end 
Redis:del(MARCOS..'SetChannelVip'..IdUser)
Redis:set(MARCOS..'SOFI:Channel:Vip'..IdUser,text)
local text = " ✧ تم حفظ قناتك"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text="• تغيير قناتي •",data="/ChangeChannelVip:"..IdUser},{text="• حذف قناتي •",data="/DelChannelVip:"..IdUser}},
{{text="• اخفاء •",data="/HideChannelVip:"..IdUser}},
{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id,text, 'md', true, false, reply_markup)
return false   
end
if Text and Text:match('/DelChannelVip:'..tonumber(IdUser)..'(.*)') then
local UserId = Text:match('/DelChannelVip:'..tonumber(IdUser)..'(.*)')
Redis:del(MARCOS..'SOFI:Channel:Vip'..IdUser)
Text = " ✧ تم حذف قناتك بنجاح"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text="• وضع قناتي •",data="/ChangeChannelVip:"..IdUser}},
{{text="• اخفاء •",data="/HideChannelVip:"..IdUser}},
{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id,Text, 'md', true, false, reply_markup)
return false
end
if Text and Text:match('/HideChannelVip:(.*)') then
local UserId = Text:match('/HideChannelVip:(.*)')
if tonumber(UserId) == tonumber(IdUser) then
bot.editMessageText(ChatId,msg_id," ✧ تم اخفاء امر وضع قناتي","md",true)
else
return bot.answerCallbackQuery(data.id, "• عذرا الامر ليس لك •", true)
end
end
-------------------------------------------------
if Text and Text:match('(.*)/yes_zw/(.*)') then
local JABWA = {Text:match('(.*)/yes_zw/(.*)')}
local zwga_id = JABWA[1]
local zwg_id = JABWA[2]
if tonumber(zwga_id) == tonumber(IdUser) then
local zwga_name = bot.getUser(zwga_id).first_name
local zwg_name = bot.getUser(zwg_id).first_name
Redis:set(MARCOS..ChatId..zwga_id.."mtzwga:", zwg_id)
Redis:set(MARCOS..ChatId..zwg_id.."mtzwga:", zwga_id)
return bot.editMessageText(ChatId, Msg_id, "*تم الزواج بنجاح ✅\nمبروك يا عريس -›* ["..zwga_name.."](tg://user?id="..zwga_id..")\n*مبروك يا عروسه -›* ["..zwg_name.."](tg://user?id="..zwg_id..")","md",false)
end
end
if Text and Text:match('(.*)/no_zw/(.*)') then
local JABWA = {Text:match('(.*)/no_zw/(.*)')}
local zwga_id = JABWA[1]
local zwg_id = JABWA[2]
if tonumber(zwga_id) == tonumber(IdUser) then
return bot.editMessageText(ChatId, Msg_id, "*تم رفض الطلب حاول التقديم مره آخره 😂*","md",false)
end
end
if Text and Text:match('(.*)/yes_z/(.*)') then
local JABWA = {Text:match('(.*)/yes_z/(.*)')}
local zwga_id = JABWA[1]
local zwg_id = JABWA[2]
if tonumber(zwga_id) == tonumber(IdUser) then
local zwga_name = bot.getUser(zwga_id).first_name
local zwg_name = bot.getUser(zwg_id).first_name
Redis:set(MARCOS..ChatId..zwga_id.."mtzwga:", zwg_id)
Redis:set(MARCOS..ChatId..zwg_id.."mtzwga:", zwga_id)
return edit(ChatId, Msg_id, "*👰‍♀ العروسه ->* ["..zwga_name.."](tg://user?id="..zwga_id..")\n*🧖 العريس ->* ["..zwg_name.."](tg://user?id="..zwg_id..")\n*تم الزواج بنجاح عبقال الطلاق 😅😂*","md",false)
end
end
if Text and Text:match('(.*)/no_z/(.*)') then
local JABWA = {Text:match('(.*)/no_z/(.*)')}
local zwga_id = JABWA[1]
local zwg_id = JABWA[2]
if tonumber(zwga_id) == tonumber(IdUser) then
return edit(ChatId, Msg_id, "*اسف يا فندم الطلب فشل 👻😹*","md",false)
end
end
-------------------------------------------------
if Text and Text:match('(%d+)/Backcinema') then
local UserId = Text:match('(%d+)/Backcinema')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "photo",media = "https://t.me/S_a_i_d_i/1188",caption = '*اليك قائمة الافلام من سورس ماركوس ✧*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '🇪🇬 مصري', callback_data=IdUser.."/Cinema1"},{text = '🇳🇿 أجنبي', callback_data=IdUser.."/Cinema2"},
},
{
{text = '🧸 كارتون', callback_data=IdUser.."/Cinema3"},{text = '🎬 مسرحيات', callback_data=IdUser.."/Cinema4"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinema1') then
local UserId = Text:match('(%d+)/Cinema1')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "photo",media = "https://t.me/ZAXY00/1188",caption = '*✧ اليك قائمة الافلام المصريه 🇪🇬*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'غبي منه فيه', callback_data=IdUser.."/Cinem1"},{text = 'اللمبي 8 جيجا', callback_data=IdUser.."/Cinem2"},
},
{
{text = '30 يوم في العز', callback_data=IdUser.."/Cinem3"},{text = 'واحد ماركوس', callback_data=IdUser.."/Cinem4"},
},
{
{text = 'لف ودوران', callback_data=IdUser.."/Cinem5"},{text = 'الداده دودي', callback_data=IdUser.."/Cinem6"},
},
{
{text = 'كركر', callback_data=IdUser.."/Cinem7"},{text = 'كتكوت', callback_data=IdUser.."/Cinem8"},
},
{
{text = 'الكويسين', callback_data=IdUser.."/Cinem8"},{text = 'العارف', callback_data=IdUser.."/Cinem10"},
},
{
{text = 'القائمه الرئيسه', callback_data=IdUser.."/Backcinema"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinema2') then
local UserId = Text:match('(%d+)/Cinema2')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "photo",media = "https://t.me/ZAXY00/1188",caption = '* ✧ اليك قائمة الافلام الاجنبيه 🇳🇿*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '𝑇𝐻𝐸 𝑀𝐴𝑇𝑅𝐼𝑋', callback_data=IdUser.."/TheMatrix"},{text = '𝐴𝐿𝐼𝐸𝑁𝑆', callback_data=IdUser.."/Aliens"},
},
{
{text = '𝐺𝐿𝐴𝐷𝐼𝐴𝑇𝑂𝑅', callback_data=IdUser.."/Gladiator"},{text = '𝐷𝐼𝐸 𝐻𝐴𝑅𝐷', callback_data=IdUser.."/DieHard"},
},
{
{text = '𝑇𝐻𝐸 𝐷𝐴𝑅𝐾 𝐾𝑁𝐼𝐺𝐻𝑇', callback_data=IdUser.."/ThKnight"},
},
{
{text = 'القائمه الرئيسه', callback_data=IdUser.."/Backcinema"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinema3') then
local UserId = Text:match('(%d+)/Cinema3')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "photo",media = "https://t.me/ZAXY00/1188",caption = '* ✧ اليك قائمة افلام كرتون 🧸*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'الدعسوقه', callback_data=IdUser.."/dreads"},{text = 'الخارقون', callback_data=IdUser.."/supernatural"},
},
{
{text = 'سبونج بوب', callback_data=IdUser.."/sponge"},{text = 'سلاحف النينجا', callback_data=IdUser.."/Ninja"},
},
{
{text = 'الأسد الملك', callback_data=IdUser.."/Lion"},
},
{
{text = 'القائمه الرئيسه', callback_data=IdUser.."/Backcinema"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinema4') then
local UserId = Text:match('(%d+)/Cinema4')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "photo",media = "https://t.me/ZAXY00/1188",caption = '* ✧ اليك قائمة مسرحية 🎬*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'مدرسة المشاغبين', callback_data=IdUser.."/rioters"},{text = 'كاسك يا وطن', callback_data=IdUser.."/homeland"},
},
{
{text = 'العيال كبرت', callback_data=IdUser.."/Igrewup"},{text = 'ريا وسكينة', callback_data=IdUser.."/Knife"},
},
{
{text = 'الماريشال عمّار', callback_data=IdUser.."/Ammar"},
},
{
{text = 'القائمه الرئيسه', callback_data=IdUser.."/Backcinema"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinem1') then
local UserId = Text:match('(%d+)/Cinem1')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/129",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema1"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinem2') then
local UserId = Text:match('(%d+)/Cinem2')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/130",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema1"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinem3') then
local UserId = Text:match('(%d+)/Cinem3')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/131",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema1"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinem4') then
local UserId = Text:match('(%d+)/Cinem4')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/132",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema1"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinem5') then
local UserId = Text:match('(%d+)/Cinem5')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/133",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema1"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinem6') then
local UserId = Text:match('(%d+)/Cinem6')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/134",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema1"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinem7') then
local UserId = Text:match('(%d+)/Cinem7')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/135",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema1"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinem8') then
local UserId = Text:match('(%d+)/Cinem8')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/136",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema1"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinem9') then
local UserId = Text:match('(%d+)/Cinem9')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/138",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema1"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Cinem10') then
local UserId = Text:match('(%d+)/Cinem10')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/139",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema1"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/TheMatrix') then
local UserId = Text:match('(%d+)/TheMatrix')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/141",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema2"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Aliens') then
local UserId = Text:match('(%d+)/Aliens')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/142",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema2"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Gladiator') then
local UserId = Text:match('(%d+)/Gladiator')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/144",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema2"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/DieHard') then
local UserId = Text:match('(%d+)/DieHard')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/143",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema2"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/ThKnight') then
local UserId = Text:match('(%d+)/ThKnight')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/145",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema2"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/dreads') then
local UserId = Text:match('(%d+)/dreads')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/146",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema3"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/supernatural') then
local UserId = Text:match('(%d+)/supernatural')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/147",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema3"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/sponge') then
local UserId = Text:match('(%d+)/sponge')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/148",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema3"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Ninja') then
local UserId = Text:match('(%d+)/Ninja')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/149",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema3"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Lion') then
local UserId = Text:match('(%d+)/Lion')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/150",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ?? ･', callback_data=IdUser.."/Cinema3"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/rioters') then
local UserId = Text:match('(%d+)/rioters')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/151",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema4"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/homeland') then
local UserId = Text:match('(%d+)/homeland')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/152",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema4"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Igrewup') then
local UserId = Text:match('(%d+)/Igrewup')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/153",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema4"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Knife') then
local UserId = Text:match('(%d+)/Knife')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/154",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema4"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(%d+)/Ammar') then
local UserId = Text:match('(%d+)/Ammar')
if tonumber(IdUser) == tonumber(UserId) then
au ={type = "video",media = "https://t.me/DEV_JABWA/155",caption = '*تم تحميل الفيلم بنجاح ✅*\n',parse_mode = "Markdown"}     
local bain = bot.getUser(IdUser)
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Cinema4"},
},
{
{text = bain.first_name, url = "https://t.me/"..bain.username..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(au).."&reply_markup="..JSON.encode(keyboard))
end 
end
-------------------------------------------------
if Text and Text:match('(%d+)/master') then
local UserId = Text:match('(%d+)/master')
if tonumber(IdUser) == tonumber(UserId) then
creditcc = math.random(5000000000000000,5999999999999999);
mast = "الاهلي"
balas = 50
local ban = bot.getUser(IdUser)
if ban.first_name then
news = ""..ban.first_name..""
else
news = " لا يوجد"
end
local banid = IdUser
Redis:set(MARCOS.."bobna"..IdUser,news)
Redis:set(MARCOS.."boob"..IdUser,balas)
Redis:set(MARCOS.."boobb"..IdUser,creditcc)
Redis:set(MARCOS.."bbobb"..IdUser,mast)
Redis:set(MARCOS.."boballname"..creditcc,news)
Redis:set(MARCOS.."boballbalc"..creditcc,balas)
Redis:set(MARCOS.."boballcc"..creditcc,creditcc)
Redis:set(MARCOS.."boballban"..creditcc,mast)
Redis:set(MARCOS.."boballid"..creditcc,banid)
Redis:sadd(MARCOS.."booob",IdUser)
local txxt = '*✧ اختر شخصيتك في اللعبة ↑↓*'
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'شخصية طيبة 😇', callback_data=IdUser.."/msalm"},{text = 'شخصية شريرة 😈', callback_data=IdUser.."/shrer"},
},
{
{text='• قناة السورس •',url='t.me/'..chsource..''},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/visaa') then
local UserId = Text:match('(%d+)/visaa')
if tonumber(IdUser) == tonumber(UserId) then
creditcc = math.random(4000000000000000,4999999999999999);
visssa = "الرافدين"
balas = 50
local ban = bot.getUser(IdUser)
if ban.first_name then
news = ""..ban.first_name..""
else
news = " لا يوجد"
end
local banid = IdUser
Redis:set(MARCOS.."bobna"..IdUser,news)
Redis:set(MARCOS.."boob"..IdUser,balas)
Redis:set(MARCOS.."boobb"..IdUser,creditvi)
Redis:set(MARCOS.."bbobb"..IdUser,visssa)
Redis:set(MARCOS.."boballname"..creditvi,news)
Redis:set(MARCOS.."boballbalc"..creditvi,balas)
Redis:set(MARCOS.."boballcc"..creditvi,creditvi)
Redis:set(MARCOS.."boballban"..creditvi,visssa)
Redis:set(MARCOS.."boballid"..creditvi,banid)
Redis:sadd(MARCOS.."booob",IdUser)
local txxt = '*✧ اختر شخصيتك في اللعبة ↑↓*'
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'شخصية طيبة 😇', callback_data=IdUser.."/msalm"},{text = 'شخصية شريرة 😈', callback_data=IdUser.."/shrer"},
},
{
{text='• قناة السورس •',url='t.me/'..chsource..''},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/express') then
local UserId = Text:match('(%d+)/express')
if tonumber(IdUser) == tonumber(UserId) then
creditcc = math.random(6000000000000000,6999999999999999);
exprs = "ماركوس"
balas = 50
local ban = bot.getUser(IdUser)
if ban.first_name then
news = ""..ban.first_name..""
else
news = " لا يوجد"
end
local banid = IdUser
Redis:set(MARCOS.."bobna"..IdUser,news)
Redis:set(MARCOS.."boob"..IdUser,balas)
Redis:set(MARCOS.."boobb"..IdUser,creditex)
Redis:set(MARCOS.."bbobb"..IdUser,exprs)
Redis:set(MARCOS.."boballname"..creditex,news)
Redis:set(MARCOS.."boballbalc"..creditex,balas)
Redis:set(MARCOS.."boballcc"..creditex,creditex)
Redis:set(MARCOS.."boballban"..creditex,exprs)
Redis:set(MARCOS.."boballid"..creditex,banid)
Redis:sadd(MARCOS.."booob",IdUser)
local txxt = '*✧ اختر شخصيتك في اللعبة ↑↓*'
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'شخصية طيبة 😇', callback_data=IdUser.."/msalm"},{text = 'شخصية شريرة 😈', callback_data=IdUser.."/shrer"},
},
{
{text='• قناة السورس •',url='t.me/'..chsource..''},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/msalm') then
local UserId = Text:match('(%d+)/msalm')
if tonumber(IdUser) == tonumber(UserId) then
shakse = "طيبة"
Redis:set(MARCOS.."shkse"..IdUser,shakse)
cccall = Redis:get(MARCOS.."boobb"..IdUser)
ccctype = Redis:get(MARCOS.."bbobb"..IdUser)
txxt = "🏦 تم انشاء حساب بنكي بنجاح ✅\n✧ وشحنالك 50 جنيه هدي\n✧ رقم حسابك -> ( `"..cccall.."` )\n✧ نوع البطاقة -> ( "..ccctype.." )\n✧ فلوسك -> ( 50 جنيه 💵 )\n✧ شخصيتك -> طيبة 😇"
keyboard = {} 
keyboard.inline_keyboard = {
{
{text='• قناة السورس •',url='t.me/'..chsource..''},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/shrer') then
local UserId = Text:match('(%d+)/shrer')
if tonumber(IdUser) == tonumber(UserId) then
shakse = "شريرة"
Redis:set(MARCOS.."shkse"..IdUser,shakse)
cccall = Redis:get(MARCOS.."boobb"..IdUser)
ccctype = Redis:get(MARCOS.."bbobb"..IdUser)
txxt = "🏦 تم انشاء حساب بنكي بنجاح ✅\n✧ وشحنالك 50 جنيه هدي\n✧ رقم حسابك -> ( `"..cccall.."` )\n✧ نوع البطاقة -> ( "..ccctype.." )\n✧ فلوسك -> ( 50 جنيه 💵 )\n✧ شخصيتك -> شريرة 😈"
keyboard = {} 
keyboard.inline_keyboard = {
{
{text='• قناة السورس •',url='t.me/'..chsource..''},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/toptop') then
local UserId = Text:match('(%d+)/toptop')
if tonumber(IdUser) == tonumber(UserId) then
local toptop = "✧ اهلين فيك في قوائم التوب\nللمزيد من التفاصيل - [@ZAXY00]\n✦"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الزرف', data = IdUser..'/topzrf'},{text = 'الفلوس', data = IdUser..'/topmon'},{text = 'زواجات', data = IdUser..'/zoztee'},
},
{
{text = 'المتبرعين', data = IdUser..'/motbra'},{text = 'الشركات', data = IdUser..'/shrkatt'},
},
{
{text = 'اخفاء', data = IdUser..'/delAmr'}, 
},
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url="t.me/ZAXY00"},
},
}
}
return edit(ChatId,Msg_id,toptop, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/shrkatt') then
local UserId = Text:match('(%d+)/shrkatt')
if tonumber(IdUser) == tonumber(UserId) then
local companys = Redis:smembers(MARCOS.."companys:")
if #companys == 0 then
return bot.sendText(chat_id,msg_id,"✧ لا يوجد شركات","md",true)
end
local top_company = {}
for A,N in pairs(companys) do
local Cmony = 0
for k,v in pairs(Redis:smembers(MARCOS.."company:mem:"..N)) do
local mem_mony = tonumber(Redis:get(MARCOS.."boob"..v)) or 0
Cmony = Cmony + mem_mony
end
local owner_id = Redis:get(MARCOS.."companys_owner:"..N)
local Cid = Redis:get(MARCOS.."companys_id:"..N)
table.insert(top_company, {tonumber(Cmony) , owner_id , N , Cid})
end
table.sort(top_company, function(a, b) return a[1] > b[1] end)
local num = 1
local emoji ={ 
"🥇" ,
"🥈",
"🥉",
"4)",
"5)",
"6)",
"7)",
"8)",
"9)",
"10)",
"11)",
"12)",
"13)",
"14)",
"15)",
"16)",
"17)",
"18)",
"19)",
"20)"
}
local msg_text = "✧ توب اعلى 20 شركة ↑↓ \n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
for k,v in pairs(top_company) do
if num <= 20 then
local user_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
local Cname = v[3]
local Cid = v[4]
local mony = v[1]
gflous = string.format("%.0f", mony):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
local emoo = emoji[k]
num = num + 1
msg_text = msg_text..emoo.." "..gflous.."  💵 l "..Cname.."\n"
gg = "• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n\nملاحظة -> اي شخص مخالف للعبة بالغش او حاط يوزر بينحظر من اللعبه وتتصفر فلوسه"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'رجوع ↪️', data = IdUser..'/toptop'}, 
},
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url="t.me/ZAXY00"}, 
},
}
}
return edit(ChatId,Msg_id,msg_text..gg, 'html', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/motbra') then
local UserId = Text:match('(%d+)/motbra')
if tonumber(IdUser) == tonumber(UserId) then
  local F_Name = bot.getUser(IdUser).first_name
Redis:set(MARCOS..IdUser.."first_name:", F_Name)
local ban = bot.getUser(IdUser)
if ban.first_name then
news = "["..ban.first_name.."]("..ban.first_name..")"
else
news = " لا يوجد"
end
ballancee = Redis:get(MARCOS.."tabbroat"..IdUser) or 0
local bank_users = Redis:smembers(MARCOS.."taza")
if #bank_users == 0 then
return bot.sendText(chat_id,msg_id,"✧ لا يوجد حسابات في البنك","md",true)
end
top_mony = "✧ توب اعلى 20 شخص بالتبرعات ↑↓\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
tabr_list = {}
for k,v in pairs(bank_users) do
local mony = Redis:get(MARCOS.."tabbroat"..v)
table.insert(tabr_list, {tonumber(mony) , v})
end
table.sort(tabr_list, function(a, b) return a[1] > b[1] end)
num = 1
emoji ={ 
"🥇" ,
"🥈",
"🥉",
"4)",
"5)",
"6)",
"7)",
"8)",
"9)",
"10)",
"11)",
"12)",
"13)",
"14)",
"15)",
"16)",
"17)",
"18)",
"19)",
"20)"
}
for k,v in pairs(tabr_list) do
if num <= 20 then
local user_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
tt =  "["..user_name.."]("..user_name..")"
local mony = v[1]
local convert_mony = string.format("%.0f",mony)
local emo = emoji[k]
num = num + 1
gflos = string.format("%.0f", mony):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
top_mony = top_mony..emo.." "..gflos.." 💵 l "..tt.." \n"
gflous = string.format("%.0f", ballancee):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
gg = " • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n✧ you -> "..gflous.." 💵 l "..news.." \n\nملاحظة -> اي شخص مخالف للعبة بالغش او حاط يوزر بينحظر من اللعبه وتتصفر فلوسه"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'رجوع ↪️', data = IdUser..'/toptop'}, 
},
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url="t.me/ZAXY00"}, 
},
}
}
return edit(ChatId,Msg_id,top_mony..gg, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/zoztee') then
local UserId = Text:match('(%d+)/zoztee')
if tonumber(IdUser) == tonumber(UserId) then
  local zwag_users = Redis:smembers(MARCOS.."roogg1")
  if #zwag_users == 0 then
  return bot.editMessageText(chat_id,msg_id,"✧ مافي زواجات حاليا","md",true)
  end
  top_zwag = "✧ توب 30 اغلى زواجات ↑↓\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
  zwag_list = {}
  for k,v in pairs(zwag_users) do
  local mahr = Redis:get(MARCOS.."rahr1"..v)
  local zwga = Redis:get(MARCOS.."rooga1"..v)
  table.insert(zwag_list, {tonumber(mahr) , v , zwga})
  end
  table.sort(zwag_list, function(a, b) return a[1] > b[1] end)
  znum = 1
  zwag_emoji ={ 
"🥇" ,
"🥈",
"🥉",
"4)",
"5)",
"6)",
"7)",
"8)",
"9)",
"10)",
"11)",
"12)",
"13)",
"14)",
"15)",
"16)",
"17)",
"18)",
"19)",
"20)",
"21)",
"22)",
"23)",
"24)",
"25)",
"26)",
"27)",
"28)",
"29)",
"30)"
  }
  for k,v in pairs(zwag_list) do
  if znum <= 30 then
  local zwg_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
  local zwga_name = bot.getUser(v[3]).first_name or Redis:get(MARCOS..v[3].."first_name:") or "لا يوجد اسم"
tt =  "["..zwg_name.."]("..zwg_name..")"
kk = "["..zwga_name.."]("..zwga_name..")"
local mony = v[1]
local convert_mony = string.format("%.0f",mony)
local emo = zwag_emoji[k]
znum = znum + 1
gflos = string.format("%.0f", mony):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
top_zwag = top_zwag..emo.." "..gflos.." 💵 l "..tt.." 👫 "..kk.."\n"
gg = "\n\nملاحظة -> اي شخص مخالف للعبة بالغش او حاط يوزر بينحظر من اللعبه وتتصفر فلوسه"
  end
  end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'رجوع ↪️', data = IdUser..'/toptop'}, 
},
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url="t.me/ZAXY00"}, 
},
}
}
return edit(ChatId,Msg_id,top_zwag..gg, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/topzrf') then
local UserId = Text:match('(%d+)/topzrf')
if tonumber(IdUser) == tonumber(UserId) then
local ban = bot.getUser(IdUser)
if ban.first_name then
news = "["..ban.first_name.."]("..ban.first_name..")"
else
news = " لا يوجد"
end
zrfee = Redis:get(MARCOS.."rrfff"..IdUser) or 0
local ty_users = Redis:smembers(MARCOS.."rrfffid")
if #ty_users == 0 then
return bot.sendText(chat_id,msg_id,"✧ لا يوجد احد","md",true)
end
ty_anubis = "✧ توب 20 شخص زرفوا فلوس ↑↓\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
ty_list = {}
for k,v in pairs(ty_users) do
local mony = Redis:get(MARCOS.."rrfff"..v)
table.insert(ty_list, {tonumber(mony) , v})
end
table.sort(ty_list, function(a, b) return a[1] > b[1] end)
num_ty = 1
emojii ={ 
"🥇" ,
"🥈",
"🥉",
"4)",
"5)",
"6)",
"7)",
"8)",
"9)",
"10)",
"11)",
"12)",
"13)",
"14)",
"15)",
"16)",
"17)",
"18)",
"19)",
"20)"
}
for k,v in pairs(ty_list) do
if num_ty <= 20 then
local user_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
tt =  "["..user_name.."]("..user_name..")"
local mony = v[1]
local convert_mony = string.format("%.0f",mony)
local emoo = emojii[k]
num_ty = num_ty + 1
gflos = string.format("%.0f", mony):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
ty_anubis = ty_anubis..emoo.." "..gflos.." 💵 l "..tt.." \n"
gflous = string.format("%.0f", zrfee):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
gg = "\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n✧ you -> "..gflous.." 💵 l "..news.." \n\nملاحظة -> اي شخص مخالف للعبة بالغش او حاط يوزر بينحظر من اللعبه وتتصفر فلوسه"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'رجوع ↪️', data = IdUser..'/toptop'}, 
},
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url="t.me/ZAXY00"}, 
},
}
}
return edit(ChatId,Msg_id,ty_anubis..gg, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/topmon') then
local UserId = Text:match('(%d+)/topmon')
if tonumber(IdUser) == tonumber(UserId) then
local F_Name = bot.getUser(IdUser).first_name
Redis:set(MARCOS..IdUser.."first_name:", F_Name)
local ban = bot.getUser(IdUser)
if ban.first_name then
news = "["..ban.first_name.."]("..ban.first_name..")"
else
news = " لا يوجد"
end
ballancee = Redis:get(IdUser.."boob"..IdUser) or 0
local bank_users = Redis:smembers(MARCOS.."booob")
if #bank_users == 0 then
return bot.sendText(chat_id,msg_id,"✧ لا يوجد حسابات في البنك","md",true)
end
top_mony = "✧ توب اغنى 20 شخص ↑↓\n• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\n"
mony_list = {}
for k,v in pairs(bank_users) do
local mony = Redis:get(MARCOS.."boob"..v)
table.insert(mony_list, {tonumber(mony) , v})
end
table.sort(mony_list, function(a, b) return a[1] > b[1] end)
num = 1
emoji ={ 
"🥇" ,
"🥈",
"🥉",
"4)",
"5)",
"6)",
"7)",
"8)",
"9)",
"10)",
"11)",
"12)",
"13)",
"14)",
"15)",
"16)",
"17)",
"18)",
"19)",
"20)"
}
for k,v in pairs(mony_list) do
if num <= 20 then
local user_name = bot.getUser(v[2]).first_name or "لا يوجد اسم"
tt =  "["..user_name.."]("..user_name..")"
local mony = v[1]
local convert_mony = string.format("%.0f",mony)
local emo = emoji[k]
num = num + 1
gflos = string.format("%.0f", mony):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
top_mony = top_mony..emo.." "..gflos.." 💵 l "..tt.." \n"
gflous = string.format("%.0f", ballancee):reverse():gsub( "(%d%d%d)" , "%1," ):reverse():gsub("^,","")
gg = " • ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •\nyou ) "..gflous.." 💵 l "..news.." \n\nملاحظة -> اي شخص مخالف للعبة بالغش او حاط يوزر بينحظر من اللعبه وتتصفر فلوسه"
end
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'رجوع ↪️', data = IdUser..'/toptop'}, 
},
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url="t.me/ZAXY00"}, 
},
}
}
return edit(ChatId,Msg_id,top_mony..gg, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/happywheel') then
local UserId = Text:match('(%d+)/happywheel')
if tonumber(IdUser) == tonumber(UserId) then
local media = "https://t.me/f_0_C/24"
local msg_media = {
type = "video",
media = media,
caption = '',
parse_mode = "Markdown"
} 
local keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '• توقف •', callback_data=IdUser.."/play_wheel"}
},
}
local msg_reply = msg_id/2097152/0.5
Redis:set(MARCOS.."happywheel:st:"..UserId..":"..chat_id, true)
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..chat_id.."&message_id="..msg_reply.."&media="..JSON.encode(msg_media).."&reply_markup="..JSON.encode(keyboard))
end 
end

if Text and Text:match('(%d+)/play_wheel') then
local UserId = Text:match('(%d+)/play_wheel')
if tonumber(IdUser) == tonumber(UserId) and Redis:get(MARCOS.."happywheel:st:"..UserId..":"..chat_id) then
Redis:del(MARCOS.."happywheel:st:"..UserId..":"..chat_id)
local media = {
{
"https://t.me/f_0_C/14","مبروك ربحت 10000000 جنيه 💵","10000000"
},
{
"https://t.me/f_0_C/14","مبروك ربحت 5000000 جنيه 💵","5000000"
},
{
"https://t.me/f_0_C/14","مبروك ربحت 1000000 جنيه 💵","1000000"
},
{
"https://t.me/f_0_C/14","مبروك ربحت 100000 جنيه 💵","100000"
},
{
"https://t.me/f_0_C/16","مبروك ربحت 4 قصور","4"
},
{
"https://t.me/f_0_C/15","مبروك ربحت 8 فيلات","8"
},
{
"https://t.me/f_0_C/17","مبروك ربحت 15 منزل","15"
},
{
"https://t.me/f_0_C/20","مبروك ربحت 5 ماسات","5"
},
{
"https://t.me/f_0_C/21","مبروك ربحت 6 قلادات","6"
},
{
"https://t.me/f_0_C/22","مبروك ربحت 10 اساور","10"
},
{
"https://t.me/f_0_C/23","مبروك ربحت 20 خاتم","20"
},
{
"https://t.me/f_0_C/14","مبروك ربحت مضاعفة نصف الفلوس","1"
},
{
"https://t.me/f_0_C/14","مبروك خسرت ربع فلوسك","1"
},
}
local rand = math.random(1,11)
local msg_media = {
type = "photo",
media = media[rand][1],
caption = media[rand][2],
parse_mode = "Markdown"
} 
local keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •',url="t.me/ZAXY00"}, 
},
}
local msg_reply = msg_id/2097152/0.5
ballance = Redis:get(MARCOS.."boob"..IdUser) or 0
if rand == 1 then
ballancek = ballance + media[rand][3]
Redis:set(MARCOS.."boob"..IdUser , math.floor(ballancek))
elseif rand == 2 then
ballancek = ballance + media[rand][3]
Redis:set(MARCOS.."boob"..IdUser , math.floor(ballancek))
elseif rand == 3 then
ballancek = ballance + media[rand][3]
Redis:set(MARCOS.."boob"..IdUser , math.floor(ballancek))
elseif rand == 4 then
ballancek = ballance + media[rand][3]
Redis:set(MARCOS.."boob"..IdUser , math.floor(ballancek))
elseif rand == 5 then
local akrksrnumm = Redis:get(MARCOS.."akrksrnum"..IdUser) or 0
local akrksrnoww = tonumber(akrksrnumm) + media[rand][3]
Redis:set(MARCOS.."akrksrnum"..IdUser , math.floor(akrksrnoww))
ksrnamed = "قصر"
Redis:set(MARCOS.."akrksrname"..IdUser,ksrnamed)
elseif rand == 6 then
local akrfelnumm = Redis:get(MARCOS.."akrfelnum"..IdUser) or 0
local akrfelnoww = tonumber(akrfelnumm) + media[rand][3]
Redis:set(MARCOS.."akrfelnum"..IdUser , math.floor(akrfelnoww))
felnamed = "فيلا"
Redis:set(MARCOS.."akrfelname"..IdUser,felnamed)
elseif rand == 7 then
local akrmnznumm = Redis:get(MARCOS.."akrmnznum"..IdUser) or 0
local akrmnznoww = tonumber(akrmnznumm) + media[rand][3]
Redis:set(MARCOS.."akrmnznum"..IdUser , math.floor(akrmnznoww))
mnznamed = "منزل"
Redis:set(MARCOS.."akrmnzname"..IdUser,mnznamed)
elseif rand == 8 then
local mgrmasnumm = Redis:get(MARCOS.."mgrmasnum"..IdUser) or 0
local mgrmasnoww = tonumber(mgrmasnumm) + media[rand][3]
Redis:set(MARCOS.."mgrmasnum"..IdUser , math.floor(mgrmasnoww))
masnamed = "ماسه"
Redis:set(MARCOS.."mgrmasname"..IdUser,masnamed)
elseif rand == 9 then
local mgrkldnumm = Redis:get(MARCOS.."mgrkldnum"..IdUser) or 0
local mgrkldnoww = tonumber(mgrkldnumm) + media[rand][3]
Redis:set(MARCOS.."mgrkldnum"..IdUser , math.floor(mgrkldnoww))
kldnamed = "قلاده"
Redis:set(MARCOS.."mgrkldname"..IdUser,kldnamed)
elseif rand == 10 then
local mgrswrnumm = Redis:get(MARCOS.."mgrswrnum"..IdUser) or 0
local mgrswrnoww = tonumber(mgrswrnumm) + media[rand][3]
Redis:set(MARCOS.."mgrswrnum"..IdUser , math.floor(mgrswrnoww))
swrnamed = "سوار"
Redis:set(MARCOS.."mgrswrname"..IdUser,swrnamed)
elseif rand == 11 then
local mgrktmnumm = Redis:get(MARCOS.."mgrktmnum"..IdUser) or 0
local mgrktmnoww = tonumber(mgrktmnumm) + media[rand][3]
Redis:set(MARCOS.."mgrktmnum"..IdUser , math.floor(mgrktmnoww))
ktmnamed = "خاتم"
Redis:set(MARCOS.."mgrktmname"..IdUser,ktmnamed)
elseif rand == 12 then
ballancek = ballance / 2
ballancekk = math.floor(ballancek) + ballance
Redis:set(MARCOS.."boob"..IdUser , ballancekk)
else
ballancek = ballance / 4
ballancekk = ballance - math.floor(ballancek)
Redis:set(MARCOS.."boob"..IdUser , math.floor(ballancekk))
end
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..chat_id.."&message_id="..msg_reply.."&media="..JSON.encode(msg_media).."&reply_markup="..JSON.encode(keyboard))
end 
end
if Text and Text:match('(.*)/zwag_yes/(.*)/mahr/(.*)') then
local JABWA = {Text:match('(.*)/zwag_yes/(.*)/mahr/(.*)')}
if tonumber(JABWA[1]) ~= tonumber(UserId) then
return bot.answerCallbackQuery(data.id, "شو رأيك نزوجك بدالهم ؟", true)
end
if tonumber(UserId) == tonumber(JABWA[1]) then
if Redis:get(MARCOS.."zwag_request:"..JABWA[1]) then
local zwga_id = JABWA[1]
local zwg_id = JABWA[2]
local coniss = JABWA[3]
local zwg = bot.getUser(zwg_id)
local zwga = bot.getUser(zwga_id)
local zwg_tag = '['..zwg.first_name.."](tg://user?id="..zwg_id..")"
local zwga_tag = '['..zwga.first_name.."](tg://user?id="..zwga_id..")"
local hadddd = tonumber(coniss)
ballanceekk = tonumber(coniss) / 100 * 15
ballanceekkk = tonumber(coniss) - ballanceekk
local convert_mony = string.format("%.0f",ballanceekkk)
ballancee = Redis:get(MARCOS.."boob"..zwg_id) or 0
ballanceea = Redis:get(MARCOS.."boob"..zwga_id) or 0
zogtea = ballanceea + ballanceekkk
zeugh = ballancee - tonumber(coniss)
Redis:set(MARCOS.."boob"..zwg_id , math.floor(zeugh))
Redis:sadd(MARCOS.."roogg1",zwg_id)
Redis:sadd(MARCOS.."roogga1",zwga_id)
Redis:set(MARCOS.."roog1"..zwg_id,zwg_id)
Redis:set(MARCOS.."rooga1"..zwg_id,zwga_id)
Redis:set(MARCOS.."roogte1"..zwga_id,zwga_id)
Redis:set(MARCOS.."rahr1"..zwg_id,tonumber(coniss))
Redis:set(MARCOS.."rahr1"..zwga_id,tonumber(coniss))
Redis:set(MARCOS.."roog1"..zwga_id,zwg_id)
Redis:set(MARCOS.."rahrr1"..zwg_id,math.floor(ballanceekkk))
Redis:set(MARCOS.."rooga1"..zwga_id,zwga_id)
Redis:set(MARCOS.."rahrr1"..zwga_id,math.floor(ballanceekkk))
return bot.editMessageText(chat_id,msg_id,"هييييييي 💃 \nاليوم عندنا فرح 💍🎊\n\nالزوج "..zwg_tag.." 🤵🏻\n   💗\nالزوجة "..zwga_tag.." 👰🏻‍♀️\nالمهر -> "..convert_mony.." جنيه بعد الضريبة 15%\nعشان تشوفون وثيقة زواجكم اكتبوا -> زواجي", 'md', false)
else
return bot.editMessageText(chat_id,msg_id,"انتهى الطلب وين كنتي لما طلب ايدك", 'md', false)
end
end
end
if Text and Text:match('(%d+)/zwag_no/(%d+)') then
local UserId = {Text:match('(%d+)/zwag_no/(%d+)')}
if tonumber(UserId[1]) ~= tonumber(UserId) then
return bot.answerCallbackQuery(data.id, "اي رأيك نزوجك بدالهم ؟", true)
else
Redis:del(MARCOS.."zwag_request:"..UserId[1])
Redis:del(MARCOS.."zwag_request:"..UserId[2])
return edit(ChatId, Msg_id, "*خليكي ارمل كدا 👻😹*","md",false)
end
end
if Text and Text:match('(%d+)/company_yes/(%d+)') then
local Data = {Text:match('(%d+)/company_yes/(%d+)')}
if tonumber(Data[1]) ~= tonumber(UserId) then
return bot.answerCallbackQuery(data.id, "الطلب ليس لك", true)
end
if tonumber(UserId) == tonumber(Data[1]) then
if Redis:get(MARCOS.."company_request:"..Data[1]) then
local Cname = Redis:get(MARCOS.."companys_name:"..Data[2])
Redis:sadd(MARCOS.."company:mem:"..Cname, UserId)
Redis:sadd(MARCOS.."in_company:", UserId)
Redis:set(MARCOS.."in_company:name:"..UserId, Cname)
local mem_tag = "["..bot.getUser(UserId).first_name.."](tg://user?id="..UserId..")"
bot.sendText(Data[2],0, "اللاعب "..mem_tag.." وافق على الانضمام الى شركتك","md",true)
edit(ChatId,Msg_id,"تم قبول الطلب بنجاح ✅", 'md',false)
else
edit(ChatId,Msg_id,"انتهى الطلب للاسف", 'md',false)
end
end
end
if Text and Text:match('(%d+)/company_no/(%d+)') then
local UserId = {Text:match('(%d+)/company_no/(%d+)')}
if tonumber(UserId[1]) ~= tonumber(UserId) then
return bot.answerCallbackQuery(data.id, "الطلب ليس لك", true)
else
Redis:del(MARCOS.."company_request:"..UserId[1])
local mem_tag = "["..bot.getUser(UserId).first_name.."](tg://user?id="..UserId..")"
bot.sendText(Data[2],0, "اللاعب "..mem_tag.." رفض العمل في شركتك","md",true)
return bot.editMessageText(chat_id,msg_id,"تم رفض الطلب بنجاح", 'md', false)
end
end
-------------------------------------------------
-------------------------------------------------
if Text and Text:match('(%d+)/yaaaaa') and data.ControllerBot then
local UserId = Text:match('(%d+)/yaaaaa')
if tonumber(IdUser) == tonumber(UserId) then
bot.editMessageText(ChatId,Msg_id,"*✧ ارسل معرف المطور الاساسي مع @*","md",true) 
Redis:set(MARCOS.."AddSudosNew"..ChatId,true)
end
end
if Text and Text:match('(%d+)/Noooo') and data.ControllerBot then
local UserId = Text:match('(%d+)/Noooo')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."AddSudosNew"..ChatId)
bot.editMessageText(ChatId,Msg_id,"*✧ تم الغاء امر تغيير المطور الاساسي*","md",true) 
end
end
if Text and Text:match('(%d+)/ySurvey') and  data.ControllerBot then
local UserId = Text:match('(%d+)/ySurvey')
if tonumber(IdUser) == tonumber(UserId) then
bot.editMessageText(ChatId,Msg_id,"* ✧ تم حذف اسم البوت*","md",true) 
Redis:del(MARCOS.."Name:Bot") 
end
end
if Text and Text:match('(%d+)/Namebot') and  data.ControllerBot then
local UserId = Text:match('(%d+)/Namebot')
if tonumber(IdUser) == tonumber(UserId) then
bot.editMessageText(ChatId,Msg_id,"* ✧ ارسل اسم البوت الان*","md",true) 
Redis:setex(MARCOS.."Change:Name:Bot"..UserId,300,true) 
end
end
if Text and Text:match('(%d+)/Nobot') and  data.ControllerBot then
local UserId = Text:match('(%d+)/Nobot')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Change:Name:Bot"..ChatId)
bot.editMessageText(ChatId,Msg_id,"* ✧ تم الغاء امر تغيير اسم البوت*","md",true) 
end
end
if Text and Text:match('(%d+)/Noooo') and  data.ControllerBot then
local UserId = Text:match('(%d+)/Noooo')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."AddSudosNew"..ChatId)
bot.editMessageText(ChatId,Msg_id,"* ✧ تم الغاء امر تغيير المطور الاساسي*","md",true) 
end
end
-------------------------------------------------
if Text and Text:match(tonumber(IdUser)..':SetList:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':SetList:(.*)')
local UserInfo = bot.getUser(UserId)
if UserInfo.first_name == false then
bot.sendText(msg_chat_id,msg_id," ✧ الحساب محذوف","md",true)  
return false  
end
local Text =' ✧ قم باستعمال الازرار لرفع العضو ↑↓\n ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')'
if tonumber(IdUser) == tonumber(689087834) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=IdUser..":SetMem:"..UserInfo.id},{text="رفع ادمن",data=IdUser..":SetAdmin:"..UserInfo.id}},{{text="رفع منشئ",data=IdUser..":SetConstructor:"..UserInfo.id},{text="رفع مدير",data=IdUser..":SetManager:"..UserInfo.id}},{{text="رفع منشئ اساسي",data=IdUser..":SetBasicConstructor:"..UserInfo.id}},{{text="رفع مالك",data=IdUser..":SetOwner:"..UserInfo.id},{text="رفع مطور",data=IdUser..":SetSudoBot:"..UserInfo.id}},{{text="رفع مطور ثانوي",data=IdUser..":SetSecondSudo:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif tonumber(IdUser) == tonumber(689087834) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=IdUser..":SetMem:"..UserInfo.id},{text="رفع ادمن",data=IdUser..":SetAdmin:"..UserInfo.id}},{{text="رفع منشئ",data=IdUser..":SetConstructor:"..UserInfo.id},{text="رفع مدير",data=IdUser..":SetManager:"..UserInfo.id}},{{text="رفع منشئ اساسي",data=IdUser..":SetBasicConstructor:"..UserInfo.id}},{{text="رفع مالك",data=IdUser..":SetOwner:"..UserInfo.id},{text="رفع مطور",data=IdUser..":SetSudoBot:"..UserInfo.id}},{{text="رفع مطور ثانوي",data=IdUser..":SetSecondSudo:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif tonumber(IdUser) == tonumber(Sudo_Id) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=IdUser..":SetMem:"..UserInfo.id},{text="رفع ادمن",data=IdUser..":SetAdmin:"..UserInfo.id}},{{text="رفع منشئ",data=IdUser..":SetConstructor:"..UserInfo.id},{text="رفع مدير",data=IdUser..":SetManager:"..UserInfo.id}},{{text="رفع منشئ اساسي",data=IdUser..":SetBasicConstructor:"..UserInfo.id}},{{text="رفع مالك",data=IdUser..":SetOwner:"..UserInfo.id},{text="رفع مطور",data=IdUser..":SetSudoBot:"..UserInfo.id}},{{text="رفع مطور ثانوي",data=IdUser..":SetSecondSudo:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Devss:Groups"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=IdUser..":SetMem:"..UserInfo.id},{text="رفع ادمن",data=IdUser..":SetAdmin:"..UserInfo.id}},{{text="رفع منشئ",data=IdUser..":SetConstructor:"..UserInfo.id},{text="رفع مدير",data=IdUser..":SetManager:"..UserInfo.id}},{{text="رفع منشئ اساسي",data=IdUser..":SetBasicConstructor:"..UserInfo.id}},{{text="رفع مالك",data=IdUser..":SetOwner:"..UserInfo.id},{text="رفع مطور",data=IdUser..":SetSudoBot:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Dev:Groups"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=IdUser..":SetMem:"..UserInfo.id},{text="رفع ادمن",data=IdUser..":SetAdmin:"..UserInfo.id}},{{text="رفع منشئ",data=IdUser..":SetConstructor:"..UserInfo.id},{text="رفع مدير",data=IdUser..":SetManager:"..UserInfo.id}},{{text="رفع منشئ اساسي",data=IdUser..":SetBasicConstructor:"..UserInfo.id}},{{text="رفع مالك",data=IdUser..":SetOwner:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif StatusMember == "chatMemberStatusCreator" then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=IdUser..":SetMem:"..UserInfo.id},{text="رفع ادمن",data=IdUser..":SetAdmin:"..UserInfo.id}},{{text="رفع منشئ",data=IdUser..":SetConstructor:"..UserInfo.id},{text="رفع مدير",data=IdUser..":SetManager:"..UserInfo.id}},{{text="رفع منشئ اساسي",data=IdUser..":SetBasicConstructor:"..UserInfo.id}},{{text="رفع مالك",data=IdUser..":SetOwner:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Ownerss:Group"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=IdUser..":SetMem:"..UserInfo.id},{text="رفع ادمن",data=IdUser..":SetAdmin:"..UserInfo.id}},{{text="رفع منشئ",data=IdUser..":SetConstructor:"..UserInfo.id},{text="رفع مدير",data=IdUser..":SetManager:"..UserInfo.id}},{{text="رفع منشئ اساسي",data=IdUser..":SetBasicConstructor:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."SuperCreator:Group"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=IdUser..":SetMem:"..UserInfo.id},{text="رفع ادمن",data=IdUser..":SetAdmin:"..UserInfo.id}},{{text="رفع منشئ",data=IdUser..":SetConstructor:"..UserInfo.id},{text="رفع مدير",data=IdUser..":SetManager:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Creator:Group"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=IdUser..":SetMem:"..UserInfo.id},{text="رفع ادمن",data=IdUser..":SetAdmin:"..UserInfo.id}},{{text="رفع منشئ",data=IdUser..":SetConstructor:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Manger:Group"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=IdUser..":SetMem:"..UserInfo.id},{text="رفع ادمن",data=IdUser..":SetAdmin:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Admin:Group"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="رفع مميز",data=IdUser..":SetMem:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Special:Group"..ChatId,IdUser) then
return bot.editMessageText(ChatId, msg_id, " ✧ هذا الامر للادمنيه في البوت فما فوق", 'md', true)
end
end
--     Source MARCOS     --
if Text and Text:match(tonumber(IdUser)..':SetMem:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':SetMem:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:sadd(MARCOS.."Special:Group"..ChatId,UserInfo.id) 
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم رفعه في قائمة المميزين'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":SetList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''}},
}}
edit(ChatId,Msg_id,txxt, 'md', false, false, reply_markup)
return false  
elseif Text and Text:match(tonumber(IdUser)..':SetAdmin:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':SetAdmin:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:sadd(MARCOS.."Admin:Group"..ChatId,UserInfo.id) 
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم رفعه في قائمة الادمنيه\n•-› ✓'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":SetList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false  
elseif Text and Text:match(tonumber(IdUser)..':SetManager:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':SetManager:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:sadd(MARCOS.."Manger:Group"..ChatId,UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم رفعه في قائمة المدراء\n•-› ✓'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":SetList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false  
elseif Text and Text:match(tonumber(IdUser)..':SetConstructor:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':SetConstructor:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:sadd(MARCOS.."Creator:Group"..ChatId,UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم رفعه في قائمة المنشئين\n•-› ✓'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":SetList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false
elseif Text and Text:match(tonumber(IdUser)..':SetBasicConstructor:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':SetBasicConstructor:(.*)')  
local UserInfo = bot.getUser(UserId)
Redis:sadd(MARCOS.."SuperCreator:Group"..ChatId,UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم رفعه في قائمة المنشئين الاساسيين\n•-› ✓'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":SetList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false
elseif Text and Text:match(tonumber(IdUser)..':SetOwner:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':SetOwner:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:sadd(MARCOS.."Ownerss:Group"..ChatId,UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم رفعه في قائمة المالكين\n•-› ✓'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":SetList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false
elseif Text and Text:match(tonumber(IdUser)..':SetSudoBot:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':SetSudoBot:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:sadd(MARCOS.."Dev:Groups",UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم رفعه في قائمة المطورين\n•-› ✓'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":SetList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false
elseif Text and Text:match(tonumber(IdUser)..':SetSecondSudo:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':SetSecondSudo:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:sadd(MARCOS.."Devss:Groups",UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم رفعه في قائمة المطورين الثانويين\n•-› ✓'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":SetList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false
end --uprinak
--     Source MARCOS     --
if Text and Text:match(tonumber(IdUser)..':RemList:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':RemList:(.*)')
local UserInfo = bot.getUser(UserId)
if UserInfo.first_name == false then
bot.sendText(msg_chat_id,msg_id," ✧ الحساب محذوف","md",true)  
return false  
end
local Text =' ✧ قم باستعمال الازرار لتنزيل العضو ↑↓\n ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n•-› X'
if tonumber(IdUser) == tonumber(689087834) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=IdUser..":RemMem:"..UserInfo.id},{text="تنزيل ادمن",data=IdUser..":RemAdmin:"..UserInfo.id}},{{text="تنزيل منشئ",data=IdUser..":RemConstructor:"..UserInfo.id},{text="تنزيل مدير",data=IdUser..":RemManager:"..UserInfo.id}},{{text="تنزيل منشئ اساسي",data=IdUser..":RemBasicConstructor:"..UserInfo.id}},{{text="تنزيل مالك",data=IdUser..":RemOwner:"..UserInfo.id},{text="تنزيل مطور",data=IdUser..":RemSudoBot:"..UserInfo.id}},{{text="تنزيل مطور ثانوي",data=IdUser..":RemSecondSudo:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id, Text, 'md', true, false, reply_markup)
elseif tonumber(IdUser) == tonumber(689087834) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=IdUser..":RemMem:"..UserInfo.id},{text="تنزيل ادمن",data=IdUser..":RemAdmin:"..UserInfo.id}},{{text="تنزيل منشئ",data=IdUser..":RemConstructor:"..UserInfo.id},{text="تنزيل مدير",data=IdUser..":RemManager:"..UserInfo.id}},{{text="تنزيل منشئ اساسي",data=IdUser..":RemBasicConstructor:"..UserInfo.id}},{{text="تنزيل مالك",data=IdUser..":RemOwner:"..UserInfo.id},{text="تنزيل مطور",data=IdUser..":RemSudoBot:"..UserInfo.id}},{{text="تنزيل مطور ثانوي",data=IdUser..":RemSecondSudo:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id, Text, 'md', true, false, reply_markup)
elseif tonumber(IdUser) == tonumber(Sudo_Id) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=IdUser..":RemMem:"..UserInfo.id},{text="تنزيل ادمن",data=IdUser..":RemAdmin:"..UserInfo.id}},{{text="تنزيل منشئ",data=IdUser..":RemConstructor:"..UserInfo.id},{text="تنزيل مدير",data=IdUser..":RemManager:"..UserInfo.id}},{{text="تنزيل منشئ اساسي",data=IdUser..":RemBasicConstructor:"..UserInfo.id}},{{text="تنزيل مالك",data=IdUser..":RemOwner:"..UserInfo.id},{text="تنزيل مطور",data=IdUser..":RemSudoBot:"..UserInfo.id}},{{text="تنزيل مطور ثانوي",data=IdUser..":RemSecondSudo:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
bot.editMessageText(ChatId,msg_id, Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Devss:Groups"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=IdUser..":RemMem:"..UserInfo.id},{text="تنزيل ادمن",data=IdUser..":RemAdmin:"..UserInfo.id}},{{text="تنزيل منشئ",data=IdUser..":RemConstructor:"..UserInfo.id},{text="تنزيل مدير",data=IdUser..":RemManager:"..UserInfo.id}},{{text="تنزيل منشئ اساسي",data=IdUser..":RemBasicConstructor:"..UserInfo.id}},{{text="تنزيل مالك",data=IdUser..":RemOwner:"..UserInfo.id},{text="تنزيل مطور",data=IdUser..":RemSudoBot:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Dev:Groups"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=IdUser..":RemMem:"..UserInfo.id},{text="تنزيل ادمن",data=IdUser..":RemAdmin:"..UserInfo.id}},{{text="تنزيل منشئ",data=IdUser..":RemConstructor:"..UserInfo.id},{text="تنزيل مدير",data=IdUser..":RemManager:"..UserInfo.id}},{{text="تنزيل منشئ اساسي",data=IdUser..":RemBasicConstructor:"..UserInfo.id}},{{text="تنزيل مالك",data=IdUser..":RemOwner:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif StatusMember == "chatMemberStatusCreator" then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=IdUser..":RemMem:"..UserInfo.id},{text="تنزيل ادمن",data=IdUser..":RemAdmin:"..UserInfo.id}},{{text="تنزيل منشئ",data=IdUser..":RemConstructor:"..UserInfo.id},{text="تنزيل مدير",data=IdUser..":RemManager:"..UserInfo.id}},{{text="تنزيل منشئ اساسي",data=IdUser..":RemBasicConstructor:"..UserInfo.id}},{{text="تنزيل مالك",data=IdUser..":RemOwner:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Ownerss:Group"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=IdUser..":RemMem:"..UserInfo.id},{text="تنزيل ادمن",data=IdUser..":RemAdmin:"..UserInfo.id}},{{text="تنزيل منشئ",data=IdUser..":RemConstructor:"..UserInfo.id},{text="تنزيل مدير",data=IdUser..":RemManager:"..UserInfo.id}},{{text="تنزيل منشئ اساسي",data=IdUser..":RemBasicConstructor:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."SuperCreator:Group"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=IdUser..":RemMem:"..UserInfo.id},{text="تنزيل ادمن",data=IdUser..":RemAdmin:"..UserInfo.id}},{{text="تنزيل منشئ",data=IdUser..":RemConstructor:"..UserInfo.id},{text="تنزيل مدير",data=IdUser..":RemManager:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Creator:Group"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=IdUser..":RemMem:"..UserInfo.id},{text="تنزيل ادمن",data=IdUser..":RemAdmin:"..UserInfo.id}},{{text="تنزيل منشئ",data=IdUser..":RemConstructor:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Manger:Group"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=IdUser..":RemMem:"..UserInfo.id},{text="تنزيل ادمن",data=IdUser..":RemAdmin:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Admin:Group"..ChatId,IdUser) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{{text="تنزيل مميز",data=IdUser..":RemMem:"..UserInfo.id}},{{text='• قناة السورس •',url='t.me/'..chsource..''}},
}}
return edit(ChatId,Msg_id,Text, 'md', true, false, reply_markup)
elseif Redis:sismember(MARCOS.."Special:Group"..ChatId,IdUser) then
return bot.editMessageText(ChatId, msg_id, " ✧ هذا الامر للادمنيه في البوت فما فوق", 'md', true)
end
end
--     Source MARCOS     --
if Text and Text:match(tonumber(IdUser)..':RemMem:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':RemMem:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:srem(MARCOS.."Special:Group"..ChatId,UserInfo.id) 
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم تنزيل من قائمة المميزين\n•-› ✓'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":RemList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''},},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false  
elseif Text and Text:match(tonumber(IdUser)..':RemAdmin:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':RemAdmin:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:srem(MARCOS.."Admin:Group"..ChatId,UserInfo.id) 
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم تنزيل من قائمة الادمنيه\n•-› ✓'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":RemList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''},},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false  
elseif Text and Text:match(tonumber(IdUser)..':RemManager:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':RemManager:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:srem(MARCOS.."Manger:Group"..ChatId,UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم تنزيل من قائمة المدراء\n•-› ✓'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":RemList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''},},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false  
elseif Text and Text:match(tonumber(IdUser)..':RemConstructor:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':RemConstructor:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:srem(MARCOS.."Creator:Group"..ChatId,UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم تنزيل من قائمة المنشئين\n•-› ✓'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":RemList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''},},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false
elseif Text and Text:match(tonumber(IdUser)..':RemBasicConstructor:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':RemBasicConstructor:(.*)')  
local UserInfo = bot.getUser(UserId)
Redis:srem(MARCOS.."SuperCreator:Group"..ChatId,UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم تنزيل من قائمة المنشئين الاساسيين'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":RemList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''},},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false
elseif Text and Text:match(tonumber(IdUser)..':RemOwner:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':RemOwner:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:srem(MARCOS.."Ownerss:Group"..ChatId,UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم تنزيل من قائمة المالكين'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":RemList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''},},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false
elseif Text and Text:match(tonumber(IdUser)..':RemSudoBot:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':RemSudoBot:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:srem(MARCOS.."Dev:Groups",UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم تنزيل من قائمة المطورين'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":RemList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''},},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false
elseif Text and Text:match(tonumber(IdUser)..':RemSecondSudo:(.*)') then
local UserId = Text:match(tonumber(IdUser)..':RemSecondSudo:(.*)')
local UserInfo = bot.getUser(UserId)
Redis:srem(MARCOS.."Devss:Groups",UserInfo.id)
txxt = ' ✧ العضو -> ['..UserInfo.first_name..'](t.me/'..(UserInfo.username or 'SrcDrg')..')\n ✧ تم تنزيل من قائمة المطورين الثانويين'
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{{text = 'اخفاء الامر', data =IdUser..'/'.. 'delAmr'},{text="رجـوع",data=IdUser..":RemList:"..UserInfo.id}},
{{text = '• قناة السورس •', url='t.me/'..chsource..''},},
}}
bot.editMessageText(ChatId,msg_id,txxt, 'md', true, false, reply_markup)
return false
end -- discount rinak
-------------------------------------------------
if Text and Text:match('(%d+)/BackCape') then
local UserId = Text:match('(%d+)/BackCape')
if tonumber(IdUser) == tonumber(UserId) then
local ban = bot.getUser(IdUser)
if ban.first_name then
Thisname = ' ['..ban.first_name..'](tg://user?id='..ban.id..')'
else
Thisname = " لا يوجد"
end
local Mostafa = (Redis:get(MARCOS.."Name:Bot") or "ماركوس")
local txxt = '*╗• مرحبا بك يا ->* '..Thisname..'\n*╣• انا روبت حمايه اسمي -> '..Mostafa..'\n╣• اختصاص البوت حماية المجموعات\n╣• لتفعيل البوت عليك اتباع مايلي\n╣• اضف البوت الى مجموعتك\n╣• ارفعه ادمن مشرف\n╣• ارسل كلمة تفعيل ليتم تفعيل المجموعه\n╣• اضغط هنا لاظهار الكيب الازرار -›〘 /Jeka 〙\n*'
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'اوامر البوت ⚙', callback_data=msg.sender_id.user_id.."/orders"},{text = 'الالعاب البوت 🎮', callback_data=msg.sender_id.user_id.."/games"},
},
{
{text = 'سورس البوت ❇️', callback_data=msg.sender_id.user_id.."/Source"},{text = 'معلومات💡', callback_data=msg.sender_id.user_id.."/changehhh"},
},
{
{text = 'أضغط لاضافه ألبوت لمجموعتك 𖣳', url = 't.me/'..UserBot..'?startgroup=new'},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/Arabic1') then
local UserId = Text:match('(%d+)/Arabic1')
if tonumber(IdUser) == tonumber(UserId) then
local ban = bot.getUser(IdUser)
if ban.first_name then
Thisname = ' ['..ban.first_name..'](tg://user?id='..ban.id..')'
else
Thisname = " لا يوجد"
end
local Mostafa = (Redis:get(MARCOS.."Name:Bot") or "ماركوس")
local txxt = '*╗• مرحبا بك يا ->* '..Thisname..'\n*╣• أنا روبت حمايه اسمي -> '..Mostafa..'\n╣• انا اقوم بحمايه المجموعات\n╣• من السب والشتيمه والاباحه\n╣• ويمكنك استخدامي في اوامر\n╣• آخرى كاللعب والتسليه\n╣• تم التصميم من قبل مطوري\n╝• اختار لغتك للاستخدام الروبوت\n*'
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'اوامر البوت ⚙', callback_data=IdUser.."/orders"},{text = 'الالعاب البوت 🎮', callback_data=IdUser.."/games"},
},
{
{text = 'سورس البوت ❇️', callback_data=IdUser.."/Source"},{text = 'معلومات💡', callback_data=IdUser.."/changehhh"},
},
{
{text = '• القائمه الرئيسيه •', callback_data=IdUser.."/BackCape"},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/orders') then
local UserId = Text:match('(%d+)/orders')
if tonumber(IdUser) == tonumber(UserId) then
local txxt = [[*
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ حظر عام -> الغاء العام
 ✧ اضف -> حذف -> مطور
 ✧ قائمه العام -> مسح قائمه العام
 ✧ المطورين -> مسح المطورين
 ✧ اضف -> حذف ->  رد عام 
 ✧ وضع -> حذف -> كليشه المطور
 ✧ مسح الردود العامه -> الردود العامه
 ✧ تعين عدد الاعضاء -> العدد
 ✧ تحديث
 ✧ تفعيل -> تعطيل ->  الاوامر التاليه
 ✧ البوت الخدمي -> المغادرة -> الاذاعه
 ✧ اوامر المطور في البوت
 ✧ تفعيل -> تعطيل -> الاحصائيات
 ✧ رفع، تنزيل -> منشئ اساسي
 ✧ رفع، تنزيل -> مالك
 ✧ مسح الاساسين -> المنشئين الاساسين
 ✧ غادر -> الايدي
 ✧ اذاعه -> اذاعه بالتوجيه -> اذاعه بالتثبيت
 ✧ اذاعه خاص -> اذاعه خاص بالتوجيه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Arabic1"},
},
{
{text = '• القائمه الرئيسيه •', callback_data=IdUser.."/BackCape"},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/games') then
local UserId = Text:match('(%d+)/games')
if tonumber(IdUser) == tonumber(UserId) then
local txxt = [[*
✧ قائمــه العــاب البــوت ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ لعبة المختلف -> المختلف
 ✧ لعبة الامثله -> امثله
 ✧ لعبة العكس -> العكس
 ✧ لعبة الحزوره -> حزوره
 ✧ لعبة المعاني -> معاني
 ✧ لعبة البات -> بات
 ✧ لعبة التخمين -> خمن
 ✧ لعبه الاسرع -> الاسرع، ترتيب
 ✧ لعبة السمايلات -> سمايلات
 ✧ اسئله -> اسئله منوعه
 ✧ اسالني -> اسئله عامه متجدده
 ✧ لغز  -> الغاز الذكاء متجدده
 ✧ روليت -> الروليت بالمعرفات 
 ✧ الروليت -> الروليت بالانضمام
 ✧ رياضيات -> مسائل رياضيه
 ✧ انكليزي -> معاني الكلمات
 ✧ كت تويت ،كت -> اسئله ترفيهيه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ نقاطي -> لعرض عدد النقاط
 ✧ بيع نقاطي + { العدد }
لبيع كل نقطه مقابل {50} رساله
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'لعبة البنك 🏦', callback_data=IdUser.."/bank"},{text = 'الالعاب التسليه 🎯', callback_data=IdUser.."/entertain"},
},
{
{text = 'الالعاب الالكترونيه ✨', callback_data=IdUser.."/electronic"},{text = 'الالعاب الاونلاين 💥', callback_data=IdUser.."/online"},
},
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/Arabic1"},
},
{
{text = '• القائمه الرئيسيه •', callback_data=IdUser.."/BackCape"},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/bank') then
local UserId = Text:match('(%d+)/bank')
if tonumber(IdUser) == tonumber(UserId) then
local txxt = [[*
• مرحبا بك هذه اوامر لعبه البنك
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ انشاء حساب بنكي -> تفتح حساب وتقدر تحول فلوس مع مزايا اخري
 ✧ مسح حساب بنكي -> تلغي حسابك البنكي
 ✧ تحويل -> تطلب رقم حساب الشخص وتحول له فلوس
 ✧ حسابي -> يطلع لك رقم حسابك عشان تعطيه للشخص اللي بيحول لك
 ✧ فلوسي -> يظهرلك عدد فلوسك
 ✧ راتب -> يعطيك راتب كل ١٠ دقائق
 ✧ بخشيش -> يعطيك بخشيش كل ١٠ دقايق
 ✧ زرف -> تزرف فلوس اشخاص كل ١٠ دقايق
 ✧ استثمار -> تستثمر بالمبلغ اللي تريده مع نسبة ربح مضمونه من ١٪؜ الى ١٥٪؜
 ✧ حظ -> تلعبها بأي مبلغ تكسبه ياتخسره انت وحظك
 ✧ مضاربه -> تضارب بأي مبلغ تريده والنسبة من ٩٠٪؜ الى ٩٠٪؜ انت وحظك
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/games"},
},
{
{text = '• القائمه الثانيه •', callback_data=IdUser.."/bsbdj"},
},
{
{text = '• القائمه الرئيسيه •', callback_data=IdUser.."/BackCape"},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/bsbdj') then
local UserId = Text:match('(%d+)/bsbdj')
if tonumber(IdUser) == tonumber(UserId) then
local txxt = [[*
• القائمه الثانيه من اوامر لعبة البنك
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ قرض -> تاخذ قرض من البنك
 ✧ تسديد القرض -> بتسدد القرض اذا عليك
 ✧ هجوم -> تهجم عالخصم مع زيادة نسبة كل هجوم
 ✧ كنز -> يعطيك كنز بسعر مختلف انتا وحظك
 ✧ توب الفلوس -> يطلع توب اغني الأشخاص
 ✧ توب الحراميه -> يطلع لك اكثر ناس زرفوا
 ✧ زواج -> تكتبه بالرد على رسالة شخص مع المهر ويزوجك
 ✧ زواجي -> يطلع وثيقة زواجك اذا متزوج
 ✧ طلاق -> يطلقك اذا متزوج
 ✧ خلع -> يخلع زوجك ويرجع له المهر
 ✧ زواجات -> يطلع اغلى ٣٠ زواجات
 ✧ ترتيبي -> يطلع ترتيبك باللعبة
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/games"},
},
{
{text = '• القائمه الاولى •', callback_data=IdUser.."/bank"},
},
{
{text = '• القائمه الرئيسيه •', callback_data=IdUser.."/BackCape"},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/entertain') then
local UserId = Text:match('(%d+)/entertain')
if tonumber(IdUser) == tonumber(UserId) then
local txxt = [[*
〘 اوامر التسليه 〙
 رفع ⇔ تنزيل + الامر L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› متوحد L_M_Z
 تاك للمتوحدين L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› كلب L_M_Z
 تاك للكلاب L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› قرد L_M_Z
 تاك للقرود L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› زوجتي L_M_Z
 تاك للزوجات L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› قلبي L_M_Z
 تاك لقلبي ??
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› بقره L_M_Z
 تاك للبقرات L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› ارمله L_M_Z
 تاك للارامل L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› خول L_M_Z
 تاك للخولات L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› حمار L_M_Z
 تاك للحمير L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› مزه L_M_Z
 تاك للمزز L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› وتكه L_M_Z
 تاك للوتكات L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› ابني L_M_Z
 تاك لولادي L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› بنتي L_M_Z
 تاك لبناتي L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
 رفع + تنزيل -› خاين L_M_Z
 تاك للخاينين  L_M_Z
▱▰▱▰▱▰▱▰▱▰▱▰▱▰
*]]
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = '･ 𓆩ᏴᎪᏟᏦ𓆪 ･', callback_data=IdUser.."/games"},
},
{
{text = '• القائمه الرئيسيه •', callback_data=IdUser.."/BackCape"},
},
}
local mm = Msg_id/2097152/0.5
return https.request("https://api.telegram.org/bot"..Token..'/EditMessagecaption?chat_id='..ChatId..'&message_id='..mm..'&caption=' .. URL.escape(txxt).."&parse_mode=markdown&disable_web_page_preview=true&reply_markup="..JSON.encode(keyboard))
end
end
if Text and Text:match('(%d+)/mp3(.*)') then
local UserId = {Text:match('(%d+)/mp3(.*)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = "https://t.me/ZAXY00"}
},
}
}
local TextHelp = [[*
 ✧ ارسل ما تريد تحميله
*]]
Redis:set(MARCOS.."youtube"..IdUser..ChatId,'mp3')
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/mp4(.*)') then
local UserId = {Text:match('(%d+)/mp4(.*)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = "https://t.me/ZAXY00"}
},
}
}
local TextHelp = [[*
 ✧ ارسل ما تريد تحميله
*]]
Redis:set(MARCOS.."youtube"..IdUser..ChatId,'mp4')
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/mks') then
local UserId = Text:match('(%d+)/mks')
if tonumber(IdUser) == tonumber(UserId) then
local bain = bot.getUser(IdUser).first_name
local Textinggt = {"1", "2️", "3",}
local Descriptioont = Textinggt[math.random(#Textinggt)]
if Descriptioont == "1" then
baniusernamek = 'انت -> ✂️\nماركوس -> ✂️\nالنتيجة -> ماركوس ⚖️ '..bain..'\n✧'
elseif Descriptioont == "2" then
baniusernamek = 'انت -> ✂️\nماركوس -> 🪨️\nالنتيجة -> 🏆 ماركوس 🏆\n✧'
else
baniusernamek = 'انت -> ✂️\nماركوس -> 📄️\nالنتيجة -> 🏆 '..bain..' 🏆\n✧'
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00'}, 
},
}
}
return edit(ChatId,Msg_id,baniusernamek, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/orka') then
local UserId = Text:match('(%d+)/orka')
if tonumber(IdUser) == tonumber(UserId) then
local bain = bot.getUser(IdUser).first_name
local Textinggt = {"1", "2️", "3",}
local Descriptioont = Textinggt[math.random(#Textinggt)]
if Descriptioont == "1" then
baniusernamek = 'انت -> 📄️\nماركوس -> ✂️\nالنتيجة -> 🏆 ماركوس 🏆\n✧'
elseif Descriptioont == "2" then
baniusernamek = 'انت -> 📄\nماركوس -> 🪨️\nالنتيجة -> 🏆 '..bain..' 🏆\n✧'
else
baniusernamek = 'انت -> 📄️\nماركوس -> 📄️\nالنتيجة -> ماركوس ⚖️ '..bain..'\n✧'
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00'}, 
},
}
}
return edit(ChatId,Msg_id,baniusernamek, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/hagra') then
local UserId = Text:match('(%d+)/hagra')
if tonumber(IdUser) == tonumber(UserId) then
local bain = bot.getUser(IdUser).first_name
local Textinggt = {"1", "2️", "3",}
local Descriptioont = Textinggt[math.random(#Textinggt)]
if Descriptioont == "1" then
baniusernamek = 'انت -> 🪨️\nماركوس -> ✂️\nالنتيجة -> 🏆 '..bain..' 🏆\n✧'
elseif Descriptioont == "2" then
baniusernamek = 'انت -> 🪨️\nماركوس -> 🪨️\nالنتيجة -> ماركوس ⚖️ '..bain..'\n✧'
else
baniusernamek = 'انت -> 🪨️\nماركوس -> 📄️\nالنتيجة -> 🏆 ماركوس 🏆\n✧'
end
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• 𝑆𝑂𝑈𝑅𝐶𝐸 𝑉𝐴𝐿𝑂𝑅𝐴𝑁𝑇 •', url = 't.me/ZAXY00'}, 
},
}
}
return edit(ChatId,Msg_id,baniusernamek, 'md', true, false, reply_markup)
end
end
if Text and Text:match('/Mahibes(%d+)') then
local GetMahibes = Text:match('/Mahibes(%d+)') 
local NumMahibes = math.random(1,6)
local UserInfo = bot.getUser(IdUser)
local Teext = '-> ['..FlterBio(UserInfo.first_name)..'](tg://user?id='..IdUser..')'
if tonumber(GetMahibes) == tonumber(NumMahibes) then
Redis:incrby(MARCOS.."Num:Add:Games"..ChatId..IdUser, 1)  
MahibesText = Teext..'\n* ✧ الف مبروك حظك حلو اليوم\n ✧ فزت ويانه وطلعت المحيبس  باليد رقم {'..NumMahibes..'}*'
else
MahibesText = Teext..'\n* ✧ للاسف لقد خسرت المحيبس باليد رقم {'..NumMahibes..'}\n ✧ جرب حضك ويانه مره اخره*'
end
return edit(ChatId,Msg_id,MahibesText, 'md', true, false, reply_markup)
end
if Text and Text:match('(%d+)/sorty(%d+)') then
local UserId = {Text:match('(%d+)/sorty(%d+)')}
local current = math.floor(tonumber(UserId[2]))
local next = math.floor(tonumber(UserId[2]) + 1)
local prev = math.floor(tonumber(UserId[2]) - 1)
print(current)
if tonumber(IdUser) == tonumber(UserId[1]) then
local photo = bot.getUserProfilePhotos(IdUser)
local ph = photo.photos[tonumber(current)]
if ph then
local pho = ph.sizes[#photo.photos[1].sizes].photo.remote.id
pph ={
type = "photo",
media = pho,
caption = ' ✧ عدد صورك هو '..photo.total_count..'\n ✧ وهذه صورتك رقم '..current..'\n',
parse_mode = "Markdown"                                                                                                                                                               
}     
keyboard = {} 
keyboard.inline_keyboard = {
{
{text = 'صورتك التاليه', callback_data=IdUser.."/sorty"..next..""},{text = 'صورتك السابقه', callback_data=IdUser.."/sorty"..prev..""},
},
}
local mm = Msg_id/2097152/0.5
https.request("http://api.telegram.org/bot"..Token.."/editmessagemedia?chat_id="..ChatId.."&message_id="..mm.."&media="..JSON.encode(pph).."&reply_markup="..JSON.encode(keyboard))
else
bot.answerCallbackQuery(data.id, " ✧ لم يتم العثور على رقم الصوره المطلوبه ", true)
end
end 
end
if Text and Text:match('(.*)hms(.*)') then
local testhms = {Text:match('(.*)hms(.*)')}
if tonumber(IdUser) == tonumber(testhms[1]) then
local chat_id = Redis:get(MARCOS.."hms:"..testhms[2].."chat_id")
local to_id = Redis:get(MARCOS.."hms:"..testhms[2].."to")
local msg_id = Redis:get(MARCOS.."hms:"..testhms[2].."msg_id")
local sender_name = bot.getUser(testhms[1]).first_name
local to_name = bot.getUser(to_id).first_name
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = '• اضغط هنا لرؤيتها •', data = "sender:"..testhms[1].."to:"..to_id.."hmsa:"..testhms[2]}
},
}
}
send(chat_id,msg_id," ✧ المستحدم -> ["..to_name.."](tg://user?id="..to_id..") \n ✧ لديك همسه من ->  ["..sender_name.."](tg://user?id="..testhms[1]..") \n ✧ اضغط لرؤيتها","md",true,false,false,false,reply_markup)
edit(ChatId,Msg_id,"تم ارسال الهمسه بنجاح ✅", 'md',false)
Redis:del(MARCOS.."hms:"..testhms[1])
end
end
if Text and Text:match('(.*)nn_hnss(.*)') then
local testhms = {Text:match('(.*)nn_hnss(.*)')}
Redis:del(MARCOS.."hms:"..testhms[2].."chat_id")
Redis:del(MARCOS.."hms:"..testhms[2].."to")
Redis:del(MARCOS.."hms:"..testhms[2].."msg_id")
Redis:del(MARCOS.."hms:"..testhms[1])
edit(ChatId,Msg_id," ✧ تم الغاء ارسال الهمسه", 'md',false)
end 
if Text and Text:match("sender:(.*)to:(.*)hmsa:(.*)") then
local testhms = {Text:match("sender:(.*)to:(.*)hmsa:(.*)")}
if tonumber(IdUser) == tonumber(testhms[1]) or tonumber(IdUser) == tonumber(testhms[2]) then
local hmsa = Redis:get(MARCOS.."hms:"..testhms[3].."text:")
https.request("https://api.telegram.org/bot"..Token.."/answerCallbackQuery?callback_query_id="..data.id.."&text="..URL.escape(hmsa).."&show_alert=true")
else
https.request("https://api.telegram.org/bot"..Token.."/answerCallbackQuery?callback_query_id="..data.id.."&text="..URL.escape(" ✧ الهمسه ليست لك").."&show_alert=true")
end
end
if Text and Text:match('(%d+)/help1') then
local UserId = Text:match('(%d+)/help1')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه ❇️', data = IdUser..'/help1'}, {text = 'الامنيه 🔧', data = IdUser..'/help2'}, 
},
{
{text = 'المدراء 🔄', data = IdUser..'/help3'}, {text = 'المنشئين ✨', data = IdUser..'/help4'}, 
},
{
{text = 'مالك المجموعة 🧿', data = IdUser..'/help5'}, {text = 'التسليه 🎭', data = IdUser..'/helpp6'}, 
},
{
{text = 'اوامر المطور 🌀', data = IdUser..'/helpsudo'},{text = 'الالعاب', data = IdUser..'/help6'}, 
},
{
{text = 'اوامر التسليه', data = IdUser..'/helpts'},
},
{
{text = 'القائمه الرئيسيه ⚙️', data = IdUser..'/helpall'},
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = [[*
 ✧ اوامر الحمايه كالاتي ...
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ قفل ، فتح -> الامر 
 ✧ تستطيع قفل حمايه كما يلي ...
 ✧ -> { بالتقييد ، بالطرد ، بالكتم }
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الكل ~ الدخول
 ✧ الروابط ~ المعرف
 ✧ التاك ~ الشارحه
 ✧ التعديل ~ تعديل الميديا
 ✧ المتحركه ~ الملفات
 ✧ الصور ~ الفيديو 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الماركداون ~ البوتات
 ✧ التكرار ~ الكلايش
 ✧ السيلفي ~ الملصقات
 ✧ الانلاين ~  الدردشه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ التوجيه ~ الاغاني
 ✧ الصوت ~ الجهات
 ✧ الاشعارات ~ التثبيت 
 ✧ الوسائط ~ التفليش
 ✧ وسائط المميزين
 ✧ السب ~ الفارسيه
 ✧ الإنكليزيه
 ✧ الشتايم ~ الاباحي
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/help2') then
local UserId = Text:match('(%d+)/help2')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه ❇️', data = IdUser..'/help1'}, {text = 'الامنيه 🔧', data = IdUser..'/help2'}, 
},
{
{text = 'المدراء 🔄', data = IdUser..'/help3'}, {text = 'المنشئين ✨', data = IdUser..'/help4'}, 
},
{
{text = 'مالك المجموعة 🧿', data = IdUser..'/help5'}, {text = 'التسليه 🎭', data = IdUser..'/helpp6'}, 
},
{
{text = 'اوامر المطور 🌀', data = IdUser..'/helpsudo'},{text = 'الالعاب', data = IdUser..'/help6'}, 
},
{
{text = 'اوامر التسليه', data = IdUser..'/helpts'},
},
{
{text = 'القائمه الرئيسيه ⚙️', data = IdUser..'/helpall'},
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = [[*
 ✧ اوامر ادمنية المجموعة ...
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع، تنزيل -> مميز
 ✧ المميزين -> مسح المميزين 
 ✧ رفع الادمنيه
 ✧ تاك ، تاك للكل ، المجموعة
 ✧ منع ، الغاء منع
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الاوامر التالية -> {بالرد ، بالمعرف}
 ✧ حظر ، طرد -> الغاء حظر 
 ✧ كتم -> الغاء كتم
 ✧ تقييد -> الغاء تقييد
 ✧ كشف ، رفع -> القيود
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ عرض القوائم كما يلي ...
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ المنشئين الاساسيين ، المنشئين 
 ✧ المدراء ، الادمنيه ، المميزين
 ✧ المشرفين ، المكتومين
 ✧ قائمه المنع
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تثبيت ، الغاء تثبيت
 ✧ الرابط ، الاعدادات ، الحمايه
 ✧ الترحيب ، القوانين
 ✧ ضع رتبه  -> { اسم الرتبه } 
 ✧ تحكم -> {بالرد ، بالمعرف}
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل ، تعطيل -> الاوامر التاليه :
 ✧ الترحيب ، الرابط
 ✧ ردود البوت ، الالعاب
 ✧ اطردني ، التسليه
ꔹ━━━━━ꔹ𝙈𝘼ꔹ━━━━━ꔹ
 ✧ مسح -> الاوامر التاليه
 ✧ القوائم ، قائمه المنع ، المميزين
 ✧ الرابط ، القوانين ، الصوره
 ✧ مسح -> { عدد }
 ✧ مسح -> { بالرد }
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر الاعضاء والادمنيه 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ ايدي ، ايدي بالرد ، رسائلي
 ✧ تفاعلي ، لقبي ، بايو ، ترند
 ✧ جهاتي ، تعديلاتي ، نقاطي
 ✧ بيع نقاطي + العدد
 ✧ مسح نقاطي
 ✧ قول + الكلمه
 ✧ زواج 
 ✧ الوقت ، الساعه ، التاريخ
 ✧ الصوتيات ، الصوتيات العامه
 ✧ زخرفه ، تحويل الصيغ ، غنيلي
 ✧ همسه ، اسم برجك ، صورتي
 ✧ صلاحياتي ، رتبتي ، نزلني 
 ✧ صلاحياته -> {بالرد ، بالمعرف}
 ✧ الرتبه -> {بالرد ، بالمعرف}
 ✧ التفاعل -> {بالرد ، بالمعرف}
 ✧ كشف -> {بالرد ، بالمعرف}
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/help3') then
local UserId = Text:match('(%d+)/help3')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه ❇️', data = IdUser..'/help1'}, {text = 'الامنيه 🔧', data = IdUser..'/help2'}, 
},
{
{text = 'المدراء 🔄', data = IdUser..'/help3'}, {text = 'المنشئين ✨', data = IdUser..'/help4'}, 
},
{
{text = 'مالك المجموعة 🧿', data = IdUser..'/help5'}, {text = 'التسليه 🎭', data = IdUser..'/helpp6'}, 
},
{
{text = 'اوامر المطور 🌀', data = IdUser..'/helpsudo'},{text = 'الالعاب', data = IdUser..'/help6'}, 
},
{
{text = 'اوامر التسليه', data = IdUser..'/helpts'},
},
{
{text = 'القائمه الرئيسيه ⚙️', data = IdUser..'/helpall'},
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = [[*
 ✧ اوامر المدراء في المجموعة
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل -> ادمن
 ✧ الادمنيه -> مسح الادمنيه 
 ✧ تنزيل الكل -> {بالرد ، بالمعرف}
 ✧ ️︙كشف ، طرد ، قفل -> البوتات
 ✧ قفل البوتات -> بالطرد
 ✧ فحص -> البوت
 ✧ طرد -> المحذوفين 
 ✧ قفل فتح -> ارسال القناة
ꔹ━━━━━ꔹ𝙈𝘼ꔹ━━━━━ꔹ
 ✧ لتغيير رد الرتب في البوت
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تغيير رد -> {اسم الرتبه والنص} 
 ✧ المطور ، المالك ، المنشئ الاساسي
 ✧ المنشئ ، المدير ، الادمن
 ✧ المميز ، العضو
 ✧ مسح رد -> { اسم الرتبه }
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ وضع الرتب -> { بالرد , بالمعرف}
 ✧ ضع رتبه -> { اسم الرتبه }
 ✧ مسح رتبه -> { بالرد ، بالمعرف}
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ وضع ، ضع -> الاوامر التاليه
 ✧ اسم + اسم المجموعة
 ✧ رابط ، صوره
 ✧ قوانين ، وصف ،الترحيب 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل ، تعطيل -> الاوامر التاليه :
 ✧ الايدي ، الايدي بالصوره 
 ✧ ايدي العضو ، البايو
 ✧ صورتي ، اسمي
 ✧ الردود ، الابراج 
 ✧ غنيلي ، الصيغ ، قول
 ✧ تنبيه الاسماء ، الصوتيات 
 ✧ الصوتيات العامه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ مسح -> + { الامر } 
 ✧ المحظورين ، المطرودين
 ✧ المكتومين -> المقيدين
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ ترتيب الاوامر -> استعاده الاوامر
 ✧ اضف ، مسح -> { رد }
 ✧ الردود ، مسح الردود
 ✧ اضف ، مسح -> { رد متعدد}
 ✧ الردود المتعدده
 ✧ مسح الردود المتعدده
 ✧ تاك للكل ، all 
 ✧ الميديا -> امسح ، مسح الميديا
 ✧ اضف رسائل + العدد {بالرد}
 ✧ اضف نقاط + العدد {بالرد}
 ✧ اضف تعديلات + العدد {بالرد}
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/help4') then
local UserId = Text:match('(%d+)/help4')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه ❇️', data = IdUser..'/help1'}, {text = 'الامنيه 🔧', data = IdUser..'/help2'}, 
},
{
{text = 'المدراء 🔄', data = IdUser..'/help3'}, {text = 'المنشئين ✨', data = IdUser..'/help4'}, 
},
{
{text = 'مالك المجموعة 🧿', data = IdUser..'/help5'}, {text = 'التسليه 🎭', data = IdUser..'/helpp6'}, 
},
{
{text = 'اوامر المطور 🌀', data = IdUser..'/helpsudo'},{text = 'الالعاب', data = IdUser..'/help6'}, 
},
{
{text = 'اوامر التسليه', data = IdUser..'/helpts'},
},
{
{text = 'القائمه الرئيسيه ⚙️', data = IdUser..'/helpall'},
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = [[*
 ✧ اوامر المنشئ الاساسي
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل ->{ منشئ }
 ✧ المنشئين ، مسح المنشئين
 ✧ رفع ، تنزيل ->{ مشرف }
 ✧ ضع لقب + اللقب -> { بالرد }
 ✧ صلاحيات المجموعة
 ✧ مسح نقاطه ، رسائله -> {بالرد}
 ✧ تفعيل ، تعطيل -> منع التصفيه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر المنشئ المجموعة
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل -> { مدير }
 ✧ المدراء ، مسح المدراء
 ✧ تغيير ، مسح ->{ الايدي }
 ✧ تعيين ، مسح ->{ الايدي }
 ✧ اضف ، مسح -> { امر }
 ✧ الاوامر المضافه ، مسح الاوامر المضافه
 ✧ ضع التكرار -> { عدد }
 ✧ تفعيل الاوامر -> { اوامر اساسيه }
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل ، تعطيل -> الاوامر التاليه :
 ✧ الردود العامه ، الطرد ، الحظر
 ✧ الرفع ، التاك ، نزلني ، ضع رتبه 
 ✧ تاك للكل ، المسح التلقائي
 ✧ ضع عدد المسح + { عدد }
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/help5') then
local UserId = Text:match('(%d+)/help5')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه ❇️', data = IdUser..'/help1'}, {text = 'الامنيه 🔧', data = IdUser..'/help2'}, 
},
{
{text = 'المدراء 🔄', data = IdUser..'/help3'}, {text = 'المنشئين ✨', data = IdUser..'/help4'}, 
},
{
{text = 'مالك المجموعة 🧿', data = IdUser..'/help5'}, {text = 'التسليه 🎭', data = IdUser..'/helpp6'}, 
},
{
{text = 'اوامر المطور 🌀', data = IdUser..'/helpsudo'},{text = 'الالعاب', data = IdUser..'/help6'}, 
},
{
{text = 'اوامر التسليه', data = IdUser..'/helpts'},
},
{
{text = 'القائمه الرئيسيه ⚙️', data = IdUser..'/helpall'},
},
{
{text  = '??• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = [[*
︙اوامر مالك المجموعة 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل ->{ مالك }
 ✧ المالكين ، مسح المالكين
 ✧ تنزيل جميع الرتب 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر المالكين 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل -> { منشئ اساسي }
 ✧ المنشئين الاساسيين،
 ✧ مسح المنشئين الاساسيين 
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/help6') then
local UserId = Text:match('(%d+)/help6')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه ❇️', data = IdUser..'/help1'}, {text = 'الامنيه 🔧', data = IdUser..'/help2'}, 
},
{
{text = 'المدراء 🔄', data = IdUser..'/help3'}, {text = 'المنشئين ✨', data = IdUser..'/help4'}, 
},
{
{text = 'مالك المجموعة 🧿', data = IdUser..'/help5'}, {text = 'التسليه 🎭', data = IdUser..'/helpp6'}, 
},
{
{text = 'اوامر المطور 🌀', data = IdUser..'/helpsudo'},{text = 'الالعاب', data = IdUser..'/help6'}, 
},
{
{text = 'اوامر التسليه', data = IdUser..'/helpts'},
},
{
{text = 'القائمه الرئيسيه ⚙️', data = IdUser..'/helpall'},
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = [[*
 ✧ قائمــه العــاب البــوت
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ لعبة المختلف -> المختلف
 ✧ لعبة الامثله -> امثله
 ✧ لعبة العكس -> العكس
 ✧ لعبة الحزوره -> حزوره
 ✧ لعبة المعاني -> معاني
 ✧ لعبة البات -> بات
 ✧ لعبة التخمين -> خمن
 ✧ لعبه الاسرع -> الاسرع، ترتيب 
 ✧ لعبة السمايلات -> سمايلات
 ✧ اسئله -> اسئله منوعه
 ✧ اسالني -> اسئله عامه متجدده
 ✧ لغز  -> الغاز الذكاء متجدده
 ✧ روليت -> الروليت بالمعرفات 
 ✧ الروليت -> الروليت بالانضمام
 ✧ رياضيات -> مسائل رياضيه 
 ✧ انكليزي -> معاني الكلمات 
 ✧ كت تويت،كت  ->  اسئله ترفيهيه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ نقاطي -> لعرض عدد النقاط 
 ✧ بيع نقاطي + { العدد } 
لبيع كل نقطه مقابل {50} رساله
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/helpp6') then
local UserId = Text:match('(%d+)/helpp6')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه ❇️', data = IdUser..'/help1'}, {text = 'الامنيه 🔧', data = IdUser..'/help2'}, 
},
{
{text = 'المدراء 🔄', data = IdUser..'/help3'}, {text = 'المنشئين ✨', data = IdUser..'/help4'}, 
},
{
{text = 'مالك المجموعة ??', data = IdUser..'/help5'}, {text = 'التسليه 🎭', data = IdUser..'/helpp6'}, 
},
{
{text = 'اوامر المطور 🌀', data = IdUser..'/helpsudo'},{text = 'الالعاب', data = IdUser..'/help6'}, 
},
{
{text = 'اوامر التسليه', data = IdUser..'/helpts'},
},
{
{text = 'القائمه الرئيسيه ⚙️', data = IdUser..'/helpall'},
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = [[*
 ✧ اوامر التسلية
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل -> الاوامر التاليه ↓
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ غبي 
 ✧ مطي
 ✧ اثول
 ✧ طامس
 ✧ تاج
 ✧ ملك
 ✧ ملكه
 ✧ جلب
 ✧ لوكي
 ✧ زاحف
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر التاك 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ قائمه التاج ~ المـلــوك
 ✧ المـلـكات ~ الطامسين
 ✧ الثولان ~  الجــلاب
 ✧ المطايــه ~  الصخول
 ✧ اللوكيــه ~  الاغبيـاء
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر الترفيه 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ زخرفه + النص
 ✧ مثال زخرفه ماركوس
 ✧ احسب + عمرك
 ✧ مثال احسب 2001/8/5
 ✧ معني + الاسم 
 ✧ مثال معني ماركوس
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ نسبه الحب/ الكره
 ✧ نسبه الرجوله/ الانوثه 
 ✧ نسبه الذكـــــاء/ الغباء 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الاوامــر بالـــرد  ⇣ 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ زواج ~ طلاك

*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/helpall') then
local UserId = Text:match('(%d+)/helpall')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه ❇️', data = IdUser..'/help1'}, {text = 'الامنيه 🔧', data = IdUser..'/help2'}, 
},
{
{text = 'المدراء 🔄', data = IdUser..'/help3'}, {text = 'المنشئين ✨', data = IdUser..'/help4'}, 
},
{
{text = 'مالك المجموعة 🧿', data = IdUser..'/help5'}, {text = 'التسليه 🎭', data = IdUser..'/helpp6'}, 
},
{
{text = 'اوامر المطور 🌀', data = IdUser..'/helpsudo'},{text = 'الالعاب', data = IdUser..'/help6'}, 
},
{
{text = 'اوامر التسليه', data = IdUser..'/helpts'},
},
{
{text = 'القفل والفتح ⚙️', data = IdUser..'/NoNextSeting'}, {text = 'التعطيل والتفعيل 📢', data = IdUser..'/listallAddorrem'}, 
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = [[*
 ✧ اوامــر البــوت الرئيسيـة 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ { م1 } -> اوامر الحمايه
 ✧ { م2 } -> اوامر الادمنيه
 ✧ { م3 } -> اوامر المدراء
 ✧ { م4 } -> اوامر المنشئين
 ✧ { م5 } -> اوامر المالكين
 ✧ { م6 } -> اوامر التسليه
 ✧ اوامر المطور الاساسي ??
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/helpsudo') and data.Dev then
local UserId = Text:match('(%d+)/helpsudo')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه ❇️', data = IdUser..'/help1'}, {text = 'الامنيه 🔧', data = IdUser..'/help2'}, 
},
{
{text = 'المدراء 🔄', data = IdUser..'/help3'}, {text = 'المنشئين ✨', data = IdUser..'/help4'}, 
},
{
{text = 'مالك المجموعة 🧿', data = IdUser..'/help5'}, {text = 'التسليه 🎭', data = IdUser..'/helpp6'}, 
},
{
{text = 'اوامر المطور 🌀', data = IdUser..'/helpsudo'},{text = 'الالعاب', data = IdUser..'/help6'}, 
},
{
{text = 'اوامر التسليه', data = IdUser..'/helpts'},
},
{
{text = 'القفل والفتح ⚙️', data = IdUser..'/NoNextSeting'}, {text = 'التعطيل والتفعيل 📢', data = IdUser..'/listallAddorrem'}, 
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = [[*
 ✧ اوامر المطور الاساسي 🌀
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل  ->  تعطيل
 ✧ رفع  تنزيل -> مطور اساسي
 ✧ المطورين الاساسيين
 ✧ مسح المطورين الاساسيين
 ✧ رفع  تنزيل -> مطور ثانوي
 ✧ المطورين الثانويين  
 ✧ مسح المطورين الثانويين
 ✧ رفع  تنزيل -> مطور
 ✧ المطورين -> مسح المطورين
 ✧ تغيير المطور الاساسي
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل الوضع المدفوع + الايدي 
 ✧ الغاء الوضع المدفوع + الايدي
 ✧ حظر جروب + { الايدي }
 ✧ غادر -> + { الايدي }
 ✧ اسم بوتك + غادر بالمجموعة
 ✧ تفعيل تعطيل الاشتراك الاجباري
 ✧ الاشتراك الاجباري
 ✧ تغيير الاشتراك الاجباري
 ✧ تفعيل تعطيل الاشتراك الاجباري للجروب
 ✧ الاشتراك الاجباري للجروب
 ✧ تعيين عدد الاعضاء + {العدد}
ꔹ━━━━━ꔹ𝙈𝘼ꔹ━━━━━ꔹ
 ✧ حظر عام ، الغاء العام
 ✧ قائمه العام ، مسح قائمه العام
 ✧ كتم عام ، الغاء كتم عام
 ✧ المكتومين عام
 ✧ مسح المكتومين عام
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تغيير ، مسح ->{ اسم البوت }
 ✧ ضع صوره للترحيب 
 ✧ الاحصائيات
✧ المجموعةات
 ✧ ذيع + ايدي المجموعة بالرد
 ✧ اذاعه ، اذاعه خاص
 ✧ اذاعه بالتوجيه ، اذاعه بالتثبيت
 ✧ اذاعه خاص بالتوجيه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل تعطيل جلب النسخه التلقائيه
 ✧ جلب نسخه احتياطيه
 ✧ رفع النسخه الاحتياطيه بالرد
 ✧ رفع نسخه  ماركوس  بالرد
 ✧ جلب نسخه الردود
 ✧ رفع نسخه الردود بالرد
 ✧ معلومات التنصيب
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تعيين ، مسح -> { الايدي عام }
 ✧ اضف ، مسح -> {رد عام}
 ✧ اضف ، مسح -> {رد عام متعدد}
 ✧ ضع ، مسح -> { الترحيب عام }
 ✧ ضع ، مسح -> { كليشه المطور }
 ✧ الردود العامه ، مسح الردود العامه
 ✧ اضف مسح صوت عام
 ✧ الصوتيات العامه
 ✧ مسح الصوتيات العامه
 ✧ منع عام ، الغاء منع عام
 ✧ قائمه المنع عام
 ✧ مسح قائمه المنع عام
ꔹ━━━━━ꔹ𝙈𝘼ꔹ━━━━━ꔹ
 ✧ اضف مسح -> سؤال
 ✧ الاسئله المضافه
 ✧ مسح الاسئله المضافه
 ✧ اضف مسح -> لغز 
 ✧ الالغاز ~ مسح الالغاز
 ✧ اضف مسح -> سؤال كت
 ✧ اسئله كت
 ✧ اضف اسئله كت
 ✧ مسح اسئله كت
 ✧ اضف موسيقى
 ✧ مسح موسيقى بالرد
 ✧ قائمة الموسيقى
 ✧ مسح قائمه الموسيقى
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ تفعيل ، تعطيل -> الاوامر التاليه↓
 ✧ البوت الخدمي ، المغادرة ، الاذاعه
 ✧ التواصل ، الاحصائيات
 ✧ ملف -> { اسم الملف }
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ مسح جميع الملفات 
 ✧ المتجر ، الملفات
 ✧ تحديث ، تحديث السورس 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر المطور في البوت
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع، تنزيل -> { مالك }
 ✧ المالكين ، مسح المالكين
 ✧ تنزيل جميع الرتب
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/appbot') then
local UserId = Text:match('(%d+)/appbot')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه 🛡', data = IdUser..'/bott'}, {text = 'التسليه ✧', data = IdUser..'/boot'}, 
},
{
{text  = '• قناة السورس •', url = 't.me/ZAXY00 '}, 
},
}
}
local TextHelp = [[*
 ✧ اوامـر الـبـوت عـبـر الازرار ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/bott') then
local UserId = Text:match('(%d+)/bott')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه 🛡', data = IdUser..'/bott'}, {text = 'التسليه ✧', data = IdUser..'/boot'}, 
},
{
{text  = '• قناة السورس •', url = 't.me/ZAXY00 '}, 
},
}
}
local TextHelp = [[*
 ✧ اوامـر الـحـمـايـه كـالاتـي ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ قفل ، فتح -> الامر 
 ✧ تستطيع قفل حمايه كما يلي ...
 ✧ -> { بالتقييد ، بالطرد ، بالكتم }
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الكل ~ الدخول
 ✧ الروابط ~ المعرف
 ✧ التاك ~ الشارحه
 ✧ التعديل ~ تعديل الميديا
 ✧ المتحركه ~ الملفات
 ✧ الصور ~ الفيديو 
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الماركداون ~ البوتات
 ✧ التكرار ~ الكلايش
 ✧ السيلفي ~ الملصقات
 ✧ الانلاين ~  الدردشه
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ التوجيه ~ الاغاني
 ✧ الصوت ~ الجهات
 ✧ الاشعارات ~ التثبيت 
 ✧ الوسائط ~ التفليش
 ✧ وسائط المميزين
 ✧ السب ~ الفارسيه
 ✧ الإنكليزيه
 ✧ الشتايم ~ الاباحي
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/boot') then
local UserId = Text:match('(%d+)/boot')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه 🛡', data = IdUser..'/bott'}, {text = 'التسليه ✧', data = IdUser..'/boot'}, 
},
{
{text  = '• قناة السورس •', url = 't.me/ZAXY00 '}, 
},
}
}
local TextHelp = [[*
 ✧ اوامـر الـتـسـلـيـه كـالاتـي ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الامر ، تفعيل ، تعطيل -> { الامر }
 ✧ غنيلي ، ريمكس ، اغنيه ، شعر
 ✧ صوره ،  متحركه
 ✧ انمي ، ميمز
 ✧ مسلسل ، فلم
 ✧ حساب العمر( احسب + تاريخ الميلاد)
 ✧ معنى اسم + الاسم
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ رفع ، تنزيل -> الاوامر التاليه ↓
 ✧ غبي
 ✧ مطي
 ✧ اثول
 ✧ طامس
 ✧ تاج
 ✧ ملك
 ✧ ملكه
 ✧ جلب
 ✧ لوكي
 ✧ زاحف
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر التاك
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ قائمه التاج ~ المـلــوك
 ✧ المـلـكات ~ الطامسين
 ✧ الثولان ~  الجــلاب
 ✧ المطايــه ~  الصخول
 ✧ اللوكيــه ~  الاغبيـاء
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ اوامر الترفيه
ꔹ━━━━━ꔹ𝙈𝘼ꔹ━━━━━ꔹ
 ✧ زخرفه + النص
 ✧ مثال زخرفه ماركوس
 ✧ احسب + عمرك
 ✧ مثال احسب 2001/8/5
 ✧ معني + الاسم
 ✧ مثال معني ماركوس
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ نسبه الحب/ الكره
 ✧ نسبه الرجوله/ الانوثه
 ✧ نسبه الذكـــــاء/ الغباء
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الاوامــر بالـــرد  ⇣
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ زواج ~ طلاك
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/helpts') then
local UserId = Text:match('(%d+)/helpts')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'الحمايه ❇️', data = IdUser..'/help1'}, {text = 'الامنيه 🔧', data = IdUser..'/help2'}, 
},
{
{text = 'المدراء 🔄', data = IdUser..'/help3'}, {text = 'المنشئين ✨', data = IdUser..'/help4'}, 
},
{
{text = 'مالك المجموعة 🧿', data = IdUser..'/help5'}, {text = 'التسليه 🎭', data = IdUser..'/helpp6'}, 
},
{
{text = 'اوامر المطور 🌀', data = IdUser..'/helpsudo'},{text = 'الالعاب', data = IdUser..'/help6'}, 
},
{
{text = 'اوامر التسليه', data = IdUser..'/helpts'},
},
{
{text = 'القفل والفتح ⚙️', data = IdUser..'/NoNextSeting'}, {text = 'التعطيل والتفعيل 📢', data = IdUser..'/listallAddorrem'}, 
},
{
{text  = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
}
}
local TextHelp = [[*
 ✧ اوامـر الـتـسـلـيـه كـالاتـي ⇧⇩
• ┉ • ┉ • ┉ • ┉ • ┉ • ┉ •
 ✧ الامر ، تفعيل ، تعطيل -> { الامر }
 ✧ غنيلي ، ريمكس ، اغنيه ، شعر
 ✧ صوره ،  متحركه
 ✧ انمي ، ميمز
 ✧ مسلسل ، فلم
 ✧ حساب العمر( احسب + تاريخ الميلاد)
 ✧ معنى اسم + الاسم
ꔹ━━━━━ꔹ𝙈𝘼ꔹ━━━━━ꔹ
*]]
edit(ChatId,Msg_id,TextHelp, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/lock_link') then
local UserId = Text:match('(%d+)/lock_link')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Link"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الروابط").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_spam') then
local UserId = Text:match('(%d+)/lock_spam')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Spam"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الكلايش").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_keypord') then
local UserId = Text:match('(%d+)/lock_keypord')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Keyboard"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الكيبورد").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_voice') then
local UserId = Text:match('(%d+)/lock_voice')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:vico"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الاغاني").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gif') then
local UserId = Text:match('(%d+)/lock_gif')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Animation"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل المتحركات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_files') then
local UserId = Text:match('(%d+)/lock_files')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Document"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الملفات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_text') then
local UserId = Text:match('(%d+)/lock_text')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:text"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser,"⇜ ابشر قفلت الدردشه").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_video') then
local UserId = Text:match('(%d+)/lock_video')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Video"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الفيديو").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_photo') then
local UserId = Text:match('(%d+)/lock_photo')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Photo"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الصور").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_username') then
local UserId = Text:match('(%d+)/lock_username')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:User:Name"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل المعرفات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_tags') then
local UserId = Text:match('(%d+)/lock_tags')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:hashtak"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التاك").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_bots') then
local UserId = Text:match('(%d+)/lock_bots')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Bot:kick"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل البوتات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fwd') then
local UserId = Text:match('(%d+)/lock_fwd')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:forward"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التوجيه").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_audio') then
local UserId = Text:match('(%d+)/lock_audio')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Audio"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الصوت").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_stikear') then
local UserId = Text:match('(%d+)/lock_stikear')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Sticker"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الملصقات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_phone') then
local UserId = Text:match('(%d+)/lock_phone')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Contact"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الجهات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_joine') then
local UserId = Text:match('(%d+)/lock_joine')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Join"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الدخول").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_addmem') then
local UserId = Text:match('(%d+)/lock_addmem')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:AddMempar"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الاضافه").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videonote') then
local UserId = Text:match('(%d+)/lock_videonote')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Unsupported"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل بصمه الفيديو").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_pin') then
local UserId = Text:match('(%d+)/lock_pin')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."lockpin"..ChatId,(bot.getChatPinnedMessage(ChatId).id or true)) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التثبيت").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_tgservir') then
local UserId = Text:match('(%d+)/lock_tgservir')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:tagservr"..ChatId,true)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الاشعارات").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_markdaun') then
local UserId = Text:match('(%d+)/lock_markdaun')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Markdaun"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الماركدون").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_edits') and data.Creator then
local UserId = Text:match('(%d+)/lock_edits')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:edit"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التعديل").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_games') then
local UserId = Text:match('(%d+)/lock_games')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:geam"..ChatId,"del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الالعاب").Lock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_flood') then
local UserId = Text:match('(%d+)/lock_flood')
if tonumber(IdUser) == tonumber(UserId) then
Redis:hset(MARCOS.."Spam:Group:User"..ChatId ,"Spam:User","del")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التكرار").Lock, 'md', true, false, reply_markup)
end
end

if Text and Text:match('(%d+)/lock_linkkid') then
local UserId = Text:match('(%d+)/lock_linkkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Link"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الروابط").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_spamkid') then
local UserId = Text:match('(%d+)/lock_spamkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Spam"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الكلايش").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_keypordkid') then
local UserId = Text:match('(%d+)/lock_keypordkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Keyboard"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الكيبورد").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_voicekid') then
local UserId = Text:match('(%d+)/lock_voicekid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:vico"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الاغاني").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gifkid') then
local UserId = Text:match('(%d+)/lock_gifkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Animation"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل المتحركات").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fileskid') then
local UserId = Text:match('(%d+)/lock_fileskid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Document"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الملفات").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videokid') then
local UserId = Text:match('(%d+)/lock_videokid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Video"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الفيديو").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_photokid') then
local UserId = Text:match('(%d+)/lock_photokid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Photo"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الصور").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_usernamekid') then
local UserId = Text:match('(%d+)/lock_usernamekid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:User:Name"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل المعرفات").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_tagskid') then
local UserId = Text:match('(%d+)/lock_tagskid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:hashtak"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التاك").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fwdkid') then
local UserId = Text:match('(%d+)/lock_fwdkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:forward"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التوجيه").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_audiokid') then
local UserId = Text:match('(%d+)/lock_audiokid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Audio"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الصوت").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_stikearkid') then
local UserId = Text:match('(%d+)/lock_stikearkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Sticker"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الملصقات").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_phonekid') then
local UserId = Text:match('(%d+)/lock_phonekid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Contact"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الجهات").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videonotekid') then
local UserId = Text:match('(%d+)/lock_videonotekid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Unsupported"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل بصمه الفيديو").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_markdaunkid') then
local UserId = Text:match('(%d+)/lock_markdaunkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Markdaun"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الماركدون").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gameskid') then
local UserId = Text:match('(%d+)/lock_gameskid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:geam"..ChatId,"ked")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الالعاب").lockKid, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_floodkid') then
local UserId = Text:match('(%d+)/lock_floodkid')
if tonumber(IdUser) == tonumber(UserId) then
Redis:hset(MARCOS.."Spam:Group:User"..ChatId ,"Spam:User","keed")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التكرار").lockKid, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/lock_linkktm') then
local UserId = Text:match('(%d+)/lock_linkktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Link"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الروابط").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_spamktm') then
local UserId = Text:match('(%d+)/lock_spamktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Spam"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الكلايش").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_keypordktm') then
local UserId = Text:match('(%d+)/lock_keypordktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Keyboard"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الكيبورد").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_voicektm') then
local UserId = Text:match('(%d+)/lock_voicektm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:vico"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الاغاني").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gifktm') then
local UserId = Text:match('(%d+)/lock_gifktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Animation"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل المتحركات").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_filesktm') then
local UserId = Text:match('(%d+)/lock_filesktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Document"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الملفات").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videoktm') then
local UserId = Text:match('(%d+)/lock_videoktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Video"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الفيديو").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_photoktm') then
local UserId = Text:match('(%d+)/lock_photoktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Photo"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الصور").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_usernamektm') then
local UserId = Text:match('(%d+)/lock_usernamektm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:User:Name"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل المعرفات").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_tagsktm') then
local UserId = Text:match('(%d+)/lock_tagsktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:hashtak"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التاك").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fwdktm') then
local UserId = Text:match('(%d+)/lock_fwdktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:forward"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التوجيه").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_audioktm') then
local UserId = Text:match('(%d+)/lock_audioktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Audio"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الصوت").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_stikearktm') then
local UserId = Text:match('(%d+)/lock_stikearktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Sticker"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الملصقات").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_phonektm') then
local UserId = Text:match('(%d+)/lock_phonektm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Contact"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الجهات").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videonotektm') then
local UserId = Text:match('(%d+)/lock_videonotektm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Unsupported"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل بصمه الفيديو").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_markdaunktm') then
local UserId = Text:match('(%d+)/lock_markdaunktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Markdaun"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الماركدون").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gamesktm') then
local UserId = Text:match('(%d+)/lock_gamesktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:geam"..ChatId,"ktm")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الالعاب").lockKtm, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_floodktm') then
local UserId = Text:match('(%d+)/lock_floodktm')
if tonumber(IdUser) == tonumber(UserId) then
Redis:hset(MARCOS.."Spam:Group:User"..ChatId ,"Spam:User","mute")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التكرار").lockKtm, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/lock_linkkick') then
local UserId = Text:match('(%d+)/lock_linkkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Link"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الروابط").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_spamkick') then
local UserId = Text:match('(%d+)/lock_spamkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Spam"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الكلايش").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_keypordkick') then
local UserId = Text:match('(%d+)/lock_keypordkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Keyboard"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الكيبورد").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_voicekick') then
local UserId = Text:match('(%d+)/lock_voicekick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:vico"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الاغاني").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gifkick') then
local UserId = Text:match('(%d+)/lock_gifkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Animation"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل المتحركات").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fileskick') then
local UserId = Text:match('(%d+)/lock_fileskick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Document"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الملفات").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videokick') then
local UserId = Text:match('(%d+)/lock_videokick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Video"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الفيديو").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_photokick') then
local UserId = Text:match('(%d+)/lock_photokick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Photo"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الصور").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_usernamekick') then
local UserId = Text:match('(%d+)/lock_usernamekick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:User:Name"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل المعرفات").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_tagskick') then
local UserId = Text:match('(%d+)/lock_tagskick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:hashtak"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التاك").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_fwdkick') then
local UserId = Text:match('(%d+)/lock_fwdkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:forward"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التوجيه").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_audiokick') then
local UserId = Text:match('(%d+)/lock_audiokick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Audio"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الصوت").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_stikearkick') then
local UserId = Text:match('(%d+)/lock_stikearkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Sticker"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الملصقات").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_phonekick') then
local UserId = Text:match('(%d+)/lock_phonekick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Contact"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الجهات").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_videonotekick') then
local UserId = Text:match('(%d+)/lock_videonotekick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Unsupported"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل بصمه الفيديو").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_markdaunkick') then
local UserId = Text:match('(%d+)/lock_markdaunkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:Markdaun"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الماركدون").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_gameskick') then
local UserId = Text:match('(%d+)/lock_gameskick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:geam"..ChatId,"kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل الالعاب").lockKick, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_floodkick') then
local UserId = Text:match('(%d+)/lock_floodkick')
if tonumber(IdUser) == tonumber(UserId) then
Redis:hset(MARCOS.."Spam:Group:User"..ChatId ,"Spam:User","kick")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفـل التكرار").lockKick, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/unmute_link') then
local UserId = Text:match('(%d+)/unmute_link')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Status:Link"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الرابط").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_welcome') then
local UserId = Text:match('(%d+)/unmute_welcome')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Status:Welcome"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الترحيب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_Id') then
local UserId = Text:match('(%d+)/unmute_Id')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Status:Id"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الايدي").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_IdPhoto') then
local UserId = Text:match('(%d+)/unmute_IdPhoto')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Status:IdPhoto"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الايدي بالصوره").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_ryple') then
local UserId = Text:match('(%d+)/unmute_ryple')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Status:Reply"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الردود").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_ryplesudo') then
local UserId = Text:match('(%d+)/unmute_ryplesudo')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Status:ReplySudo"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الردود العامه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_setadmib') then
local UserId = Text:match('(%d+)/unmute_setadmib')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Status:SetId"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الرفع").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_kickmembars') then
local UserId = Text:match('(%d+)/unmute_kickmembars')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Status:BanId"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الطرد - الحظر").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_games') then
local UserId = Text:match('(%d+)/unmute_games')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Status:Games"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر الالعاب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unmute_kickme') then
local UserId = Text:match('(%d+)/unmute_kickme')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Status:KickMe"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تعطيل امر اطردني").unLock, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/mute_link') then
local UserId = Text:match('(%d+)/mute_link')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Status:Link"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الرابط").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_welcome') then
local UserId = Text:match('(%d+)/mute_welcome')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Status:Welcome"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الترحيب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_Id') then
local UserId = Text:match('(%d+)/mute_Id')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Status:Id"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الايدي").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_IdPhoto') then
local UserId = Text:match('(%d+)/mute_IdPhoto')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Status:IdPhoto"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الايدي بالصوره").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_ryple') then
local UserId = Text:match('(%d+)/mute_ryple')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Status:Reply"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الردود").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_ryplesudo') then
local UserId = Text:match('(%d+)/mute_ryplesudo')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Status:ReplySudo"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الردود العامه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_setadmib') then
local UserId = Text:match('(%d+)/mute_setadmib')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Status:SetId"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الرفع").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_kickmembars') then
local UserId = Text:match('(%d+)/mute_kickmembars')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Status:BanId"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الطرد - الحظر").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_games') then
local UserId = Text:match('(%d+)/mute_games')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Status:Games"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر الالعاب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/mute_kickme') then
local UserId = Text:match('(%d+)/mute_kickme')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Status:KickMe"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'listallAddorrem'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم تفعيل امر اطردني").unLock, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/addAdmins@(.*)') then
local UserId = {Text:match('(%d+)/addAdmins@(.*)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
local Info_Members = bot.getSupergroupMembers(UserId[2], "Administrators", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
y = 0
for k, v in pairs(List_Members) do
if Info_Members.members[k].bot_info == nil then
if Info_Members.members[k].status.MARCOSbots == "chatMemberStatusCreator" then
Redis:sadd(MARCOS.."Ownerss:Group"..UserId[2],v.member_id.user_id) 
x = x + 1
else
Redis:sadd(MARCOS.."Admin:Group"..UserId[2],v.member_id.user_id) 
y = y + 1
end
end
end
bot.answerCallbackQuery(data.id, " ✧ تم ترقيه {"..y.."} ادمنيه \n ✧ تم ترقية المالك ", true)
end
end
if Text and Text:match('(%d+)/LockAllGroup@(.*)') then
local UserId = {Text:match('(%d+)/LockAllGroup@(.*)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:set(MARCOS.."Lock:tagservrbot"..UserId[2],true)   
list ={"Lock:Bot:kick","Lock:User:Name","Lock:hashtak","Lock:Cmd","Lock:Link","Lock:forward","Lock:Keyboard","Lock:geam","Lock:Photo","Lock:Animation","Lock:Video","Lock:Audio","Lock:vico","Lock:Sticker","Lock:Document","Lock:Unsupported","Lock:Markdaun","Lock:Contact","Lock:Spam"}
for i,lock in pairs(list) do 
Redis:set(MARCOS..''..lock..UserId[2],"del")    
end
bot.answerCallbackQuery(data.id, " ✧ تم قفل جميع الاوامر بنجاح  ", true)
end
end
if Text and Text:match('/leftgroup@(.*)') then
local UserId = Text:match('/leftgroup@(.*)')
bot.answerCallbackQuery(data.id, " ✧ تم مغادره البوت من المجموعه", true)
bot.leaveChat(UserId)
end
if Text and Text:match('/Zxchq(.*)') and data.ControllerBot then
local UserId = Text:match('/Zxchq(.*)')
bot.answerCallbackQuery(data.id, " ✧ تم مغادره البوت من المجموعه", true)
bot.leaveChat(UserId)
end
if Text and Text:match('(%d+)/Redis') and data.ControllerBot then
local UserId = Text:match('(%d+)/Redis')
bot.answerCallbackQuery(data.id, " ✧ تم الغاء الامر بنجاح", true)
if tonumber(IdUser) == tonumber(UserId) then
return bot.deleteMessages(ChatId,{[1]= Msg_id})
end
end
if Text and Text:match('(%d+)/trtep@(.*)') then
local UserId = {Text:match('(%d+)/trtep@(.*)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'ا','ايدي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'م','رفع مميز')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'اد', 'رفع ادمن')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'مد','رفع مدير')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'من', 'رفع منشئ')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'اس', 'رفع منشئ اساسي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'كك','رفع مالك')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'مط','رفع مطور')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'ثانوي','رفع مطور ثانوي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'تك','تنزيل الكل')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'تعط','تعطيل الايدي بالصوره')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'تفع','تفعيل الايدي بالصوره')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'ر','الرابط')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'ت','تثبيت')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'رر','الردود')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..',,','مسح المكتومين')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'رد','اضف رد')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'سح','مسح سحكاتي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'غ','غنيلي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'رس','رسائلي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'ش','شعر')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'مع','معاني')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'تغ','تغيير الايدي')
Redis:set(MARCOS.."Get:Reides:Commands:Group"..UserId[2]..":"..'#','مسح قائمه العام')
bot.answerCallbackQuery(data.id, " ✧ تم ترتيب الاوامر  ", true)
end
end
if Text == 'kickBot' then
local Info_Members = bot.getSupergroupMembers(ChatId, "Bots", "*", 0, 200)
local List_Members = Info_Members.members
x = 0
for k, v in pairs(List_Members) do
local Ban_Bots = bot.setChatMemberStatus(ChatId,v.member_id.user_id,'banned',0)
if Ban_Bots.MARCOSbots == "ok" then
x = x + 1
end
end
local text = "* ✧ عدد البوتات الموجوده -› "..#List_Members.."\n ✧ تم طرد〘 "..x.." 〙بوت من المجموعه *"
return bot.editMessageText(ChatId,Msg_id,text,"md",true)  
end
if Text and Text:match('(%d+)/groupNumseteng//(%d+)') then
local UserId = {Text:match('(%d+)/groupNumseteng//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
return GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id)
end
end
if Text and Text:match('(%d+)/rankup//(%d+)') then
local UserId = {Text:match('(%d+)/rankup//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
return editrtp(ChatId,UserId[1],Msg_id,UserId[2])
end
end
if Text and Text:match('(%d+)/sting//(%d+)') then
local UserId = {Text:match('(%d+)/sting//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
return muteUser(ChatId,UserId[1],Msg_id,UserId[2])
end
end
if Text and Text:match('(%d+)/groupNum1//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum1//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).change_info) == 1 then
bot.answerCallbackQuery(data.id, " ✧ تم تعطيل صلاحيه تغيير المعلومات", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,'〘 ❌ 〙',nil,nil,nil,nil,nil)
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,0, 0, 0, 0,0,0,1,0})
else
bot.answerCallbackQuery(data.id, " ✧ تم تفعيل صلاحيه تغيير المعلومات", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,'〘 ✅ 〙',nil,nil,nil,nil,nil)
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,1, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
end
end
end
if Text and Text:match('(%d+)/groupNum2//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum2//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).pin_messages) == 1 then
bot.answerCallbackQuery(data.id, " ✧ تم تعطيل صلاحيه التثبيت", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,'〘 ❌ 〙',nil,nil,nil,nil)
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,0, GetAdminsNum(ChatId,UserId[2]).promote})
else
bot.answerCallbackQuery(data.id, " ✧ تم تفعيل صلاحيه التثبيت", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,'〘 ✅ 〙',nil,nil,nil,nil)
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,1, GetAdminsNum(ChatId,UserId[2]).promote})
end
end
end
if Text and Text:match('(%d+)/groupNum3//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum3//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).restrict_members) == 1 then
bot.answerCallbackQuery(data.id, " ✧ تم تعطيل صلاحيه الحظر", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,'〘 ❌ 〙',nil,nil,nil)
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, 0 ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
else
bot.answerCallbackQuery(data.id, " ✧ تم تفعيل صلاحيه الحظر", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,'〘 ✅ 〙',nil,nil,nil)
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, 1 ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
end
end
end
if Text and Text:match('(%d+)/groupNum4//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum4//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).invite_users) == 1 then
bot.answerCallbackQuery(data.id, " ✧ تم تعطيل صلاحيه دعوه المستخدمين", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,'〘 ❌ 〙',nil,nil)
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, 0, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
else
bot.answerCallbackQuery(data.id, " ✧ تم تفعيل صلاحيه دعوه المستخدمين", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,'〘 ✅ 〙',nil,nil)
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, 1, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
end
end
end
if Text and Text:match('(%d+)/groupNum5//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum5//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).delete_messages) == 1 then
bot.answerCallbackQuery(data.id, " ✧ تم تعطيل صلاحيه مسح الرسائل", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,nil,'〘 ❌ 〙',nil)
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, 0, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
else
bot.answerCallbackQuery(data.id, " ✧ تم تفعيل صلاحيه مسح الرسائل", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,nil,'〘 ✅ 〙',nil)
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, 1, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, GetAdminsNum(ChatId,UserId[2]).promote})
end
end
end
if Text and Text:match('(%d+)/groupNum6//(%d+)') then
local UserId = {Text:match('(%d+)/groupNum6//(%d+)')}
if tonumber(IdUser) == tonumber(UserId[1]) then
if tonumber(GetAdminsNum(ChatId,UserId[2]).promote) == 1 then
bot.answerCallbackQuery(data.id, " ✧ تم تعطيل صلاحيه اضافه مشرفين", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,nil,nil,'〘 ❌ 〙')
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, 0})
else
bot.answerCallbackQuery(data.id, " ✧ تم تفعيل صلاحيه اضافه مشرفين", true)
GetAdminsSlahe(ChatId,UserId[1],UserId[2],Msg_id,nil,nil,nil,nil,nil,'〘 ✅ 〙')
bot.setChatMemberStatus(ChatId,UserId[2],'administrator',{0 ,GetAdminsNum(ChatId,UserId[2]).change_info, 0, 0, GetAdminsNum(ChatId,UserId[2]).delete_messages, GetAdminsNum(ChatId,UserId[2]).invite_users, GetAdminsNum(ChatId,UserId[2]).restrict_members ,GetAdminsNum(ChatId,UserId[2]).pin_messages, 1})
end
end
end

if Text and Text:match('(%d+)/web') then
local UserId = Text:match('(%d+)/web')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).web == true then
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, false, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, true, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/info') then
local UserId = Text:match('(%d+)/info')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).info == true then
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, false, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, true, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/invite') then
local UserId = Text:match('(%d+)/invite')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).invite == true then
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, false, Getpermissions(ChatId).pin)
else
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, true, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/pin') then
local UserId = Text:match('(%d+)/pin')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).pin == true then
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, false)
else
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, true)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/media') then
local UserId = Text:match('(%d+)/media')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).media == true then
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, false, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, true, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/messges') then
local UserId = Text:match('(%d+)/messges')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).messges == true then
bot.setChatPermissions(ChatId, false, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
bot.setChatPermissions(ChatId, true, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/other') then
local UserId = Text:match('(%d+)/other')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).other == true then
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, false, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, Getpermissions(ChatId).polls, true, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
elseif Text and Text:match('(%d+)/polls') then
local UserId = Text:match('(%d+)/polls')
if tonumber(IdUser) == tonumber(UserId) then
if Getpermissions(ChatId).polls == true then
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, false, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
else
bot.setChatPermissions(ChatId, Getpermissions(ChatId).messges, Getpermissions(ChatId).media, true, Getpermissions(ChatId).other, Getpermissions(ChatId).web, Getpermissions(ChatId).info, Getpermissions(ChatId).invite, Getpermissions(ChatId).pin)
end
Get_permissions(ChatId,IdUser,Msg_id)
end
end
if Text and Text:match('(%d+)/BackTac') then
local UserId = Text:match('(%d+)/BackTac')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'تعطيل تاك للكل', data = IdUser..'/of_tak'},{text = 'تفعيل تاك للكل', data = IdUser..'/on_tak'},
},
{
{text = 'تعطيل تاك للكل', data = IdUser..'/jkhgc'},{text = 'تفعيل تاك للكل', data = IdUser..'/bjjkob'},
},
{
{text = '• قناة السورس •', url = 't.me/'..chsource..''}, 
},
{
{text = 'اخفاء الامر 🔰 ', data ='/delAmr'}
},
}
}
return edit(ChatId,Msg_id,'* ✧ مـرحـبـا اخـتـار امـر تـفـعـيـل الـتـاك *', 'md', false, false, reply_markup)
end
end
if Text and Text:match('(%d+)/listallAddorrem') then
local UserId = Text:match('(%d+)/listallAddorrem')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = 'تعطيل الرابط', data = IdUser..'/'.. 'unmute_link'},{text = 'تفعيل الرابط', data = IdUser..'/'.. 'mute_link'},
},
{
{text = 'تعطيل الترحيب', data = IdUser..'/'.. 'unmute_welcome'},{text = 'تفعيل الترحيب', data = IdUser..'/'.. 'mute_welcome'},
},
{
{text = 'اتعطيل الايدي', data = IdUser..'/'.. 'unmute_Id'},{text = 'اتفعيل الايدي', data = IdUser..'/'.. 'mute_Id'},
},
{
{text = 'تعطيل الايدي بالصوره', data = IdUser..'/'.. 'unmute_IdPhoto'},{text = 'تفعيل الايدي بالصوره', data = IdUser..'/'.. 'mute_IdPhoto'},
},
{
{text = 'تعطيل الردود', data = IdUser..'/'.. 'unmute_ryple'},{text = 'تفعيل الردود', data = IdUser..'/'.. 'mute_ryple'},
},
{
{text = 'تعطيل الردود العامه', data = IdUser..'/'.. 'unmute_ryplesudo'},{text = 'تفعيل الردود العامه', data = IdUser..'/'.. 'mute_ryplesudo'},
},
{
{text = 'تعطيل الرفع', data = IdUser..'/'.. 'unmute_setadmib'},{text = 'تفعيل الرفع', data = IdUser..'/'.. 'mute_setadmib'},
},
{
{text = 'تعطيل الطرد', data = IdUser..'/'.. 'unmute_kickmembars'},{text = 'تفعيل الطرد', data = IdUser..'/'.. 'mute_kickmembars'},
},
{
{text = 'تعطيل الالعاب', data = IdUser..'/'.. 'unmute_games'},{text = 'تفعيل الالعاب', data = IdUser..'/'.. 'mute_games'},
},
{
{text = 'تعطيل اطردني', data = IdUser..'/'.. 'unmute_kickme'},{text = 'تفعيل اطردني', data = IdUser..'/'.. 'mute_kickme'},
},
{
{text = 'تعطيل التسليه', data = IdUser..'/'.. 'unmute_thshesh'},{text = 'تفعيل التسليه', data = IdUser..'/'.. 'mute_thshesh'},
},
{
{text = 'تعطيل منع التصفيه', data = IdUser..'/'.. 'unmute_kicknum'},{text = 'تفعيل منع التصفيه', data = IdUser..'/'.. 'mute_kicknum'},
},
{
{text = 'تعطيل الصيغ', data = IdUser..'/'.. 'unmute_seck'},{text = 'تفعيل الصيغ', data = IdUser..'/'.. 'mute_seck'},
},
{
{text = 'تعطيل غنيلي', data = IdUser..'/'.. 'unmute_knile'},{text = 'تفعيل غنيلي', data = IdUser..'/'.. 'mute_knile'},
},
{
{text = 'تعطيل الابراح', data = IdUser..'/'.. 'unmute_brj'},{text = 'تفعيل الابراج', data = IdUser..'/'.. 'mute_brj'},
},
{
{text = 'تعطيل الصوتيات', data = IdUser..'/'.. 'unmute_audio'},{text = 'تفعيل الصوتيات', data = IdUser..'/'.. 'mute_audio'},
},
{
{text = 'تعطيل الصوتيات العامه', data = IdUser..'/'.. 'unmute_audioall'},{text = 'تفعيل الصوتيات العامه', data = IdUser..'/'.. 'mute_audioall'},
},
{
{text = 'تعطيل تاك للكل', data = IdUser..'/'.. 'unmute_takall'},{text = 'تفعيل تاك للكل', data = IdUser..'/'.. 'mute_takall'},
},
{
{text = 'تعطيل تنبيه الاسماء', data = IdUser..'/'.. 'unmute_namemy'},{text = 'تفعيل تنبيه الاسماء', data = IdUser..'/'.. 'mute_namemy'},
},
{
{text = 'القائمه الرئيسيه ⚙️', data = IdUser..'/helpall'},
},
{
{text = 'اخفاء الامر 🔰 ', data ='/delAmr'}
},
}
}
return edit(ChatId,Msg_id,' ✧ اوامر التفعيل والتعطيل ', 'md', false, false, reply_markup)
end
end
if Text and Text:match('(%d+)/NextSeting') then
local UserId = Text:match('(%d+)/NextSeting')
if tonumber(IdUser) == tonumber(UserId) then
local Text = "*\n ✧ اعدادات المجموعة ⇧⇩".."\n✅ علامة صح تعني مفتوح".."\n❌ علامة غلط تعني مقفول*"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = GetSetieng(ChatId).lock_fwd, data = '&'},{text = 'التوجبه -> ', data =IdUser..'/'.. 'Status_fwd'},
},
{
{text = GetSetieng(ChatId).lock_muse, data = '&'},{text = 'الصوت -> ', data =IdUser..'/'.. 'Status_audio'},
},
{
{text = GetSetieng(ChatId).lock_ste, data = '&'},{text = 'الملصقات -> ', data =IdUser..'/'.. 'Status_stikear'},
},
{
{text = GetSetieng(ChatId).lock_phon, data = '&'},{text = 'الجهات -> ', data =IdUser..'/'.. 'Status_phone'},
},
{
{text = GetSetieng(ChatId).lock_join, data = '&'},{text = 'الدخول -> ', data =IdUser..'/'.. 'Status_joine'},
},
{
{text = GetSetieng(ChatId).lock_add, data = '&'},{text = 'الاضافه -> ', data =IdUser..'/'.. 'Status_addmem'},
},
{
{text = GetSetieng(ChatId).lock_self, data = '&'},{text = 'بصمه فيديو -> ', data =IdUser..'/'.. 'Status_videonote'},
},
{
{text = GetSetieng(ChatId).lock_pin, data = '&'},{text = 'التثبيت -> ', data =IdUser..'/'.. 'Status_pin'},
},
{
{text = GetSetieng(ChatId).lock_tagservr, data = '&'},{text = 'الاشعارات -> ', data =IdUser..'/'.. 'Status_tgservir'},
},
{
{text = GetSetieng(ChatId).lock_mark, data = '&'},{text = 'الماركدون -> ', data =IdUser..'/'.. 'Status_markdaun'},
},
{
{text = GetSetieng(ChatId).lock_edit, data = '&'},{text = 'التعديل -> ', data =IdUser..'/'.. 'Status_edits'},
},
{
{text = GetSetieng(ChatId).lock_geam, data = '&'},{text = 'الالعاب -> ', data =IdUser..'/'.. 'Status_games'},
},
{
{text = GetSetieng(ChatId).flood, data = '&'},{text = 'التكرار -> ', data =IdUser..'/'.. 'Status_flood'},
},
{
{text = 'التالي ↪️', data =IdUser..'/'.. 'NoNextSeting'}
},
{
{text = 'القائمه الرئيسيه ⚙️', data = IdUser..'/helpall'},
},
{
{text = 'اخفاء الامر 🔰 ', data ='/delAmr'}
},
}
}
edit(ChatId,Msg_id,Text, 'md', false, false, reply_markup)
end
end
if Text and Text:match('(%d+)/NoNextSeting') then
local UserId = Text:match('(%d+)/NoNextSeting')
if tonumber(IdUser) == tonumber(UserId) then
local Text = "*\n ✧ اعدادات المجموعة ⇧⇩".."\n✅ علامة صح تعني مفتوح".."\n❌ علامة غلط تعني مقفول*"
local reply_markup = bot.replyMarkup{
type = 'inline',
data = {
{
{text = GetSetieng(ChatId).lock_links, data = '&'},{text = 'الروابط -> ', data =IdUser..'/'.. 'Status_link'},
},
{
{text = GetSetieng(ChatId).lock_spam, data = '&'},{text = 'الكلايش -> ', data =IdUser..'/'.. 'Status_spam'},
},
{
{text = GetSetieng(ChatId).lock_inlin, data = '&'},{text = 'الكيبورد -> ', data =IdUser..'/'.. 'Status_keypord'},
},
{
{text = GetSetieng(ChatId).lock_vico, data = '&'},{text = 'الاغاني -> ', data =IdUser..'/'.. 'Status_voice'},
},
{
{text = GetSetieng(ChatId).lock_gif, data = '&'},{text = 'المتحركه -> ', data =IdUser..'/'.. 'Status_gif'},
},
{
{text = GetSetieng(ChatId).lock_file, data = '&'},{text = 'الملفات -> ', data =IdUser..'/'.. 'Status_files'},
},
{
{text = GetSetieng(ChatId).lock_text, data = '&'},{text = 'الدردشه -> ', data =IdUser..'/'.. 'Status_text'},
},
{
{text = GetSetieng(ChatId).lock_ved, data = '&'},{text = 'الفيديو -> ', data =IdUser..'/'.. 'Status_video'},
},
{
{text = GetSetieng(ChatId).lock_photo, data = '&'},{text = 'الصور -> ', data =IdUser..'/'.. 'Status_photo'},
},
{
{text = GetSetieng(ChatId).lock_user, data = '&'},{text = 'المعرفات -> ', data =IdUser..'/'.. 'Status_username'},
},
{
{text = GetSetieng(ChatId).lock_hash, data = '&'},{text = 'التاك -> ', data =IdUser..'/'.. 'Status_tags'},
},
{
{text = GetSetieng(ChatId).lock_bots, data = '&'},{text = 'البوتات -> ', data =IdUser..'/'.. 'Status_bots'},
},
{
{text = GetSetieng(ChatId).farsia, data = '&'},{text = 'الفارسيه -> ', data =IdUser..'/'.. 'Status_farsia'},
},
{
{text = GetSetieng(ChatId).tphlesh, data = '&'},{text = 'التفليش -> ', data =IdUser..'/'.. 'Status_tphlesh'},
},
{
{text = GetSetieng(ChatId).alkfr, data = '&'},{text = 'الشتايم -> ', data =IdUser..'/'.. 'Status_alkfr'},
},
{
{text = GetSetieng(ChatId).alphsar, data = '&'},{text = 'السب -> ', data =IdUser..'/'.. 'Status_alphsar'},
},
{
{text = 'التالي ↪️', data =IdUser..'/'.. 'NextSeting'}
},
{
{text = 'القائمه الرئيسيه ⚙️', data = IdUser..'/helpall'},
},
{
{text = 'اخفاء الامر 🔰 ', data ='/delAmr'}
},
}
}
edit(ChatId,Msg_id,Text, 'md', false, false, reply_markup)
end
end  

if Text and Text:match('/delAmr') then
local UserId = Text:match('/delAmr')
if data.Manger then
return bot.deleteMessages(ChatId,{[1]= Msg_id})
end
end
if Text and Text:match('(%d+)/Status_link') then
local UserId = Text:match('(%d+)/Status_link')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الروابط', data =UserId..'/'.. 'lock_link'},{text = 'قفل الروابط بالكتم', data =UserId..'/'.. 'lock_linkktm'},
},
{
{text = 'قفل الروابط بالطرد', data =UserId..'/'.. 'lock_linkkick'},{text = 'قفل الروابط بالتقييد', data =UserId..'/'.. 'lock_linkkid'},
},
{
{text = 'فتح الروابط', data =UserId..'/'.. 'unlock_link'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الروابط", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_farsia') then
local UserId = Text:match('(%d+)/Status_farsia')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الفارسيه', data =UserId..'/'.. 'lock_Status_farsia'},
},
{
{text = 'فتح الفارسيه', data =UserId..'/'.. 'unlock_Status_farsia'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الفارسيه", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_tphlesh') then
local UserId = Text:match('(%d+)/Status_tphlesh')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التفليش', data =UserId..'/'.. 'lock_Status_tphlesh'},
},
{
{text = 'فتح التفليش', data =UserId..'/'.. 'unlock_Status_tphlesh'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر التفليش", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_alkfr') then
local UserId = Text:match('(%d+)/Status_alkfr')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الشتايم', data =UserId..'/'.. 'lock_Status_alkfr'},
},
{
{text = 'فتح الشتايم', data =UserId..'/'.. 'unlock_Status_alkfr'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الشتايم", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_alphsar') then
local UserId = Text:match('(%d+)/Status_alphsar')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل السب', data =UserId..'/'.. 'lock_Status_alphsar'},
},
{
{text = 'فتح السب', data =UserId..'/'.. 'unlock_Status_alphsar'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر السب", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_spam') then
local UserId = Text:match('(%d+)/Status_spam')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الكلايش', data =UserId..'/'.. 'lock_spam'},{text = 'قفل الكلايش بالكتم', data =UserId..'/'.. 'lock_spamktm'},
},
{
{text = 'قفل الكلايش بالطرد', data =UserId..'/'.. 'lock_spamkick'},{text = 'قفل الكلايش بالتقييد', data =UserId..'/'.. 'lock_spamid'},
},
{
{text = 'فتح الكلايش', data =UserId..'/'.. 'unlock_spam'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الكلايش", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_keypord') then
local UserId = Text:match('(%d+)/Status_keypord')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الكيبورد', data =UserId..'/'.. 'lock_keypord'},{text = 'قفل الكيبورد بالكتم', data =UserId..'/'.. 'lock_keypordktm'},
},
{
{text = 'قفل الكيبورد بالطرد', data =UserId..'/'.. 'lock_keypordkick'},{text = 'قفل الكيبورد بالتقييد', data =UserId..'/'.. 'lock_keypordkid'},
},
{
{text = 'فتح الكيبورد', data =UserId..'/'.. 'unlock_keypord'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الكيبورد", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_voice') then
local UserId = Text:match('(%d+)/Status_voice')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الاغاني', data =UserId..'/'.. 'lock_voice'},{text = 'قفل الاغاني بالكتم', data =UserId..'/'.. 'lock_voicektm'},
},
{
{text = 'قفل الاغاني بالطرد', data =UserId..'/'.. 'lock_voicekick'},{text = 'قفل الاغاني بالتقييد', data =UserId..'/'.. 'lock_voicekid'},
},
{
{text = 'فتح الاغاني', data =UserId..'/'.. 'unlock_voice'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الاغاني", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_gif') then
local UserId = Text:match('(%d+)/Status_gif')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل المتحركه', data =UserId..'/'.. 'lock_gif'},{text = 'قفل المتحركه بالكتم', data =UserId..'/'.. 'lock_gifktm'},
},
{
{text = 'قفل المتحركه بالطرد', data =UserId..'/'.. 'lock_gifkick'},{text = 'قفل المتحركه بالتقييد', data =UserId..'/'.. 'lock_gifkid'},
},
{
{text = 'فتح المتحركه', data =UserId..'/'.. 'unlock_gif'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر المتحركات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_files') then
local UserId = Text:match('(%d+)/Status_files')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الملفات', data =UserId..'/'.. 'lock_files'},{text = 'قفل الملفات بالكتم', data =UserId..'/'.. 'lock_filesktm'},
},
{
{text = 'قفل النلفات بالطرد', data =UserId..'/'.. 'lock_fileskick'},{text = 'قفل الملقات بالتقييد', data =UserId..'/'.. 'lock_fileskid'},
},
{
{text = 'فتح الملقات', data =UserId..'/'.. 'unlock_files'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الملفات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_text') then
local UserId = Text:match('(%d+)/Status_text')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الدردشه', data =UserId..'/'.. 'lock_text'},
},
{
{text = 'فتح الدردشه', data =UserId..'/'.. 'unlock_text'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الدردشه", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_video') then
local UserId = Text:match('(%d+)/Status_video')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الفيديو', data =UserId..'/'.. 'lock_video'},{text = 'قفل الفيديو بالكتم', data =UserId..'/'.. 'lock_videoktm'},
},
{
{text = 'قفل الفيديو بالطرد', data =UserId..'/'.. 'lock_videokick'},{text = 'قفل الفيديو بالتقييد', data =UserId..'/'.. 'lock_videokid'},
},
{
{text = 'فتح الفيديو', data =UserId..'/'.. 'unlock_video'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الفيديو", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_photo') then
local UserId = Text:match('(%d+)/Status_photo')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الصور', data =UserId..'/'.. 'lock_photo'},{text = 'قفل الصور بالكتم', data =UserId..'/'.. 'lock_photoktm'},
},
{
{text = 'قفل الصور بالطرد', data =UserId..'/'.. 'lock_photokick'},{text = 'قفل الصور بالتقييد', data =UserId..'/'.. 'lock_photokid'},
},
{
{text = 'فتح الصور', data =UserId..'/'.. 'unlock_photo'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الصور", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_username') then
local UserId = Text:match('(%d+)/Status_username')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل المعرفات', data =UserId..'/'.. 'lock_username'},{text = 'قفل المعرفات بالكتم', data =UserId..'/'.. 'lock_usernamektm'},
},
{
{text = 'قفل المعرفات بالطرد', data =UserId..'/'.. 'lock_usernamekick'},{text = 'قفل المعرفات بالتقييد', data =UserId..'/'.. 'lock_usernamekid'},
},
{
{text = 'فتح المعرفات', data =UserId..'/'.. 'unlock_username'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر المعرفات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_tags') then
local UserId = Text:match('(%d+)/Status_tags')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التاك', data =UserId..'/'.. 'lock_tags'},{text = 'قفل التاك بالكتم', data =UserId..'/'.. 'lock_tagsktm'},
},
{
{text = 'قفل التاك بالطرد', data =UserId..'/'.. 'lock_tagskick'},{text = 'قفل التاك بالتقييد', data =UserId..'/'.. 'lock_tagskid'},
},
{
{text = 'فتح التاك', data =UserId..'/'.. 'unlock_tags'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر التاك", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_bots') then
local UserId = Text:match('(%d+)/Status_bots')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل البوتات', data =UserId..'/'.. 'lock_bots'},{text = 'قفل البوتات بالطرد', data =UserId..'/'.. 'lock_botskick'},
},
{
{text = 'فتح البوتات', data =UserId..'/'.. 'unlock_bots'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر البوتات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_fwd') then
local UserId = Text:match('(%d+)/Status_fwd')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التوجيه', data =UserId..'/'.. 'lock_fwd'},{text = 'قفل التوجيه بالكتم', data =UserId..'/'.. 'lock_fwdktm'},
},
{
{text = 'قفل التوجيه بالطرد', data =UserId..'/'.. 'lock_fwdkick'},{text = 'قفل التوجيه بالتقييد', data =UserId..'/'.. 'lock_fwdkid'},
},
{
{text = 'فتح التوجيه', data =UserId..'/'.. 'unlock_link'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر التوجيه", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_audio') then
local UserId = Text:match('(%d+)/Status_audio')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الصوت', data =UserId..'/'.. 'lock_audio'},{text = 'قفل الصوت بالكتم', data =UserId..'/'.. 'lock_audioktm'},
},
{
{text = 'قفل الصوت بالطرد', data =UserId..'/'.. 'lock_audiokick'},{text = 'قفل الصوت بالتقييد', data =UserId..'/'.. 'lock_audiokid'},
},
{
{text = 'فتح الصوت', data =UserId..'/'.. 'unlock_audio'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الصوت", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_stikear') then
local UserId = Text:match('(%d+)/Status_stikear')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الملصقات', data =UserId..'/'.. 'lock_stikear'},{text = 'قفل الملصقات بالكتم', data =UserId..'/'.. 'lock_stikearktm'},
},
{
{text = 'قفل الملصقات بالطرد', data =UserId..'/'.. 'lock_stikearkick'},{text = 'قفل الملصقات بالتقييد', data =UserId..'/'.. 'lock_stikearkid'},
},
{
{text = 'فتح الملصقات', data =UserId..'/'.. 'unlock_stikear'},
},
{
{text = 'عوده ??', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الملصقات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_phone') then
local UserId = Text:match('(%d+)/Status_phone')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الجهات', data =UserId..'/'.. 'lock_phone'},{text = 'قفل الجهات بالكتم', data =UserId..'/'.. 'lock_phonektm'},
},
{
{text = 'قفل الجهات بالطرد', data =UserId..'/'.. 'lock_phonekick'},{text = 'قفل الجهات بالتقييد', data =UserId..'/'.. 'lock_phonekid'},
},
{
{text = 'فتح الجهات', data =UserId..'/'.. 'unlock_phone'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الجهات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_joine') then
local UserId = Text:match('(%d+)/Status_joine')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الدخول', data =UserId..'/'.. 'lock_joine'},
},
{
{text = 'فتح الدخول', data =UserId..'/'.. 'unlock_joine'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الدخول", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_addmem') then
local UserId = Text:match('(%d+)/Status_addmem')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الاضافه', data =UserId..'/'.. 'lock_addmem'},
},
{
{text = 'فتح الاضافه', data =UserId..'/'.. 'unlock_addmem'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الاضافه", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_videonote') then
local UserId = Text:match('(%d+)/Status_videonote')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل السيلفي', data =UserId..'/'.. 'lock_videonote'},{text = 'قفل السيلفي بالكتم', data =UserId..'/'.. 'lock_videonotektm'},
},
{
{text = 'قفل السيلفي بالطرد', data =UserId..'/'.. 'lock_videonotekick'},{text = 'قفل السيلفي بالتقييد', data =UserId..'/'.. 'lock_videonotekid'},
},
{
{text = 'فتح السيلفي', data =UserId..'/'.. 'unlock_videonote'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر بصمه الفيديو", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_pin') then
local UserId = Text:match('(%d+)/Status_pin')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التثبيت', data =UserId..'/'.. 'lock_pin'},
},
{
{text = 'فتح التثبيت', data =UserId..'/'.. 'unlock_pin'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر التثبيت", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_tgservir') then
local UserId = Text:match('(%d+)/Status_tgservir')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الاشعارات', data =UserId..'/'.. 'lock_tgservir'},
},
{
{text = 'فتح الاشعارات', data =UserId..'/'.. 'unlock_tgservir'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الاشعارات", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_markdaun') then
local UserId = Text:match('(%d+)/Status_markdaun')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الماركداون', data =UserId..'/'.. 'lock_markdaun'},{text = 'قفل الماركداون بالكتم', data =UserId..'/'.. 'lock_markdaunktm'},
},
{
{text = 'قفل الماركداون بالطرد', data =UserId..'/'.. 'lock_markdaunkick'},{text = 'قفل الماركداون بالتقييد', data =UserId..'/'.. 'lock_markdaunkid'},
},
{
{text = 'فتح الماركداون', data =UserId..'/'.. 'unlock_markdaun'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الماركدون", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_edits') then
local UserId = Text:match('(%d+)/Status_edits')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التعديل', data =UserId..'/'.. 'lock_edits'},
},
{
{text = 'فتح التعديل', data =UserId..'/'.. 'unlock_edits'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر التعديل", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_games') then
local UserId = Text:match('(%d+)/Status_games')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل الالعاب', data =UserId..'/'.. 'lock_games'},{text = 'قفل الالعاب بالكتم', data =UserId..'/'.. 'lock_gamesktm'},
},
{
{text = 'قفل الالعاب بالطرد', data =UserId..'/'.. 'lock_gameskick'},{text = 'قفل الالعاب بالتقييد', data =UserId..'/'.. 'lock_gameskid'},
},
{
{text = 'فتح الالعاب', data =UserId..'/'.. 'unlock_games'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر الالعاب", 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Status_flood') then
local UserId = Text:match('(%d+)/Status_flood')
if tonumber(IdUser) == tonumber(UserId) then

local reply_markup = bot.replyMarkup{type = 'inline',data = {
{
{text = 'قفل التكرار', data =UserId..'/'.. 'lock_flood'},{text = 'قفل التكرار بالكتم', data =UserId..'/'.. 'lock_floodktm'},
},
{
{text = 'قفل التكرار بالطرد', data =UserId..'/'.. 'lock_floodkick'},{text = 'قفل التكرار بالتقييد', data =UserId..'/'.. 'lock_floodkid'},
},
{
{text = 'فتح التكرار', data =UserId..'/'.. 'unlock_flood'},
},
{
{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},
},
}
}
edit(ChatId,Msg_id," ✧ عليك اختيار نوع القفل او الفتح على امر التكرار", 'md', true, false, reply_markup)
end



elseif Text and Text:match('(%d+)/unlock_link') then
local UserId = Text:match('(%d+)/unlock_link')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Link"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الروابط").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_Status_farsia') then
local UserId = Text:match('(%d+)/unlock_Status_farsia')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:farsia"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ⇜ ابشر فتح الفارسيه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_Status_tphlesh') then
local UserId = Text:match('(%d+)/unlock_Status_tphlesh')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:tphlesh"..ChatId)  
Redis:del(MARCOS.."Status:IdPhoto"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser,"⇜ ابشر فتحت التفليش").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_Status_alkfr') then
local UserId = Text:match('(%d+)/unlock_Status_alkfr')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:alkfr"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الشتايم").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_Status_alphsar') then
local UserId = Text:match('(%d+)/unlock_Status_alphsar')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:phshar"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح السب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_Status_farsia') then
local UserId = Text:match('(%d+)/lock_Status_farsia')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:farsia"..ChatId,true)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ⇜ ابشر قفلت الفارسيه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_Status_tphlesh') and data.Manger then
local UserId = Text:match('(%d+)/lock_Status_tphlesh')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:tphlesh"..ChatId,true)
Redis:set(MARCOS.."Status:IdPhoto"..ChatId,true)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفل التفليش").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_Status_alkfr') then
local UserId = Text:match('(%d+)/lock_Status_alkfr')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:alkfr"..ChatId,true)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفل الشتايم").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/lock_Status_alphsar') then
local UserId = Text:match('(%d+)/lock_Status_alphsar')
if tonumber(IdUser) == tonumber(UserId) then
Redis:set(MARCOS.."Lock:phshar"..ChatId,true)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم قفل السب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_spam') then
local UserId = Text:match('(%d+)/unlock_spam')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Spam"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الكلايش").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_keypord') then
local UserId = Text:match('(%d+)/unlock_keypord')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Keyboard"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الكيبورد").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_voice') then
local UserId = Text:match('(%d+)/unlock_voice')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:vico"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الاغاني").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_gif') then
local UserId = Text:match('(%d+)/unlock_gif')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Animation"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح المتحركات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_files') then
local UserId = Text:match('(%d+)/unlock_files')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Document"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الملفات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_text') then
local UserId = Text:match('(%d+)/unlock_text')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:text"..ChatId,true) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الدردشه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_video') then
local UserId = Text:match('(%d+)/unlock_video')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Video"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الفيديو").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_photo') then
local UserId = Text:match('(%d+)/unlock_photo')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Photo"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الصور").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_username') then
local UserId = Text:match('(%d+)/unlock_username')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:User:Name"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح المعرفات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_tags') then
local UserId = Text:match('(%d+)/unlock_tags')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:hashtak"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح التاك").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_bots') then
local UserId = Text:match('(%d+)/unlock_bots')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Bot:kick"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح البوتات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_fwd') then
local UserId = Text:match('(%d+)/unlock_fwd')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:forward"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح التوجيه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_audio') then
local UserId = Text:match('(%d+)/unlock_audio')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Audio"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الصوت").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_stikear') then
local UserId = Text:match('(%d+)/unlock_stikear')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Sticker"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الملصقات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_phone') then
local UserId = Text:match('(%d+)/unlock_phone')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Contact"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الجهات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_joine') then
local UserId = Text:match('(%d+)/unlock_joine')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Join"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الدخول").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_addmem') then
local UserId = Text:match('(%d+)/unlock_addmem')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:AddMempar"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الاضافه").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_videonote') then
local UserId = Text:match('(%d+)/unlock_videonote')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Unsupported"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح بصمه الفيديو").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_pin') then
local UserId = Text:match('(%d+)/unlock_pin')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."lockpin"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح التثبيت").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_tgservir') then
local UserId = Text:match('(%d+)/unlock_tgservir')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:tagservr"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الاشعارات").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_markdaun') then
local UserId = Text:match('(%d+)/unlock_markdaun')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:Markdaun"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الماركدون").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_edits') then
local UserId = Text:match('(%d+)/unlock_edits')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:edit"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح التعديل").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_games') then
local UserId = Text:match('(%d+)/unlock_games')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Lock:geam"..ChatId)  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح الالعاب").unLock, 'md', true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/unlock_flood') then
local UserId = Text:match('(%d+)/unlock_flood')
if tonumber(IdUser) == tonumber(UserId) then
Redis:hdel(MARCOS.."Spam:Group:User"..ChatId ,"Spam:User")  
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id,Reply_Status(IdUser," ✧ تم فتح التكرار").unLock, 'md', true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/Zhrfaar') then
local UserId = Text:match('(%d+)/Zhrfaar')
if tonumber(IdUser) == tonumber(UserId) then
Redis:setex(MARCOS..":ZhrfNow:ar"..UserId,500,true)
edit(ChatId,Msg_id," ✧ ارسل الاسم بالعربي", 'md', false)
end
elseif Text and Text:match('(%d+)/Zhrfaen') then
local UserId = Text:match('(%d+)/Zhrfaen')
if tonumber(IdUser) == tonumber(UserId) then
Redis:setex(MARCOS..":ZhrfNow:en"..UserId,500,true)
edit(ChatId,Msg_id," ✧ ارسل الاسم بالانكليزي", 'md', false)
end
end
if Text and Text:match('^(%d+)/back_lists$') then
local UserId = Text:match('^(%d+)/back_lists$')
if tonumber(IdUser) == tonumber(UserId) then
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="المطورين الاساسيين",data=UserId..'/redis:Devall'},
},
{
{text="المكتومين عام",data=UserId..'/KtmAll'},{text="المحظورين عام",data=UserId..'/BanAll'},
},
{
{text="المطورين الثانويين",data=UserId..'/Devss'},{text="المطورين",data=UserId..'/Dev'},
},
{
{text="المالكين",data=UserId..'/Ownerss'},{text="المنشئين الاساسيين",data=UserId..'/SuperCreator'},
},
{
{text="المنشئين",data=UserId..'/Creator'},{text="المدراء",data=UserId..'/Manger'},
},
{
{text="الادمنيه",data=UserId..'/Admin'},{text="المميزين",data=UserId..'/DelSpecial'},
},
{
{text="المكتومين",data=UserId..'/SilentGroupGroup'},{text="المحظورين",data=UserId..'/BanGroup'},
},
{
{text = "اخفاء الامر 🔰 ", data =UserId.."/delAmr"}
},
}
}
return edit(ChatId,Msg_id,"* ✧ اختر احدى القوائم لمسحها*", "md",true, false, reply_markup)
end
end
if Text and Text:match('(%d+)/Devss') and data.ControllerBot then
local UserId = Text:match('(%d+)/Devss')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Devss:Groups") 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح مطورين الثانوين من البوت", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Dev') and data.Devss then
local UserId = Text:match('(%d+)/Dev')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Dev:Groups") 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح مطورين البوت", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/redis:Devall') and data.ControllerBot then
local UserId = Text:match('(%d+)/redis:Devall')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."ControlAll:Groups") 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح مطورين الاساسيين", "md",true, false, reply_markup)
end

elseif Text and Text:match('(%d+)/Ownerss') and data.Dev then
local UserId = Text:match('(%d+)/Ownerss')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Ownerss:Group"..ChatId) 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح االمالكين", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/SuperCreator') and data.Ownerss then
local UserId = Text:match('(%d+)/SuperCreator')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."SuperCreator:Group"..ChatId) 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح المنشئين الاساسيين", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Creator') and data.SuperCreator then
local UserId = Text:match('(%d+)/Creator')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Creator:Group"..ChatId) 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح منشئين المجموعه", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Manger') and data.Creator then
local UserId = Text:match('(%d+)/Manger')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Manger:Group"..ChatId) 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح المدراء", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Admin') and data.Manger then
local UserId = Text:match('(%d+)/Admin')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Admin:Group"..ChatId) 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح ادمنيه المجموعه", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/DelSpecial') then
local UserId = Text:match('(%d+)/DelSpecial')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."Special:Group"..ChatId) 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح المميزين", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/KtmAll') and data.ControllerBot then
local UserId = Text:match('(%d+)/KtmAll')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."KtmAll:Groups") 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح المكتومين عام", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/Delkholat') then
local UserId = Text:match('(%d+)/Delkholat')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."kholat:Group"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id," ✧ تم مسح جميع خولات المجموعة", 'md', false)
end
elseif Text and Text:match('(%d+)/Delwtk') then
local UserId = Text:match('(%d+)/Delwtk')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."wtka:Group"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id," ✧ تم مسح جميع وتكات المجموعة", 'md', false)
end
elseif Text and Text:match('(%d+)/Deltwhd') then
local UserId = Text:match('(%d+)/Deltwhd')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."twhd:Group"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id," ✧ تم مسح جميع متوحدين المجموعة", 'md', false)
end
elseif Text and Text:match('(%d+)/Delklb') then
local UserId = Text:match('(%d+)/Delklb')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."klb:Group"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id," ✧ تم مسح جميع الكلاب المجموعة", 'md', false)
end
elseif Text and Text:match('(%d+)/Delmar') then
local UserId = Text:match('(%d+)/Delmar')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."mar:Group"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id," ✧ تم مسح جميع حمير المجموعة", 'md', false)
end
elseif Text and Text:match('(%d+)/Delsmb') then
local UserId = Text:match('(%d+)/Delsmb')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."smb:Group"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id," ✧ تم مسح جميع السمب الي هنا ف المجموعة", 'md', false)
end
elseif Text and Text:match('(%d+)/Del2rd') then
local UserId = Text:match('(%d+)/Del2rd')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."2rd:Group"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id," ✧ تم مسح جميع القرود", 'md', false)
end
elseif Text and Text:match('(%d+)/Del3ra') then
local UserId = Text:match('(%d+)/Del3ra')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."3ra:Group"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id," ✧ تم مسح جميع العرر", 'md', false)
end
elseif Text and Text:match('(%d+)/Del8by') then
local UserId = Text:match('(%d+)/Del8by')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."8by:Group"..ChatId) 
local reply_markup = bot.replyMarkup{type = 'inline',data = {{{text = 'عوده 🔙', data =UserId..'/'.. 'NoNextSeting'},},}}
edit(ChatId,Msg_id," ✧ تم مسح جميع الأغبياء", 'md', false)
end
elseif Text and Text:match('(%d+)/BanAll') and data.ControllerBot then
local UserId = Text:match('(%d+)/BanAll')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."BanAll:Groups") 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح المحظورين عام", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/BanGroup') and data.Admin then
local UserId = Text:match('(%d+)/BanGroup')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."BanGroup:Group"..ChatId) 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح المحظورين", "md",true, false, reply_markup)
end
elseif Text and Text:match('(%d+)/SilentGroupGroup') and data.Admin then
local UserId = Text:match('(%d+)/SilentGroupGroup')
if tonumber(IdUser) == tonumber(UserId) then
Redis:del(MARCOS.."SilentGroup:Group"..ChatId) 
local reply_markup = bot.replyMarkup{
type = "inline",
data = {
{
{text="اضهار القوائم ❇️",data=UserId..'/back_lists'},
},
}
}
edit(ChatId,Msg_id," ✧ تم مسح المكتومين", "md",true, false, reply_markup)
end
end

end
end

Redis:sadd(MARCOS.."eza3a",Token.."&"..MARCOS)
Redis:set("@"..UserBot,MARCOS.."&".."@"..UserBot.."$@"..UserSudo.."+"..Token)
Fx.MARCOSbots.run(CallBackLua)
 




